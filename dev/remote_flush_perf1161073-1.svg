<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1094.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1077" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1077" > </text>
<g id="frames">
<g >
<title>std::get&lt;0ul, rocksdb::SavePoints*, std::default_delete&lt;rocksdb::SavePoints&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="564.5" y="885" width="0.1" height="15.0" fill="rgb(228,36,15)" rx="2" ry="2" />
<text  x="567.46" y="895.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (292,929,290 samples, 0.05%)</title><rect x="748.5" y="549" width="0.6" height="15.0" fill="rgb(210,190,14)" rx="2" ry="2" />
<text  x="751.45" y="559.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (101,010,100 samples, 0.02%)</title><rect x="555.8" y="885" width="0.2" height="15.0" fill="rgb(240,115,45)" rx="2" ry="2" />
<text  x="558.80" y="895.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::get_root@plt (60,606,060 samples, 0.01%)</title><rect x="704.2" y="613" width="0.1" height="15.0" fill="rgb(250,87,18)" rx="2" ry="2" />
<text  x="707.17" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (141,414,140 samples, 0.03%)</title><rect x="566.9" y="917" width="0.3" height="15.0" fill="rgb(227,23,21)" rx="2" ry="2" />
<text  x="569.92" y="927.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::BGWorkFlush (13,898,989,760 samples, 2.57%)</title><rect x="661.1" y="757" width="30.3" height="15.0" fill="rgb(212,74,23)" rx="2" ry="2" />
<text  x="664.13" y="767.5" >ro..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (60,606,060 samples, 0.01%)</title><rect x="1112.8" y="629" width="0.1" height="15.0" fill="rgb(253,3,27)" rx="2" ry="2" />
<text  x="1115.77" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (181,818,180 samples, 0.03%)</title><rect x="571.6" y="949" width="0.4" height="15.0" fill="rgb(228,3,23)" rx="2" ry="2" />
<text  x="574.64" y="959.5" ></text>
</g>
<g >
<title>__pagevec_release (101,010,100 samples, 0.02%)</title><rect x="690.8" y="485" width="0.3" height="15.0" fill="rgb(207,178,4)" rx="2" ry="2" />
<text  x="693.84" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (535,353,530 samples, 0.10%)</title><rect x="825.6" y="517" width="1.1" height="15.0" fill="rgb(210,148,29)" rx="2" ry="2" />
<text  x="828.55" y="527.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (13,898,989,760 samples, 2.57%)</title><rect x="661.1" y="997" width="30.3" height="15.0" fill="rgb(213,191,38)" rx="2" ry="2" />
<text  x="664.13" y="1007.5" >st..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt;::operator* (111,111,110 samples, 0.02%)</title><rect x="987.6" y="629" width="0.3" height="15.0" fill="rgb(246,170,42)" rx="2" ry="2" />
<text  x="990.61" y="639.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count@plt (111,111,110 samples, 0.02%)</title><rect x="305.3" y="853" width="0.3" height="15.0" fill="rgb(250,170,51)" rx="2" ry="2" />
<text  x="308.34" y="863.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (141,414,140 samples, 0.03%)</title><rect x="785.3" y="485" width="0.3" height="15.0" fill="rgb(249,106,6)" rx="2" ry="2" />
<text  x="788.27" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (90,909,090 samples, 0.02%)</title><rect x="848.8" y="501" width="0.2" height="15.0" fill="rgb(239,105,12)" rx="2" ry="2" />
<text  x="851.81" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (121,212,120 samples, 0.02%)</title><rect x="1038.4" y="533" width="0.3" height="15.0" fill="rgb(251,223,48)" rx="2" ry="2" />
<text  x="1041.40" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (101,010,100 samples, 0.02%)</title><rect x="794.1" y="469" width="0.2" height="15.0" fill="rgb(237,174,6)" rx="2" ry="2" />
<text  x="797.08" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (90,909,090 samples, 0.02%)</title><rect x="550.8" y="917" width="0.2" height="15.0" fill="rgb(206,32,4)" rx="2" ry="2" />
<text  x="553.76" y="927.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (90,909,090 samples, 0.02%)</title><rect x="344.6" y="805" width="0.2" height="15.0" fill="rgb(244,144,32)" rx="2" ry="2" />
<text  x="347.63" y="815.5" ></text>
</g>
<g >
<title>rocksdb::FSWritableFilePtr::operator (80,808,080 samples, 0.01%)</title><rect x="992.4" y="549" width="0.2" height="15.0" fill="rgb(253,185,4)" rx="2" ry="2" />
<text  x="995.39" y="559.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000000l&gt;, void&gt; (4,616,161,570 samples, 0.85%)</title><rect x="310.4" y="837" width="10.0" height="15.0" fill="rgb(205,76,6)" rx="2" ry="2" />
<text  x="313.36" y="847.5" ></text>
</g>
<g >
<title>rocksdb::Slice::compare (171,717,170 samples, 0.03%)</title><rect x="724.1" y="533" width="0.4" height="15.0" fill="rgb(251,25,1)" rx="2" ry="2" />
<text  x="727.10" y="543.5" ></text>
</g>
<g >
<title>rocksdb::InternalKey::DecodeFrom (303,030,300 samples, 0.06%)</title><rect x="1097.6" y="645" width="0.6" height="15.0" fill="rgb(229,172,6)" rx="2" ry="2" />
<text  x="1100.57" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="846.2" y="453" width="0.1" height="15.0" fill="rgb(248,29,27)" rx="2" ry="2" />
<text  x="849.19" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="852.8" y="501" width="0.1" height="15.0" fill="rgb(208,212,48)" rx="2" ry="2" />
<text  x="855.79" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::operator (686,868,680 samples, 0.13%)</title><rect x="840.1" y="581" width="1.5" height="15.0" fill="rgb(218,197,33)" rx="2" ry="2" />
<text  x="843.09" y="591.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000000l&gt;, void&gt; (161,616,160 samples, 0.03%)</title><rect x="331.1" y="853" width="0.3" height="15.0" fill="rgb(234,36,19)" rx="2" ry="2" />
<text  x="334.09" y="863.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::DynamicBloom, std::default_delete&lt;rocksdb::DynamicBloom&gt; &gt;::operator bool (414,141,410 samples, 0.08%)</title><rect x="166.0" y="805" width="0.9" height="15.0" fill="rgb(240,173,24)" rx="2" ry="2" />
<text  x="169.01" y="815.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::InitDataBlock (3,626,262,590 samples, 0.67%)</title><rect x="760.7" y="501" width="7.9" height="15.0" fill="rgb(239,153,2)" rx="2" ry="2" />
<text  x="763.72" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (151,515,150 samples, 0.03%)</title><rect x="851.7" y="453" width="0.3" height="15.0" fill="rgb(218,216,50)" rx="2" ry="2" />
<text  x="854.72" y="463.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (70,707,070 samples, 0.01%)</title><rect x="661.2" y="469" width="0.1" height="15.0" fill="rgb(205,0,26)" rx="2" ry="2" />
<text  x="664.16" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (565,656,560 samples, 0.10%)</title><rect x="974.5" y="613" width="1.2" height="15.0" fill="rgb(237,110,12)" rx="2" ry="2" />
<text  x="977.49" y="623.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (676,767,670 samples, 0.13%)</title><rect x="777.9" y="517" width="1.5" height="15.0" fill="rgb(237,207,17)" rx="2" ry="2" />
<text  x="780.90" y="527.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (5,070,707,020 samples, 0.94%)</title><rect x="124.2" y="661" width="11.1" height="15.0" fill="rgb(251,159,17)" rx="2" ry="2" />
<text  x="127.23" y="671.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::Add (41,232,322,820 samples, 7.62%)</title><rect x="77.0" y="821" width="89.9" height="15.0" fill="rgb(236,43,40)" rx="2" ry="2" />
<text  x="80.01" y="831.5" >rocksdb::M..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (60,606,060 samples, 0.01%)</title><rect x="780.5" y="469" width="0.1" height="15.0" fill="rgb(228,218,23)" rx="2" ry="2" />
<text  x="783.52" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (303,030,300 samples, 0.06%)</title><rect x="781.2" y="469" width="0.6" height="15.0" fill="rgb(222,89,49)" rx="2" ry="2" />
<text  x="784.16" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (242,424,240 samples, 0.04%)</title><rect x="1096.3" y="629" width="0.5" height="15.0" fill="rgb(247,80,33)" rx="2" ry="2" />
<text  x="1099.30" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Block::NewDataIterator (262,626,260 samples, 0.05%)</title><rect x="803.7" y="485" width="0.6" height="15.0" fill="rgb(234,16,11)" rx="2" ry="2" />
<text  x="806.68" y="495.5" ></text>
</g>
<g >
<title>do_unlinkat (272,727,270 samples, 0.05%)</title><rect x="690.8" y="581" width="0.6" height="15.0" fill="rgb(226,117,26)" rx="2" ry="2" />
<text  x="693.84" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (202,020,200 samples, 0.04%)</title><rect x="164.6" y="789" width="0.5" height="15.0" fill="rgb(210,26,49)" rx="2" ry="2" />
<text  x="167.64" y="799.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockHashIndexBuilder::Valid (161,616,160 samples, 0.03%)</title><rect x="1021.6" y="597" width="0.3" height="15.0" fill="rgb(218,77,37)" rx="2" ry="2" />
<text  x="1024.57" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (90,909,090 samples, 0.02%)</title><rect x="541.1" y="837" width="0.2" height="15.0" fill="rgb(223,140,7)" rx="2" ry="2" />
<text  x="544.07" y="847.5" ></text>
</g>
<g >
<title>fdatasync (101,010,100 samples, 0.02%)</title><rect x="661.1" y="629" width="0.3" height="15.0" fill="rgb(245,165,51)" rx="2" ry="2" />
<text  x="664.13" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (747,474,740 samples, 0.14%)</title><rect x="846.3" y="501" width="1.6" height="15.0" fill="rgb(231,82,18)" rx="2" ry="2" />
<text  x="849.32" y="511.5" ></text>
</g>
<g >
<title>remote_flush_te (298,656,562,670 samples, 55.18%)</title><rect x="10.0" y="1029" width="651.1" height="15.0" fill="rgb(246,196,13)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" >remote_flush_te</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (50,505,050 samples, 0.01%)</title><rect x="546.7" y="853" width="0.1" height="15.0" fill="rgb(250,127,3)" rx="2" ry="2" />
<text  x="549.66" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_right (141,414,140 samples, 0.03%)</title><rect x="573.9" y="933" width="0.3" height="15.0" fill="rgb(247,124,33)" rx="2" ry="2" />
<text  x="576.90" y="943.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="974.1" y="565" width="0.4" height="15.0" fill="rgb(220,219,24)" rx="2" ry="2" />
<text  x="977.09" y="575.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::CompactionIterator*, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt; (767,676,760 samples, 0.14%)</title><rect x="1173.1" y="613" width="1.7" height="15.0" fill="rgb(249,177,44)" rx="2" ry="2" />
<text  x="1176.13" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::VersionSet, std::default_delete&lt;rocksdb::VersionSet&gt; &gt;::operator (70,707,070 samples, 0.01%)</title><rect x="549.3" y="917" width="0.1" height="15.0" fill="rgb(215,75,25)" rx="2" ry="2" />
<text  x="552.26" y="927.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Valid (272,727,270 samples, 0.05%)</title><rect x="756.7" y="613" width="0.6" height="15.0" fill="rgb(236,166,4)" rx="2" ry="2" />
<text  x="759.69" y="623.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::AddWithLastKeyImpl (313,131,310 samples, 0.06%)</title><rect x="1015.6" y="629" width="0.7" height="15.0" fill="rgb(250,174,30)" rx="2" ry="2" />
<text  x="1018.63" y="639.5" ></text>
</g>
<g >
<title>rocksdb::PackSequenceAndType (131,313,130 samples, 0.02%)</title><rect x="167.4" y="821" width="0.3" height="15.0" fill="rgb(228,113,23)" rx="2" ry="2" />
<text  x="170.44" y="831.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (575,757,570 samples, 0.11%)</title><rect x="1135.9" y="613" width="1.3" height="15.0" fill="rgb(213,217,54)" rx="2" ry="2" />
<text  x="1138.91" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Status::PermitUncheckedError (60,606,060 samples, 0.01%)</title><rect x="54.3" y="901" width="0.1" height="15.0" fill="rgb(252,101,16)" rx="2" ry="2" />
<text  x="57.26" y="911.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::SyncClosedLogs (101,010,100 samples, 0.02%)</title><rect x="661.1" y="677" width="0.3" height="15.0" fill="rgb(231,174,32)" rx="2" ry="2" />
<text  x="664.13" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (949,494,940 samples, 0.18%)</title><rect x="834.9" y="533" width="2.0" height="15.0" fill="rgb(243,117,13)" rx="2" ry="2" />
<text  x="837.87" y="543.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::MemTable* const&amp;&gt; (70,707,070 samples, 0.01%)</title><rect x="70.9" y="677" width="0.2" height="15.0" fill="rgb(241,142,25)" rx="2" ry="2" />
<text  x="73.94" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (141,414,140 samples, 0.03%)</title><rect x="541.3" y="853" width="0.3" height="15.0" fill="rgb(220,81,38)" rx="2" ry="2" />
<text  x="544.33" y="863.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (141,414,140 samples, 0.03%)</title><rect x="916.1" y="581" width="0.3" height="15.0" fill="rgb(237,126,0)" rx="2" ry="2" />
<text  x="919.09" y="591.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (80,808,080 samples, 0.01%)</title><rect x="690.3" y="117" width="0.2" height="15.0" fill="rgb(232,224,41)" rx="2" ry="2" />
<text  x="693.34" y="127.5" ></text>
</g>
<g >
<title>rocksdb::Block::Block (121,212,120 samples, 0.02%)</title><rect x="761.5" y="405" width="0.3" height="15.0" fill="rgb(238,143,35)" rx="2" ry="2" />
<text  x="764.53" y="415.5" ></text>
</g>
<g >
<title>rocksdb::RemoteFlushJob::RunRemote (13,525,252,390 samples, 2.50%)</title><rect x="661.4" y="677" width="29.4" height="15.0" fill="rgb(237,162,9)" rx="2" ry="2" />
<text  x="664.35" y="687.5" >ro..</text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (70,707,070 samples, 0.01%)</title><rect x="783.9" y="533" width="0.2" height="15.0" fill="rgb(217,17,24)" rx="2" ry="2" />
<text  x="786.93" y="543.5" ></text>
</g>
<g >
<title>fault_in_iov_iter_readable (90,909,090 samples, 0.02%)</title><rect x="994.6" y="341" width="0.2" height="15.0" fill="rgb(239,91,51)" rx="2" ry="2" />
<text  x="997.62" y="351.5" ></text>
</g>
<g >
<title>[unknown] (5,909,090,850 samples, 1.09%)</title><rect x="10.3" y="1013" width="12.9" height="15.0" fill="rgb(210,129,16)" rx="2" ry="2" />
<text  x="13.29" y="1023.5" ></text>
</g>
<g >
<title>rocksdb::VarintLength (191,919,190 samples, 0.04%)</title><rect x="1025.7" y="597" width="0.5" height="15.0" fill="rgb(231,184,10)" rx="2" ry="2" />
<text  x="1028.74" y="607.5" ></text>
</g>
<g >
<title>do_anonymous_page (202,020,200 samples, 0.04%)</title><rect x="663.5" y="485" width="0.5" height="15.0" fill="rgb(222,39,3)" rx="2" ry="2" />
<text  x="666.51" y="495.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Next (40,050,504,650 samples, 7.40%)</title><rect x="757.4" y="613" width="87.3" height="15.0" fill="rgb(246,215,31)" rx="2" ry="2" />
<text  x="760.42" y="623.5" >rocksdb::I..</text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (50,505,050 samples, 0.01%)</title><rect x="165.7" y="757" width="0.1" height="15.0" fill="rgb(213,74,30)" rx="2" ry="2" />
<text  x="168.68" y="767.5" ></text>
</g>
<g >
<title>rocksdb::FlushScheduler::Empty (121,212,120 samples, 0.02%)</title><rect x="29.4" y="885" width="0.2" height="15.0" fill="rgb(242,90,15)" rx="2" ry="2" />
<text  x="32.36" y="895.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (1,040,404,030 samples, 0.19%)</title><rect x="779.9" y="501" width="2.3" height="15.0" fill="rgb(252,139,18)" rx="2" ry="2" />
<text  x="782.90" y="511.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::IsDeleteRangeSentinelKey (333,333,330 samples, 0.06%)</title><rect x="755.8" y="597" width="0.7" height="15.0" fill="rgb(213,130,37)" rx="2" ry="2" />
<text  x="758.76" y="607.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (60,606,060 samples, 0.01%)</title><rect x="848.4" y="437" width="0.2" height="15.0" fill="rgb(226,15,31)" rx="2" ry="2" />
<text  x="851.43" y="447.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status (1,525,252,510 samples, 0.28%)</title><rect x="845.8" y="549" width="3.4" height="15.0" fill="rgb(245,113,17)" rx="2" ry="2" />
<text  x="848.84" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::SuperVersion*, std::allocator&lt;rocksdb::SuperVersion*&gt; &gt;::~vector (60,606,060 samples, 0.01%)</title><rect x="32.3" y="853" width="0.1" height="15.0" fill="rgb(208,62,30)" rx="2" ry="2" />
<text  x="35.26" y="863.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::WriteBlock (3,959,595,920 samples, 0.73%)</title><rect x="989.1" y="613" width="8.7" height="15.0" fill="rgb(219,138,49)" rx="2" ry="2" />
<text  x="992.13" y="623.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::IOOptions (282,828,280 samples, 0.05%)</title><rect x="46.0" y="805" width="0.6" height="15.0" fill="rgb(245,176,26)" rx="2" ry="2" />
<text  x="49.03" y="815.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;::_Deque_iterator (141,414,140 samples, 0.03%)</title><rect x="953.3" y="613" width="0.3" height="15.0" fill="rgb(253,50,23)" rx="2" ry="2" />
<text  x="956.28" y="623.5" ></text>
</g>
<g >
<title>__memset_evex_unaligned_erms (111,111,110 samples, 0.02%)</title><rect x="777.6" y="517" width="0.2" height="15.0" fill="rgb(205,132,43)" rx="2" ry="2" />
<text  x="780.59" y="527.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Valid (60,606,060 samples, 0.01%)</title><rect x="770.1" y="517" width="0.1" height="15.0" fill="rgb(228,71,27)" rx="2" ry="2" />
<text  x="773.10" y="527.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Invalidate (222,222,220 samples, 0.04%)</title><rect x="768.6" y="469" width="0.5" height="15.0" fill="rgb(236,60,10)" rx="2" ry="2" />
<text  x="771.62" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (464,646,460 samples, 0.09%)</title><rect x="973.5" y="613" width="1.0" height="15.0" fill="rgb(237,87,12)" rx="2" ry="2" />
<text  x="976.48" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Status::IsTryAgain (80,808,080 samples, 0.01%)</title><rect x="167.9" y="821" width="0.2" height="15.0" fill="rgb(208,30,50)" rx="2" ry="2" />
<text  x="170.94" y="831.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyHandleImpl::GetID (70,707,070 samples, 0.01%)</title><rect x="551.7" y="885" width="0.1" height="15.0" fill="rgb(239,40,17)" rx="2" ry="2" />
<text  x="554.68" y="895.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (8,060,605,980 samples, 1.49%)</title><rect x="303.1" y="869" width="17.6" height="15.0" fill="rgb(254,224,2)" rx="2" ry="2" />
<text  x="306.10" y="879.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (121,212,120 samples, 0.02%)</title><rect x="1014.6" y="613" width="0.3" height="15.0" fill="rgb(252,57,0)" rx="2" ry="2" />
<text  x="1017.59" y="623.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::DefinitelyInSnapshot (60,606,060 samples, 0.01%)</title><rect x="937.5" y="645" width="0.1" height="15.0" fill="rgb(206,155,45)" rx="2" ry="2" />
<text  x="940.51" y="655.5" ></text>
</g>
<g >
<title>rocksdb::SubcompactionState::AddToOutput (85,101,009,250 samples, 15.72%)</title><rect x="976.9" y="677" width="185.5" height="15.0" fill="rgb(209,163,54)" rx="2" ry="2" />
<text  x="979.87" y="687.5" >rocksdb::SubcompactionSt..</text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::FindKeyForward (60,606,060 samples, 0.01%)</title><rect x="760.1" y="549" width="0.2" height="15.0" fill="rgb(229,188,6)" rx="2" ry="2" />
<text  x="763.12" y="559.5" ></text>
</g>
<g >
<title>[unknown] (60,606,060 samples, 0.01%)</title><rect x="10.6" y="981" width="0.1" height="15.0" fill="rgb(210,72,35)" rx="2" ry="2" />
<text  x="13.59" y="991.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (90,909,090 samples, 0.02%)</title><rect x="832.4" y="549" width="0.2" height="15.0" fill="rgb(227,179,42)" rx="2" ry="2" />
<text  x="835.45" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (70,707,070 samples, 0.01%)</title><rect x="748.3" y="517" width="0.1" height="15.0" fill="rgb(237,69,51)" rx="2" ry="2" />
<text  x="751.25" y="527.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="786.6" y="437" width="0.3" height="15.0" fill="rgb(234,190,40)" rx="2" ry="2" />
<text  x="789.62" y="447.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::Key (50,505,050 samples, 0.01%)</title><rect x="81.9" y="789" width="0.1" height="15.0" fill="rgb(216,45,12)" rx="2" ry="2" />
<text  x="84.86" y="799.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockHashIndexBuilder::Valid (50,505,050 samples, 0.01%)</title><rect x="1024.8" y="565" width="0.1" height="15.0" fill="rgb(217,92,54)" rx="2" ry="2" />
<text  x="1027.83" y="575.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::get_root (232,323,230 samples, 0.04%)</title><rect x="703.7" y="613" width="0.5" height="15.0" fill="rgb(242,37,37)" rx="2" ry="2" />
<text  x="706.66" y="623.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (111,111,110 samples, 0.02%)</title><rect x="41.6" y="581" width="0.3" height="15.0" fill="rgb(253,30,49)" rx="2" ry="2" />
<text  x="44.62" y="591.5" ></text>
</g>
<g >
<title>std::tuple&lt;rocksdb::Status, unsigned int, unsigned long&gt;::tuple&lt;rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;, true, true&gt; (1,181,818,170 samples, 0.22%)</title><rect x="552.4" y="885" width="2.6" height="15.0" fill="rgb(240,72,9)" rx="2" ry="2" />
<text  x="555.43" y="895.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;47ul&gt; (1,484,848,470 samples, 0.27%)</title><rect x="1163.2" y="677" width="3.2" height="15.0" fill="rgb(220,218,33)" rx="2" ry="2" />
<text  x="1166.18" y="687.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt;@plt (171,717,170 samples, 0.03%)</title><rect x="535.7" y="885" width="0.3" height="15.0" fill="rgb(234,18,13)" rx="2" ry="2" />
<text  x="538.67" y="895.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::status (60,606,060 samples, 0.01%)</title><rect x="769.8" y="501" width="0.1" height="15.0" fill="rgb(218,26,52)" rx="2" ry="2" />
<text  x="772.77" y="511.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::FilterBlockBuilder*, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt; (303,030,300 samples, 0.06%)</title><rect x="1049.7" y="549" width="0.7" height="15.0" fill="rgb(214,11,28)" rx="2" ry="2" />
<text  x="1052.74" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (50,505,050 samples, 0.01%)</title><rect x="169.9" y="757" width="0.2" height="15.0" fill="rgb(243,119,54)" rx="2" ry="2" />
<text  x="172.95" y="767.5" ></text>
</g>
<g >
<title>rocksdb::ExtractInternalKeyFooter (464,646,460 samples, 0.09%)</title><rect x="1017.4" y="629" width="1.0" height="15.0" fill="rgb(218,47,25)" rx="2" ry="2" />
<text  x="1020.39" y="639.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (13,898,989,760 samples, 2.57%)</title><rect x="661.1" y="805" width="30.3" height="15.0" fill="rgb(250,204,9)" rx="2" ry="2" />
<text  x="664.13" y="815.5" >st..</text>
</g>
<g >
<title>rocksdb::Compaction::column_family_data (101,010,100 samples, 0.02%)</title><rect x="1061.4" y="645" width="0.3" height="15.0" fill="rgb(245,190,50)" rx="2" ry="2" />
<text  x="1064.43" y="655.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::Clear (50,505,050 samples, 0.01%)</title><rect x="815.7" y="533" width="0.1" height="15.0" fill="rgb(216,11,48)" rx="2" ry="2" />
<text  x="818.66" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_write (1,686,868,670 samples, 0.31%)</title><rect x="39.3" y="757" width="3.7" height="15.0" fill="rgb(207,106,45)" rx="2" ry="2" />
<text  x="42.29" y="767.5" ></text>
</g>
<g >
<title>do_user_addr_fault (111,111,110 samples, 0.02%)</title><rect x="81.0" y="709" width="0.2" height="15.0" fill="rgb(231,82,36)" rx="2" ry="2" />
<text  x="83.98" y="719.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (555,555,550 samples, 0.10%)</title><rect x="993.6" y="373" width="1.2" height="15.0" fill="rgb(207,20,4)" rx="2" ry="2" />
<text  x="996.60" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (202,020,200 samples, 0.04%)</title><rect x="854.8" y="501" width="0.4" height="15.0" fill="rgb(211,115,8)" rx="2" ry="2" />
<text  x="857.80" y="511.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (838,383,830 samples, 0.15%)</title><rect x="194.4" y="869" width="1.9" height="15.0" fill="rgb(224,139,14)" rx="2" ry="2" />
<text  x="197.44" y="879.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (50,505,050 samples, 0.01%)</title><rect x="36.6" y="837" width="0.1" height="15.0" fill="rgb(215,187,36)" rx="2" ry="2" />
<text  x="39.58" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;::_M_valptr (70,707,070 samples, 0.01%)</title><rect x="72.9" y="741" width="0.2" height="15.0" fill="rgb(222,109,40)" rx="2" ry="2" />
<text  x="75.94" y="751.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::Valid (50,505,050 samples, 0.01%)</title><rect x="793.0" y="597" width="0.1" height="15.0" fill="rgb(249,163,13)" rx="2" ry="2" />
<text  x="795.96" y="607.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (494,949,490 samples, 0.09%)</title><rect x="882.1" y="629" width="1.0" height="15.0" fill="rgb(253,32,36)" rx="2" ry="2" />
<text  x="885.06" y="639.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (50,505,050 samples, 0.01%)</title><rect x="165.7" y="773" width="0.1" height="15.0" fill="rgb(215,86,30)" rx="2" ry="2" />
<text  x="168.68" y="783.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (4,383,838,340 samples, 0.81%)</title><rect x="204.3" y="805" width="9.5" height="15.0" fill="rgb(233,176,53)" rx="2" ry="2" />
<text  x="207.26" y="815.5" ></text>
</g>
<g >
<title>__schedule (151,515,150 samples, 0.03%)</title><rect x="409.8" y="773" width="0.3" height="15.0" fill="rgb(252,30,20)" rx="2" ry="2" />
<text  x="412.77" y="783.5" ></text>
</g>
<g >
<title>rocksdb::port::AsmVolatilePause (737,373,730 samples, 0.14%)</title><rect x="274.7" y="869" width="1.6" height="15.0" fill="rgb(253,3,40)" rx="2" ry="2" />
<text  x="277.69" y="879.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (696,969,690 samples, 0.13%)</title><rect x="798.3" y="485" width="1.5" height="15.0" fill="rgb(248,26,24)" rx="2" ry="2" />
<text  x="801.29" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;rocksdb::MemTable* const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,050,505,040 samples, 0.19%)</title><rect x="70.1" y="757" width="2.3" height="15.0" fill="rgb(249,149,41)" rx="2" ry="2" />
<text  x="73.08" y="767.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::WriteToWAL (7,212,121,140 samples, 1.33%)</title><rect x="35.5" y="885" width="15.8" height="15.0" fill="rgb(233,217,3)" rx="2" ry="2" />
<text  x="38.55" y="895.5" ></text>
</g>
<g >
<title>rocksdb::Block::Block (121,212,120 samples, 0.02%)</title><rect x="804.6" y="437" width="0.3" height="15.0" fill="rgb(236,113,1)" rx="2" ry="2" />
<text  x="807.59" y="447.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::Flush (3,404,040,370 samples, 0.63%)</title><rect x="36.8" y="853" width="7.4" height="15.0" fill="rgb(242,80,3)" rx="2" ry="2" />
<text  x="39.76" y="863.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (62,191,918,570 samples, 11.49%)</title><rect x="391.6" y="837" width="135.6" height="15.0" fill="rgb(232,206,42)" rx="2" ry="2" />
<text  x="394.65" y="847.5" >entry_SYSCALL_64_..</text>
</g>
<g >
<title>rocksdb::Status::code (50,505,050 samples, 0.01%)</title><rect x="791.6" y="549" width="0.1" height="15.0" fill="rgb(220,220,20)" rx="2" ry="2" />
<text  x="794.59" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (444,444,440 samples, 0.08%)</title><rect x="895.5" y="597" width="0.9" height="15.0" fill="rgb(215,67,39)" rx="2" ry="2" />
<text  x="898.45" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (292,929,290 samples, 0.05%)</title><rect x="855.8" y="501" width="0.6" height="15.0" fill="rgb(226,28,10)" rx="2" ry="2" />
<text  x="858.77" y="511.5" ></text>
</g>
<g >
<title>rocksdb::Slice::compare (212,121,210 samples, 0.04%)</title><rect x="135.3" y="661" width="0.4" height="15.0" fill="rgb(222,113,19)" rx="2" ry="2" />
<text  x="138.28" y="671.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (636,363,630 samples, 0.12%)</title><rect x="552.7" y="837" width="1.4" height="15.0" fill="rgb(248,225,38)" rx="2" ry="2" />
<text  x="555.74" y="847.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (171,717,170 samples, 0.03%)</title><rect x="172.2" y="789" width="0.4" height="15.0" fill="rgb(245,163,52)" rx="2" ry="2" />
<text  x="175.19" y="799.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (101,010,100 samples, 0.02%)</title><rect x="176.8" y="789" width="0.2" height="15.0" fill="rgb(230,218,27)" rx="2" ry="2" />
<text  x="179.80" y="799.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader (505,050,500 samples, 0.09%)</title><rect x="221.6" y="885" width="1.1" height="15.0" fill="rgb(241,168,54)" rx="2" ry="2" />
<text  x="224.59" y="895.5" ></text>
</g>
<g >
<title>std::deque&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::rend (494,949,490 samples, 0.09%)</title><rect x="952.5" y="645" width="1.1" height="15.0" fill="rgb(208,29,42)" rx="2" ry="2" />
<text  x="955.51" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (161,616,160 samples, 0.03%)</title><rect x="566.9" y="933" width="0.4" height="15.0" fill="rgb(242,42,32)" rx="2" ry="2" />
<text  x="569.92" y="943.5" ></text>
</g>
<g >
<title>rocksdb::DecodeFixed64 (70,707,070 samples, 0.01%)</title><rect x="907.7" y="613" width="0.1" height="15.0" fill="rgb(233,96,7)" rx="2" ry="2" />
<text  x="910.65" y="623.5" ></text>
</g>
<g >
<title>rocksdb::ComputeBuiltinChecksum (212,121,210 samples, 0.04%)</title><rect x="762.4" y="389" width="0.4" height="15.0" fill="rgb(236,71,42)" rx="2" ry="2" />
<text  x="765.37" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (70,707,070 samples, 0.01%)</title><rect x="1001.5" y="469" width="0.2" height="15.0" fill="rgb(210,99,34)" rx="2" ry="2" />
<text  x="1004.53" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (50,505,050 samples, 0.01%)</title><rect x="38.8" y="805" width="0.2" height="15.0" fill="rgb(236,203,33)" rx="2" ry="2" />
<text  x="41.85" y="815.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyHandleInternal::~ColumnFamilyHandleInternal (60,606,060 samples, 0.01%)</title><rect x="28.9" y="885" width="0.1" height="15.0" fill="rgb(228,171,10)" rx="2" ry="2" />
<text  x="31.85" y="895.5" ></text>
</g>
<g >
<title>__lock_text_start (50,505,050 samples, 0.01%)</title><rect x="690.8" y="453" width="0.2" height="15.0" fill="rgb(229,24,33)" rx="2" ry="2" />
<text  x="693.84" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (222,222,220 samples, 0.04%)</title><rect x="843.8" y="549" width="0.5" height="15.0" fill="rgb(233,23,50)" rx="2" ry="2" />
<text  x="846.81" y="559.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="337.2" y="821" width="0.2" height="15.0" fill="rgb(207,220,8)" rx="2" ry="2" />
<text  x="340.19" y="831.5" ></text>
</g>
<g >
<title>XXH3_accumulate_512_avx512 (141,414,140 samples, 0.03%)</title><rect x="762.5" y="277" width="0.3" height="15.0" fill="rgb(243,152,33)" rx="2" ry="2" />
<text  x="765.46" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (252,525,250 samples, 0.05%)</title><rect x="851.5" y="501" width="0.5" height="15.0" fill="rgb(250,63,17)" rx="2" ry="2" />
<text  x="854.49" y="511.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (494,949,490 samples, 0.09%)</title><rect x="1136.1" y="597" width="1.1" height="15.0" fill="rgb(245,49,48)" rx="2" ry="2" />
<text  x="1139.09" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1,020,202,010 samples, 0.19%)</title><rect x="582.1" y="949" width="2.2" height="15.0" fill="rgb(229,112,38)" rx="2" ry="2" />
<text  x="585.05" y="959.5" ></text>
</g>
<g >
<title>rocksdb::RangeDelAggregator::ShouldDelete (7,474,747,400 samples, 1.38%)</title><rect x="897.9" y="645" width="16.3" height="15.0" fill="rgb(219,193,23)" rx="2" ry="2" />
<text  x="900.87" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (60,606,060 samples, 0.01%)</title><rect x="541.9" y="869" width="0.2" height="15.0" fill="rgb(219,178,54)" rx="2" ry="2" />
<text  x="544.95" y="879.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (101,010,100 samples, 0.02%)</title><rect x="738.0" y="597" width="0.2" height="15.0" fill="rgb(210,206,14)" rx="2" ry="2" />
<text  x="740.99" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (616,161,610 samples, 0.11%)</title><rect x="55.2" y="885" width="1.3" height="15.0" fill="rgb(251,72,20)" rx="2" ry="2" />
<text  x="58.19" y="895.5" ></text>
</g>
<g >
<title>rocksdb::Compaction::max_output_file_size (111,111,110 samples, 0.02%)</title><rect x="1065.4" y="629" width="0.2" height="15.0" fill="rgb(206,224,45)" rx="2" ry="2" />
<text  x="1068.40" y="639.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="783.8" y="533" width="0.1" height="15.0" fill="rgb(251,142,30)" rx="2" ry="2" />
<text  x="786.78" y="543.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey (70,707,070 samples, 0.01%)</title><rect x="712.6" y="565" width="0.1" height="15.0" fill="rgb(249,112,40)" rx="2" ry="2" />
<text  x="715.56" y="575.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1,121,212,110 samples, 0.21%)</title><rect x="213.9" y="805" width="2.5" height="15.0" fill="rgb(248,130,4)" rx="2" ry="2" />
<text  x="216.93" y="815.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::IntTblPropCollector*, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="1041.5" y="581" width="0.2" height="15.0" fill="rgb(207,69,50)" rx="2" ry="2" />
<text  x="1044.46" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator=@plt (101,010,100 samples, 0.02%)</title><rect x="1160.1" y="661" width="0.2" height="15.0" fill="rgb(206,61,6)" rx="2" ry="2" />
<text  x="1163.12" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree_decrement (50,505,050 samples, 0.01%)</title><rect x="583.9" y="917" width="0.1" height="15.0" fill="rgb(244,5,23)" rx="2" ry="2" />
<text  x="586.86" y="927.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (161,616,160 samples, 0.03%)</title><rect x="975.3" y="549" width="0.4" height="15.0" fill="rgb(206,40,45)" rx="2" ry="2" />
<text  x="978.35" y="559.5" ></text>
</g>
<g >
<title>rocksdb::SstFileManagerImpl::ScheduleFileDeletion (272,727,270 samples, 0.05%)</title><rect x="690.8" y="677" width="0.6" height="15.0" fill="rgb(250,162,44)" rx="2" ry="2" />
<text  x="693.84" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_ptr (484,848,480 samples, 0.09%)</title><rect x="946.4" y="613" width="1.1" height="15.0" fill="rgb(243,202,18)" rx="2" ry="2" />
<text  x="949.43" y="623.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::FlushMemTablesToOutputFiles (13,626,262,490 samples, 2.52%)</title><rect x="661.1" y="709" width="29.7" height="15.0" fill="rgb(225,28,48)" rx="2" ry="2" />
<text  x="664.13" y="719.5" >ro..</text>
</g>
<g >
<title>rocksdb::Status::ok (101,010,100 samples, 0.02%)</title><rect x="542.1" y="885" width="0.2" height="15.0" fill="rgb(210,202,0)" rx="2" ry="2" />
<text  x="545.08" y="895.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Next (7,222,222,150 samples, 1.33%)</title><rect x="760.3" y="549" width="15.7" height="15.0" fill="rgb(233,134,41)" rx="2" ry="2" />
<text  x="763.26" y="559.5" ></text>
</g>
<g >
<title>_int_malloc (575,757,570 samples, 0.11%)</title><rect x="657.8" y="1013" width="1.3" height="15.0" fill="rgb(246,36,19)" rx="2" ry="2" />
<text  x="660.83" y="1023.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (90,909,090 samples, 0.02%)</title><rect x="1028.0" y="597" width="0.2" height="15.0" fill="rgb(247,199,49)" rx="2" ry="2" />
<text  x="1031.03" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::FileMetaData* const*, std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt; &gt;::__normal_iterator (131,313,130 samples, 0.02%)</title><rect x="1074.2" y="581" width="0.3" height="15.0" fill="rgb(237,160,46)" rx="2" ry="2" />
<text  x="1077.23" y="591.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt; const, rocksdb::CompactionMergingIterator::HeapItem* const&gt;::iterator_impl (303,030,300 samples, 0.06%)</title><rect x="746.5" y="565" width="0.7" height="15.0" fill="rgb(236,203,29)" rx="2" ry="2" />
<text  x="749.51" y="575.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (80,808,080 samples, 0.01%)</title><rect x="175.4" y="853" width="0.1" height="15.0" fill="rgb(237,189,52)" rx="2" ry="2" />
<text  x="178.37" y="863.5" ></text>
</g>
<g >
<title>do_user_addr_fault (383,838,380 samples, 0.07%)</title><rect x="658.2" y="965" width="0.9" height="15.0" fill="rgb(243,129,28)" rx="2" ry="2" />
<text  x="661.25" y="975.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::AdvanceInputIter (50,505,050 samples, 0.01%)</title><rect x="698.1" y="677" width="0.1" height="15.0" fill="rgb(241,41,50)" rx="2" ry="2" />
<text  x="701.07" y="687.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyMemTablesImpl::~ColumnFamilyMemTablesImpl (131,313,130 samples, 0.02%)</title><rect x="28.7" y="901" width="0.3" height="15.0" fill="rgb(230,175,31)" rx="2" ry="2" />
<text  x="31.70" y="911.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::Next (77,050,504,280 samples, 14.24%)</title><rect x="699.6" y="645" width="168.0" height="15.0" fill="rgb(229,156,38)" rx="2" ry="2" />
<text  x="702.58" y="655.5" >rocksdb::SequenceIter..</text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::get (343,434,340 samples, 0.06%)</title><rect x="1038.8" y="613" width="0.7" height="15.0" fill="rgb(243,35,35)" rx="2" ry="2" />
<text  x="1041.75" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (141,414,140 samples, 0.03%)</title><rect x="838.0" y="549" width="0.3" height="15.0" fill="rgb(215,84,27)" rx="2" ry="2" />
<text  x="841.00" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (838,383,830 samples, 0.15%)</title><rect x="854.6" y="517" width="1.8" height="15.0" fill="rgb(210,146,9)" rx="2" ry="2" />
<text  x="857.60" y="527.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (303,030,300 samples, 0.06%)</title><rect x="1037.1" y="597" width="0.6" height="15.0" fill="rgb(227,170,7)" rx="2" ry="2" />
<text  x="1040.05" y="607.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (60,606,060 samples, 0.01%)</title><rect x="42.3" y="533" width="0.1" height="15.0" fill="rgb(237,113,1)" rx="2" ry="2" />
<text  x="45.31" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (151,515,150 samples, 0.03%)</title><rect x="164.8" y="773" width="0.3" height="15.0" fill="rgb(215,219,11)" rx="2" ry="2" />
<text  x="167.75" y="783.5" ></text>
</g>
<g >
<title>rocksdb::CompactionJob::ProcessKeyValueCompaction (220,898,987,690 samples, 40.81%)</title><rect x="693.7" y="693" width="481.6" height="15.0" fill="rgb(216,207,18)" rx="2" ry="2" />
<text  x="696.66" y="703.5" >rocksdb::CompactionJob::ProcessKeyValueCompaction</text>
</g>
<g >
<title>rocksdb::Status::ok (505,050,500 samples, 0.09%)</title><rect x="969.3" y="677" width="1.1" height="15.0" fill="rgb(230,188,15)" rx="2" ry="2" />
<text  x="972.29" y="687.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,707,070,690 samples, 0.32%)</title><rect x="39.3" y="773" width="3.7" height="15.0" fill="rgb(227,43,2)" rx="2" ry="2" />
<text  x="42.29" y="783.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatchInternal::Iterate (90,909,090 samples, 0.02%)</title><rect x="178.8" y="885" width="0.2" height="15.0" fill="rgb(247,2,48)" rx="2" ry="2" />
<text  x="181.85" y="895.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, false&gt;::_M_head (121,212,120 samples, 0.02%)</title><rect x="945.4" y="533" width="0.3" height="15.0" fill="rgb(208,53,18)" rx="2" ry="2" />
<text  x="948.44" y="543.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (50,505,050 samples, 0.01%)</title><rect x="1103.0" y="613" width="0.1" height="15.0" fill="rgb(223,141,53)" rx="2" ry="2" />
<text  x="1105.99" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (4,242,424,200 samples, 0.78%)</title><rect x="572.5" y="965" width="9.2" height="15.0" fill="rgb(213,156,44)" rx="2" ry="2" />
<text  x="575.49" y="975.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_Node_allocator@plt (111,111,110 samples, 0.02%)</title><rect x="63.2" y="805" width="0.2" height="15.0" fill="rgb(253,48,35)" rx="2" ry="2" />
<text  x="66.18" y="815.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (1,232,323,220 samples, 0.23%)</title><rect x="827.4" y="517" width="2.7" height="15.0" fill="rgb(222,106,12)" rx="2" ry="2" />
<text  x="830.45" y="527.5" ></text>
</g>
<g >
<title>perf_iterate_sb (70,707,070 samples, 0.01%)</title><rect x="10.4" y="869" width="0.2" height="15.0" fill="rgb(253,148,30)" rx="2" ry="2" />
<text  x="13.44" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_put_node (181,818,180 samples, 0.03%)</title><rect x="63.4" y="805" width="0.4" height="15.0" fill="rgb(227,209,30)" rx="2" ry="2" />
<text  x="66.43" y="815.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (90,909,090 samples, 0.02%)</title><rect x="796.5" y="437" width="0.2" height="15.0" fill="rgb(227,43,47)" rx="2" ry="2" />
<text  x="799.46" y="447.5" ></text>
</g>
<g >
<title>do_anonymous_page (60,606,060 samples, 0.01%)</title><rect x="81.0" y="645" width="0.2" height="15.0" fill="rgb(232,83,1)" rx="2" ry="2" />
<text  x="84.04" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (101,010,100 samples, 0.02%)</title><rect x="546.7" y="901" width="0.2" height="15.0" fill="rgb(238,61,5)" rx="2" ry="2" />
<text  x="549.66" y="911.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::UpdateOldestKeyTime (50,505,050 samples, 0.01%)</title><rect x="167.3" y="821" width="0.1" height="15.0" fill="rgb(239,41,22)" rx="2" ry="2" />
<text  x="170.28" y="831.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_context (323,232,320 samples, 0.06%)</title><rect x="156.1" y="709" width="0.7" height="15.0" fill="rgb(242,8,37)" rx="2" ry="2" />
<text  x="159.10" y="719.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (50,505,050 samples, 0.01%)</title><rect x="169.7" y="757" width="0.1" height="15.0" fill="rgb(229,27,29)" rx="2" ry="2" />
<text  x="172.66" y="767.5" ></text>
</g>
<g >
<title>__strlen_evex (60,606,060 samples, 0.01%)</title><rect x="10.7" y="997" width="0.2" height="15.0" fill="rgb(243,149,47)" rx="2" ry="2" />
<text  x="13.73" y="1007.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::BlobGarbageMeter*, false&gt;::_M_head (141,414,140 samples, 0.03%)</title><rect x="1150.0" y="565" width="0.3" height="15.0" fill="rgb(240,73,43)" rx="2" ry="2" />
<text  x="1153.03" y="575.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::FlushBlockPolicy*, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt; (242,424,240 samples, 0.04%)</title><rect x="1052.2" y="581" width="0.5" height="15.0" fill="rgb(237,153,26)" rx="2" ry="2" />
<text  x="1055.18" y="591.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::AwaitState (15,525,252,370 samples, 2.87%)</title><rect x="182.7" y="885" width="33.8" height="15.0" fill="rgb(236,124,38)" rx="2" ry="2" />
<text  x="185.65" y="895.5" >ro..</text>
</g>
<g >
<title>rocksdb::Status::operator= (70,707,070 samples, 0.01%)</title><rect x="52.4" y="869" width="0.2" height="15.0" fill="rgb(209,49,52)" rx="2" ry="2" />
<text  x="55.41" y="879.5" ></text>
</g>
<g >
<title>rocksdb::CachableEntry&lt;rocksdb::Block_kData&gt;::SetOwnedValue (60,606,060 samples, 0.01%)</title><rect x="810.7" y="485" width="0.1" height="15.0" fill="rgb(244,138,51)" rx="2" ry="2" />
<text  x="813.71" y="495.5" ></text>
</g>
<g >
<title>__gthread_yield (353,535,350 samples, 0.07%)</title><rect x="273.4" y="869" width="0.8" height="15.0" fill="rgb(247,39,52)" rx="2" ry="2" />
<text  x="276.39" y="879.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;40ul&gt; (50,505,050 samples, 0.01%)</title><rect x="57.5" y="901" width="0.2" height="15.0" fill="rgb(206,184,6)" rx="2" ry="2" />
<text  x="60.55" y="911.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::PrepareOutput@plt (70,707,070 samples, 0.01%)</title><rect x="965.9" y="677" width="0.2" height="15.0" fill="rgb(236,42,12)" rx="2" ry="2" />
<text  x="968.92" y="687.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::SetState (90,909,090 samples, 0.02%)</title><rect x="222.4" y="869" width="0.2" height="15.0" fill="rgb(208,111,49)" rx="2" ry="2" />
<text  x="225.36" y="879.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (4,242,424,200 samples, 0.78%)</title><rect x="572.5" y="981" width="9.2" height="15.0" fill="rgb(234,98,42)" rx="2" ry="2" />
<text  x="575.49" y="991.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator (50,505,050 samples, 0.01%)</title><rect x="549.9" y="917" width="0.2" height="15.0" fill="rgb(234,97,53)" rx="2" ry="2" />
<text  x="552.94" y="927.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::MemTable*, 8ul&gt;::~autovector (151,515,150 samples, 0.03%)</title><rect x="33.1" y="885" width="0.3" height="15.0" fill="rgb(251,60,2)" rx="2" ry="2" />
<text  x="36.10" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::push_back (292,929,290 samples, 0.05%)</title><rect x="1012.1" y="597" width="0.6" height="15.0" fill="rgb(222,78,11)" rx="2" ry="2" />
<text  x="1015.08" y="607.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (151,515,150 samples, 0.03%)</title><rect x="110.8" y="677" width="0.4" height="15.0" fill="rgb(241,68,51)" rx="2" ry="2" />
<text  x="113.84" y="687.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::FlushMemTableToOutputFile (13,626,262,490 samples, 2.52%)</title><rect x="661.1" y="693" width="29.7" height="15.0" fill="rgb(228,75,37)" rx="2" ry="2" />
<text  x="664.13" y="703.5" >ro..</text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::operator bool (202,020,200 samples, 0.04%)</title><rect x="1051.0" y="629" width="0.4" height="15.0" fill="rgb(239,151,15)" rx="2" ry="2" />
<text  x="1053.97" y="639.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::Status, unsigned int, unsigned long&gt;::_M_tail (50,505,050 samples, 0.01%)</title><rect x="562.1" y="901" width="0.2" height="15.0" fill="rgb(214,99,53)" rx="2" ry="2" />
<text  x="565.14" y="911.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (80,808,080 samples, 0.01%)</title><rect x="749.2" y="565" width="0.2" height="15.0" fill="rgb(214,33,38)" rx="2" ry="2" />
<text  x="752.25" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_begin (606,060,600 samples, 0.11%)</title><rect x="900.9" y="597" width="1.3" height="15.0" fill="rgb(246,8,11)" rx="2" ry="2" />
<text  x="903.91" y="607.5" ></text>
</g>
<g >
<title>std::operator&amp; (1,424,242,410 samples, 0.26%)</title><rect x="348.4" y="869" width="3.1" height="15.0" fill="rgb(232,9,29)" rx="2" ry="2" />
<text  x="351.42" y="879.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="794.6" y="453" width="0.1" height="15.0" fill="rgb(211,151,13)" rx="2" ry="2" />
<text  x="797.59" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (60,606,060 samples, 0.01%)</title><rect x="182.4" y="837" width="0.2" height="15.0" fill="rgb(239,45,22)" rx="2" ry="2" />
<text  x="185.43" y="847.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::Next (272,727,270 samples, 0.05%)</title><rect x="957.7" y="661" width="0.6" height="15.0" fill="rgb(229,41,17)" rx="2" ry="2" />
<text  x="960.71" y="671.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="850.6" y="437" width="0.3" height="15.0" fill="rgb(230,62,10)" rx="2" ry="2" />
<text  x="853.61" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Status::IsManualCompactionPaused (363,636,360 samples, 0.07%)</title><rect x="968.2" y="677" width="0.8" height="15.0" fill="rgb(232,70,4)" rx="2" ry="2" />
<text  x="971.21" y="687.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (676,767,670 samples, 0.13%)</title><rect x="929.6" y="629" width="1.5" height="15.0" fill="rgb(223,217,48)" rx="2" ry="2" />
<text  x="932.63" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt;::empty (494,949,490 samples, 0.09%)</title><rect x="1070.9" y="613" width="1.0" height="15.0" fill="rgb(249,182,47)" rx="2" ry="2" />
<text  x="1073.86" y="623.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (202,020,200 samples, 0.04%)</title><rect x="865.3" y="565" width="0.4" height="15.0" fill="rgb(246,187,29)" rx="2" ry="2" />
<text  x="868.26" y="575.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::front@plt (50,505,050 samples, 0.01%)</title><rect x="866.3" y="613" width="0.1" height="15.0" fill="rgb(238,17,35)" rx="2" ry="2" />
<text  x="869.27" y="623.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="783.5" y="469" width="0.3" height="15.0" fill="rgb(247,187,41)" rx="2" ry="2" />
<text  x="786.53" y="479.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (252,525,250 samples, 0.05%)</title><rect x="199.4" y="821" width="0.6" height="15.0" fill="rgb(216,140,22)" rx="2" ry="2" />
<text  x="202.41" y="831.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ExtractLargeValueIfNeeded (101,010,100 samples, 0.02%)</title><rect x="867.6" y="661" width="0.2" height="15.0" fill="rgb(252,74,17)" rx="2" ry="2" />
<text  x="870.59" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::_M_ptr (212,121,210 samples, 0.04%)</title><rect x="1048.2" y="597" width="0.4" height="15.0" fill="rgb(252,136,46)" rx="2" ry="2" />
<text  x="1051.18" y="607.5" ></text>
</g>
<g >
<title>rocksdb::LocalSavePoint::commit (131,313,130 samples, 0.02%)</title><rect x="555.8" y="901" width="0.2" height="15.0" fill="rgb(246,222,38)" rx="2" ry="2" />
<text  x="558.76" y="911.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::_M_ptr (1,898,989,880 samples, 0.35%)</title><rect x="1170.7" y="645" width="4.1" height="15.0" fill="rgb(215,63,10)" rx="2" ry="2" />
<text  x="1173.66" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::ColumnFamilySet*, std::default_delete&lt;rocksdb::ColumnFamilySet&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="58.1" y="853" width="0.1" height="15.0" fill="rgb(206,170,42)" rx="2" ry="2" />
<text  x="61.05" y="863.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (121,212,120 samples, 0.02%)</title><rect x="796.8" y="517" width="0.3" height="15.0" fill="rgb(233,18,21)" rx="2" ry="2" />
<text  x="799.81" y="527.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="829.9" y="421" width="0.1" height="15.0" fill="rgb(245,178,20)" rx="2" ry="2" />
<text  x="832.89" y="431.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="955.7" y="645" width="0.2" height="15.0" fill="rgb(233,84,5)" rx="2" ry="2" />
<text  x="958.73" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::_M_ptr (131,313,130 samples, 0.02%)</title><rect x="564.8" y="901" width="0.3" height="15.0" fill="rgb(231,202,28)" rx="2" ry="2" />
<text  x="567.76" y="911.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (70,707,070 samples, 0.01%)</title><rect x="796.9" y="501" width="0.2" height="15.0" fill="rgb(215,192,23)" rx="2" ry="2" />
<text  x="799.92" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::operator (171,717,170 samples, 0.03%)</title><rect x="844.4" y="597" width="0.3" height="15.0" fill="rgb(209,81,24)" rx="2" ry="2" />
<text  x="847.36" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (1,373,737,360 samples, 0.25%)</title><rect x="849.3" y="533" width="3.0" height="15.0" fill="rgb(233,129,29)" rx="2" ry="2" />
<text  x="852.27" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (101,010,100 samples, 0.02%)</title><rect x="783.0" y="453" width="0.3" height="15.0" fill="rgb(218,109,24)" rx="2" ry="2" />
<text  x="786.05" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="172.4" y="741" width="0.2" height="15.0" fill="rgb(249,1,44)" rx="2" ry="2" />
<text  x="175.44" y="751.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (111,111,110 samples, 0.02%)</title><rect x="175.6" y="853" width="0.3" height="15.0" fill="rgb(214,216,17)" rx="2" ry="2" />
<text  x="178.61" y="863.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (212,121,210 samples, 0.04%)</title><rect x="790.8" y="485" width="0.5" height="15.0" fill="rgb(217,188,51)" rx="2" ry="2" />
<text  x="793.85" y="495.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (202,020,200 samples, 0.04%)</title><rect x="312.3" y="821" width="0.4" height="15.0" fill="rgb(246,121,5)" rx="2" ry="2" />
<text  x="315.30" y="831.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="836.0" y="453" width="0.3" height="15.0" fill="rgb(244,25,24)" rx="2" ry="2" />
<text  x="838.99" y="463.5" ></text>
</g>
<g >
<title>handle_mm_fault (222,222,220 samples, 0.04%)</title><rect x="663.5" y="533" width="0.5" height="15.0" fill="rgb(206,19,2)" rx="2" ry="2" />
<text  x="666.49" y="543.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt;@plt (50,505,050 samples, 0.01%)</title><rect x="1047.3" y="629" width="0.1" height="15.0" fill="rgb(230,228,44)" rx="2" ry="2" />
<text  x="1050.30" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::SstPartitioner*, false&gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="1081.8" y="533" width="0.2" height="15.0" fill="rgb(212,142,14)" rx="2" ry="2" />
<text  x="1084.85" y="543.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (191,919,190 samples, 0.04%)</title><rect x="863.1" y="581" width="0.4" height="15.0" fill="rgb(216,6,30)" rx="2" ry="2" />
<text  x="866.08" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (60,606,060 samples, 0.01%)</title><rect x="973.3" y="613" width="0.2" height="15.0" fill="rgb(224,112,23)" rx="2" ry="2" />
<text  x="976.34" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (343,434,340 samples, 0.06%)</title><rect x="1001.0" y="517" width="0.7" height="15.0" fill="rgb(219,94,26)" rx="2" ry="2" />
<text  x="1003.98" y="527.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1,494,949,480 samples, 0.28%)</title><rect x="299.3" y="853" width="3.2" height="15.0" fill="rgb(228,109,27)" rx="2" ry="2" />
<text  x="302.26" y="863.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::GetInstance (70,707,070 samples, 0.01%)</title><rect x="1162.6" y="677" width="0.1" height="15.0" fill="rgb(231,129,11)" rx="2" ry="2" />
<text  x="1165.58" y="687.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (212,121,210 samples, 0.04%)</title><rect x="1163.9" y="661" width="0.5" height="15.0" fill="rgb(236,102,39)" rx="2" ry="2" />
<text  x="1166.93" y="671.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::KeyComparator::operator (202,020,200 samples, 0.04%)</title><rect x="145.3" y="725" width="0.4" height="15.0" fill="rgb(209,215,3)" rx="2" ry="2" />
<text  x="148.28" y="735.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="839.6" y="501" width="0.2" height="15.0" fill="rgb(207,221,27)" rx="2" ry="2" />
<text  x="842.60" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;rocksdb::CompactionOutputs::Output const*, std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt; &gt; (353,535,350 samples, 0.07%)</title><rect x="1088.3" y="613" width="0.8" height="15.0" fill="rgb(212,125,32)" rx="2" ry="2" />
<text  x="1091.34" y="623.5" ></text>
</g>
<g >
<title>rocksdb::FileMetaData::UpdateBoundaries (202,020,200 samples, 0.04%)</title><rect x="1158.4" y="661" width="0.4" height="15.0" fill="rgb(230,222,24)" rx="2" ry="2" />
<text  x="1161.40" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (111,111,110 samples, 0.02%)</title><rect x="825.0" y="517" width="0.3" height="15.0" fill="rgb(233,164,19)" rx="2" ry="2" />
<text  x="828.02" y="527.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyHandleImpl::ColumnFamilyHandleImpl (50,505,050 samples, 0.01%)</title><rect x="28.4" y="885" width="0.1" height="15.0" fill="rgb(209,179,51)" rx="2" ry="2" />
<text  x="31.37" y="895.5" ></text>
</g>
<g >
<title>rocksdb::FSWritableFilePtr::operator (151,515,150 samples, 0.03%)</title><rect x="45.7" y="821" width="0.3" height="15.0" fill="rgb(217,125,2)" rx="2" ry="2" />
<text  x="48.65" y="831.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (131,313,130 samples, 0.02%)</title><rect x="850.2" y="469" width="0.3" height="15.0" fill="rgb(227,205,40)" rx="2" ry="2" />
<text  x="853.22" y="479.5" ></text>
</g>
<g >
<title>rocksdb::GetVarint32Ptr (8,898,989,810 samples, 1.64%)</title><rect x="669.4" y="549" width="19.4" height="15.0" fill="rgb(230,48,9)" rx="2" ry="2" />
<text  x="672.41" y="559.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="1004.4" y="549" width="0.4" height="15.0" fill="rgb(246,151,15)" rx="2" ry="2" />
<text  x="1007.44" y="559.5" ></text>
</g>
<g >
<title>rocksdb::Compaction::grandparents (313,131,310 samples, 0.06%)</title><rect x="1064.7" y="629" width="0.7" height="15.0" fill="rgb(226,136,46)" rx="2" ry="2" />
<text  x="1067.69" y="639.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="1145.1" y="565" width="0.2" height="15.0" fill="rgb(240,227,24)" rx="2" ry="2" />
<text  x="1148.07" y="575.5" ></text>
</g>
<g >
<title>rocksdb::PerfStepTimer::PerfStepTimer (50,505,050 samples, 0.01%)</title><rect x="192.3" y="869" width="0.2" height="15.0" fill="rgb(213,114,2)" rx="2" ry="2" />
<text  x="195.34" y="879.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="795.1" y="421" width="0.2" height="15.0" fill="rgb(209,167,44)" rx="2" ry="2" />
<text  x="798.05" y="431.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::MergeBatch (767,676,760 samples, 0.14%)</title><rect x="33.9" y="885" width="1.6" height="15.0" fill="rgb(221,114,30)" rx="2" ry="2" />
<text  x="36.87" y="895.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (454,545,450 samples, 0.08%)</title><rect x="689.6" y="565" width="1.0" height="15.0" fill="rgb(207,137,28)" rx="2" ry="2" />
<text  x="692.56" y="575.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="847.0" y="421" width="0.3" height="15.0" fill="rgb(225,79,22)" rx="2" ry="2" />
<text  x="850.05" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="781.7" y="389" width="0.1" height="15.0" fill="rgb(217,155,13)" rx="2" ry="2" />
<text  x="784.66" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (90,909,090 samples, 0.02%)</title><rect x="852.4" y="533" width="0.2" height="15.0" fill="rgb(223,195,15)" rx="2" ry="2" />
<text  x="855.44" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::SstPartitioner*, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::_M_head (212,121,210 samples, 0.04%)</title><rect x="1080.2" y="565" width="0.5" height="15.0" fill="rgb(206,107,20)" rx="2" ry="2" />
<text  x="1083.20" y="575.5" ></text>
</g>
<g >
<title>__memset_evex_unaligned_erms (121,212,120 samples, 0.02%)</title><rect x="824.5" y="549" width="0.2" height="15.0" fill="rgb(242,108,47)" rx="2" ry="2" />
<text  x="827.47" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (70,707,070 samples, 0.01%)</title><rect x="660.4" y="997" width="0.2" height="15.0" fill="rgb(208,156,10)" rx="2" ry="2" />
<text  x="663.41" y="1007.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="582.2" y="885" width="0.1" height="15.0" fill="rgb(225,55,19)" rx="2" ry="2" />
<text  x="585.23" y="895.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::IndexBuilder, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt;::_M_ptr@plt (60,606,060 samples, 0.01%)</title><rect x="1055.2" y="613" width="0.1" height="15.0" fill="rgb(228,33,42)" rx="2" ry="2" />
<text  x="1058.20" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (90,909,090 samples, 0.02%)</title><rect x="855.6" y="437" width="0.2" height="15.0" fill="rgb(232,10,44)" rx="2" ry="2" />
<text  x="858.57" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::Tracer, std::default_delete&lt;rocksdb::Tracer&gt; &gt;::operator bool (70,707,070 samples, 0.01%)</title><rect x="549.0" y="917" width="0.2" height="15.0" fill="rgb(222,165,20)" rx="2" ry="2" />
<text  x="552.04" y="927.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (13,898,989,760 samples, 2.57%)</title><rect x="661.1" y="965" width="30.3" height="15.0" fill="rgb(245,114,3)" rx="2" ry="2" />
<text  x="664.13" y="975.5" >st..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::CompactionIterator*, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::_M_head (161,616,160 samples, 0.03%)</title><rect x="1174.5" y="597" width="0.3" height="15.0" fill="rgb(243,123,54)" rx="2" ry="2" />
<text  x="1177.45" y="607.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindSpliceForLevel&lt;true&gt; (50,505,050 samples, 0.01%)</title><rect x="84.5" y="757" width="0.1" height="15.0" fill="rgb(217,100,41)" rx="2" ry="2" />
<text  x="87.48" y="767.5" ></text>
</g>
<g >
<title>clear_page_orig (80,808,080 samples, 0.01%)</title><rect x="664.8" y="421" width="0.2" height="15.0" fill="rgb(222,120,32)" rx="2" ry="2" />
<text  x="667.79" y="431.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::InvokeFilterIfNeeded (181,818,180 samples, 0.03%)</title><rect x="867.8" y="661" width="0.4" height="15.0" fill="rgb(210,114,25)" rx="2" ry="2" />
<text  x="870.81" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (70,707,070 samples, 0.01%)</title><rect x="555.8" y="837" width="0.2" height="15.0" fill="rgb(231,136,6)" rx="2" ry="2" />
<text  x="558.85" y="847.5" ></text>
</g>
<g >
<title>__dynamic_cast (131,313,130 samples, 0.02%)</title><rect x="59.6" y="869" width="0.3" height="15.0" fill="rgb(214,124,36)" rx="2" ry="2" />
<text  x="62.57" y="879.5" ></text>
</g>
<g >
<title>ext4_bio_write_page (70,707,070 samples, 0.01%)</title><rect x="1140.4" y="309" width="0.2" height="15.0" fill="rgb(225,167,30)" rx="2" ry="2" />
<text  x="1143.41" y="319.5" ></text>
</g>
<g >
<title>rocksdb::Cleanable::DoCleanup (202,020,200 samples, 0.04%)</title><rect x="768.6" y="437" width="0.5" height="15.0" fill="rgb(226,156,34)" rx="2" ry="2" />
<text  x="771.65" y="447.5" ></text>
</g>
<g >
<title>rocksdb::EncodeVarint32 (282,828,280 samples, 0.05%)</title><rect x="1006.9" y="597" width="0.6" height="15.0" fill="rgb(227,178,54)" rx="2" ry="2" />
<text  x="1009.91" y="607.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid@plt (80,808,080 samples, 0.01%)</title><rect x="949.3" y="661" width="0.1" height="15.0" fill="rgb(226,192,49)" rx="2" ry="2" />
<text  x="952.25" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__mod&lt;unsigned long, 624ul, 1ul, 0ul&gt; (464,646,460 samples, 0.09%)</title><rect x="587.9" y="965" width="1.0" height="15.0" fill="rgb(222,195,24)" rx="2" ry="2" />
<text  x="590.91" y="975.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="832.6" y="565" width="0.3" height="15.0" fill="rgb(240,88,18)" rx="2" ry="2" />
<text  x="835.64" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (70,707,070 samples, 0.01%)</title><rect x="182.4" y="853" width="0.2" height="15.0" fill="rgb(229,89,10)" rx="2" ry="2" />
<text  x="185.41" y="863.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (181,818,180 samples, 0.03%)</title><rect x="779.4" y="517" width="0.4" height="15.0" fill="rgb(221,160,35)" rx="2" ry="2" />
<text  x="782.37" y="527.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (50,505,050 samples, 0.01%)</title><rect x="38.5" y="805" width="0.1" height="15.0" fill="rgb(228,139,21)" rx="2" ry="2" />
<text  x="41.50" y="815.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::Writer::Writer (323,232,320 samples, 0.06%)</title><rect x="542.6" y="901" width="0.7" height="15.0" fill="rgb(244,62,10)" rx="2" ry="2" />
<text  x="545.59" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_end (111,111,110 samples, 0.02%)</title><rect x="904.4" y="581" width="0.2" height="15.0" fill="rgb(232,201,39)" rx="2" ry="2" />
<text  x="907.39" y="591.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::SuperVersionContext::WriteStallNotification, 8ul&gt;::autovector (80,808,080 samples, 0.01%)</title><rect x="30.7" y="869" width="0.2" height="15.0" fill="rgb(221,142,25)" rx="2" ry="2" />
<text  x="33.75" y="879.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (151,515,150 samples, 0.03%)</title><rect x="841.1" y="517" width="0.4" height="15.0" fill="rgb(246,147,22)" rx="2" ry="2" />
<text  x="844.12" y="527.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (373,737,370 samples, 0.07%)</title><rect x="743.5" y="549" width="0.8" height="15.0" fill="rgb(249,36,34)" rx="2" ry="2" />
<text  x="746.48" y="559.5" ></text>
</g>
<g >
<title>rocksdb::VerifyBlockChecksum (252,525,250 samples, 0.05%)</title><rect x="762.3" y="405" width="0.6" height="15.0" fill="rgb(252,150,0)" rx="2" ry="2" />
<text  x="765.35" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (50,505,050 samples, 0.01%)</title><rect x="567.6" y="949" width="0.2" height="15.0" fill="rgb(206,224,19)" rx="2" ry="2" />
<text  x="570.65" y="959.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block_kData&gt; (80,808,080 samples, 0.01%)</title><rect x="766.4" y="437" width="0.2" height="15.0" fill="rgb(235,81,26)" rx="2" ry="2" />
<text  x="769.38" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::DynamicBloom*, std::default_delete&lt;rocksdb::DynamicBloom&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="166.6" y="741" width="0.1" height="15.0" fill="rgb(218,162,26)" rx="2" ry="2" />
<text  x="169.56" y="751.5" ></text>
</g>
<g >
<title>rocksdb::PlaceholderCacheInterface&lt; (343,434,340 samples, 0.06%)</title><rect x="811.5" y="501" width="0.8" height="15.0" fill="rgb(248,98,52)" rx="2" ry="2" />
<text  x="814.50" y="511.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey (1,080,808,070 samples, 0.20%)</title><rect x="152.4" y="725" width="2.4" height="15.0" fill="rgb(225,113,6)" rx="2" ry="2" />
<text  x="155.42" y="735.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt; (181,818,180 samples, 0.03%)</title><rect x="557.3" y="901" width="0.4" height="15.0" fill="rgb(232,163,21)" rx="2" ry="2" />
<text  x="560.30" y="911.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::get (454,545,450 samples, 0.08%)</title><rect x="1167.8" y="677" width="1.0" height="15.0" fill="rgb(211,222,42)" rx="2" ry="2" />
<text  x="1170.78" y="687.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::BackgroundCallCompaction (223,323,230,090 samples, 41.26%)</title><rect x="691.8" y="741" width="486.9" height="15.0" fill="rgb(211,184,51)" rx="2" ry="2" />
<text  x="694.81" y="751.5" >rocksdb::DBImpl::BackgroundCallCompaction</text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalKeyComparator, std::default_delete&lt;rocksdb::InternalKeyComparator&gt; &gt;::operator= (90,909,090 samples, 0.02%)</title><rect x="761.1" y="405" width="0.2" height="15.0" fill="rgb(219,123,48)" rx="2" ry="2" />
<text  x="764.14" y="415.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::IOStatus (50,505,050 samples, 0.01%)</title><rect x="35.7" y="869" width="0.1" height="15.0" fill="rgb(237,26,38)" rx="2" ry="2" />
<text  x="38.66" y="879.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::SetInternalKey (444,444,440 samples, 0.08%)</title><rect x="950.0" y="661" width="1.0" height="15.0" fill="rgb(206,17,12)" rx="2" ry="2" />
<text  x="953.00" y="671.5" ></text>
</g>
<g >
<title>std::__detail::__mod&lt;unsigned long, 624ul, 1ul, 0ul&gt; (7,636,363,560 samples, 1.41%)</title><rect x="620.9" y="949" width="16.7" height="15.0" fill="rgb(253,63,54)" rx="2" ry="2" />
<text  x="623.92" y="959.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::CompactionOutputs::Output const*, std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt; &gt;::base (70,707,070 samples, 0.01%)</title><rect x="1089.0" y="597" width="0.1" height="15.0" fill="rgb(233,159,29)" rx="2" ry="2" />
<text  x="1091.96" y="607.5" ></text>
</g>
<g >
<title>rocksdb::GetVarint32 (181,818,180 samples, 0.03%)</title><rect x="173.1" y="821" width="0.4" height="15.0" fill="rgb(222,140,7)" rx="2" ry="2" />
<text  x="176.14" y="831.5" ></text>
</g>
<g >
<title>rocksdb::RemoteFlushJob::UnPackRemote (70,707,070 samples, 0.01%)</title><rect x="690.7" y="661" width="0.1" height="15.0" fill="rgb(210,46,28)" rx="2" ry="2" />
<text  x="693.69" y="671.5" ></text>
</g>
<g >
<title>rocksdb::ExtractValueType (50,505,050 samples, 0.01%)</title><rect x="1092.5" y="645" width="0.1" height="15.0" fill="rgb(220,138,34)" rx="2" ry="2" />
<text  x="1095.53" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IndexBuilder, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt;::operator (191,919,190 samples, 0.04%)</title><rect x="1151.3" y="645" width="0.4" height="15.0" fill="rgb(213,195,18)" rx="2" ry="2" />
<text  x="1154.26" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Slice::compare (181,818,180 samples, 0.03%)</title><rect x="1030.1" y="581" width="0.4" height="15.0" fill="rgb(237,191,19)" rx="2" ry="2" />
<text  x="1033.10" y="591.5" ></text>
</g>
<g >
<title>XXH3_hashLong_64b_internal (202,020,200 samples, 0.04%)</title><rect x="762.4" y="325" width="0.4" height="15.0" fill="rgb(248,219,23)" rx="2" ry="2" />
<text  x="765.37" y="335.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::IntTblPropCollector*, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="1040.3" y="565" width="0.1" height="15.0" fill="rgb(235,142,30)" rx="2" ry="2" />
<text  x="1043.31" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (151,515,150 samples, 0.03%)</title><rect x="850.6" y="469" width="0.3" height="15.0" fill="rgb(212,73,28)" rx="2" ry="2" />
<text  x="853.57" y="479.5" ></text>
</g>
<g >
<title>std::this_thread::yield (7,060,605,990 samples, 1.30%)</title><rect x="201.1" y="869" width="15.4" height="15.0" fill="rgb(230,205,11)" rx="2" ry="2" />
<text  x="204.11" y="879.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::JoinBatchGroup (145,303,028,850 samples, 26.85%)</title><rect x="223.3" y="901" width="316.8" height="15.0" fill="rgb(220,28,1)" rx="2" ry="2" />
<text  x="226.29" y="911.5" >rocksdb::WriteThread::JoinBatchGroup</text>
</g>
<g >
<title>rocksdb::Status::Status (70,707,070 samples, 0.01%)</title><rect x="174.6" y="821" width="0.1" height="15.0" fill="rgb(215,119,49)" rx="2" ry="2" />
<text  x="177.55" y="831.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (1,626,262,610 samples, 0.30%)</title><rect x="797.3" y="533" width="3.6" height="15.0" fill="rgb(208,76,52)" rx="2" ry="2" />
<text  x="800.34" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (272,727,270 samples, 0.05%)</title><rect x="169.5" y="789" width="0.6" height="15.0" fill="rgb(215,39,22)" rx="2" ry="2" />
<text  x="172.53" y="799.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*&gt;::store (60,606,060 samples, 0.01%)</title><rect x="88.6" y="741" width="0.1" height="15.0" fill="rgb(241,128,37)" rx="2" ry="2" />
<text  x="91.58" y="751.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (161,616,160 samples, 0.03%)</title><rect x="786.5" y="453" width="0.4" height="15.0" fill="rgb(227,219,48)" rx="2" ry="2" />
<text  x="789.53" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (949,494,940 samples, 0.18%)</title><rect x="568.9" y="981" width="2.1" height="15.0" fill="rgb(243,58,33)" rx="2" ry="2" />
<text  x="571.93" y="991.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (444,444,440 samples, 0.08%)</title><rect x="1109.0" y="549" width="1.0" height="15.0" fill="rgb(243,144,5)" rx="2" ry="2" />
<text  x="1112.02" y="559.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (131,313,130 samples, 0.02%)</title><rect x="959.2" y="661" width="0.3" height="15.0" fill="rgb(218,117,54)" rx="2" ry="2" />
<text  x="962.18" y="671.5" ></text>
</g>
<g >
<title>rocksdb::ImmutableDBOptions::PackLocal (101,010,100 samples, 0.02%)</title><rect x="661.5" y="613" width="0.3" height="15.0" fill="rgb(214,101,53)" rx="2" ry="2" />
<text  x="664.53" y="623.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (313,131,310 samples, 0.06%)</title><rect x="1062.8" y="629" width="0.7" height="15.0" fill="rgb(208,140,19)" rx="2" ry="2" />
<text  x="1065.80" y="639.5" ></text>
</g>
<g >
<title>TLS init function for rocksdb::perf_context (191,919,190 samples, 0.04%)</title><rect x="122.3" y="645" width="0.4" height="15.0" fill="rgb(208,70,7)" rx="2" ry="2" />
<text  x="125.29" y="655.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="839.6" y="517" width="0.2" height="15.0" fill="rgb(207,96,43)" rx="2" ry="2" />
<text  x="842.60" y="527.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (171,717,170 samples, 0.03%)</title><rect x="892.1" y="629" width="0.4" height="15.0" fill="rgb(216,217,0)" rx="2" ry="2" />
<text  x="895.08" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (525,252,520 samples, 0.10%)</title><rect x="1094.7" y="613" width="1.1" height="15.0" fill="rgb(218,164,45)" rx="2" ry="2" />
<text  x="1097.67" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (60,606,060 samples, 0.01%)</title><rect x="857.4" y="469" width="0.2" height="15.0" fill="rgb(223,36,11)" rx="2" ry="2" />
<text  x="860.42" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::FilterBlockBuilder*, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt; (363,636,360 samples, 0.07%)</title><rect x="1049.6" y="565" width="0.8" height="15.0" fill="rgb(240,173,26)" rx="2" ry="2" />
<text  x="1052.61" y="575.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;::reverse_iterator (202,020,200 samples, 0.04%)</title><rect x="955.9" y="645" width="0.4" height="15.0" fill="rgb(247,188,0)" rx="2" ry="2" />
<text  x="958.90" y="655.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatch::Clear (111,111,110 samples, 0.02%)</title><rect x="51.8" y="885" width="0.2" height="15.0" fill="rgb(240,228,16)" rx="2" ry="2" />
<text  x="54.78" y="895.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::KeyIsAfterNode (17,090,908,920 samples, 3.16%)</title><rect x="99.8" y="725" width="37.2" height="15.0" fill="rgb(244,173,1)" rx="2" ry="2" />
<text  x="102.76" y="735.5" >roc..</text>
</g>
<g >
<title>rocksdb::DBImpl::WriteImpl (238,484,846,100 samples, 44.06%)</title><rect x="25.9" y="917" width="519.9" height="15.0" fill="rgb(213,68,18)" rx="2" ry="2" />
<text  x="28.90" y="927.5" >rocksdb::DBImpl::WriteImpl</text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::get (515,151,510 samples, 0.10%)</title><rect x="790.3" y="533" width="1.1" height="15.0" fill="rgb(252,69,10)" rx="2" ry="2" />
<text  x="793.29" y="543.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (70,707,070 samples, 0.01%)</title><rect x="896.5" y="629" width="0.1" height="15.0" fill="rgb(234,63,17)" rx="2" ry="2" />
<text  x="899.49" y="639.5" ></text>
</g>
<g >
<title>schedule (41,080,807,670 samples, 7.59%)</title><rect x="410.1" y="773" width="89.6" height="15.0" fill="rgb(226,126,5)" rx="2" ry="2" />
<text  x="413.10" y="783.5" >schedule</text>
</g>
<g >
<title>rocksdb::InternalKeyComparator::Compare (2,707,070,680 samples, 0.50%)</title><rect x="1101.3" y="629" width="5.9" height="15.0" fill="rgb(230,69,30)" rx="2" ry="2" />
<text  x="1104.27" y="639.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::HeapItem::key (141,414,140 samples, 0.03%)</title><rect x="724.9" y="581" width="0.3" height="15.0" fill="rgb(230,178,34)" rx="2" ry="2" />
<text  x="727.93" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::BlobGarbageMeter*, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt; (161,616,160 samples, 0.03%)</title><rect x="1150.4" y="613" width="0.4" height="15.0" fill="rgb(252,192,15)" rx="2" ry="2" />
<text  x="1153.43" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Configurable::ConfigureFromMap (50,505,050 samples, 0.01%)</title><rect x="661.6" y="469" width="0.1" height="15.0" fill="rgb(252,38,40)" rx="2" ry="2" />
<text  x="664.57" y="479.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::operator[] (121,212,120 samples, 0.02%)</title><rect x="737.5" y="597" width="0.3" height="15.0" fill="rgb(230,29,52)" rx="2" ry="2" />
<text  x="740.53" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::CompactionOutputs::Output const*, std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt; &gt;::__normal_iterator (171,717,170 samples, 0.03%)</title><rect x="1090.2" y="597" width="0.4" height="15.0" fill="rgb(217,4,38)" rx="2" ry="2" />
<text  x="1093.24" y="607.5" ></text>
</g>
<g >
<title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (141,414,140 samples, 0.03%)</title><rect x="156.9" y="709" width="0.3" height="15.0" fill="rgb(230,27,34)" rx="2" ry="2" />
<text  x="159.87" y="719.5" ></text>
</g>
<g >
<title>rocksdb::BlockContents::~BlockContents (70,707,070 samples, 0.01%)</title><rect x="813.0" y="421" width="0.2" height="15.0" fill="rgb(249,20,19)" rx="2" ry="2" />
<text  x="816.04" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::CompactionIterator*, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="1169.9" y="597" width="0.1" height="15.0" fill="rgb(238,90,44)" rx="2" ry="2" />
<text  x="1172.87" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (171,717,170 samples, 0.03%)</title><rect x="794.0" y="501" width="0.3" height="15.0" fill="rgb(231,166,12)" rx="2" ry="2" />
<text  x="796.95" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (50,505,050 samples, 0.01%)</title><rect x="172.3" y="773" width="0.1" height="15.0" fill="rgb(224,89,7)" rx="2" ry="2" />
<text  x="175.28" y="783.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::VersionSet*, std::default_delete&lt;rocksdb::VersionSet&gt; &gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="545.5" y="837" width="0.1" height="15.0" fill="rgb(217,43,12)" rx="2" ry="2" />
<text  x="548.54" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (181,818,180 samples, 0.03%)</title><rect x="995.3" y="549" width="0.4" height="15.0" fill="rgb(247,183,27)" rx="2" ry="2" />
<text  x="998.34" y="559.5" ></text>
</g>
<g >
<title>rocksdb::SubcompactionState::AddToOutput (282,828,280 samples, 0.05%)</title><rect x="1175.6" y="693" width="0.7" height="15.0" fill="rgb(227,122,12)" rx="2" ry="2" />
<text  x="1178.64" y="703.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (101,010,100 samples, 0.02%)</title><rect x="659.1" y="1013" width="0.2" height="15.0" fill="rgb(240,35,37)" rx="2" ry="2" />
<text  x="662.09" y="1023.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (111,111,110 samples, 0.02%)</title><rect x="41.6" y="565" width="0.3" height="15.0" fill="rgb(222,81,8)" rx="2" ry="2" />
<text  x="44.62" y="575.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (171,717,170 samples, 0.03%)</title><rect x="542.7" y="885" width="0.4" height="15.0" fill="rgb(216,13,47)" rx="2" ry="2" />
<text  x="545.68" y="895.5" ></text>
</g>
<g >
<title>std::forward&lt;bool*&gt; (101,010,100 samples, 0.02%)</title><rect x="1078.0" y="613" width="0.2" height="15.0" fill="rgb(229,194,34)" rx="2" ry="2" />
<text  x="1080.99" y="623.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (1,060,606,050 samples, 0.20%)</title><rect x="294.2" y="837" width="2.4" height="15.0" fill="rgb(247,162,36)" rx="2" ry="2" />
<text  x="297.24" y="847.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (70,707,070 samples, 0.01%)</title><rect x="50.1" y="469" width="0.1" height="15.0" fill="rgb(221,194,27)" rx="2" ry="2" />
<text  x="53.08" y="479.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (50,505,050 samples, 0.01%)</title><rect x="55.4" y="805" width="0.1" height="15.0" fill="rgb(243,7,7)" rx="2" ry="2" />
<text  x="58.37" y="815.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;char const []&gt;, true&gt;::_M_head (181,818,180 samples, 0.03%)</title><rect x="1127.2" y="517" width="0.4" height="15.0" fill="rgb(220,152,19)" rx="2" ry="2" />
<text  x="1130.24" y="527.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::ShouldNotifyListeners (80,808,080 samples, 0.01%)</title><rect x="43.4" y="821" width="0.1" height="15.0" fill="rgb(222,81,15)" rx="2" ry="2" />
<text  x="46.36" y="831.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::FilterBlockBuilder*, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt; (181,818,180 samples, 0.03%)</title><rect x="1048.9" y="565" width="0.4" height="15.0" fill="rgb(243,210,31)" rx="2" ry="2" />
<text  x="1051.88" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (292,929,290 samples, 0.05%)</title><rect x="973.8" y="581" width="0.7" height="15.0" fill="rgb(212,163,46)" rx="2" ry="2" />
<text  x="976.83" y="591.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid@plt (232,323,230 samples, 0.04%)</title><rect x="885.6" y="645" width="0.5" height="15.0" fill="rgb(223,219,49)" rx="2" ry="2" />
<text  x="888.61" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (101,010,100 samples, 0.02%)</title><rect x="1117.2" y="549" width="0.2" height="15.0" fill="rgb(209,23,19)" rx="2" ry="2" />
<text  x="1120.15" y="559.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (151,515,150 samples, 0.03%)</title><rect x="913.2" y="565" width="0.3" height="15.0" fill="rgb(222,223,53)" rx="2" ry="2" />
<text  x="916.20" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (50,505,050 samples, 0.01%)</title><rect x="828.2" y="501" width="0.1" height="15.0" fill="rgb(247,10,24)" rx="2" ry="2" />
<text  x="831.20" y="511.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="851.1" y="437" width="0.2" height="15.0" fill="rgb(226,171,35)" rx="2" ry="2" />
<text  x="854.14" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::FilterBlockBuilder*, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="1049.6" y="549" width="0.1" height="15.0" fill="rgb(239,124,20)" rx="2" ry="2" />
<text  x="1052.61" y="559.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::NextImpl (181,818,180 samples, 0.03%)</title><rect x="775.6" y="533" width="0.4" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="778.61" y="543.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="783.5" y="485" width="0.3" height="15.0" fill="rgb(222,50,8)" rx="2" ry="2" />
<text  x="786.51" y="495.5" ></text>
</g>
<g >
<title>rocksdb::PackSequenceAndType (101,010,100 samples, 0.02%)</title><rect x="164.3" y="805" width="0.2" height="15.0" fill="rgb(239,36,18)" rx="2" ry="2" />
<text  x="167.29" y="815.5" ></text>
</g>
<g >
<title>filemap_read (161,616,160 samples, 0.03%)</title><rect x="763.9" y="277" width="0.3" height="15.0" fill="rgb(213,127,54)" rx="2" ry="2" />
<text  x="766.87" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_ptr (70,707,070 samples, 0.01%)</title><rect x="790.1" y="533" width="0.2" height="15.0" fill="rgb(248,34,15)" rx="2" ry="2" />
<text  x="793.14" y="543.5" ></text>
</g>
<g >
<title>std::move&lt;bool&amp;&gt; (141,414,140 samples, 0.03%)</title><rect x="1141.9" y="645" width="0.3" height="15.0" fill="rgb(231,143,41)" rx="2" ry="2" />
<text  x="1144.88" y="655.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (303,030,300 samples, 0.06%)</title><rect x="49.6" y="773" width="0.6" height="15.0" fill="rgb(251,191,17)" rx="2" ry="2" />
<text  x="52.57" y="783.5" ></text>
</g>
<g >
<title>rw_verify_area (50,505,050 samples, 0.01%)</title><rect x="808.8" y="357" width="0.1" height="15.0" fill="rgb(240,123,39)" rx="2" ry="2" />
<text  x="811.84" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt;::begin (393,939,390 samples, 0.07%)</title><rect x="1041.7" y="613" width="0.8" height="15.0" fill="rgb(229,68,10)" rx="2" ry="2" />
<text  x="1044.68" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (464,646,460 samples, 0.09%)</title><rect x="918.2" y="613" width="1.0" height="15.0" fill="rgb(224,32,47)" rx="2" ry="2" />
<text  x="921.16" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (111,111,110 samples, 0.02%)</title><rect x="1013.0" y="613" width="0.2" height="15.0" fill="rgb(224,63,41)" rx="2" ry="2" />
<text  x="1016.01" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (60,606,060 samples, 0.01%)</title><rect x="832.9" y="565" width="0.2" height="15.0" fill="rgb(229,49,27)" rx="2" ry="2" />
<text  x="835.93" y="575.5" ></text>
</g>
<g >
<title>[libsnappy.so.1.1.8] (494,949,490 samples, 0.09%)</title><rect x="1178.7" y="997" width="1.1" height="15.0" fill="rgb(231,61,44)" rx="2" ry="2" />
<text  x="1181.70" y="1007.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (202,020,200 samples, 0.04%)</title><rect x="968.6" y="661" width="0.4" height="15.0" fill="rgb(236,26,12)" rx="2" ry="2" />
<text  x="971.57" y="671.5" ></text>
</g>
<g >
<title>rocksdb::CompactionJob::ProcessKeyValueCompaction (171,717,170 samples, 0.03%)</title><rect x="1140.3" y="581" width="0.3" height="15.0" fill="rgb(248,113,8)" rx="2" ry="2" />
<text  x="1143.25" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (181,818,180 samples, 0.03%)</title><rect x="914.7" y="597" width="0.4" height="15.0" fill="rgb(205,72,11)" rx="2" ry="2" />
<text  x="917.72" y="607.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="834.5" y="485" width="0.2" height="15.0" fill="rgb(252,136,40)" rx="2" ry="2" />
<text  x="837.49" y="495.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt;@plt (202,020,200 samples, 0.04%)</title><rect x="319.3" y="805" width="0.5" height="15.0" fill="rgb(206,166,38)" rx="2" ry="2" />
<text  x="322.35" y="815.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::FailIfCfHasTs (60,606,060 samples, 0.01%)</title><rect x="24.7" y="965" width="0.1" height="15.0" fill="rgb(214,202,3)" rx="2" ry="2" />
<text  x="27.69" y="975.5" ></text>
</g>
<g >
<title>tcp_sendmsg (454,545,450 samples, 0.08%)</title><rect x="689.6" y="421" width="1.0" height="15.0" fill="rgb(235,46,42)" rx="2" ry="2" />
<text  x="692.56" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (222,222,220 samples, 0.04%)</title><rect x="835.2" y="485" width="0.5" height="15.0" fill="rgb(210,141,41)" rx="2" ry="2" />
<text  x="838.20" y="495.5" ></text>
</g>
<g >
<title>alloc_pages_vma (50,505,050 samples, 0.01%)</title><rect x="81.1" y="629" width="0.1" height="15.0" fill="rgb(212,37,5)" rx="2" ry="2" />
<text  x="84.07" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (272,727,270 samples, 0.05%)</title><rect x="786.9" y="469" width="0.6" height="15.0" fill="rgb(239,110,26)" rx="2" ry="2" />
<text  x="789.90" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (50,505,050 samples, 0.01%)</title><rect x="788.7" y="549" width="0.1" height="15.0" fill="rgb(209,126,46)" rx="2" ry="2" />
<text  x="791.71" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (80,808,080 samples, 0.01%)</title><rect x="1095.9" y="629" width="0.2" height="15.0" fill="rgb(232,204,43)" rx="2" ry="2" />
<text  x="1098.88" y="639.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="778.5" y="453" width="0.2" height="15.0" fill="rgb(240,118,28)" rx="2" ry="2" />
<text  x="781.51" y="463.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::IsParallelCompressionEnabled (232,323,230 samples, 0.04%)</title><rect x="997.9" y="629" width="0.5" height="15.0" fill="rgb(229,141,22)" rx="2" ry="2" />
<text  x="1000.88" y="639.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="846.1" y="517" width="0.2" height="15.0" fill="rgb(243,94,37)" rx="2" ry="2" />
<text  x="849.14" y="527.5" ></text>
</g>
<g >
<title>new_sync_read (161,616,160 samples, 0.03%)</title><rect x="763.9" y="325" width="0.3" height="15.0" fill="rgb(228,158,45)" rx="2" ry="2" />
<text  x="766.87" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (50,505,050 samples, 0.01%)</title><rect x="995.1" y="549" width="0.2" height="15.0" fill="rgb(221,83,38)" rx="2" ry="2" />
<text  x="998.15" y="559.5" ></text>
</g>
<g >
<title>rocksdb::Status::MustCheck (262,626,260 samples, 0.05%)</title><rect x="1115.1" y="645" width="0.5" height="15.0" fill="rgb(245,77,14)" rx="2" ry="2" />
<text  x="1118.06" y="655.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (151,515,150 samples, 0.03%)</title><rect x="862.4" y="501" width="0.3" height="15.0" fill="rgb(235,96,24)" rx="2" ry="2" />
<text  x="865.35" y="511.5" ></text>
</g>
<g >
<title>rocksdb::port::AsmVolatilePause (676,767,670 samples, 0.13%)</title><rect x="192.7" y="869" width="1.5" height="15.0" fill="rgb(245,190,9)" rx="2" ry="2" />
<text  x="195.74" y="879.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (1,060,606,050 samples, 0.20%)</title><rect x="859.2" y="549" width="2.3" height="15.0" fill="rgb(244,216,25)" rx="2" ry="2" />
<text  x="862.18" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (70,707,070 samples, 0.01%)</title><rect x="10.4" y="981" width="0.2" height="15.0" fill="rgb(243,134,7)" rx="2" ry="2" />
<text  x="13.44" y="991.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (111,111,110 samples, 0.02%)</title><rect x="782.8" y="453" width="0.2" height="15.0" fill="rgb(248,8,31)" rx="2" ry="2" />
<text  x="785.81" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (60,606,060 samples, 0.01%)</title><rect x="176.7" y="789" width="0.1" height="15.0" fill="rgb(232,83,42)" rx="2" ry="2" />
<text  x="179.66" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt; (282,828,280 samples, 0.05%)</title><rect x="1033.1" y="613" width="0.7" height="15.0" fill="rgb(243,183,8)" rx="2" ry="2" />
<text  x="1036.14" y="623.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count@plt (212,121,210 samples, 0.04%)</title><rect x="330.6" y="853" width="0.5" height="15.0" fill="rgb(210,217,10)" rx="2" ry="2" />
<text  x="333.62" y="863.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::operator (232,323,230 samples, 0.04%)</title><rect x="1057.1" y="629" width="0.5" height="15.0" fill="rgb(244,101,3)" rx="2" ry="2" />
<text  x="1060.12" y="639.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (555,555,550 samples, 0.10%)</title><rect x="157.3" y="693" width="1.2" height="15.0" fill="rgb(240,219,23)" rx="2" ry="2" />
<text  x="160.29" y="703.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::SetState (50,505,050 samples, 0.01%)</title><rect x="540.1" y="885" width="0.1" height="15.0" fill="rgb(229,154,32)" rx="2" ry="2" />
<text  x="543.10" y="895.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (121,212,120 samples, 0.02%)</title><rect x="994.0" y="325" width="0.3" height="15.0" fill="rgb(209,126,19)" rx="2" ry="2" />
<text  x="997.02" y="335.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (656,565,650 samples, 0.12%)</title><rect x="327.3" y="853" width="1.4" height="15.0" fill="rgb(224,21,7)" rx="2" ry="2" />
<text  x="330.30" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::lower_bound (1,414,141,400 samples, 0.26%)</title><rect x="903.4" y="597" width="3.1" height="15.0" fill="rgb(240,7,21)" rx="2" ry="2" />
<text  x="906.40" y="607.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::NextAndGetResult (9,919,191,820 samples, 1.83%)</title><rect x="802.2" y="597" width="21.6" height="15.0" fill="rgb(248,22,28)" rx="2" ry="2" />
<text  x="805.16" y="607.5" >r..</text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (333,333,330 samples, 0.06%)</title><rect x="1111.4" y="613" width="0.8" height="15.0" fill="rgb(224,3,19)" rx="2" ry="2" />
<text  x="1114.42" y="623.5" ></text>
</g>
<g >
<title>rocksdb::GetVarint32Ptr@plt (101,010,100 samples, 0.02%)</title><rect x="107.5" y="693" width="0.2" height="15.0" fill="rgb(242,89,34)" rx="2" ry="2" />
<text  x="110.51" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalKeyComparator, std::default_delete&lt;rocksdb::InternalKeyComparator&gt; &gt;::unique_ptr&lt;std::default_delete&lt;rocksdb::InternalKeyComparator&gt;, void&gt; (80,808,080 samples, 0.01%)</title><rect x="761.0" y="389" width="0.1" height="15.0" fill="rgb(227,30,42)" rx="2" ry="2" />
<text  x="763.96" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (353,535,350 samples, 0.07%)</title><rect x="847.9" y="517" width="0.8" height="15.0" fill="rgb(227,142,29)" rx="2" ry="2" />
<text  x="850.95" y="527.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::Initialize (242,424,240 samples, 0.04%)</title><rect x="803.7" y="469" width="0.5" height="15.0" fill="rgb(213,222,48)" rx="2" ry="2" />
<text  x="806.68" y="479.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (131,313,130 samples, 0.02%)</title><rect x="10.0" y="1013" width="0.3" height="15.0" fill="rgb(239,12,18)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (151,515,150 samples, 0.03%)</title><rect x="780.8" y="453" width="0.3" height="15.0" fill="rgb(213,115,9)" rx="2" ry="2" />
<text  x="783.76" y="463.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;long&gt;::param_type::b (50,505,050 samples, 0.01%)</title><rect x="649.4" y="949" width="0.1" height="15.0" fill="rgb(232,17,31)" rx="2" ry="2" />
<text  x="652.37" y="959.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (262,626,260 samples, 0.05%)</title><rect x="690.8" y="517" width="0.6" height="15.0" fill="rgb(208,146,40)" rx="2" ry="2" />
<text  x="693.84" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (50,505,050 samples, 0.01%)</title><rect x="550.8" y="885" width="0.1" height="15.0" fill="rgb(248,37,0)" rx="2" ry="2" />
<text  x="553.82" y="895.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (70,707,070 samples, 0.01%)</title><rect x="832.5" y="533" width="0.1" height="15.0" fill="rgb(238,110,52)" rx="2" ry="2" />
<text  x="835.49" y="543.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Valid (131,313,130 samples, 0.02%)</title><rect x="925.3" y="597" width="0.3" height="15.0" fill="rgb(239,103,29)" rx="2" ry="2" />
<text  x="928.31" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (1,020,202,010 samples, 0.19%)</title><rect x="834.7" y="549" width="2.2" height="15.0" fill="rgb(207,10,34)" rx="2" ry="2" />
<text  x="837.71" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (50,505,050 samples, 0.01%)</title><rect x="584.0" y="901" width="0.1" height="15.0" fill="rgb(243,50,12)" rx="2" ry="2" />
<text  x="587.03" y="911.5" ></text>
</g>
<g >
<title>rocksdb::FilePrefetchBuffer::TryReadFromCache (70,707,070 samples, 0.01%)</title><rect x="762.9" y="405" width="0.2" height="15.0" fill="rgb(212,17,2)" rx="2" ry="2" />
<text  x="765.92" y="415.5" ></text>
</g>
<g >
<title>rocksdb::lru_cache::LRUHandleTable::FindPointer (50,505,050 samples, 0.01%)</title><rect x="813.4" y="373" width="0.1" height="15.0" fill="rgb(254,202,39)" rx="2" ry="2" />
<text  x="816.40" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (70,707,070 samples, 0.01%)</title><rect x="794.6" y="469" width="0.1" height="15.0" fill="rgb(249,37,28)" rx="2" ry="2" />
<text  x="797.57" y="479.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator (50,505,050 samples, 0.01%)</title><rect x="573.6" y="917" width="0.1" height="15.0" fill="rgb(212,185,23)" rx="2" ry="2" />
<text  x="576.60" y="927.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::SavePoints, std::default_delete&lt;rocksdb::SavePoints&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="51.8" y="869" width="0.1" height="15.0" fill="rgb(246,6,15)" rx="2" ry="2" />
<text  x="54.78" y="879.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (202,020,200 samples, 0.04%)</title><rect x="1046.9" y="629" width="0.4" height="15.0" fill="rgb(210,172,5)" rx="2" ry="2" />
<text  x="1049.85" y="639.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="789.3" y="469" width="0.2" height="15.0" fill="rgb(251,135,24)" rx="2" ry="2" />
<text  x="792.33" y="479.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::IOOptions (121,212,120 samples, 0.02%)</title><rect x="992.6" y="533" width="0.3" height="15.0" fill="rgb(253,71,46)" rx="2" ry="2" />
<text  x="995.61" y="543.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::AwaitState (130,161,614,860 samples, 24.05%)</title><rect x="243.5" y="885" width="283.7" height="15.0" fill="rgb(214,22,1)" rx="2" ry="2" />
<text  x="246.46" y="895.5" >rocksdb::WriteThread::AwaitState</text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::MemTable* const&amp;&gt; (50,505,050 samples, 0.01%)</title><rect x="71.4" y="661" width="0.1" height="15.0" fill="rgb(206,143,2)" rx="2" ry="2" />
<text  x="74.35" y="671.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::SkipListRep::Allocate (1,757,575,740 samples, 0.32%)</title><rect x="78.2" y="805" width="3.8" height="15.0" fill="rgb(236,17,39)" rx="2" ry="2" />
<text  x="81.18" y="815.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound (1,404,040,390 samples, 0.26%)</title><rect x="584.3" y="965" width="3.1" height="15.0" fill="rgb(221,122,34)" rx="2" ry="2" />
<text  x="587.34" y="975.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (191,919,190 samples, 0.04%)</title><rect x="933.5" y="565" width="0.4" height="15.0" fill="rgb(225,107,42)" rx="2" ry="2" />
<text  x="936.53" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::IndexBuilder*, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt; (262,626,260 samples, 0.05%)</title><rect x="1056.5" y="597" width="0.6" height="15.0" fill="rgb(235,125,20)" rx="2" ry="2" />
<text  x="1059.52" y="607.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Valid (202,020,200 samples, 0.04%)</title><rect x="866.6" y="629" width="0.5" height="15.0" fill="rgb(215,116,44)" rx="2" ry="2" />
<text  x="869.65" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (70,707,070 samples, 0.01%)</title><rect x="857.3" y="469" width="0.1" height="15.0" fill="rgb(237,15,39)" rx="2" ry="2" />
<text  x="860.26" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (101,010,100 samples, 0.02%)</title><rect x="555.8" y="869" width="0.2" height="15.0" fill="rgb(220,136,51)" rx="2" ry="2" />
<text  x="558.80" y="879.5" ></text>
</g>
<g >
<title>rocksdb::GetLengthPrefixedSlice (151,515,150 samples, 0.03%)</title><rect x="101.4" y="709" width="0.3" height="15.0" fill="rgb(239,179,33)" rx="2" ry="2" />
<text  x="104.41" y="719.5" ></text>
</g>
<g >
<title>rocksdb::ShortenedIndexBuilder::OnKeyAdded (50,505,050 samples, 0.01%)</title><rect x="1044.3" y="629" width="0.2" height="15.0" fill="rgb(230,171,8)" rx="2" ry="2" />
<text  x="1047.34" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::operator bool (161,616,160 samples, 0.03%)</title><rect x="557.3" y="885" width="0.4" height="15.0" fill="rgb(242,226,16)" rx="2" ry="2" />
<text  x="560.34" y="895.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (111,111,110 samples, 0.02%)</title><rect x="1036.4" y="613" width="0.2" height="15.0" fill="rgb(225,124,12)" rx="2" ry="2" />
<text  x="1039.39" y="623.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (181,818,180 samples, 0.03%)</title><rect x="785.9" y="453" width="0.4" height="15.0" fill="rgb(226,144,46)" rx="2" ry="2" />
<text  x="788.87" y="463.5" ></text>
</g>
<g >
<title>rocksdb::RandomAccessFileReader::PrepareIOOptions (50,505,050 samples, 0.01%)</title><rect x="807.3" y="437" width="0.1" height="15.0" fill="rgb(242,197,27)" rx="2" ry="2" />
<text  x="810.30" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (353,535,350 samples, 0.07%)</title><rect x="119.2" y="677" width="0.8" height="15.0" fill="rgb(210,130,50)" rx="2" ry="2" />
<text  x="122.21" y="687.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::InitializeBase (212,121,210 samples, 0.04%)</title><rect x="803.7" y="453" width="0.5" height="15.0" fill="rgb(222,33,26)" rx="2" ry="2" />
<text  x="806.71" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (454,545,450 samples, 0.08%)</title><rect x="1003.8" y="613" width="1.0" height="15.0" fill="rgb(227,207,45)" rx="2" ry="2" />
<text  x="1006.82" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (333,333,330 samples, 0.06%)</title><rect x="638.3" y="965" width="0.7" height="15.0" fill="rgb(246,134,33)" rx="2" ry="2" />
<text  x="641.30" y="975.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::key (434,343,430 samples, 0.08%)</title><rect x="919.5" y="629" width="1.0" height="15.0" fill="rgb(228,84,19)" rx="2" ry="2" />
<text  x="922.54" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt;::begin (50,505,050 samples, 0.01%)</title><rect x="1072.1" y="613" width="0.1" height="15.0" fill="rgb(252,77,28)" rx="2" ry="2" />
<text  x="1075.09" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, unsigned int&amp;, unsigned long&amp;&gt;::_M_assign&lt;unsigned int, unsigned long&gt; (363,636,360 samples, 0.07%)</title><rect x="560.1" y="885" width="0.8" height="15.0" fill="rgb(244,14,14)" rx="2" ry="2" />
<text  x="563.10" y="895.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count@plt (90,909,090 samples, 0.02%)</title><rect x="345.2" y="805" width="0.2" height="15.0" fill="rgb(224,120,44)" rx="2" ry="2" />
<text  x="348.25" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_node (161,616,160 samples, 0.03%)</title><rect x="71.8" y="741" width="0.3" height="15.0" fill="rgb(230,43,9)" rx="2" ry="2" />
<text  x="74.79" y="751.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::FilePrefetchBuffer, std::default_delete&lt;rocksdb::FilePrefetchBuffer&gt; &gt;::_M_ptr (50,505,050 samples, 0.01%)</title><rect x="812.7" y="453" width="0.1" height="15.0" fill="rgb(241,47,35)" rx="2" ry="2" />
<text  x="815.69" y="463.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyData::PackLocal (151,515,150 samples, 0.03%)</title><rect x="661.4" y="645" width="0.4" height="15.0" fill="rgb(245,54,34)" rx="2" ry="2" />
<text  x="664.42" y="655.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::PurgeObsoleteFiles (70,707,070 samples, 0.01%)</title><rect x="1178.5" y="725" width="0.2" height="15.0" fill="rgb(229,142,9)" rx="2" ry="2" />
<text  x="1181.55" y="735.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::FileMetaData* const*, std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt; &gt;::base (50,505,050 samples, 0.01%)</title><rect x="1074.1" y="581" width="0.1" height="15.0" fill="rgb(226,147,9)" rx="2" ry="2" />
<text  x="1077.07" y="591.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_context (595,959,590 samples, 0.11%)</title><rect x="122.0" y="661" width="1.3" height="15.0" fill="rgb(210,172,7)" rx="2" ry="2" />
<text  x="125.01" y="671.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::Add (151,515,150 samples, 0.03%)</title><rect x="1042.9" y="613" width="0.3" height="15.0" fill="rgb(242,103,16)" rx="2" ry="2" />
<text  x="1045.91" y="623.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (222,222,220 samples, 0.04%)</title><rect x="943.5" y="613" width="0.5" height="15.0" fill="rgb(250,160,14)" rx="2" ry="2" />
<text  x="946.53" y="623.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (818,181,810 samples, 0.15%)</title><rect x="944.0" y="645" width="1.8" height="15.0" fill="rgb(245,221,54)" rx="2" ry="2" />
<text  x="947.01" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_S_key (111,111,110 samples, 0.02%)</title><rect x="72.9" y="757" width="0.2" height="15.0" fill="rgb(247,48,34)" rx="2" ry="2" />
<text  x="75.90" y="767.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (606,060,600 samples, 0.11%)</title><rect x="740.9" y="581" width="1.3" height="15.0" fill="rgb(238,84,14)" rx="2" ry="2" />
<text  x="743.88" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (90,909,090 samples, 0.02%)</title><rect x="48.9" y="805" width="0.2" height="15.0" fill="rgb(235,31,27)" rx="2" ry="2" />
<text  x="51.91" y="815.5" ></text>
</g>
<g >
<title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Release (303,030,300 samples, 0.06%)</title><rect x="813.3" y="437" width="0.6" height="15.0" fill="rgb(231,26,31)" rx="2" ry="2" />
<text  x="816.29" y="447.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (636,363,630 samples, 0.12%)</title><rect x="334.0" y="837" width="1.4" height="15.0" fill="rgb(231,160,15)" rx="2" ry="2" />
<text  x="337.04" y="847.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (141,414,140 samples, 0.03%)</title><rect x="757.0" y="597" width="0.3" height="15.0" fill="rgb(217,199,3)" rx="2" ry="2" />
<text  x="759.98" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (70,707,070 samples, 0.01%)</title><rect x="854.2" y="501" width="0.2" height="15.0" fill="rgb(253,215,41)" rx="2" ry="2" />
<text  x="857.23" y="511.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (13,898,989,760 samples, 2.57%)</title><rect x="661.1" y="981" width="30.3" height="15.0" fill="rgb(210,44,0)" rx="2" ry="2" />
<text  x="664.13" y="991.5" >st..</text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="788.3" y="485" width="0.2" height="15.0" fill="rgb(244,169,22)" rx="2" ry="2" />
<text  x="791.33" y="495.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (252,525,250 samples, 0.05%)</title><rect x="197.9" y="869" width="0.5" height="15.0" fill="rgb(237,95,3)" rx="2" ry="2" />
<text  x="200.85" y="879.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::Valid (1,292,929,280 samples, 0.24%)</title><rect x="916.4" y="645" width="2.8" height="15.0" fill="rgb(251,206,18)" rx="2" ry="2" />
<text  x="919.39" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::operator (141,414,140 samples, 0.03%)</title><rect x="852.7" y="549" width="0.3" height="15.0" fill="rgb(232,84,25)" rx="2" ry="2" />
<text  x="855.66" y="559.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::SkipListRep::InsertKeyConcurrently (36,959,595,590 samples, 6.83%)</title><rect x="82.0" y="805" width="80.6" height="15.0" fill="rgb(219,84,1)" rx="2" ry="2" />
<text  x="85.01" y="815.5" >rocksdb::..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (212,121,210 samples, 0.04%)</title><rect x="1116.9" y="565" width="0.5" height="15.0" fill="rgb(237,39,15)" rx="2" ry="2" />
<text  x="1119.91" y="575.5" ></text>
</g>
<g >
<title>ksys_write (555,555,550 samples, 0.10%)</title><rect x="993.6" y="437" width="1.2" height="15.0" fill="rgb(216,158,26)" rx="2" ry="2" />
<text  x="996.60" y="447.5" ></text>
</g>
<g >
<title>__gthread_yield (313,131,310 samples, 0.06%)</title><rect x="351.9" y="853" width="0.7" height="15.0" fill="rgb(252,21,50)" rx="2" ry="2" />
<text  x="354.92" y="863.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FlushBlockPolicy, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt;::operator (1,313,131,300 samples, 0.24%)</title><rect x="1051.5" y="629" width="2.8" height="15.0" fill="rgb(240,124,48)" rx="2" ry="2" />
<text  x="1054.46" y="639.5" ></text>
</g>
<g >
<title>__napi_poll (80,808,080 samples, 0.01%)</title><rect x="690.3" y="165" width="0.2" height="15.0" fill="rgb(251,122,53)" rx="2" ry="2" />
<text  x="693.34" y="175.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::MemTableInserter::CheckMemtableFull (212,121,210 samples, 0.04%)</title><rect x="67.5" y="821" width="0.5" height="15.0" fill="rgb(247,46,22)" rx="2" ry="2" />
<text  x="70.52" y="831.5" ></text>
</g>
<g >
<title>__memset_evex_unaligned_erms (131,313,130 samples, 0.02%)</title><rect x="1034.4" y="565" width="0.3" height="15.0" fill="rgb(246,112,1)" rx="2" ry="2" />
<text  x="1037.37" y="575.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;, rocksdb::CompactionMergingIterator::HeapItem*&gt;::operator* (424,242,420 samples, 0.08%)</title><rect x="736.0" y="581" width="0.9" height="15.0" fill="rgb(210,200,23)" rx="2" ry="2" />
<text  x="739.01" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt;@plt (50,505,050 samples, 0.01%)</title><rect x="784.5" y="533" width="0.2" height="15.0" fill="rgb(218,216,33)" rx="2" ry="2" />
<text  x="787.55" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::operator (70,707,070 samples, 0.01%)</title><rect x="1178.4" y="693" width="0.1" height="15.0" fill="rgb(234,6,0)" rx="2" ry="2" />
<text  x="1181.39" y="703.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (50,505,050 samples, 0.01%)</title><rect x="894.9" y="629" width="0.1" height="15.0" fill="rgb(224,36,30)" rx="2" ry="2" />
<text  x="897.86" y="639.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::SwapAndReset (50,505,050 samples, 0.01%)</title><rect x="997.4" y="597" width="0.1" height="15.0" fill="rgb(252,35,6)" rx="2" ry="2" />
<text  x="1000.41" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (555,555,550 samples, 0.10%)</title><rect x="993.6" y="469" width="1.2" height="15.0" fill="rgb(250,20,52)" rx="2" ry="2" />
<text  x="996.60" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::operator (2,414,141,390 samples, 0.45%)</title><rect x="1170.0" y="677" width="5.3" height="15.0" fill="rgb(243,8,8)" rx="2" ry="2" />
<text  x="1173.00" y="687.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="861.0" y="453" width="0.3" height="15.0" fill="rgb(221,27,2)" rx="2" ry="2" />
<text  x="864.01" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (373,737,370 samples, 0.07%)</title><rect x="728.6" y="549" width="0.8" height="15.0" fill="rgb(222,208,34)" rx="2" ry="2" />
<text  x="731.61" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (90,909,090 samples, 0.02%)</title><rect x="55.3" y="837" width="0.2" height="15.0" fill="rgb(221,136,36)" rx="2" ry="2" />
<text  x="58.28" y="847.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (181,818,180 samples, 0.03%)</title><rect x="847.5" y="453" width="0.4" height="15.0" fill="rgb(253,141,9)" rx="2" ry="2" />
<text  x="850.46" y="463.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::crc32c_3way (80,808,080 samples, 0.01%)</title><rect x="50.5" y="805" width="0.1" height="15.0" fill="rgb(218,185,9)" rx="2" ry="2" />
<text  x="53.46" y="815.5" ></text>
</g>
<g >
<title>__fget_light (60,606,060 samples, 0.01%)</title><rect x="39.3" y="709" width="0.1" height="15.0" fill="rgb(220,198,4)" rx="2" ry="2" />
<text  x="42.29" y="719.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="1038.6" y="517" width="0.1" height="15.0" fill="rgb(241,136,39)" rx="2" ry="2" />
<text  x="1041.55" y="527.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (181,818,180 samples, 0.03%)</title><rect x="42.0" y="549" width="0.4" height="15.0" fill="rgb(228,144,6)" rx="2" ry="2" />
<text  x="45.04" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (191,919,190 samples, 0.04%)</title><rect x="859.6" y="501" width="0.4" height="15.0" fill="rgb(224,202,45)" rx="2" ry="2" />
<text  x="862.58" y="511.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (171,717,170 samples, 0.03%)</title><rect x="818.3" y="501" width="0.4" height="15.0" fill="rgb(254,213,9)" rx="2" ry="2" />
<text  x="821.33" y="511.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::FileSize (272,727,270 samples, 0.05%)</title><rect x="1058.7" y="629" width="0.6" height="15.0" fill="rgb(240,97,22)" rx="2" ry="2" />
<text  x="1061.66" y="639.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (90,909,090 samples, 0.02%)</title><rect x="780.3" y="437" width="0.2" height="15.0" fill="rgb(253,224,1)" rx="2" ry="2" />
<text  x="783.32" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (191,919,190 samples, 0.04%)</title><rect x="855.3" y="485" width="0.5" height="15.0" fill="rgb(208,181,50)" rx="2" ry="2" />
<text  x="858.35" y="495.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (343,434,340 samples, 0.06%)</title><rect x="942.8" y="597" width="0.7" height="15.0" fill="rgb(206,75,18)" rx="2" ry="2" />
<text  x="945.76" y="607.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::SuperVersion*, 8ul&gt;::~autovector (121,212,120 samples, 0.02%)</title><rect x="32.1" y="869" width="0.3" height="15.0" fill="rgb(227,132,20)" rx="2" ry="2" />
<text  x="35.13" y="879.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;rocksdb::InternalKeyComparator, std::default_delete&lt;rocksdb::InternalKeyComparator&gt;, true, true&gt;::operator= (90,909,090 samples, 0.02%)</title><rect x="761.1" y="389" width="0.2" height="15.0" fill="rgb(212,183,9)" rx="2" ry="2" />
<text  x="764.14" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (222,222,220 samples, 0.04%)</title><rect x="895.8" y="533" width="0.4" height="15.0" fill="rgb(214,15,48)" rx="2" ry="2" />
<text  x="898.76" y="543.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (191,919,190 samples, 0.04%)</title><rect x="287.0" y="853" width="0.4" height="15.0" fill="rgb(211,62,7)" rx="2" ry="2" />
<text  x="289.95" y="863.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::SstPartitioner, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::_M_ptr (292,929,290 samples, 0.05%)</title><rect x="1152.4" y="613" width="0.6" height="15.0" fill="rgb(238,172,51)" rx="2" ry="2" />
<text  x="1155.36" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (121,212,120 samples, 0.02%)</title><rect x="1003.6" y="597" width="0.2" height="15.0" fill="rgb(220,151,18)" rx="2" ry="2" />
<text  x="1006.56" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (171,717,170 samples, 0.03%)</title><rect x="835.9" y="485" width="0.4" height="15.0" fill="rgb(207,124,5)" rx="2" ry="2" />
<text  x="838.88" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (787,878,780 samples, 0.15%)</title><rect x="794.3" y="517" width="1.7" height="15.0" fill="rgb(224,52,6)" rx="2" ry="2" />
<text  x="797.32" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::_M_ptr (50,505,050 samples, 0.01%)</title><rect x="564.1" y="917" width="0.2" height="15.0" fill="rgb(226,166,41)" rx="2" ry="2" />
<text  x="567.15" y="927.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (50,505,050 samples, 0.01%)</title><rect x="1009.8" y="597" width="0.1" height="15.0" fill="rgb(249,181,0)" rx="2" ry="2" />
<text  x="1012.81" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (323,232,320 samples, 0.06%)</title><rect x="1116.7" y="597" width="0.7" height="15.0" fill="rgb(227,140,50)" rx="2" ry="2" />
<text  x="1119.67" y="607.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;47ul&gt; (101,010,100 samples, 0.02%)</title><rect x="1176.7" y="693" width="0.2" height="15.0" fill="rgb(246,23,20)" rx="2" ry="2" />
<text  x="1179.68" y="703.5" ></text>
</g>
<g >
<title>std::operator&amp; (424,242,420 samples, 0.08%)</title><rect x="200.2" y="869" width="0.9" height="15.0" fill="rgb(227,16,7)" rx="2" ry="2" />
<text  x="203.18" y="879.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (80,808,080 samples, 0.01%)</title><rect x="172.4" y="773" width="0.2" height="15.0" fill="rgb(223,217,21)" rx="2" ry="2" />
<text  x="175.39" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt;::begin (262,626,260 samples, 0.05%)</title><rect x="1071.3" y="597" width="0.5" height="15.0" fill="rgb(234,150,50)" rx="2" ry="2" />
<text  x="1074.26" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_write (555,555,550 samples, 0.10%)</title><rect x="993.6" y="453" width="1.2" height="15.0" fill="rgb(215,23,27)" rx="2" ry="2" />
<text  x="996.60" y="463.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (232,323,230 samples, 0.04%)</title><rect x="49.7" y="693" width="0.5" height="15.0" fill="rgb(222,36,8)" rx="2" ry="2" />
<text  x="52.73" y="703.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="799.1" y="405" width="0.1" height="15.0" fill="rgb(238,119,34)" rx="2" ry="2" />
<text  x="802.10" y="415.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (717,171,710 samples, 0.13%)</title><rect x="196.3" y="869" width="1.6" height="15.0" fill="rgb(238,123,42)" rx="2" ry="2" />
<text  x="199.29" y="879.5" ></text>
</g>
<g >
<title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (202,020,200 samples, 0.04%)</title><rect x="1026.7" y="613" width="0.4" height="15.0" fill="rgb(211,198,44)" rx="2" ry="2" />
<text  x="1029.66" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (2,939,393,910 samples, 0.54%)</title><rect x="777.4" y="533" width="6.4" height="15.0" fill="rgb(247,42,17)" rx="2" ry="2" />
<text  x="780.37" y="543.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::ReadAndParseBlockFromFile&lt;rocksdb::Block_kData&gt; (2,595,959,570 samples, 0.48%)</title><rect x="804.4" y="485" width="5.7" height="15.0" fill="rgb(225,174,48)" rx="2" ry="2" />
<text  x="807.41" y="495.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (434,343,430 samples, 0.08%)</title><rect x="41.9" y="581" width="0.9" height="15.0" fill="rgb(252,28,25)" rx="2" ry="2" />
<text  x="44.87" y="591.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt; (303,030,300 samples, 0.06%)</title><rect x="803.7" y="501" width="0.6" height="15.0" fill="rgb(227,124,43)" rx="2" ry="2" />
<text  x="806.68" y="511.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (50,505,050 samples, 0.01%)</title><rect x="808.6" y="277" width="0.1" height="15.0" fill="rgb(224,43,11)" rx="2" ry="2" />
<text  x="811.60" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::ConcurrentArena::Shard, std::default_delete&lt;rocksdb::ConcurrentArena::Shard []&gt; &gt;::_M_ptr (101,010,100 samples, 0.02%)</title><rect x="79.0" y="677" width="0.2" height="15.0" fill="rgb(218,148,36)" rx="2" ry="2" />
<text  x="82.02" y="687.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (80,808,080 samples, 0.01%)</title><rect x="690.3" y="229" width="0.2" height="15.0" fill="rgb(226,52,24)" rx="2" ry="2" />
<text  x="693.34" y="239.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (60,606,060 samples, 0.01%)</title><rect x="50.1" y="453" width="0.1" height="15.0" fill="rgb(218,208,18)" rx="2" ry="2" />
<text  x="53.10" y="463.5" ></text>
</g>
<g >
<title>rocksdb::StripTimestampFromUserKey (50,505,050 samples, 0.01%)</title><rect x="165.3" y="805" width="0.1" height="15.0" fill="rgb(214,40,8)" rx="2" ry="2" />
<text  x="168.32" y="815.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::GetBlockContents (272,727,270 samples, 0.05%)</title><rect x="805.4" y="453" width="0.6" height="15.0" fill="rgb(216,83,30)" rx="2" ry="2" />
<text  x="808.38" y="463.5" ></text>
</g>
<g >
<title>filemap_read (343,434,340 samples, 0.06%)</title><rect x="808.1" y="309" width="0.7" height="15.0" fill="rgb(231,22,3)" rx="2" ry="2" />
<text  x="811.09" y="319.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::RealCompaction::SupportsPerKeyPlacement (212,121,210 samples, 0.04%)</title><rect x="938.2" y="645" width="0.5" height="15.0" fill="rgb(240,108,1)" rx="2" ry="2" />
<text  x="941.22" y="655.5" ></text>
</g>
<g >
<title>std::map&lt;rocksdb::MemTable*, rocksdb::MemTablePostProcessInfo, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::lower_bound (303,030,300 samples, 0.06%)</title><rect x="75.3" y="789" width="0.6" height="15.0" fill="rgb(240,9,39)" rx="2" ry="2" />
<text  x="78.25" y="799.5" ></text>
</g>
<g >
<title>__dynamic_cast (90,909,090 samples, 0.02%)</title><rect x="551.4" y="885" width="0.2" height="15.0" fill="rgb(206,84,4)" rx="2" ry="2" />
<text  x="554.42" y="895.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (13,898,989,760 samples, 2.57%)</title><rect x="661.1" y="821" width="30.3" height="15.0" fill="rgb(233,195,11)" rx="2" ry="2" />
<text  x="664.13" y="831.5" >st..</text>
</g>
<g >
<title>do_softirq (80,808,080 samples, 0.01%)</title><rect x="690.3" y="213" width="0.2" height="15.0" fill="rgb(231,116,21)" rx="2" ry="2" />
<text  x="693.34" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (50,505,050 samples, 0.01%)</title><rect x="172.3" y="757" width="0.1" height="15.0" fill="rgb(209,155,34)" rx="2" ry="2" />
<text  x="175.28" y="767.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (80,808,080 samples, 0.01%)</title><rect x="567.0" y="869" width="0.2" height="15.0" fill="rgb(214,186,27)" rx="2" ry="2" />
<text  x="570.01" y="879.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (1,545,454,530 samples, 0.29%)</title><rect x="827.2" y="549" width="3.4" height="15.0" fill="rgb(239,51,29)" rx="2" ry="2" />
<text  x="830.20" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,616,161,560 samples, 1.04%)</title><rect x="204.2" y="821" width="12.3" height="15.0" fill="rgb(245,143,17)" rx="2" ry="2" />
<text  x="207.21" y="831.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (373,737,370 samples, 0.07%)</title><rect x="1075.8" y="581" width="0.9" height="15.0" fill="rgb(240,194,52)" rx="2" ry="2" />
<text  x="1078.84" y="591.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (828,282,820 samples, 0.15%)</title><rect x="727.6" y="565" width="1.8" height="15.0" fill="rgb(225,95,1)" rx="2" ry="2" />
<text  x="730.62" y="575.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::IsDeleteRangeSentinelKey (131,313,130 samples, 0.02%)</title><rect x="1062.0" y="645" width="0.3" height="15.0" fill="rgb(221,108,19)" rx="2" ry="2" />
<text  x="1065.01" y="655.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::MemTableInserter::GetPostMap (333,333,330 samples, 0.06%)</title><rect x="68.4" y="805" width="0.8" height="15.0" fill="rgb(214,56,28)" rx="2" ry="2" />
<text  x="71.43" y="815.5" ></text>
</g>
<g >
<title>rocksdb::PersistRocksDBOptions (90,909,090 samples, 0.02%)</title><rect x="661.5" y="581" width="0.2" height="15.0" fill="rgb(215,81,33)" rx="2" ry="2" />
<text  x="664.53" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (90,909,090 samples, 0.02%)</title><rect x="844.1" y="517" width="0.2" height="15.0" fill="rgb(236,63,10)" rx="2" ry="2" />
<text  x="847.10" y="527.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockHashIndexBuilder::Valid (101,010,100 samples, 0.02%)</title><rect x="1006.7" y="597" width="0.2" height="15.0" fill="rgb(228,145,24)" rx="2" ry="2" />
<text  x="1009.69" y="607.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (223,323,230,090 samples, 41.26%)</title><rect x="691.8" y="933" width="486.9" height="15.0" fill="rgb(225,201,42)" rx="2" ry="2" />
<text  x="694.81" y="943.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>TLS init function for rocksdb::perf_context (242,424,240 samples, 0.04%)</title><rect x="718.5" y="533" width="0.5" height="15.0" fill="rgb(240,189,12)" rx="2" ry="2" />
<text  x="721.46" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (787,878,780 samples, 0.15%)</title><rect x="798.2" y="517" width="1.7" height="15.0" fill="rgb(251,107,4)" rx="2" ry="2" />
<text  x="801.16" y="527.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (303,030,300 samples, 0.06%)</title><rect x="1002.8" y="597" width="0.6" height="15.0" fill="rgb(229,69,4)" rx="2" ry="2" />
<text  x="1005.77" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (60,606,060 samples, 0.01%)</title><rect x="846.2" y="469" width="0.1" height="15.0" fill="rgb(220,171,20)" rx="2" ry="2" />
<text  x="849.17" y="479.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;rocksdb::SuperVersionContext::WriteStallNotification, std::allocator&lt;rocksdb::SuperVersionContext::WriteStallNotification&gt; &gt;::_Vector_base (50,505,050 samples, 0.01%)</title><rect x="30.8" y="837" width="0.1" height="15.0" fill="rgb(236,87,37)" rx="2" ry="2" />
<text  x="33.79" y="847.5" ></text>
</g>
<g >
<title>rocksdb::port::AsmVolatilePause (1,353,535,340 samples, 0.25%)</title><rect x="528.3" y="885" width="3.0" height="15.0" fill="rgb(225,163,22)" rx="2" ry="2" />
<text  x="531.34" y="895.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (202,020,200 samples, 0.04%)</title><rect x="829.6" y="437" width="0.4" height="15.0" fill="rgb(214,228,45)" rx="2" ry="2" />
<text  x="832.60" y="447.5" ></text>
</g>
<g >
<title>get_page_from_freelist (171,717,170 samples, 0.03%)</title><rect x="663.6" y="437" width="0.3" height="15.0" fill="rgb(231,5,29)" rx="2" ry="2" />
<text  x="666.56" y="447.5" ></text>
</g>
<g >
<title>rocksdb::PosixWritableFile::Append (1,838,383,820 samples, 0.34%)</title><rect x="39.1" y="821" width="4.0" height="15.0" fill="rgb(208,171,39)" rx="2" ry="2" />
<text  x="42.09" y="831.5" ></text>
</g>
<g >
<title>std::forward&lt;std::tuple&lt;&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="74.9" y="789" width="0.1" height="15.0" fill="rgb(213,217,25)" rx="2" ry="2" />
<text  x="77.92" y="799.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (202,020,200 samples, 0.04%)</title><rect x="797.7" y="517" width="0.4" height="15.0" fill="rgb(230,135,52)" rx="2" ry="2" />
<text  x="800.69" y="527.5" ></text>
</g>
<g >
<title>rocksdb::Slice::empty (80,808,080 samples, 0.01%)</title><rect x="65.4" y="869" width="0.2" height="15.0" fill="rgb(210,90,16)" rx="2" ry="2" />
<text  x="68.41" y="879.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (373,737,370 samples, 0.07%)</title><rect x="929.9" y="597" width="0.8" height="15.0" fill="rgb(226,143,17)" rx="2" ry="2" />
<text  x="932.92" y="607.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;@plt (50,505,050 samples, 0.01%)</title><rect x="337.4" y="821" width="0.2" height="15.0" fill="rgb(249,213,34)" rx="2" ry="2" />
<text  x="340.45" y="831.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::~IOStatus (50,505,050 samples, 0.01%)</title><rect x="38.8" y="821" width="0.2" height="15.0" fill="rgb(247,219,51)" rx="2" ry="2" />
<text  x="41.85" y="831.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt; (282,828,280 samples, 0.05%)</title><rect x="1143.7" y="645" width="0.6" height="15.0" fill="rgb(253,193,12)" rx="2" ry="2" />
<text  x="1146.69" y="655.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::BlobGarbageMeter*, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt; (181,818,180 samples, 0.03%)</title><rect x="1148.2" y="597" width="0.4" height="15.0" fill="rgb(217,221,39)" rx="2" ry="2" />
<text  x="1151.22" y="607.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::begin (141,414,140 samples, 0.03%)</title><rect x="735.0" y="581" width="0.3" height="15.0" fill="rgb(235,18,16)" rx="2" ry="2" />
<text  x="738.00" y="591.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block_kData&gt; (222,222,220 samples, 0.04%)</title><rect x="810.1" y="485" width="0.5" height="15.0" fill="rgb(237,140,9)" rx="2" ry="2" />
<text  x="813.14" y="495.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (252,525,250 samples, 0.05%)</title><rect x="153.3" y="709" width="0.5" height="15.0" fill="rgb(253,89,29)" rx="2" ry="2" />
<text  x="156.28" y="719.5" ></text>
</g>
<g >
<title>xas_start (50,505,050 samples, 0.01%)</title><rect x="40.8" y="581" width="0.1" height="15.0" fill="rgb(216,140,30)" rx="2" ry="2" />
<text  x="43.83" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (171,717,170 samples, 0.03%)</title><rect x="800.2" y="453" width="0.4" height="15.0" fill="rgb(234,114,42)" rx="2" ry="2" />
<text  x="803.18" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (393,939,390 samples, 0.07%)</title><rect x="838.9" y="581" width="0.9" height="15.0" fill="rgb(233,122,49)" rx="2" ry="2" />
<text  x="841.90" y="591.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (757,575,750 samples, 0.14%)</title><rect x="531.4" y="885" width="1.7" height="15.0" fill="rgb(238,205,49)" rx="2" ry="2" />
<text  x="534.44" y="895.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (979,797,970 samples, 0.18%)</title><rect x="1033.8" y="597" width="2.2" height="15.0" fill="rgb(206,186,48)" rx="2" ry="2" />
<text  x="1036.82" y="607.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (363,636,360 samples, 0.07%)</title><rect x="1109.2" y="533" width="0.7" height="15.0" fill="rgb(252,16,0)" rx="2" ry="2" />
<text  x="1112.16" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::~_Rb_tree (868,686,860 samples, 0.16%)</title><rect x="62.6" y="853" width="1.9" height="15.0" fill="rgb(230,26,31)" rx="2" ry="2" />
<text  x="65.63" y="863.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::IntTblPropCollector*, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; (464,646,460 samples, 0.09%)</title><rect x="1040.4" y="565" width="1.1" height="15.0" fill="rgb(212,140,24)" rx="2" ry="2" />
<text  x="1043.45" y="575.5" ></text>
</g>
<g >
<title>rocksdb::FilePrefetchBuffer::TryReadFromCache (90,909,090 samples, 0.02%)</title><rect x="806.9" y="437" width="0.2" height="15.0" fill="rgb(247,161,11)" rx="2" ry="2" />
<text  x="809.94" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (181,818,180 samples, 0.03%)</title><rect x="1095.3" y="533" width="0.4" height="15.0" fill="rgb(231,186,20)" rx="2" ry="2" />
<text  x="1098.30" y="543.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (70,707,070 samples, 0.01%)</title><rect x="819.0" y="485" width="0.1" height="15.0" fill="rgb(227,206,15)" rx="2" ry="2" />
<text  x="821.97" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt;::empty (1,171,717,160 samples, 0.22%)</title><rect x="1072.2" y="613" width="2.6" height="15.0" fill="rgb(251,114,22)" rx="2" ry="2" />
<text  x="1075.20" y="623.5" ></text>
</g>
<g >
<title>rocksdb::ConcurrentArena::Allocate (1,101,010,090 samples, 0.20%)</title><rect x="78.4" y="757" width="2.4" height="15.0" fill="rgb(205,177,38)" rx="2" ry="2" />
<text  x="81.45" y="767.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::get (666,666,660 samples, 0.12%)</title><rect x="1153.8" y="629" width="1.4" height="15.0" fill="rgb(207,65,26)" rx="2" ry="2" />
<text  x="1156.77" y="639.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (262,626,260 samples, 0.05%)</title><rect x="55.6" y="805" width="0.6" height="15.0" fill="rgb(207,129,26)" rx="2" ry="2" />
<text  x="58.63" y="815.5" ></text>
</g>
<g >
<title>exc_page_fault (383,838,380 samples, 0.07%)</title><rect x="663.1" y="565" width="0.9" height="15.0" fill="rgb(242,80,7)" rx="2" ry="2" />
<text  x="666.14" y="575.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch@plt (404,040,400 samples, 0.07%)</title><rect x="347.5" y="869" width="0.9" height="15.0" fill="rgb(234,149,22)" rx="2" ry="2" />
<text  x="350.54" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rocksdb::EventListener&gt;, std::allocator&lt;std::shared_ptr&lt;rocksdb::EventListener&gt; &gt; &gt;::empty (80,808,080 samples, 0.01%)</title><rect x="43.4" y="805" width="0.1" height="15.0" fill="rgb(242,5,38)" rx="2" ry="2" />
<text  x="46.36" y="815.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::FailIfCfHasTs (494,949,490 samples, 0.09%)</title><rect x="566.2" y="949" width="1.1" height="15.0" fill="rgb(251,46,31)" rx="2" ry="2" />
<text  x="569.24" y="959.5" ></text>
</g>
<g >
<title>__tls_get_addr (161,616,160 samples, 0.03%)</title><rect x="27.5" y="885" width="0.4" height="15.0" fill="rgb(214,136,39)" rx="2" ry="2" />
<text  x="30.51" y="895.5" ></text>
</g>
<g >
<title>std::operator!=&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt; (979,797,970 samples, 0.18%)</title><rect x="953.6" y="645" width="2.1" height="15.0" fill="rgb(246,206,33)" rx="2" ry="2" />
<text  x="956.59" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (60,606,060 samples, 0.01%)</title><rect x="1094.0" y="613" width="0.2" height="15.0" fill="rgb(216,121,32)" rx="2" ry="2" />
<text  x="1097.05" y="623.5" ></text>
</g>
<g >
<title>rocksdb::UserComparatorWrapper::Compare (7,242,424,170 samples, 1.34%)</title><rect x="120.0" y="677" width="15.8" height="15.0" fill="rgb(210,68,17)" rx="2" ry="2" />
<text  x="122.98" y="687.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (171,717,170 samples, 0.03%)</title><rect x="748.0" y="533" width="0.4" height="15.0" fill="rgb(254,176,47)" rx="2" ry="2" />
<text  x="751.03" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (50,505,050 samples, 0.01%)</title><rect x="56.4" y="821" width="0.1" height="15.0" fill="rgb(235,121,51)" rx="2" ry="2" />
<text  x="59.38" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::operator (292,929,290 samples, 0.05%)</title><rect x="1161.8" y="661" width="0.6" height="15.0" fill="rgb(205,205,24)" rx="2" ry="2" />
<text  x="1164.77" y="671.5" ></text>
</g>
<g >
<title>rocksdb::GetColumnFamilyID (202,020,200 samples, 0.04%)</title><rect x="551.4" y="901" width="0.5" height="15.0" fill="rgb(228,201,39)" rx="2" ry="2" />
<text  x="554.42" y="911.5" ></text>
</g>
<g >
<title>rocksdb::Slice::compare (565,656,560 samples, 0.10%)</title><rect x="158.5" y="693" width="1.2" height="15.0" fill="rgb(209,177,19)" rx="2" ry="2" />
<text  x="161.50" y="703.5" ></text>
</g>
<g >
<title>rocksdb::StripTimestampFromUserKey (90,909,090 samples, 0.02%)</title><rect x="170.3" y="821" width="0.2" height="15.0" fill="rgb(237,200,13)" rx="2" ry="2" />
<text  x="173.28" y="831.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000000l&gt;, void&gt; (404,040,400 samples, 0.07%)</title><rect x="199.1" y="837" width="0.9" height="15.0" fill="rgb(246,182,15)" rx="2" ry="2" />
<text  x="202.08" y="847.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::current_output (3,797,979,760 samples, 0.70%)</title><rect x="1084.2" y="645" width="8.3" height="15.0" fill="rgb(208,151,30)" rx="2" ry="2" />
<text  x="1087.25" y="655.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatchInternal::InsertInto (55,373,736,820 samples, 10.23%)</title><rect x="59.3" y="901" width="120.7" height="15.0" fill="rgb(217,22,54)" rx="2" ry="2" />
<text  x="62.26" y="911.5" >rocksdb::WriteB..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::_M_ptr (191,919,190 samples, 0.04%)</title><rect x="1170.0" y="661" width="0.4" height="15.0" fill="rgb(244,64,0)" rx="2" ry="2" />
<text  x="1173.00" y="671.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::reset_root_cmp_cache (171,717,170 samples, 0.03%)</title><rect x="733.2" y="597" width="0.4" height="15.0" fill="rgb(225,214,45)" rx="2" ry="2" />
<text  x="736.19" y="607.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="848.9" y="485" width="0.1" height="15.0" fill="rgb(238,220,14)" rx="2" ry="2" />
<text  x="851.85" y="495.5" ></text>
</g>
<g >
<title>exc_page_fault (383,838,380 samples, 0.07%)</title><rect x="658.2" y="981" width="0.9" height="15.0" fill="rgb(206,217,9)" rx="2" ry="2" />
<text  x="661.25" y="991.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="863.3" y="517" width="0.2" height="15.0" fill="rgb(233,156,38)" rx="2" ry="2" />
<text  x="866.28" y="527.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (90,909,090 samples, 0.02%)</title><rect x="831.6" y="469" width="0.2" height="15.0" fill="rgb(241,29,7)" rx="2" ry="2" />
<text  x="834.56" y="479.5" ></text>
</g>
<g >
<title>__strlen_evex (60,606,060 samples, 0.01%)</title><rect x="995.4" y="533" width="0.1" height="15.0" fill="rgb(206,187,35)" rx="2" ry="2" />
<text  x="998.37" y="543.5" ></text>
</g>
<g >
<title>ext4_releasepage (70,707,070 samples, 0.01%)</title><rect x="691.2" y="421" width="0.2" height="15.0" fill="rgb(220,63,31)" rx="2" ry="2" />
<text  x="694.22" y="431.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="788.4" y="469" width="0.1" height="15.0" fill="rgb(243,62,12)" rx="2" ry="2" />
<text  x="791.38" y="479.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::BackgroundCallFlush (13,898,989,760 samples, 2.57%)</title><rect x="661.1" y="741" width="30.3" height="15.0" fill="rgb(229,195,53)" rx="2" ry="2" />
<text  x="664.13" y="751.5" >ro..</text>
</g>
<g >
<title>rocksdb::GetVarint32Ptr (666,666,660 samples, 0.12%)</title><rect x="148.9" y="725" width="1.4" height="15.0" fill="rgb(224,172,17)" rx="2" ry="2" />
<text  x="151.89" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;rocksdb::BlockReadAmpBitmap, std::default_delete&lt;rocksdb::BlockReadAmpBitmap&gt;, true, true&gt;::__uniq_ptr_data (50,505,050 samples, 0.01%)</title><rect x="804.7" y="405" width="0.2" height="15.0" fill="rgb(214,41,24)" rx="2" ry="2" />
<text  x="807.74" y="415.5" ></text>
</g>
<g >
<title>rocksdb::CompactionJob::FinishCompactionOutputFile (171,717,170 samples, 0.03%)</title><rect x="1140.3" y="565" width="0.3" height="15.0" fill="rgb(237,47,45)" rx="2" ry="2" />
<text  x="1143.25" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (212,121,210 samples, 0.04%)</title><rect x="836.4" y="485" width="0.5" height="15.0" fill="rgb(213,182,42)" rx="2" ry="2" />
<text  x="839.39" y="495.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatchInternal::Count (50,505,050 samples, 0.01%)</title><rect x="555.4" y="869" width="0.2" height="15.0" fill="rgb(207,3,49)" rx="2" ry="2" />
<text  x="558.45" y="879.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (222,222,220 samples, 0.04%)</title><rect x="169.6" y="773" width="0.5" height="15.0" fill="rgb(251,67,50)" rx="2" ry="2" />
<text  x="172.57" y="783.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Valid (101,010,100 samples, 0.02%)</title><rect x="920.0" y="581" width="0.2" height="15.0" fill="rgb(217,224,9)" rx="2" ry="2" />
<text  x="923.01" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::operator (202,020,200 samples, 0.04%)</title><rect x="863.5" y="581" width="0.4" height="15.0" fill="rgb(240,206,52)" rx="2" ry="2" />
<text  x="866.50" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (80,808,080 samples, 0.01%)</title><rect x="159.8" y="741" width="0.1" height="15.0" fill="rgb(219,50,30)" rx="2" ry="2" />
<text  x="162.77" y="751.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (60,606,060 samples, 0.01%)</title><rect x="820.7" y="501" width="0.1" height="15.0" fill="rgb(217,40,7)" rx="2" ry="2" />
<text  x="823.66" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (80,808,080 samples, 0.01%)</title><rect x="995.6" y="533" width="0.1" height="15.0" fill="rgb(223,23,12)" rx="2" ry="2" />
<text  x="998.56" y="543.5" ></text>
</g>
<g >
<title>std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;::pair&lt;rocksdb::MemTable* const&amp;&gt; (313,131,310 samples, 0.06%)</title><rect x="70.8" y="693" width="0.7" height="15.0" fill="rgb(216,83,34)" rx="2" ry="2" />
<text  x="73.78" y="703.5" ></text>
</g>
<g >
<title>do_user_addr_fault (383,838,380 samples, 0.07%)</title><rect x="663.1" y="549" width="0.9" height="15.0" fill="rgb(243,100,11)" rx="2" ry="2" />
<text  x="666.14" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::get (90,909,090 samples, 0.02%)</title><rect x="1153.0" y="645" width="0.2" height="15.0" fill="rgb(243,34,14)" rx="2" ry="2" />
<text  x="1156.05" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::SavePoints*, std::default_delete&lt;rocksdb::SavePoints&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="51.8" y="805" width="0.1" height="15.0" fill="rgb(248,119,49)" rx="2" ry="2" />
<text  x="54.82" y="815.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::Crc32cCombine (444,444,440 samples, 0.08%)</title><rect x="49.4" y="837" width="0.9" height="15.0" fill="rgb(209,83,20)" rx="2" ry="2" />
<text  x="52.35" y="847.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::SyncInternal (141,414,140 samples, 0.03%)</title><rect x="1140.3" y="517" width="0.3" height="15.0" fill="rgb(206,24,22)" rx="2" ry="2" />
<text  x="1143.30" y="527.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (323,232,320 samples, 0.06%)</title><rect x="1140.6" y="645" width="0.7" height="15.0" fill="rgb(224,133,11)" rx="2" ry="2" />
<text  x="1143.63" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::BlobGarbageMeter, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;::_M_ptr (1,060,606,050 samples, 0.20%)</title><rect x="1148.1" y="613" width="2.3" height="15.0" fill="rgb(212,221,10)" rx="2" ry="2" />
<text  x="1151.11" y="623.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned long, rocksdb::RangeDelAggregator::StripeRep, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::lower_bound (2,636,363,610 samples, 0.49%)</title><rect x="900.7" y="613" width="5.8" height="15.0" fill="rgb(237,20,9)" rx="2" ry="2" />
<text  x="903.74" y="623.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;rocksdb::Status, rocksdb::CompactionJob::ProcessKeyValueCompaction (171,717,170 samples, 0.03%)</title><rect x="1140.3" y="613" width="0.3" height="15.0" fill="rgb(242,198,39)" rx="2" ry="2" />
<text  x="1143.25" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (868,686,860 samples, 0.16%)</title><rect x="1135.3" y="629" width="1.9" height="15.0" fill="rgb(239,106,39)" rx="2" ry="2" />
<text  x="1138.27" y="639.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::DeleteObsoleteFileImpl (70,707,070 samples, 0.01%)</title><rect x="1178.5" y="709" width="0.2" height="15.0" fill="rgb(210,220,29)" rx="2" ry="2" />
<text  x="1181.55" y="719.5" ></text>
</g>
<g >
<title>std::operator&amp; (242,424,240 samples, 0.04%)</title><rect x="881.3" y="629" width="0.5" height="15.0" fill="rgb(220,84,16)" rx="2" ry="2" />
<text  x="884.31" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;char const []&gt;, true&gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="835.5" y="437" width="0.2" height="15.0" fill="rgb(223,212,24)" rx="2" ry="2" />
<text  x="838.53" y="447.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::operator= (60,606,060 samples, 0.01%)</title><rect x="47.2" y="805" width="0.1" height="15.0" fill="rgb(221,11,53)" rx="2" ry="2" />
<text  x="50.17" y="815.5" ></text>
</g>
<g >
<title>rocksdb::InternalKeyComparator::Compare (343,434,340 samples, 0.06%)</title><rect x="1098.6" y="645" width="0.7" height="15.0" fill="rgb(251,105,40)" rx="2" ry="2" />
<text  x="1101.59" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (434,343,430 samples, 0.08%)</title><rect x="778.4" y="485" width="1.0" height="15.0" fill="rgb(213,141,45)" rx="2" ry="2" />
<text  x="781.42" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="825.9" y="485" width="0.2" height="15.0" fill="rgb(237,176,14)" rx="2" ry="2" />
<text  x="828.90" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt; (323,232,320 samples, 0.06%)</title><rect x="987.9" y="629" width="0.7" height="15.0" fill="rgb(242,11,39)" rx="2" ry="2" />
<text  x="990.95" y="639.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (272,727,270 samples, 0.05%)</title><rect x="888.9" y="613" width="0.6" height="15.0" fill="rgb(240,64,31)" rx="2" ry="2" />
<text  x="891.87" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::lower_bound (212,121,210 samples, 0.04%)</title><rect x="899.6" y="613" width="0.4" height="15.0" fill="rgb(233,210,2)" rx="2" ry="2" />
<text  x="902.57" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (545,454,540 samples, 0.10%)</title><rect x="1108.8" y="581" width="1.2" height="15.0" fill="rgb(224,79,9)" rx="2" ry="2" />
<text  x="1111.85" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (80,808,080 samples, 0.01%)</title><rect x="959.5" y="661" width="0.1" height="15.0" fill="rgb(226,70,23)" rx="2" ry="2" />
<text  x="962.47" y="671.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::status (4,101,010,060 samples, 0.76%)</title><rect x="793.1" y="597" width="8.9" height="15.0" fill="rgb(223,19,11)" rx="2" ry="2" />
<text  x="796.07" y="607.5" ></text>
</g>
<g >
<title>handle_mm_fault (282,828,280 samples, 0.05%)</title><rect x="658.5" y="949" width="0.6" height="15.0" fill="rgb(241,187,9)" rx="2" ry="2" />
<text  x="661.47" y="959.5" ></text>
</g>
<g >
<title>rocksdb::FlushBlockBySizePolicy::Update (2,686,868,660 samples, 0.50%)</title><rect x="1020.5" y="629" width="5.9" height="15.0" fill="rgb(223,71,30)" rx="2" ry="2" />
<text  x="1023.54" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (555,555,550 samples, 0.10%)</title><rect x="850.1" y="485" width="1.2" height="15.0" fill="rgb(247,172,19)" rx="2" ry="2" />
<text  x="853.13" y="495.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (6,707,070,640 samples, 1.24%)</title><rect x="306.0" y="853" width="14.7" height="15.0" fill="rgb(253,114,34)" rx="2" ry="2" />
<text  x="309.05" y="863.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (737,373,730 samples, 0.14%)</title><rect x="1132.1" y="565" width="1.6" height="15.0" fill="rgb(244,61,14)" rx="2" ry="2" />
<text  x="1135.08" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_node (60,606,060 samples, 0.01%)</title><rect x="72.4" y="757" width="0.1" height="15.0" fill="rgb(223,181,3)" rx="2" ry="2" />
<text  x="75.37" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::empty@plt (121,212,120 samples, 0.02%)</title><rect x="1156.5" y="645" width="0.3" height="15.0" fill="rgb(208,177,29)" rx="2" ry="2" />
<text  x="1159.53" y="655.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (50,505,050 samples, 0.01%)</title><rect x="1035.5" y="485" width="0.1" height="15.0" fill="rgb(218,65,28)" rx="2" ry="2" />
<text  x="1038.51" y="495.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (60,606,060 samples, 0.01%)</title><rect x="690.4" y="37" width="0.1" height="15.0" fill="rgb(205,141,1)" rx="2" ry="2" />
<text  x="693.36" y="47.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (383,838,380 samples, 0.07%)</title><rect x="658.2" y="997" width="0.9" height="15.0" fill="rgb(254,56,35)" rx="2" ry="2" />
<text  x="661.25" y="1007.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (223,404,038,170 samples, 41.28%)</title><rect x="691.6" y="1013" width="487.1" height="15.0" fill="rgb(254,132,1)" rx="2" ry="2" />
<text  x="694.63" y="1023.5" >[libstdc++.so.6.0.30]</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (70,707,070 samples, 0.01%)</title><rect x="553.5" y="773" width="0.1" height="15.0" fill="rgb(252,6,32)" rx="2" ry="2" />
<text  x="556.49" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Auto_node::_M_insert (353,535,350 samples, 0.07%)</title><rect x="582.6" y="933" width="0.8" height="15.0" fill="rgb(238,141,20)" rx="2" ry="2" />
<text  x="585.58" y="943.5" ></text>
</g>
<g >
<title>rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper (13,898,989,760 samples, 2.57%)</title><rect x="661.1" y="917" width="30.3" height="15.0" fill="rgb(231,36,52)" rx="2" ry="2" />
<text  x="664.13" y="927.5" >ro..</text>
</g>
<g >
<title>rocksdb::GetLengthPrefixedSlice (424,242,420 samples, 0.08%)</title><rect x="173.0" y="837" width="1.0" height="15.0" fill="rgb(213,127,14)" rx="2" ry="2" />
<text  x="176.03" y="847.5" ></text>
</g>
<g >
<title>rocksdb::SuperVersionContext::SuperVersionContext (333,333,330 samples, 0.06%)</title><rect x="30.5" y="885" width="0.8" height="15.0" fill="rgb(245,39,21)" rx="2" ry="2" />
<text  x="33.52" y="895.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (252,525,250 samples, 0.05%)</title><rect x="831.4" y="485" width="0.5" height="15.0" fill="rgb(247,120,45)" rx="2" ry="2" />
<text  x="834.39" y="495.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::Key@plt (60,606,060 samples, 0.01%)</title><rect x="146.6" y="741" width="0.1" height="15.0" fill="rgb(247,60,6)" rx="2" ry="2" />
<text  x="149.56" y="751.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::IndexBuilder*, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt; (191,919,190 samples, 0.04%)</title><rect x="1056.1" y="565" width="0.4" height="15.0" fill="rgb(207,21,54)" rx="2" ry="2" />
<text  x="1059.10" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (50,505,050 samples, 0.01%)</title><rect x="222.6" y="869" width="0.1" height="15.0" fill="rgb(221,45,0)" rx="2" ry="2" />
<text  x="225.58" y="879.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::Put (249,090,906,600 samples, 46.02%)</title><rect x="24.8" y="965" width="543.1" height="15.0" fill="rgb(253,100,48)" rx="2" ry="2" />
<text  x="27.82" y="975.5" >rocksdb::DBImpl::Put</text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt;::begin (191,919,190 samples, 0.04%)</title><rect x="1057.6" y="629" width="0.4" height="15.0" fill="rgb(236,222,29)" rx="2" ry="2" />
<text  x="1060.62" y="639.5" ></text>
</g>
<g >
<title>rocksdb::DecodeFixed32 (131,313,130 samples, 0.02%)</title><rect x="59.0" y="885" width="0.3" height="15.0" fill="rgb(230,117,9)" rx="2" ry="2" />
<text  x="61.98" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;rocksdb::EventListener&gt;, std::allocator&lt;std::shared_ptr&lt;rocksdb::EventListener&gt; &gt; &gt;::empty (50,505,050 samples, 0.01%)</title><rect x="809.1" y="421" width="0.2" height="15.0" fill="rgb(253,127,29)" rx="2" ry="2" />
<text  x="812.15" y="431.5" ></text>
</g>
<g >
<title>ext4_evict_inode (262,626,260 samples, 0.05%)</title><rect x="690.8" y="533" width="0.6" height="15.0" fill="rgb(222,191,52)" rx="2" ry="2" />
<text  x="693.84" y="543.5" ></text>
</g>
<g >
<title>std::map&lt;rocksdb::MemTable*, rocksdb::MemTablePostProcessInfo, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::begin (90,909,090 samples, 0.02%)</title><rect x="62.0" y="869" width="0.2" height="15.0" fill="rgb(248,10,47)" rx="2" ry="2" />
<text  x="64.99" y="879.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::UpdateInternalKey (141,414,140 samples, 0.03%)</title><rect x="951.0" y="661" width="0.3" height="15.0" fill="rgb(217,51,14)" rx="2" ry="2" />
<text  x="953.97" y="671.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::status (2,151,515,130 samples, 0.40%)</title><rect x="858.0" y="581" width="4.7" height="15.0" fill="rgb(237,221,36)" rx="2" ry="2" />
<text  x="861.04" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;rocksdb::InternalKeyComparator, std::default_delete&lt;rocksdb::InternalKeyComparator&gt;, true, true&gt;::__uniq_ptr_impl (50,505,050 samples, 0.01%)</title><rect x="803.8" y="405" width="0.1" height="15.0" fill="rgb(244,220,24)" rx="2" ry="2" />
<text  x="806.84" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (191,919,190 samples, 0.04%)</title><rect x="1110.1" y="629" width="0.5" height="15.0" fill="rgb(215,52,29)" rx="2" ry="2" />
<text  x="1113.15" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (131,313,130 samples, 0.02%)</title><rect x="559.5" y="837" width="0.3" height="15.0" fill="rgb(209,202,6)" rx="2" ry="2" />
<text  x="562.52" y="847.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::ConcurrentArena::Shard [], std::default_delete&lt;rocksdb::ConcurrentArena::Shard []&gt; &gt;::get (141,414,140 samples, 0.03%)</title><rect x="79.0" y="693" width="0.3" height="15.0" fill="rgb(218,214,26)" rx="2" ry="2" />
<text  x="82.00" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt;::end (111,111,110 samples, 0.02%)</title><rect x="1074.5" y="597" width="0.3" height="15.0" fill="rgb(249,108,49)" rx="2" ry="2" />
<text  x="1077.51" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::BlobGarbageMeter, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;::get (1,404,040,390 samples, 0.26%)</title><rect x="1148.0" y="629" width="3.0" height="15.0" fill="rgb(216,153,29)" rx="2" ry="2" />
<text  x="1150.96" y="639.5" ></text>
</g>
<g >
<title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Lookup (60,606,060 samples, 0.01%)</title><rect x="766.4" y="405" width="0.1" height="15.0" fill="rgb(239,88,17)" rx="2" ry="2" />
<text  x="769.40" y="415.5" ></text>
</g>
<g >
<title>XXH3_hashLong_internal_loop (474,747,470 samples, 0.09%)</title><rect x="990.3" y="485" width="1.0" height="15.0" fill="rgb(209,37,1)" rx="2" ry="2" />
<text  x="993.30" y="495.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::output_to_penultimate_level (161,616,160 samples, 0.03%)</title><rect x="979.7" y="661" width="0.3" height="15.0" fill="rgb(238,169,5)" rx="2" ry="2" />
<text  x="982.69" y="671.5" ></text>
</g>
<g >
<title>rocksdb::ForceReleaseCachedEntry (101,010,100 samples, 0.02%)</title><rect x="768.9" y="421" width="0.2" height="15.0" fill="rgb(229,130,26)" rx="2" ry="2" />
<text  x="771.87" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char [], rocksdb::CustomDeleter&gt;::~unique_ptr (50,505,050 samples, 0.01%)</title><rect x="813.1" y="405" width="0.1" height="15.0" fill="rgb(253,178,35)" rx="2" ry="2" />
<text  x="816.09" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::back (60,606,060 samples, 0.01%)</title><rect x="1012.5" y="565" width="0.2" height="15.0" fill="rgb(253,227,44)" rx="2" ry="2" />
<text  x="1015.52" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (50,505,050 samples, 0.01%)</title><rect x="550.8" y="869" width="0.1" height="15.0" fill="rgb(241,224,52)" rx="2" ry="2" />
<text  x="553.82" y="879.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Next (161,616,160 samples, 0.03%)</title><rect x="769.1" y="501" width="0.4" height="15.0" fill="rgb(214,120,2)" rx="2" ry="2" />
<text  x="772.11" y="511.5" ></text>
</g>
<g >
<title>__handle_mm_fault (80,808,080 samples, 0.01%)</title><rect x="81.0" y="677" width="0.2" height="15.0" fill="rgb(224,160,10)" rx="2" ry="2" />
<text  x="84.02" y="687.5" ></text>
</g>
<g >
<title>alloc_pages (90,909,090 samples, 0.02%)</title><rect x="689.7" y="357" width="0.2" height="15.0" fill="rgb(228,28,17)" rx="2" ry="2" />
<text  x="692.67" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (747,474,740 samples, 0.14%)</title><rect x="798.2" y="501" width="1.7" height="15.0" fill="rgb(240,141,53)" rx="2" ry="2" />
<text  x="801.24" y="511.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (161,616,160 samples, 0.03%)</title><rect x="754.3" y="533" width="0.4" height="15.0" fill="rgb(207,57,21)" rx="2" ry="2" />
<text  x="757.31" y="543.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::CreateMissingNewerLinks (50,505,050 samples, 0.01%)</title><rect x="223.1" y="885" width="0.1" height="15.0" fill="rgb(250,54,18)" rx="2" ry="2" />
<text  x="226.11" y="895.5" ></text>
</g>
<g >
<title>file_write_and_wait_range (101,010,100 samples, 0.02%)</title><rect x="661.1" y="549" width="0.3" height="15.0" fill="rgb(214,131,24)" rx="2" ry="2" />
<text  x="664.13" y="559.5" ></text>
</g>
<g >
<title>rocksdb::ForceReleaseCachedEntry (303,030,300 samples, 0.06%)</title><rect x="813.3" y="453" width="0.6" height="15.0" fill="rgb(221,72,3)" rx="2" ry="2" />
<text  x="816.29" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::Block_kData, std::default_delete&lt;rocksdb::Block_kData&gt; &gt;::unique_ptr&lt;std::default_delete&lt;rocksdb::Block_kData&gt;, void&gt; (60,606,060 samples, 0.01%)</title><rect x="767.2" y="453" width="0.1" height="15.0" fill="rgb(241,112,24)" rx="2" ry="2" />
<text  x="770.22" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (121,212,120 samples, 0.02%)</title><rect x="573.3" y="901" width="0.3" height="15.0" fill="rgb(221,104,7)" rx="2" ry="2" />
<text  x="576.33" y="911.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::ReadBlockContents (2,060,606,040 samples, 0.38%)</title><rect x="805.3" y="469" width="4.5" height="15.0" fill="rgb(215,58,15)" rx="2" ry="2" />
<text  x="808.31" y="479.5" ></text>
</g>
<g >
<title>rocksdb::ParseInternalKey (1,919,191,900 samples, 0.35%)</title><rect x="892.5" y="645" width="4.1" height="15.0" fill="rgb(216,20,53)" rx="2" ry="2" />
<text  x="895.46" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound (1,393,939,380 samples, 0.26%)</title><rect x="584.4" y="949" width="3.0" height="15.0" fill="rgb(226,171,9)" rx="2" ry="2" />
<text  x="587.36" y="959.5" ></text>
</g>
<g >
<title>rocksdb::Status::IsManualCompactionPaused (151,515,150 samples, 0.03%)</title><rect x="1175.3" y="693" width="0.3" height="15.0" fill="rgb(206,218,1)" rx="2" ry="2" />
<text  x="1178.29" y="703.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (454,545,450 samples, 0.08%)</title><rect x="1075.7" y="597" width="1.0" height="15.0" fill="rgb(245,93,5)" rx="2" ry="2" />
<text  x="1078.75" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (50,505,050 samples, 0.01%)</title><rect x="1075.0" y="629" width="0.1" height="15.0" fill="rgb(226,174,52)" rx="2" ry="2" />
<text  x="1078.00" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (70,707,070 samples, 0.01%)</title><rect x="748.9" y="533" width="0.2" height="15.0" fill="rgb(240,80,38)" rx="2" ry="2" />
<text  x="751.94" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (101,010,100 samples, 0.02%)</title><rect x="865.5" y="533" width="0.2" height="15.0" fill="rgb(230,135,13)" rx="2" ry="2" />
<text  x="868.48" y="543.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (1,727,272,710 samples, 0.32%)</title><rect x="784.7" y="533" width="3.8" height="15.0" fill="rgb(224,31,2)" rx="2" ry="2" />
<text  x="787.75" y="543.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (121,212,120 samples, 0.02%)</title><rect x="736.3" y="549" width="0.3" height="15.0" fill="rgb(244,131,1)" rx="2" ry="2" />
<text  x="739.30" y="559.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (50,505,050 samples, 0.01%)</title><rect x="63.6" y="773" width="0.1" height="15.0" fill="rgb(251,139,43)" rx="2" ry="2" />
<text  x="66.58" y="783.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::lower_bound (202,020,200 samples, 0.04%)</title><rect x="75.5" y="773" width="0.4" height="15.0" fill="rgb(217,216,51)" rx="2" ry="2" />
<text  x="78.47" y="783.5" ></text>
</g>
<g >
<title>rocksdb::ConfigureFromMap&lt;rocksdb::ColumnFamilyOptions&gt; (50,505,050 samples, 0.01%)</title><rect x="661.6" y="501" width="0.1" height="15.0" fill="rgb(210,157,31)" rx="2" ry="2" />
<text  x="664.57" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::get (70,707,070 samples, 0.01%)</title><rect x="801.7" y="533" width="0.2" height="15.0" fill="rgb(209,149,36)" rx="2" ry="2" />
<text  x="804.72" y="543.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (222,222,220 samples, 0.04%)</title><rect x="787.7" y="469" width="0.5" height="15.0" fill="rgb(239,11,35)" rx="2" ry="2" />
<text  x="790.74" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (50,505,050 samples, 0.01%)</title><rect x="811.0" y="469" width="0.1" height="15.0" fill="rgb(247,217,5)" rx="2" ry="2" />
<text  x="814.02" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, unsigned int&amp;, unsigned long&amp;&gt;::_Tuple_impl (80,808,080 samples, 0.01%)</title><rect x="559.0" y="869" width="0.2" height="15.0" fill="rgb(214,195,8)" rx="2" ry="2" />
<text  x="562.04" y="879.5" ></text>
</g>
<g >
<title>rocksdb::Cleanable::Reset (444,444,440 samples, 0.08%)</title><rect x="813.0" y="485" width="1.0" height="15.0" fill="rgb(213,209,1)" rx="2" ry="2" />
<text  x="816.02" y="495.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::BlockFetcher (101,010,100 samples, 0.02%)</title><rect x="805.0" y="469" width="0.2" height="15.0" fill="rgb(239,84,24)" rx="2" ry="2" />
<text  x="808.03" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (191,919,190 samples, 0.04%)</title><rect x="172.2" y="821" width="0.4" height="15.0" fill="rgb(209,144,2)" rx="2" ry="2" />
<text  x="175.15" y="831.5" ></text>
</g>
<g >
<title>get_page_from_freelist (50,505,050 samples, 0.01%)</title><rect x="81.1" y="597" width="0.1" height="15.0" fill="rgb(250,91,42)" rx="2" ry="2" />
<text  x="84.07" y="607.5" ></text>
</g>
<g >
<title>std::chrono::operator&gt;=&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (7,808,080,730 samples, 1.44%)</title><rect x="328.7" y="869" width="17.1" height="15.0" fill="rgb(237,128,37)" rx="2" ry="2" />
<text  x="331.73" y="879.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::WriteContext::~WriteContext (1,020,202,010 samples, 0.19%)</title><rect x="31.5" y="901" width="2.2" height="15.0" fill="rgb(221,127,34)" rx="2" ry="2" />
<text  x="34.52" y="911.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (70,707,070 samples, 0.01%)</title><rect x="1178.5" y="501" width="0.2" height="15.0" fill="rgb(213,117,22)" rx="2" ry="2" />
<text  x="1181.55" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; &gt;::pair&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, true&gt; (50,505,050 samples, 0.01%)</title><rect x="44.1" y="837" width="0.1" height="15.0" fill="rgb(221,153,35)" rx="2" ry="2" />
<text  x="47.07" y="847.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (101,010,100 samples, 0.02%)</title><rect x="42.6" y="549" width="0.2" height="15.0" fill="rgb(208,68,36)" rx="2" ry="2" />
<text  x="45.59" y="559.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (141,414,140 samples, 0.03%)</title><rect x="828.8" y="437" width="0.3" height="15.0" fill="rgb(217,62,6)" rx="2" ry="2" />
<text  x="831.81" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::SstPartitioner*, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="1079.9" y="581" width="0.2" height="15.0" fill="rgb(222,87,54)" rx="2" ry="2" />
<text  x="1082.89" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (242,424,240 samples, 0.04%)</title><rect x="716.8" y="533" width="0.5" height="15.0" fill="rgb(208,132,40)" rx="2" ry="2" />
<text  x="719.76" y="543.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::NextEntryOffset (151,515,150 samples, 0.03%)</title><rect x="771.8" y="485" width="0.3" height="15.0" fill="rgb(217,226,23)" rx="2" ry="2" />
<text  x="774.80" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,646,464,590 samples, 1.04%)</title><rect x="204.2" y="837" width="12.3" height="15.0" fill="rgb(217,147,34)" rx="2" ry="2" />
<text  x="207.17" y="847.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::InternalKeyComparator, std::default_delete&lt;rocksdb::InternalKeyComparator&gt; &gt;::__uniq_ptr_impl (50,505,050 samples, 0.01%)</title><rect x="803.8" y="389" width="0.1" height="15.0" fill="rgb(227,84,10)" rx="2" ry="2" />
<text  x="806.84" y="399.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyData::IsDropped (535,353,530 samples, 0.10%)</title><rect x="696.9" y="677" width="1.1" height="15.0" fill="rgb(248,184,40)" rx="2" ry="2" />
<text  x="699.88" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (121,212,120 samples, 0.02%)</title><rect x="800.6" y="517" width="0.3" height="15.0" fill="rgb(249,156,27)" rx="2" ry="2" />
<text  x="803.62" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;rocksdb::SavePoints, std::default_delete&lt;rocksdb::SavePoints&gt;, true, true&gt;::__uniq_ptr_data (141,414,140 samples, 0.03%)</title><rect x="563.2" y="901" width="0.3" height="15.0" fill="rgb(252,88,51)" rx="2" ry="2" />
<text  x="566.20" y="911.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (121,212,120 samples, 0.02%)</title><rect x="54.4" y="901" width="0.3" height="15.0" fill="rgb(254,162,24)" rx="2" ry="2" />
<text  x="57.40" y="911.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (60,606,060 samples, 0.01%)</title><rect x="51.5" y="885" width="0.2" height="15.0" fill="rgb(207,185,36)" rx="2" ry="2" />
<text  x="54.53" y="895.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (272,727,270 samples, 0.05%)</title><rect x="690.8" y="629" width="0.6" height="15.0" fill="rgb(211,177,24)" rx="2" ry="2" />
<text  x="693.84" y="639.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::ParseNextKey&lt;rocksdb::DecodeEntry&gt; (111,111,110 samples, 0.02%)</title><rect x="816.1" y="533" width="0.3" height="15.0" fill="rgb(251,229,11)" rx="2" ry="2" />
<text  x="819.15" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_lower_bound (202,020,200 samples, 0.04%)</title><rect x="902.9" y="597" width="0.4" height="15.0" fill="rgb(240,60,15)" rx="2" ry="2" />
<text  x="905.90" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::SavePoints, std::default_delete&lt;rocksdb::SavePoints&gt; &gt;::__uniq_ptr_impl (141,414,140 samples, 0.03%)</title><rect x="563.2" y="885" width="0.3" height="15.0" fill="rgb(240,198,27)" rx="2" ry="2" />
<text  x="566.20" y="895.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (70,707,070 samples, 0.01%)</title><rect x="172.4" y="757" width="0.2" height="15.0" fill="rgb(228,164,45)" rx="2" ry="2" />
<text  x="175.41" y="767.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (505,050,500 samples, 0.09%)</title><rect x="807.9" y="421" width="1.1" height="15.0" fill="rgb(230,189,3)" rx="2" ry="2" />
<text  x="810.89" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (292,929,290 samples, 0.05%)</title><rect x="55.6" y="837" width="0.6" height="15.0" fill="rgb(244,110,12)" rx="2" ry="2" />
<text  x="58.56" y="847.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;@plt (171,717,170 samples, 0.03%)</title><rect x="536.4" y="885" width="0.4" height="15.0" fill="rgb(224,22,48)" rx="2" ry="2" />
<text  x="539.42" y="895.5" ></text>
</g>
<g >
<title>rocksdb::IndexBlockIter::DecodeCurrentValue (60,606,060 samples, 0.01%)</title><rect x="769.2" y="453" width="0.2" height="15.0" fill="rgb(205,42,38)" rx="2" ry="2" />
<text  x="772.24" y="463.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::~IOOptions (191,919,190 samples, 0.04%)</title><rect x="46.7" y="821" width="0.4" height="15.0" fill="rgb(242,130,3)" rx="2" ry="2" />
<text  x="49.69" y="831.5" ></text>
</g>
<g >
<title>__alloc_pages (171,717,170 samples, 0.03%)</title><rect x="663.6" y="453" width="0.3" height="15.0" fill="rgb(244,1,12)" rx="2" ry="2" />
<text  x="666.56" y="463.5" ></text>
</g>
<g >
<title>TLS init function for rocksdb::perf_context (90,909,090 samples, 0.02%)</title><rect x="1028.8" y="581" width="0.2" height="15.0" fill="rgb(212,119,54)" rx="2" ry="2" />
<text  x="1031.75" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (313,131,310 samples, 0.06%)</title><rect x="796.1" y="501" width="0.7" height="15.0" fill="rgb(210,139,18)" rx="2" ry="2" />
<text  x="799.11" y="511.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (101,010,100 samples, 0.02%)</title><rect x="791.5" y="565" width="0.2" height="15.0" fill="rgb(238,109,54)" rx="2" ry="2" />
<text  x="794.48" y="575.5" ></text>
</g>
<g >
<title>std::map&lt;rocksdb::MemTable*, rocksdb::MemTablePostProcessInfo, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::~map (949,494,940 samples, 0.18%)</title><rect x="62.5" y="869" width="2.0" height="15.0" fill="rgb(221,67,24)" rx="2" ry="2" />
<text  x="65.46" y="879.5" ></text>
</g>
<g >
<title>ext4_da_write_end (151,515,150 samples, 0.03%)</title><rect x="994.3" y="341" width="0.3" height="15.0" fill="rgb(228,180,32)" rx="2" ry="2" />
<text  x="997.29" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (60,606,060 samples, 0.01%)</title><rect x="550.8" y="901" width="0.2" height="15.0" fill="rgb(242,188,11)" rx="2" ry="2" />
<text  x="553.82" y="911.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (858,585,850 samples, 0.16%)</title><rect x="1108.3" y="629" width="1.8" height="15.0" fill="rgb(225,17,7)" rx="2" ry="2" />
<text  x="1111.28" y="639.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::IsDeleteRangeSentinelKey (90,909,090 samples, 0.02%)</title><rect x="756.3" y="581" width="0.2" height="15.0" fill="rgb(219,145,15)" rx="2" ry="2" />
<text  x="759.29" y="591.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (222,222,220 samples, 0.04%)</title><rect x="909.8" y="533" width="0.5" height="15.0" fill="rgb(248,87,28)" rx="2" ry="2" />
<text  x="912.77" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_ptr (505,050,500 samples, 0.09%)</title><rect x="840.4" y="549" width="1.1" height="15.0" fill="rgb(232,27,39)" rx="2" ry="2" />
<text  x="843.35" y="559.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (181,818,180 samples, 0.03%)</title><rect x="746.1" y="549" width="0.4" height="15.0" fill="rgb(234,145,12)" rx="2" ry="2" />
<text  x="749.10" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (454,545,450 samples, 0.08%)</title><rect x="689.6" y="549" width="1.0" height="15.0" fill="rgb(210,33,13)" rx="2" ry="2" />
<text  x="692.56" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (232,323,230 samples, 0.04%)</title><rect x="780.6" y="469" width="0.6" height="15.0" fill="rgb(249,91,16)" rx="2" ry="2" />
<text  x="783.65" y="479.5" ></text>
</g>
<g >
<title>rocksdb::DecodeFixed64 (101,010,100 samples, 0.02%)</title><rect x="887.0" y="645" width="0.2" height="15.0" fill="rgb(225,99,6)" rx="2" ry="2" />
<text  x="889.99" y="655.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::InitializeBase (191,919,190 samples, 0.04%)</title><rect x="760.9" y="421" width="0.4" height="15.0" fill="rgb(210,7,20)" rx="2" ry="2" />
<text  x="763.92" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (151,515,150 samples, 0.03%)</title><rect x="150.3" y="725" width="0.4" height="15.0" fill="rgb(237,85,33)" rx="2" ry="2" />
<text  x="153.35" y="735.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::CompactionIterator*, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;@plt (60,606,060 samples, 0.01%)</title><rect x="1171.6" y="629" width="0.2" height="15.0" fill="rgb(208,84,18)" rx="2" ry="2" />
<text  x="1174.63" y="639.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::IOStatus (50,505,050 samples, 0.01%)</title><rect x="990.1" y="501" width="0.1" height="15.0" fill="rgb(226,152,2)" rx="2" ry="2" />
<text  x="993.10" y="511.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid (151,515,150 samples, 0.03%)</title><rect x="948.9" y="645" width="0.4" height="15.0" fill="rgb(224,142,31)" rx="2" ry="2" />
<text  x="951.92" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::FileMetaData* const*, std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt; &gt;::__normal_iterator (272,727,270 samples, 0.05%)</title><rect x="1072.4" y="597" width="0.6" height="15.0" fill="rgb(212,190,11)" rx="2" ry="2" />
<text  x="1075.42" y="607.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::top (181,818,180 samples, 0.03%)</title><rect x="738.9" y="613" width="0.4" height="15.0" fill="rgb(211,86,42)" rx="2" ry="2" />
<text  x="741.94" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (252,525,250 samples, 0.05%)</title><rect x="1124.0" y="597" width="0.6" height="15.0" fill="rgb(205,49,46)" rx="2" ry="2" />
<text  x="1127.04" y="607.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (323,232,320 samples, 0.06%)</title><rect x="1154.5" y="581" width="0.7" height="15.0" fill="rgb(246,159,17)" rx="2" ry="2" />
<text  x="1157.48" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (101,010,100 samples, 0.02%)</title><rect x="782.5" y="469" width="0.2" height="15.0" fill="rgb(208,184,22)" rx="2" ry="2" />
<text  x="785.45" y="479.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (223,323,230,090 samples, 41.26%)</title><rect x="691.8" y="965" width="486.9" height="15.0" fill="rgb(215,173,50)" rx="2" ry="2" />
<text  x="694.81" y="975.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::DynamicBloom, std::default_delete&lt;rocksdb::DynamicBloom&gt; &gt;::operator bool (60,606,060 samples, 0.01%)</title><rect x="171.0" y="821" width="0.2" height="15.0" fill="rgb(254,100,36)" rx="2" ry="2" />
<text  x="174.03" y="831.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;rocksdb::Slice, std::_Optional_base&lt;rocksdb::Slice, true, true&gt; &gt;::_M_is_engaged (101,010,100 samples, 0.02%)</title><rect x="1166.5" y="677" width="0.2" height="15.0" fill="rgb(222,121,23)" rx="2" ry="2" />
<text  x="1169.50" y="687.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Next (222,222,220 samples, 0.04%)</title><rect x="814.1" y="533" width="0.5" height="15.0" fill="rgb(236,64,13)" rx="2" ry="2" />
<text  x="817.15" y="543.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::UpdateFileChecksum (161,616,160 samples, 0.03%)</title><rect x="47.7" y="821" width="0.3" height="15.0" fill="rgb(246,43,11)" rx="2" ry="2" />
<text  x="50.68" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (101,010,100 samples, 0.02%)</title><rect x="729.4" y="565" width="0.2" height="15.0" fill="rgb(248,50,25)" rx="2" ry="2" />
<text  x="732.43" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (131,313,130 samples, 0.02%)</title><rect x="794.0" y="485" width="0.3" height="15.0" fill="rgb(240,110,11)" rx="2" ry="2" />
<text  x="797.04" y="495.5" ></text>
</g>
<g >
<title>rocksdb::InstrumentedMutex::Lock (80,808,080 samples, 0.01%)</title><rect x="29.6" y="869" width="0.2" height="15.0" fill="rgb(214,88,2)" rx="2" ry="2" />
<text  x="32.64" y="879.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::Valid (121,212,120 samples, 0.02%)</title><rect x="758.8" y="581" width="0.2" height="15.0" fill="rgb(237,186,26)" rx="2" ry="2" />
<text  x="761.78" y="591.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="830.4" y="517" width="0.1" height="15.0" fill="rgb(221,97,43)" rx="2" ry="2" />
<text  x="833.35" y="527.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::UpdateFilesToCutForTTLStates (363,636,360 samples, 0.07%)</title><rect x="1082.9" y="645" width="0.8" height="15.0" fill="rgb(208,126,1)" rx="2" ry="2" />
<text  x="1085.93" y="655.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (626,262,620 samples, 0.12%)</title><rect x="309.0" y="837" width="1.4" height="15.0" fill="rgb(236,28,50)" rx="2" ry="2" />
<text  x="312.00" y="847.5" ></text>
</g>
<g >
<title>rocksdb::FSWritableFilePtr::operator (60,606,060 samples, 0.01%)</title><rect x="36.9" y="837" width="0.1" height="15.0" fill="rgb(251,212,12)" rx="2" ry="2" />
<text  x="39.91" y="847.5" ></text>
</g>
<g >
<title>XXH3_hashLong_64b_internal (252,525,250 samples, 0.05%)</title><rect x="806.3" y="357" width="0.5" height="15.0" fill="rgb(207,26,43)" rx="2" ry="2" />
<text  x="809.26" y="367.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_context (232,323,230 samples, 0.04%)</title><rect x="1028.7" y="597" width="0.5" height="15.0" fill="rgb(237,166,10)" rx="2" ry="2" />
<text  x="1031.66" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (212,121,210 samples, 0.04%)</title><rect x="391.6" y="821" width="0.5" height="15.0" fill="rgb(238,141,34)" rx="2" ry="2" />
<text  x="394.65" y="831.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::NextEntryOffset (212,121,210 samples, 0.04%)</title><rect x="773.1" y="469" width="0.5" height="15.0" fill="rgb(207,55,16)" rx="2" ry="2" />
<text  x="776.10" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (212,121,210 samples, 0.04%)</title><rect x="831.9" y="485" width="0.5" height="15.0" fill="rgb(219,75,19)" rx="2" ry="2" />
<text  x="834.94" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;&gt;::tuple&lt;true, true&gt; (141,414,140 samples, 0.03%)</title><rect x="559.0" y="901" width="0.3" height="15.0" fill="rgb(227,144,45)" rx="2" ry="2" />
<text  x="561.97" y="911.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::~unique_ptr (191,919,190 samples, 0.04%)</title><rect x="564.7" y="917" width="0.4" height="15.0" fill="rgb(250,3,0)" rx="2" ry="2" />
<text  x="567.72" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (151,515,150 samples, 0.03%)</title><rect x="559.5" y="869" width="0.4" height="15.0" fill="rgb(206,88,50)" rx="2" ry="2" />
<text  x="562.52" y="879.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (13,898,989,760 samples, 2.57%)</title><rect x="661.1" y="933" width="30.3" height="15.0" fill="rgb(234,222,27)" rx="2" ry="2" />
<text  x="664.13" y="943.5" >st..</text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (50,505,050 samples, 0.01%)</title><rect x="50.1" y="437" width="0.1" height="15.0" fill="rgb(227,80,38)" rx="2" ry="2" />
<text  x="53.12" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;rocksdb::FileMetaData* const*, std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="1071.1" y="597" width="0.2" height="15.0" fill="rgb(239,124,44)" rx="2" ry="2" />
<text  x="1074.15" y="607.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;rocksdb::Status, rocksdb::CompactionJob::ProcessKeyValueCompaction (171,717,170 samples, 0.03%)</title><rect x="1140.3" y="597" width="0.3" height="15.0" fill="rgb(231,225,33)" rx="2" ry="2" />
<text  x="1143.25" y="607.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::DynamicBloom*, false&gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="166.6" y="725" width="0.1" height="15.0" fill="rgb(225,103,15)" rx="2" ry="2" />
<text  x="169.58" y="735.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_level (101,010,100 samples, 0.02%)</title><rect x="151.6" y="725" width="0.2" height="15.0" fill="rgb(222,78,12)" rx="2" ry="2" />
<text  x="154.60" y="735.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (212,121,210 samples, 0.04%)</title><rect x="855.9" y="469" width="0.5" height="15.0" fill="rgb(209,28,53)" rx="2" ry="2" />
<text  x="858.92" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (181,818,180 samples, 0.03%)</title><rect x="780.1" y="469" width="0.4" height="15.0" fill="rgb(253,171,0)" rx="2" ry="2" />
<text  x="783.12" y="479.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (242,424,240 samples, 0.04%)</title><rect x="1035.3" y="517" width="0.5" height="15.0" fill="rgb(205,60,28)" rx="2" ry="2" />
<text  x="1038.32" y="527.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (8,222,222,140 samples, 1.52%)</title><rect x="224.0" y="885" width="17.9" height="15.0" fill="rgb(234,131,8)" rx="2" ry="2" />
<text  x="226.99" y="895.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::end (707,070,700 samples, 0.13%)</title><rect x="1090.6" y="629" width="1.6" height="15.0" fill="rgb(249,15,24)" rx="2" ry="2" />
<text  x="1093.61" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_write (454,545,450 samples, 0.08%)</title><rect x="689.6" y="533" width="1.0" height="15.0" fill="rgb(248,82,31)" rx="2" ry="2" />
<text  x="692.56" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (141,414,140 samples, 0.03%)</title><rect x="543.4" y="869" width="0.3" height="15.0" fill="rgb(244,24,33)" rx="2" ry="2" />
<text  x="546.36" y="879.5" ></text>
</g>
<g >
<title>std::tuple&lt;rocksdb::Block_kData*, std::default_delete&lt;rocksdb::Block_kData&gt; &gt;::tuple&lt;true, true&gt; (50,505,050 samples, 0.01%)</title><rect x="767.2" y="405" width="0.1" height="15.0" fill="rgb(243,12,32)" rx="2" ry="2" />
<text  x="770.22" y="415.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl (47,838,383,360 samples, 8.84%)</title><rect x="66.9" y="837" width="104.3" height="15.0" fill="rgb(234,65,48)" rx="2" ry="2" />
<text  x="69.88" y="847.5" >rocksdb::(an..</text>
</g>
<g >
<title>rocksdb::lru_cache::LRUCacheShard::Insert (313,131,310 samples, 0.06%)</title><rect x="811.5" y="469" width="0.7" height="15.0" fill="rgb(236,62,23)" rx="2" ry="2" />
<text  x="814.55" y="479.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000000l&gt;, void&gt;@plt (80,808,080 samples, 0.01%)</title><rect x="331.4" y="853" width="0.2" height="15.0" fill="rgb(212,56,42)" rx="2" ry="2" />
<text  x="334.44" y="863.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyData::internal_comparator (424,242,420 samples, 0.08%)</title><rect x="1060.5" y="645" width="0.9" height="15.0" fill="rgb(205,78,18)" rx="2" ry="2" />
<text  x="1063.49" y="655.5" ></text>
</g>
<g >
<title>rocksdb::CompactionRangeDelAggregator::ShouldDelete (3,414,141,380 samples, 0.63%)</title><rect x="899.2" y="629" width="7.5" height="15.0" fill="rgb(250,158,54)" rx="2" ry="2" />
<text  x="902.22" y="639.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="786.1" y="421" width="0.2" height="15.0" fill="rgb(211,144,5)" rx="2" ry="2" />
<text  x="789.09" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (161,616,160 samples, 0.03%)</title><rect x="1035.5" y="501" width="0.3" height="15.0" fill="rgb(244,52,22)" rx="2" ry="2" />
<text  x="1038.49" y="511.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Flush (4,010,100,970 samples, 0.74%)</title><rect x="989.1" y="629" width="8.8" height="15.0" fill="rgb(212,137,45)" rx="2" ry="2" />
<text  x="992.13" y="639.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size@plt (50,505,050 samples, 0.01%)</title><rect x="731.1" y="581" width="0.1" height="15.0" fill="rgb(229,127,20)" rx="2" ry="2" />
<text  x="734.05" y="591.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatchInternal::Append (515,151,510 samples, 0.10%)</title><rect x="34.1" y="869" width="1.1" height="15.0" fill="rgb(223,204,48)" rx="2" ry="2" />
<text  x="37.07" y="879.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (191,919,190 samples, 0.04%)</title><rect x="864.3" y="613" width="0.5" height="15.0" fill="rgb(238,59,29)" rx="2" ry="2" />
<text  x="867.33" y="623.5" ></text>
</g>
<g >
<title>__fdget_pos (80,808,080 samples, 0.01%)</title><rect x="39.3" y="725" width="0.2" height="15.0" fill="rgb(237,121,32)" rx="2" ry="2" />
<text  x="42.29" y="735.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::SstPartitioner*, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt; (222,222,220 samples, 0.04%)</title><rect x="1152.5" y="597" width="0.5" height="15.0" fill="rgb(224,179,2)" rx="2" ry="2" />
<text  x="1155.52" y="607.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::ShouldScheduleFlush (60,606,060 samples, 0.01%)</title><rect x="67.8" y="805" width="0.1" height="15.0" fill="rgb(220,172,37)" rx="2" ry="2" />
<text  x="70.79" y="815.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::~IOOptions (90,909,090 samples, 0.02%)</title><rect x="992.9" y="549" width="0.2" height="15.0" fill="rgb(238,116,25)" rx="2" ry="2" />
<text  x="995.92" y="559.5" ></text>
</g>
<g >
<title>rocksdb::GetVarint32Ptr@plt (70,707,070 samples, 0.01%)</title><rect x="150.8" y="741" width="0.1" height="15.0" fill="rgb(236,169,34)" rx="2" ry="2" />
<text  x="153.77" y="751.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (1,444,444,430 samples, 0.27%)</title><rect x="845.9" y="533" width="3.1" height="15.0" fill="rgb(229,214,42)" rx="2" ry="2" />
<text  x="848.86" y="543.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::BackgroundFlush (13,626,262,490 samples, 2.52%)</title><rect x="661.1" y="725" width="29.7" height="15.0" fill="rgb(252,130,4)" rx="2" ry="2" />
<text  x="664.13" y="735.5" >ro..</text>
</g>
<g >
<title>rocksdb::SyncPoint::GetInstance (101,010,100 samples, 0.02%)</title><rect x="928.7" y="645" width="0.3" height="15.0" fill="rgb(212,171,43)" rx="2" ry="2" />
<text  x="931.75" y="655.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::CompactionIterator*, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt; (313,131,310 samples, 0.06%)</title><rect x="1171.0" y="629" width="0.6" height="15.0" fill="rgb(232,151,7)" rx="2" ry="2" />
<text  x="1173.95" y="639.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000000l&gt;, void&gt; (414,141,410 samples, 0.08%)</title><rect x="196.9" y="837" width="0.9" height="15.0" fill="rgb(253,44,43)" rx="2" ry="2" />
<text  x="199.90" y="847.5" ></text>
</g>
<g >
<title>all (541,232,317,820 samples, 100%)</title><rect x="10.0" y="1045" width="1180.0" height="15.0" fill="rgb(243,135,11)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_head (141,414,140 samples, 0.03%)</title><rect x="947.2" y="565" width="0.3" height="15.0" fill="rgb(243,195,42)" rx="2" ry="2" />
<text  x="950.18" y="575.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (101,010,100 samples, 0.02%)</title><rect x="994.4" y="309" width="0.2" height="15.0" fill="rgb(249,207,24)" rx="2" ry="2" />
<text  x="997.38" y="319.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::ReadBlockContents (1,646,464,630 samples, 0.30%)</title><rect x="762.2" y="437" width="3.6" height="15.0" fill="rgb(215,200,15)" rx="2" ry="2" />
<text  x="765.19" y="447.5" ></text>
</g>
<g >
<title>generic_write_end (828,282,820 samples, 0.15%)</title><rect x="41.0" y="629" width="1.8" height="15.0" fill="rgb(249,203,39)" rx="2" ry="2" />
<text  x="44.03" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (262,626,260 samples, 0.05%)</title><rect x="553.4" y="805" width="0.5" height="15.0" fill="rgb(235,131,45)" rx="2" ry="2" />
<text  x="556.36" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::FileMetaData* const*, std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt; &gt;::__normal_iterator (70,707,070 samples, 0.01%)</title><rect x="1074.6" y="581" width="0.2" height="15.0" fill="rgb(215,3,31)" rx="2" ry="2" />
<text  x="1077.60" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::BlobGarbageMeter*, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt; (686,868,680 samples, 0.13%)</title><rect x="1148.9" y="597" width="1.5" height="15.0" fill="rgb(230,91,34)" rx="2" ry="2" />
<text  x="1151.93" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (111,111,110 samples, 0.02%)</title><rect x="838.7" y="581" width="0.2" height="15.0" fill="rgb(207,38,10)" rx="2" ry="2" />
<text  x="841.66" y="591.5" ></text>
</g>
<g >
<title>rocksdb::GetLengthPrefixedSlice (1,717,171,700 samples, 0.32%)</title><rect x="103.7" y="693" width="3.7" height="15.0" fill="rgb(245,148,50)" rx="2" ry="2" />
<text  x="106.68" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::get (242,424,240 samples, 0.04%)</title><rect x="1169.5" y="661" width="0.5" height="15.0" fill="rgb(237,121,39)" rx="2" ry="2" />
<text  x="1172.48" y="671.5" ></text>
</g>
<g >
<title>rocksdb::PersistRocksDBOptions (50,505,050 samples, 0.01%)</title><rect x="661.4" y="597" width="0.1" height="15.0" fill="rgb(227,203,17)" rx="2" ry="2" />
<text  x="664.42" y="607.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::Sync (161,616,160 samples, 0.03%)</title><rect x="1140.3" y="533" width="0.3" height="15.0" fill="rgb(210,222,54)" rx="2" ry="2" />
<text  x="1143.25" y="543.5" ></text>
</g>
<g >
<title>rocksdb::DecodeFixed64 (80,808,080 samples, 0.01%)</title><rect x="893.4" y="629" width="0.1" height="15.0" fill="rgb(228,84,50)" rx="2" ry="2" />
<text  x="896.36" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;char const []&gt;, true&gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="859.9" y="437" width="0.1" height="15.0" fill="rgb(230,184,24)" rx="2" ry="2" />
<text  x="862.86" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Cleanable::Reset (242,424,240 samples, 0.04%)</title><rect x="878.4" y="645" width="0.5" height="15.0" fill="rgb(216,131,32)" rx="2" ry="2" />
<text  x="881.41" y="655.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyMemTablesImpl::current (50,505,050 samples, 0.01%)</title><rect x="76.5" y="821" width="0.1" height="15.0" fill="rgb(219,60,40)" rx="2" ry="2" />
<text  x="79.53" y="831.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (90,909,090 samples, 0.02%)</title><rect x="542.1" y="869" width="0.2" height="15.0" fill="rgb(228,222,17)" rx="2" ry="2" />
<text  x="545.10" y="879.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status (1,757,575,740 samples, 0.32%)</title><rect x="793.4" y="549" width="3.9" height="15.0" fill="rgb(240,126,54)" rx="2" ry="2" />
<text  x="796.42" y="559.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::IndexBuilder*, false&gt;::_M_head (111,111,110 samples, 0.02%)</title><rect x="1056.1" y="549" width="0.3" height="15.0" fill="rgb(245,27,8)" rx="2" ry="2" />
<text  x="1059.15" y="559.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatch::Iterate (52,212,120,690 samples, 9.65%)</title><rect x="65.0" y="885" width="113.8" height="15.0" fill="rgb(235,185,31)" rx="2" ry="2" />
<text  x="68.01" y="895.5" >rocksdb::Write..</text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SstPartitioner, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::get (1,242,424,230 samples, 0.23%)</title><rect x="1079.7" y="613" width="2.7" height="15.0" fill="rgb(231,157,46)" rx="2" ry="2" />
<text  x="1082.67" y="623.5" ></text>
</g>
<g >
<title>TLS init function for rocksdb::perf_context (90,909,090 samples, 0.02%)</title><rect x="121.8" y="661" width="0.2" height="15.0" fill="rgb(215,215,25)" rx="2" ry="2" />
<text  x="124.81" y="671.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::FindKeyForward (141,414,140 samples, 0.03%)</title><rect x="802.4" y="581" width="0.3" height="15.0" fill="rgb(241,20,15)" rx="2" ry="2" />
<text  x="805.41" y="591.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Clone (12,757,575,630 samples, 2.36%)</title><rect x="661.8" y="613" width="27.8" height="15.0" fill="rgb(235,131,12)" rx="2" ry="2" />
<text  x="664.75" y="623.5" >r..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::ColumnFamilySet, std::default_delete&lt;rocksdb::ColumnFamilySet&gt; &gt;::_M_ptr (111,111,110 samples, 0.02%)</title><rect x="58.0" y="869" width="0.2" height="15.0" fill="rgb(226,201,35)" rx="2" ry="2" />
<text  x="60.96" y="879.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (282,828,280 samples, 0.05%)</title><rect x="909.6" y="549" width="0.7" height="15.0" fill="rgb(206,83,13)" rx="2" ry="2" />
<text  x="912.63" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (101,010,100 samples, 0.02%)</title><rect x="46.9" y="789" width="0.2" height="15.0" fill="rgb(209,38,7)" rx="2" ry="2" />
<text  x="49.89" y="799.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;rocksdb::port::Mutex&gt;::lock_guard (50,505,050 samples, 0.01%)</title><rect x="813.6" y="389" width="0.1" height="15.0" fill="rgb(217,18,6)" rx="2" ry="2" />
<text  x="816.62" y="399.5" ></text>
</g>
<g >
<title>rocksdb::IsExtendedValueType (232,323,230 samples, 0.04%)</title><rect x="907.8" y="613" width="0.5" height="15.0" fill="rgb(234,45,13)" rx="2" ry="2" />
<text  x="910.81" y="623.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;char const []&gt;, true&gt;::_Head_base (50,505,050 samples, 0.01%)</title><rect x="1109.6" y="517" width="0.2" height="15.0" fill="rgb(248,202,32)" rx="2" ry="2" />
<text  x="1112.64" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (111,111,110 samples, 0.02%)</title><rect x="854.1" y="517" width="0.3" height="15.0" fill="rgb(226,229,31)" rx="2" ry="2" />
<text  x="857.14" y="527.5" ></text>
</g>
<g >
<title>rocksdb::GetLengthPrefixedSlice (111,111,110 samples, 0.02%)</title><rect x="84.2" y="757" width="0.3" height="15.0" fill="rgb(250,165,16)" rx="2" ry="2" />
<text  x="87.24" y="767.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::IOStatus (50,505,050 samples, 0.01%)</title><rect x="990.1" y="517" width="0.1" height="15.0" fill="rgb(241,156,51)" rx="2" ry="2" />
<text  x="993.10" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::~unique_ptr (50,505,050 samples, 0.01%)</title><rect x="566.1" y="933" width="0.1" height="15.0" fill="rgb(209,179,27)" rx="2" ry="2" />
<text  x="569.13" y="943.5" ></text>
</g>
<g >
<title>rocksdb::PutLengthPrefixedSlice (232,323,230 samples, 0.04%)</title><rect x="556.1" y="901" width="0.5" height="15.0" fill="rgb(250,134,20)" rx="2" ry="2" />
<text  x="559.11" y="911.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="778.7" y="437" width="0.3" height="15.0" fill="rgb(226,24,33)" rx="2" ry="2" />
<text  x="781.73" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="976.5" y="629" width="0.4" height="15.0" fill="rgb(219,72,38)" rx="2" ry="2" />
<text  x="979.49" y="639.5" ></text>
</g>
<g >
<title>pagecache_get_page (191,919,190 samples, 0.04%)</title><rect x="40.5" y="613" width="0.5" height="15.0" fill="rgb(250,167,0)" rx="2" ry="2" />
<text  x="43.54" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (202,020,200 samples, 0.04%)</title><rect x="553.4" y="789" width="0.4" height="15.0" fill="rgb(233,137,39)" rx="2" ry="2" />
<text  x="556.40" y="799.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="799.0" y="421" width="0.2" height="15.0" fill="rgb(226,176,19)" rx="2" ry="2" />
<text  x="802.04" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr@plt (131,313,130 samples, 0.02%)</title><rect x="825.3" y="517" width="0.3" height="15.0" fill="rgb(249,58,48)" rx="2" ry="2" />
<text  x="828.27" y="527.5" ></text>
</g>
<g >
<title>std::map&lt;rocksdb::MemTable*, rocksdb::MemTablePostProcessInfo, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::~map (50,505,050 samples, 0.01%)</title><rect x="179.7" y="885" width="0.1" height="15.0" fill="rgb(243,33,43)" rx="2" ry="2" />
<text  x="182.68" y="895.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_head (141,414,140 samples, 0.03%)</title><rect x="840.8" y="517" width="0.3" height="15.0" fill="rgb(231,167,13)" rx="2" ry="2" />
<text  x="843.81" y="527.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="790.3" y="501" width="0.3" height="15.0" fill="rgb(208,195,13)" rx="2" ry="2" />
<text  x="793.32" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (434,343,430 samples, 0.08%)</title><rect x="1127.6" y="581" width="1.0" height="15.0" fill="rgb(209,48,50)" rx="2" ry="2" />
<text  x="1130.63" y="591.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (70,707,070 samples, 0.01%)</title><rect x="198.2" y="837" width="0.2" height="15.0" fill="rgb(216,129,48)" rx="2" ry="2" />
<text  x="201.22" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (141,414,140 samples, 0.03%)</title><rect x="741.9" y="565" width="0.3" height="15.0" fill="rgb(209,22,4)" rx="2" ry="2" />
<text  x="744.89" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (131,313,130 samples, 0.02%)</title><rect x="541.7" y="869" width="0.2" height="15.0" fill="rgb(218,102,2)" rx="2" ry="2" />
<text  x="544.66" y="879.5" ></text>
</g>
<g >
<title>malloc (151,515,150 samples, 0.03%)</title><rect x="1188.7" y="1013" width="0.4" height="15.0" fill="rgb(237,96,32)" rx="2" ry="2" />
<text  x="1191.74" y="1023.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::WriteMaybeCompressedBlock (2,919,191,890 samples, 0.54%)</title><rect x="989.9" y="581" width="6.4" height="15.0" fill="rgb(236,206,16)" rx="2" ry="2" />
<text  x="992.91" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::get (252,525,250 samples, 0.05%)</title><rect x="1047.5" y="613" width="0.6" height="15.0" fill="rgb(242,87,44)" rx="2" ry="2" />
<text  x="1050.54" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (303,030,300 samples, 0.06%)</title><rect x="1004.2" y="581" width="0.6" height="15.0" fill="rgb(249,228,52)" rx="2" ry="2" />
<text  x="1007.15" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="976.7" y="597" width="0.2" height="15.0" fill="rgb(252,151,53)" rx="2" ry="2" />
<text  x="979.69" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (191,919,190 samples, 0.04%)</title><rect x="585.1" y="901" width="0.4" height="15.0" fill="rgb(253,188,20)" rx="2" ry="2" />
<text  x="588.11" y="911.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (131,313,130 samples, 0.02%)</title><rect x="542.7" y="837" width="0.3" height="15.0" fill="rgb(220,132,51)" rx="2" ry="2" />
<text  x="545.74" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_erase (616,161,610 samples, 0.11%)</title><rect x="62.8" y="837" width="1.3" height="15.0" fill="rgb(209,5,7)" rx="2" ry="2" />
<text  x="65.79" y="847.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::IsShuttingDown (626,262,620 samples, 0.12%)</title><rect x="881.9" y="645" width="1.3" height="15.0" fill="rgb(226,195,42)" rx="2" ry="2" />
<text  x="884.86" y="655.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (494,949,490 samples, 0.09%)</title><rect x="571.3" y="965" width="1.1" height="15.0" fill="rgb(239,131,0)" rx="2" ry="2" />
<text  x="574.28" y="975.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (50,505,050 samples, 0.01%)</title><rect x="714.2" y="549" width="0.1" height="15.0" fill="rgb(234,93,31)" rx="2" ry="2" />
<text  x="717.23" y="559.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="786.7" y="405" width="0.2" height="15.0" fill="rgb(219,196,13)" rx="2" ry="2" />
<text  x="789.75" y="415.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (262,626,260 samples, 0.05%)</title><rect x="41.9" y="565" width="0.6" height="15.0" fill="rgb(219,198,35)" rx="2" ry="2" />
<text  x="44.91" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (111,111,110 samples, 0.02%)</title><rect x="1096.1" y="629" width="0.2" height="15.0" fill="rgb(252,20,5)" rx="2" ry="2" />
<text  x="1099.05" y="639.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="962.3" y="661" width="0.4" height="15.0" fill="rgb(213,6,45)" rx="2" ry="2" />
<text  x="965.29" y="671.5" ></text>
</g>
<g >
<title>rocksdb::InternalKeyComparator::CompareKeySeq (151,515,150 samples, 0.03%)</title><rect x="102.0" y="709" width="0.4" height="15.0" fill="rgb(210,191,29)" rx="2" ry="2" />
<text  x="105.03" y="719.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (60,606,060 samples, 0.01%)</title><rect x="1019.7" y="597" width="0.1" height="15.0" fill="rgb(239,226,27)" rx="2" ry="2" />
<text  x="1022.66" y="607.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (90,909,090 samples, 0.02%)</title><rect x="690.3" y="325" width="0.2" height="15.0" fill="rgb(221,24,9)" rx="2" ry="2" />
<text  x="693.34" y="335.5" ></text>
</g>
<g >
<title>std::tuple&lt;rocksdb::SavePoints*, std::default_delete&lt;rocksdb::SavePoints&gt; &gt;::tuple&lt;true, true&gt; (121,212,120 samples, 0.02%)</title><rect x="563.2" y="869" width="0.3" height="15.0" fill="rgb(234,87,54)" rx="2" ry="2" />
<text  x="566.24" y="879.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="780.9" y="421" width="0.2" height="15.0" fill="rgb(246,66,19)" rx="2" ry="2" />
<text  x="783.87" y="431.5" ></text>
</g>
<g >
<title>rocksdb::IndexBlockIter::ParseNextIndexKey (181,818,180 samples, 0.03%)</title><rect x="814.2" y="501" width="0.4" height="15.0" fill="rgb(240,224,13)" rx="2" ry="2" />
<text  x="817.21" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;::_Deque_iterator&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, void&gt; (121,212,120 samples, 0.02%)</title><rect x="952.8" y="629" width="0.3" height="15.0" fill="rgb(215,133,22)" rx="2" ry="2" />
<text  x="955.82" y="639.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::Valid (161,616,160 samples, 0.03%)</title><rect x="958.3" y="661" width="0.4" height="15.0" fill="rgb(230,31,9)" rx="2" ry="2" />
<text  x="961.33" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (131,313,130 samples, 0.02%)</title><rect x="858.9" y="501" width="0.3" height="15.0" fill="rgb(217,128,47)" rx="2" ry="2" />
<text  x="861.87" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, unsigned long&amp;&gt;::_M_assign&lt;unsigned long&gt; (111,111,110 samples, 0.02%)</title><rect x="560.4" y="869" width="0.3" height="15.0" fill="rgb(219,37,10)" rx="2" ry="2" />
<text  x="563.43" y="879.5" ></text>
</g>
<g >
<title>rocksdb::ConcurrentArena::AllocateImpl&lt;rocksdb::ConcurrentArena::Allocate (848,484,840 samples, 0.16%)</title><rect x="78.5" y="741" width="1.8" height="15.0" fill="rgb(231,41,1)" rx="2" ry="2" />
<text  x="81.49" y="751.5" ></text>
</g>
<g >
<title>ext4_bio_write_page (50,505,050 samples, 0.01%)</title><rect x="661.2" y="437" width="0.1" height="15.0" fill="rgb(228,106,54)" rx="2" ry="2" />
<text  x="664.18" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="56.4" y="789" width="0.1" height="15.0" fill="rgb(240,19,22)" rx="2" ry="2" />
<text  x="59.38" y="799.5" ></text>
</g>
<g >
<title>rocksdb::PerfStepTimer::PerfStepTimer (101,010,100 samples, 0.02%)</title><rect x="53.5" y="901" width="0.2" height="15.0" fill="rgb(227,17,46)" rx="2" ry="2" />
<text  x="56.47" y="911.5" ></text>
</g>
<g >
<title>try_to_wake_up (60,606,060 samples, 0.01%)</title><rect x="660.4" y="901" width="0.2" height="15.0" fill="rgb(227,220,15)" rx="2" ry="2" />
<text  x="663.43" y="911.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (131,313,130 samples, 0.02%)</title><rect x="49.9" y="533" width="0.3" height="15.0" fill="rgb(222,182,50)" rx="2" ry="2" />
<text  x="52.95" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (181,818,180 samples, 0.03%)</title><rect x="582.2" y="917" width="0.4" height="15.0" fill="rgb(205,210,20)" rx="2" ry="2" />
<text  x="585.18" y="927.5" ></text>
</g>
<g >
<title>main (287,313,128,440 samples, 53.08%)</title><rect x="23.2" y="997" width="626.4" height="15.0" fill="rgb(248,63,14)" rx="2" ry="2" />
<text  x="26.24" y="1007.5" >main</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (50,505,050 samples, 0.01%)</title><rect x="182.4" y="821" width="0.1" height="15.0" fill="rgb(223,213,53)" rx="2" ry="2" />
<text  x="185.43" y="831.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (161,616,160 samples, 0.03%)</title><rect x="860.1" y="485" width="0.4" height="15.0" fill="rgb(218,26,47)" rx="2" ry="2" />
<text  x="863.15" y="495.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt; (434,343,430 samples, 0.08%)</title><rect x="954.2" y="629" width="1.0" height="15.0" fill="rgb(246,21,9)" rx="2" ry="2" />
<text  x="957.21" y="639.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::RandomHeight (111,111,110 samples, 0.02%)</title><rect x="81.3" y="773" width="0.2" height="15.0" fill="rgb(240,17,27)" rx="2" ry="2" />
<text  x="84.29" y="783.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (181,818,180 samples, 0.03%)</title><rect x="849.6" y="485" width="0.4" height="15.0" fill="rgb(250,5,10)" rx="2" ry="2" />
<text  x="852.56" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::CompactionIterator*, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;@plt (70,707,070 samples, 0.01%)</title><rect x="1175.1" y="645" width="0.2" height="15.0" fill="rgb(250,179,4)" rx="2" ry="2" />
<text  x="1178.11" y="655.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::StashHeight (151,515,150 samples, 0.03%)</title><rect x="80.9" y="757" width="0.3" height="15.0" fill="rgb(246,214,23)" rx="2" ry="2" />
<text  x="83.89" y="767.5" ></text>
</g>
<g >
<title>rocksdb::VersionSet::GetColumnFamilySet (252,525,250 samples, 0.05%)</title><rect x="57.7" y="901" width="0.6" height="15.0" fill="rgb(237,74,45)" rx="2" ry="2" />
<text  x="60.74" y="911.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::IOStatus (90,909,090 samples, 0.02%)</title><rect x="993.1" y="549" width="0.2" height="15.0" fill="rgb(244,53,24)" rx="2" ry="2" />
<text  x="996.12" y="559.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::CurrentSizeEstimate (121,212,120 samples, 0.02%)</title><rect x="1024.7" y="581" width="0.2" height="15.0" fill="rgb(221,124,52)" rx="2" ry="2" />
<text  x="1027.68" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::__uniq_ptr_impl (101,010,100 samples, 0.02%)</title><rect x="563.6" y="885" width="0.2" height="15.0" fill="rgb(254,22,40)" rx="2" ry="2" />
<text  x="566.55" y="895.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (202,020,200 samples, 0.04%)</title><rect x="858.7" y="533" width="0.5" height="15.0" fill="rgb(218,39,7)" rx="2" ry="2" />
<text  x="861.72" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (565,656,560 samples, 0.10%)</title><rect x="1108.8" y="597" width="1.3" height="15.0" fill="rgb(251,57,18)" rx="2" ry="2" />
<text  x="1111.85" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (60,606,060 samples, 0.01%)</title><rect x="1013.2" y="613" width="0.2" height="15.0" fill="rgb(209,41,5)" rx="2" ry="2" />
<text  x="1016.25" y="623.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ExtractLargeValueIfNeeded (90,909,090 samples, 0.02%)</title><rect x="937.6" y="645" width="0.2" height="15.0" fill="rgb(249,223,52)" rx="2" ry="2" />
<text  x="940.65" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::SstPartitioner*, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::_M_head@plt (121,212,120 samples, 0.02%)</title><rect x="1080.7" y="565" width="0.2" height="15.0" fill="rgb(243,90,1)" rx="2" ry="2" />
<text  x="1083.66" y="575.5" ></text>
</g>
<g >
<title>__x64_sys_futex (70,707,070 samples, 0.01%)</title><rect x="660.4" y="965" width="0.2" height="15.0" fill="rgb(213,109,46)" rx="2" ry="2" />
<text  x="663.41" y="975.5" ></text>
</g>
<g >
<title>mpage_submit_page (101,010,100 samples, 0.02%)</title><rect x="1140.4" y="325" width="0.2" height="15.0" fill="rgb(245,108,53)" rx="2" ry="2" />
<text  x="1143.36" y="335.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::status (3,525,252,490 samples, 0.65%)</title><rect x="845.4" y="597" width="7.7" height="15.0" fill="rgb(221,162,54)" rx="2" ry="2" />
<text  x="848.37" y="607.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::ParseNextDataKey (121,212,120 samples, 0.02%)</title><rect x="774.9" y="517" width="0.3" height="15.0" fill="rgb(254,109,42)" rx="2" ry="2" />
<text  x="777.95" y="527.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (393,939,390 samples, 0.07%)</title><rect x="972.5" y="597" width="0.8" height="15.0" fill="rgb(222,170,19)" rx="2" ry="2" />
<text  x="975.49" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::operator (383,838,380 samples, 0.07%)</title><rect x="963.1" y="661" width="0.9" height="15.0" fill="rgb(213,49,50)" rx="2" ry="2" />
<text  x="966.15" y="671.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::SeekToFirst (111,111,110 samples, 0.02%)</title><rect x="769.5" y="501" width="0.2" height="15.0" fill="rgb(230,143,16)" rx="2" ry="2" />
<text  x="772.51" y="511.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (101,010,100 samples, 0.02%)</title><rect x="994.4" y="293" width="0.2" height="15.0" fill="rgb(225,200,0)" rx="2" ry="2" />
<text  x="997.38" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (60,606,060 samples, 0.01%)</title><rect x="830.1" y="517" width="0.2" height="15.0" fill="rgb(218,49,47)" rx="2" ry="2" />
<text  x="833.13" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (101,010,100 samples, 0.02%)</title><rect x="661.1" y="597" width="0.3" height="15.0" fill="rgb(237,222,16)" rx="2" ry="2" />
<text  x="664.13" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (171,717,170 samples, 0.03%)</title><rect x="1019.8" y="597" width="0.4" height="15.0" fill="rgb(210,145,26)" rx="2" ry="2" />
<text  x="1022.79" y="607.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::compare_exchange_weak (60,606,060 samples, 0.01%)</title><rect x="79.3" y="709" width="0.2" height="15.0" fill="rgb(225,172,20)" rx="2" ry="2" />
<text  x="82.33" y="719.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::DeleteObsoleteFileImpl (272,727,270 samples, 0.05%)</title><rect x="690.8" y="709" width="0.6" height="15.0" fill="rgb(213,157,5)" rx="2" ry="2" />
<text  x="693.84" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_left (90,909,090 samples, 0.02%)</title><rect x="585.6" y="917" width="0.2" height="15.0" fill="rgb(209,200,40)" rx="2" ry="2" />
<text  x="588.55" y="927.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::SetValid (80,808,080 samples, 0.01%)</title><rect x="886.1" y="645" width="0.2" height="15.0" fill="rgb(231,227,1)" rx="2" ry="2" />
<text  x="889.11" y="655.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::NextAndGetResult (15,323,232,170 samples, 2.83%)</title><rect x="759.1" y="581" width="33.4" height="15.0" fill="rgb(217,30,10)" rx="2" ry="2" />
<text  x="762.13" y="591.5" >ro..</text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_level (161,616,160 samples, 0.03%)</title><rect x="109.2" y="677" width="0.4" height="15.0" fill="rgb(220,5,52)" rx="2" ry="2" />
<text  x="112.21" y="687.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (90,909,090 samples, 0.02%)</title><rect x="856.2" y="437" width="0.2" height="15.0" fill="rgb(223,102,0)" rx="2" ry="2" />
<text  x="859.19" y="447.5" ></text>
</g>
<g >
<title>std::make_unique&lt;rocksdb::InternalKeyComparator, rocksdb::Comparator const*&amp;&gt; (111,111,110 samples, 0.02%)</title><rect x="803.8" y="437" width="0.2" height="15.0" fill="rgb(205,126,3)" rx="2" ry="2" />
<text  x="806.75" y="447.5" ></text>
</g>
<g >
<title>vfs_write (555,555,550 samples, 0.10%)</title><rect x="993.6" y="421" width="1.2" height="15.0" fill="rgb(209,67,48)" rx="2" ry="2" />
<text  x="996.60" y="431.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::Clear (171,717,170 samples, 0.03%)</title><rect x="821.3" y="549" width="0.4" height="15.0" fill="rgb(236,218,0)" rx="2" ry="2" />
<text  x="824.28" y="559.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::NextImpl (222,222,220 samples, 0.04%)</title><rect x="821.8" y="565" width="0.5" height="15.0" fill="rgb(233,166,4)" rx="2" ry="2" />
<text  x="824.79" y="575.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::get_right (70,707,070 samples, 0.01%)</title><rect x="733.0" y="597" width="0.2" height="15.0" fill="rgb(223,87,19)" rx="2" ry="2" />
<text  x="736.01" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::CompactionOutputs::Output const*, std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt; &gt;::__normal_iterator (202,020,200 samples, 0.04%)</title><rect x="1089.5" y="597" width="0.4" height="15.0" fill="rgb(240,58,21)" rx="2" ry="2" />
<text  x="1092.47" y="607.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (10,252,525,150 samples, 1.89%)</title><rect x="280.2" y="869" width="22.3" height="15.0" fill="rgb(221,38,6)" rx="2" ry="2" />
<text  x="283.17" y="879.5" >s..</text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (111,111,110 samples, 0.02%)</title><rect x="50.0" y="517" width="0.2" height="15.0" fill="rgb(223,166,16)" rx="2" ry="2" />
<text  x="52.99" y="527.5" ></text>
</g>
<g >
<title>std::make_pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (565,656,560 samples, 0.10%)</title><rect x="571.1" y="981" width="1.3" height="15.0" fill="rgb(214,23,5)" rx="2" ry="2" />
<text  x="574.13" y="991.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (111,111,110 samples, 0.02%)</title><rect x="81.0" y="741" width="0.2" height="15.0" fill="rgb(217,153,23)" rx="2" ry="2" />
<text  x="83.98" y="751.5" ></text>
</g>
<g >
<title>new_sync_write (555,555,550 samples, 0.10%)</title><rect x="993.6" y="405" width="1.2" height="15.0" fill="rgb(244,193,33)" rx="2" ry="2" />
<text  x="996.60" y="415.5" ></text>
</g>
<g >
<title>__alloc_pages (141,414,140 samples, 0.03%)</title><rect x="658.6" y="869" width="0.3" height="15.0" fill="rgb(207,125,21)" rx="2" ry="2" />
<text  x="661.60" y="879.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (191,919,190 samples, 0.04%)</title><rect x="828.7" y="453" width="0.4" height="15.0" fill="rgb(209,26,18)" rx="2" ry="2" />
<text  x="831.70" y="463.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::NextEntryOffset@plt (131,313,130 samples, 0.02%)</title><rect x="817.3" y="517" width="0.3" height="15.0" fill="rgb(214,20,0)" rx="2" ry="2" />
<text  x="820.29" y="527.5" ></text>
</g>
<g >
<title>rocksdb::OutputValidator::Add (80,808,080 samples, 0.01%)</title><rect x="1158.9" y="661" width="0.1" height="15.0" fill="rgb(242,139,20)" rx="2" ry="2" />
<text  x="1161.86" y="671.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="536.0" y="885" width="0.4" height="15.0" fill="rgb(222,49,44)" rx="2" ry="2" />
<text  x="539.05" y="895.5" ></text>
</g>
<g >
<title>rocksdb::EncodeFixed64 (50,505,050 samples, 0.01%)</title><rect x="64.5" y="885" width="0.1" height="15.0" fill="rgb(248,22,14)" rx="2" ry="2" />
<text  x="67.53" y="895.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::ShouldScheduleFlush (50,505,050 samples, 0.01%)</title><rect x="167.0" y="821" width="0.1" height="15.0" fill="rgb(254,30,48)" rx="2" ry="2" />
<text  x="170.02" y="831.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (60,606,060 samples, 0.01%)</title><rect x="890.5" y="597" width="0.2" height="15.0" fill="rgb(231,127,6)" rx="2" ry="2" />
<text  x="893.52" y="607.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;char const []&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="1134.3" y="597" width="0.4" height="15.0" fill="rgb(235,10,14)" rx="2" ry="2" />
<text  x="1137.31" y="607.5" ></text>
</g>
<g >
<title>__do_sys_brk (70,707,070 samples, 0.01%)</title><rect x="10.4" y="933" width="0.2" height="15.0" fill="rgb(234,40,32)" rx="2" ry="2" />
<text  x="13.44" y="943.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (70,707,070 samples, 0.01%)</title><rect x="661.2" y="485" width="0.1" height="15.0" fill="rgb(237,91,38)" rx="2" ry="2" />
<text  x="664.16" y="495.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::_M_gen_rand (4,272,727,230 samples, 0.79%)</title><rect x="640.0" y="901" width="9.3" height="15.0" fill="rgb(248,8,2)" rx="2" ry="2" />
<text  x="642.97" y="911.5" ></text>
</g>
<g >
<title>rocksdb::PerfStepTimer::Start (50,505,050 samples, 0.01%)</title><rect x="546.0" y="917" width="0.1" height="15.0" fill="rgb(241,131,5)" rx="2" ry="2" />
<text  x="548.98" y="927.5" ></text>
</g>
<g >
<title>__memset_evex_unaligned_erms (80,808,080 samples, 0.01%)</title><rect x="1188.4" y="1013" width="0.2" height="15.0" fill="rgb(217,121,46)" rx="2" ry="2" />
<text  x="1191.41" y="1023.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (80,808,080 samples, 0.01%)</title><rect x="541.7" y="821" width="0.2" height="15.0" fill="rgb(225,114,16)" rx="2" ry="2" />
<text  x="544.73" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::get (262,626,260 samples, 0.05%)</title><rect x="789.5" y="549" width="0.5" height="15.0" fill="rgb(220,43,36)" rx="2" ry="2" />
<text  x="792.46" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_fdatasync (101,010,100 samples, 0.02%)</title><rect x="661.1" y="581" width="0.3" height="15.0" fill="rgb(214,19,13)" rx="2" ry="2" />
<text  x="664.13" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::get (595,959,590 samples, 0.11%)</title><rect x="840.3" y="565" width="1.3" height="15.0" fill="rgb(225,133,5)" rx="2" ry="2" />
<text  x="843.29" y="575.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::SetKeyImpl (252,525,250 samples, 0.05%)</title><rect x="891.3" y="629" width="0.6" height="15.0" fill="rgb(231,190,14)" rx="2" ry="2" />
<text  x="894.31" y="639.5" ></text>
</g>
<g >
<title>XXH3_hashLong_64b_default (515,151,510 samples, 0.10%)</title><rect x="990.3" y="517" width="1.1" height="15.0" fill="rgb(207,130,33)" rx="2" ry="2" />
<text  x="993.28" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (70,707,070 samples, 0.01%)</title><rect x="169.8" y="757" width="0.1" height="15.0" fill="rgb(214,55,7)" rx="2" ry="2" />
<text  x="172.79" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::back (232,323,230 samples, 0.04%)</title><rect x="1155.2" y="645" width="0.5" height="15.0" fill="rgb(244,16,13)" rx="2" ry="2" />
<text  x="1158.23" y="655.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="863.4" y="485" width="0.1" height="15.0" fill="rgb(230,129,46)" rx="2" ry="2" />
<text  x="866.39" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::BlobGarbageMeter*, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;::_M_head (191,919,190 samples, 0.04%)</title><rect x="1149.1" y="581" width="0.4" height="15.0" fill="rgb(223,143,38)" rx="2" ry="2" />
<text  x="1152.06" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (676,767,670 samples, 0.13%)</title><rect x="794.5" y="485" width="1.5" height="15.0" fill="rgb(220,218,17)" rx="2" ry="2" />
<text  x="797.48" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_end (303,030,300 samples, 0.06%)</title><rect x="902.2" y="597" width="0.7" height="15.0" fill="rgb(216,173,21)" rx="2" ry="2" />
<text  x="905.23" y="607.5" ></text>
</g>
<g >
<title>rocksdb::UncompressData (161,616,160 samples, 0.03%)</title><rect x="765.2" y="389" width="0.4" height="15.0" fill="rgb(237,218,13)" rx="2" ry="2" />
<text  x="768.21" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (434,343,430 samples, 0.08%)</title><rect x="944.8" y="581" width="0.9" height="15.0" fill="rgb(233,169,14)" rx="2" ry="2" />
<text  x="947.76" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SstPartitioner, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::get (333,333,330 samples, 0.06%)</title><rect x="1152.3" y="629" width="0.7" height="15.0" fill="rgb(242,23,22)" rx="2" ry="2" />
<text  x="1155.28" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (101,010,100 samples, 0.02%)</title><rect x="914.9" y="581" width="0.2" height="15.0" fill="rgb(205,194,17)" rx="2" ry="2" />
<text  x="917.90" y="591.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::empty (727,272,720 samples, 0.13%)</title><rect x="742.9" y="581" width="1.6" height="15.0" fill="rgb(225,43,24)" rx="2" ry="2" />
<text  x="745.92" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (161,616,160 samples, 0.03%)</title><rect x="783.4" y="517" width="0.4" height="15.0" fill="rgb(210,194,6)" rx="2" ry="2" />
<text  x="786.42" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (272,727,270 samples, 0.05%)</title><rect x="553.4" y="821" width="0.6" height="15.0" fill="rgb(213,34,20)" rx="2" ry="2" />
<text  x="556.36" y="831.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (252,525,250 samples, 0.05%)</title><rect x="786.4" y="469" width="0.5" height="15.0" fill="rgb(241,174,33)" rx="2" ry="2" />
<text  x="789.35" y="479.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (50,505,050 samples, 0.01%)</title><rect x="242.6" y="869" width="0.2" height="15.0" fill="rgb(226,211,52)" rx="2" ry="2" />
<text  x="245.64" y="879.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::DynamicBloom, std::default_delete&lt;rocksdb::DynamicBloom&gt; &gt;::get (313,131,310 samples, 0.06%)</title><rect x="166.2" y="789" width="0.7" height="15.0" fill="rgb(252,80,51)" rx="2" ry="2" />
<text  x="169.23" y="799.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::ProcessTrailerIfPresent (272,727,270 samples, 0.05%)</title><rect x="762.3" y="421" width="0.6" height="15.0" fill="rgb(224,65,3)" rx="2" ry="2" />
<text  x="765.33" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (212,121,210 samples, 0.04%)</title><rect x="862.2" y="533" width="0.5" height="15.0" fill="rgb(250,86,51)" rx="2" ry="2" />
<text  x="865.22" y="543.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (575,757,570 samples, 0.11%)</title><rect x="1126.4" y="549" width="1.2" height="15.0" fill="rgb(228,209,52)" rx="2" ry="2" />
<text  x="1129.38" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (49,171,716,680 samples, 9.09%)</title><rect x="392.8" y="805" width="107.2" height="15.0" fill="rgb(230,160,7)" rx="2" ry="2" />
<text  x="395.81" y="815.5" >__x64_sys_sch..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (252,525,250 samples, 0.05%)</title><rect x="1138.8" y="645" width="0.5" height="15.0" fill="rgb(216,225,16)" rx="2" ry="2" />
<text  x="1141.80" y="655.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::TryGetFromPrefetchBuffer (191,919,190 samples, 0.04%)</title><rect x="762.9" y="421" width="0.4" height="15.0" fill="rgb(239,36,39)" rx="2" ry="2" />
<text  x="765.92" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (90,909,090 samples, 0.02%)</title><rect x="779.0" y="469" width="0.2" height="15.0" fill="rgb(224,7,22)" rx="2" ry="2" />
<text  x="781.98" y="479.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (60,606,060 samples, 0.01%)</title><rect x="196.8" y="837" width="0.1" height="15.0" fill="rgb(210,175,14)" rx="2" ry="2" />
<text  x="199.77" y="847.5" ></text>
</g>
<g >
<title>get_page_from_freelist (90,909,090 samples, 0.02%)</title><rect x="664.8" y="437" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="667.79" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (121,212,120 samples, 0.02%)</title><rect x="834.4" y="501" width="0.3" height="15.0" fill="rgb(240,151,40)" rx="2" ry="2" />
<text  x="837.45" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (333,333,330 samples, 0.06%)</title><rect x="1138.1" y="645" width="0.7" height="15.0" fill="rgb(228,182,15)" rx="2" ry="2" />
<text  x="1141.07" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (484,848,480 samples, 0.09%)</title><rect x="1068.8" y="549" width="1.1" height="15.0" fill="rgb(246,41,35)" rx="2" ry="2" />
<text  x="1071.81" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (50,505,050 samples, 0.01%)</title><rect x="554.0" y="789" width="0.1" height="15.0" fill="rgb(240,173,41)" rx="2" ry="2" />
<text  x="556.95" y="799.5" ></text>
</g>
<g >
<title>XXH3_accumulate_avx512 (414,141,410 samples, 0.08%)</title><rect x="990.4" y="469" width="0.9" height="15.0" fill="rgb(253,57,43)" rx="2" ry="2" />
<text  x="993.37" y="479.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::AddToOutput (80,939,393,130 samples, 14.95%)</title><rect x="980.3" y="661" width="176.5" height="15.0" fill="rgb(228,162,18)" rx="2" ry="2" />
<text  x="983.33" y="671.5" >rocksdb::CompactionOut..</text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (444,444,440 samples, 0.08%)</title><rect x="1003.8" y="597" width="1.0" height="15.0" fill="rgb(220,208,17)" rx="2" ry="2" />
<text  x="1006.85" y="607.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (282,828,280 samples, 0.05%)</title><rect x="49.6" y="741" width="0.6" height="15.0" fill="rgb(242,94,40)" rx="2" ry="2" />
<text  x="52.62" y="751.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::TryGetFromPrefetchBuffer (212,121,210 samples, 0.04%)</title><rect x="806.9" y="453" width="0.5" height="15.0" fill="rgb(247,117,40)" rx="2" ry="2" />
<text  x="809.94" y="463.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::status (1,464,646,450 samples, 0.27%)</title><rect x="849.2" y="549" width="3.2" height="15.0" fill="rgb(248,114,52)" rx="2" ry="2" />
<text  x="852.16" y="559.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (60,606,060 samples, 0.01%)</title><rect x="173.8" y="821" width="0.2" height="15.0" fill="rgb(251,185,33)" rx="2" ry="2" />
<text  x="176.82" y="831.5" ></text>
</g>
<g >
<title>std::move&lt;bool&amp;&gt; (131,313,130 samples, 0.02%)</title><rect x="1123.0" y="629" width="0.3" height="15.0" fill="rgb(208,12,17)" rx="2" ry="2" />
<text  x="1126.01" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (70,707,070 samples, 0.01%)</title><rect x="551.1" y="917" width="0.1" height="15.0" fill="rgb(215,167,14)" rx="2" ry="2" />
<text  x="554.09" y="927.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (101,010,100 samples, 0.02%)</title><rect x="168.6" y="773" width="0.2" height="15.0" fill="rgb(223,149,45)" rx="2" ry="2" />
<text  x="171.58" y="783.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SavePoints, std::default_delete&lt;rocksdb::SavePoints&gt; &gt;::operator bool (70,707,070 samples, 0.01%)</title><rect x="51.8" y="853" width="0.1" height="15.0" fill="rgb(208,82,46)" rx="2" ry="2" />
<text  x="54.78" y="863.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::ProcessTrailerIfPresent (434,343,430 samples, 0.08%)</title><rect x="806.0" y="453" width="0.9" height="15.0" fill="rgb(248,183,36)" rx="2" ry="2" />
<text  x="809.00" y="463.5" ></text>
</g>
<g >
<title>rocksdb::RemoteFlushJob::PackLocal (13,434,343,300 samples, 2.48%)</title><rect x="661.4" y="661" width="29.3" height="15.0" fill="rgb(248,198,53)" rx="2" ry="2" />
<text  x="664.40" y="671.5" >ro..</text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Next (8,949,494,860 samples, 1.65%)</title><rect x="802.8" y="581" width="19.5" height="15.0" fill="rgb(240,109,10)" rx="2" ry="2" />
<text  x="805.76" y="591.5" ></text>
</g>
<g >
<title>std::tuple&lt;rocksdb::WriteBatch::ProtectionInfo*, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::tuple&lt;true, true&gt; (60,606,060 samples, 0.01%)</title><rect x="563.6" y="869" width="0.2" height="15.0" fill="rgb(244,158,21)" rx="2" ry="2" />
<text  x="566.64" y="879.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::WriteBuffered (555,555,550 samples, 0.10%)</title><rect x="993.6" y="533" width="1.2" height="15.0" fill="rgb(240,145,43)" rx="2" ry="2" />
<text  x="996.60" y="543.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::FlushBlockPolicy*, false&gt;::_M_head@plt (70,707,070 samples, 0.01%)</title><rect x="1053.8" y="549" width="0.2" height="15.0" fill="rgb(232,64,34)" rx="2" ry="2" />
<text  x="1056.81" y="559.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@@GLIBC_2.2.5 (70,707,070 samples, 0.01%)</title><rect x="29.4" y="837" width="0.2" height="15.0" fill="rgb(212,37,5)" rx="2" ry="2" />
<text  x="32.45" y="847.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (70,707,070 samples, 0.01%)</title><rect x="34.3" y="853" width="0.2" height="15.0" fill="rgb(207,117,44)" rx="2" ry="2" />
<text  x="37.31" y="863.5" ></text>
</g>
<g >
<title>rocksdb::DeleteDBFile (272,727,270 samples, 0.05%)</title><rect x="690.8" y="693" width="0.6" height="15.0" fill="rgb(230,104,40)" rx="2" ry="2" />
<text  x="693.84" y="703.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::WriteToWAL (8,737,373,650 samples, 1.61%)</title><rect x="33.7" y="901" width="19.1" height="15.0" fill="rgb(235,120,52)" rx="2" ry="2" />
<text  x="36.74" y="911.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (60,606,060 samples, 0.01%)</title><rect x="852.5" y="517" width="0.1" height="15.0" fill="rgb(215,118,37)" rx="2" ry="2" />
<text  x="855.51" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::emplace_back&lt;unsigned int&gt; (181,818,180 samples, 0.03%)</title><rect x="1012.3" y="581" width="0.4" height="15.0" fill="rgb(245,28,16)" rx="2" ry="2" />
<text  x="1015.32" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (131,313,130 samples, 0.02%)</title><rect x="221.7" y="869" width="0.3" height="15.0" fill="rgb(247,199,25)" rx="2" ry="2" />
<text  x="224.72" y="879.5" ></text>
</g>
<g >
<title>rocksdb::MemTableRep::KeyComparator::decode_len (9,727,272,630 samples, 1.80%)</title><rect x="668.2" y="581" width="21.2" height="15.0" fill="rgb(240,99,30)" rx="2" ry="2" />
<text  x="671.16" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (1,131,313,120 samples, 0.21%)</title><rect x="1125.2" y="581" width="2.4" height="15.0" fill="rgb(219,17,51)" rx="2" ry="2" />
<text  x="1128.17" y="591.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (373,737,370 samples, 0.07%)</title><rect x="731.5" y="581" width="0.8" height="15.0" fill="rgb(215,159,44)" rx="2" ry="2" />
<text  x="734.45" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (191,919,190 samples, 0.04%)</title><rect x="1134.8" y="613" width="0.4" height="15.0" fill="rgb(221,138,10)" rx="2" ry="2" />
<text  x="1137.79" y="623.5" ></text>
</g>
<g >
<title>rocksdb::ParseInternalKey (1,737,373,720 samples, 0.32%)</title><rect x="906.7" y="629" width="3.8" height="15.0" fill="rgb(249,151,18)" rx="2" ry="2" />
<text  x="909.70" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (80,808,080 samples, 0.01%)</title><rect x="958.9" y="661" width="0.1" height="15.0" fill="rgb(205,43,35)" rx="2" ry="2" />
<text  x="961.85" y="671.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::mersenne_twister_engine (22,979,797,750 samples, 4.25%)</title><rect x="587.5" y="981" width="50.1" height="15.0" fill="rgb(245,184,6)" rx="2" ry="2" />
<text  x="590.47" y="991.5" >std::..</text>
</g>
<g >
<title>copy_user_generic_unrolled (202,020,200 samples, 0.04%)</title><rect x="808.1" y="293" width="0.5" height="15.0" fill="rgb(227,108,18)" rx="2" ry="2" />
<text  x="811.13" y="303.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::NextEntryOffset (191,919,190 samples, 0.04%)</title><rect x="816.9" y="517" width="0.4" height="15.0" fill="rgb(247,164,0)" rx="2" ry="2" />
<text  x="819.88" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;&gt;::_Tuple_impl (131,313,130 samples, 0.02%)</title><rect x="559.0" y="885" width="0.3" height="15.0" fill="rgb(252,49,25)" rx="2" ry="2" />
<text  x="561.99" y="895.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (50,505,050 samples, 0.01%)</title><rect x="195.8" y="837" width="0.1" height="15.0" fill="rgb(209,208,32)" rx="2" ry="2" />
<text  x="198.78" y="847.5" ></text>
</g>
<g >
<title>__memset_evex_unaligned_erms (60,606,060 samples, 0.01%)</title><rect x="1179.8" y="981" width="0.1" height="15.0" fill="rgb(229,119,17)" rx="2" ry="2" />
<text  x="1182.80" y="991.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (434,343,430 samples, 0.08%)</title><rect x="864.8" y="613" width="0.9" height="15.0" fill="rgb(250,145,16)" rx="2" ry="2" />
<text  x="867.75" y="623.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::IOOptions (323,232,320 samples, 0.06%)</title><rect x="46.0" y="821" width="0.7" height="15.0" fill="rgb(236,34,51)" rx="2" ry="2" />
<text  x="48.98" y="831.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Valid (161,616,160 samples, 0.03%)</title><rect x="923.5" y="549" width="0.4" height="15.0" fill="rgb(218,145,49)" rx="2" ry="2" />
<text  x="926.51" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (50,505,050 samples, 0.01%)</title><rect x="170.2" y="805" width="0.1" height="15.0" fill="rgb(220,66,29)" rx="2" ry="2" />
<text  x="173.17" y="815.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::HasBuilder (1,717,171,700 samples, 0.32%)</title><rect x="1066.8" y="629" width="3.8" height="15.0" fill="rgb(241,127,34)" rx="2" ry="2" />
<text  x="1069.83" y="639.5" ></text>
</g>
<g >
<title>std::operator&amp; (50,505,050 samples, 0.01%)</title><rect x="178.7" y="869" width="0.1" height="15.0" fill="rgb(212,192,34)" rx="2" ry="2" />
<text  x="181.69" y="879.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (141,414,140 samples, 0.03%)</title><rect x="836.5" y="453" width="0.4" height="15.0" fill="rgb(242,122,12)" rx="2" ry="2" />
<text  x="839.54" y="463.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::key (252,525,250 samples, 0.05%)</title><rect x="822.8" y="581" width="0.6" height="15.0" fill="rgb(205,139,36)" rx="2" ry="2" />
<text  x="825.80" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Comparator::timestamp_size (60,606,060 samples, 0.01%)</title><rect x="76.6" y="821" width="0.2" height="15.0" fill="rgb(235,224,41)" rx="2" ry="2" />
<text  x="79.64" y="831.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (3,121,212,090 samples, 0.58%)</title><rect x="124.6" y="645" width="6.9" height="15.0" fill="rgb(254,161,10)" rx="2" ry="2" />
<text  x="127.65" y="655.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (171,717,170 samples, 0.03%)</title><rect x="742.2" y="581" width="0.4" height="15.0" fill="rgb(211,117,50)" rx="2" ry="2" />
<text  x="745.20" y="591.5" ></text>
</g>
<g >
<title>__libc_pread (272,727,270 samples, 0.05%)</title><rect x="763.8" y="405" width="0.6" height="15.0" fill="rgb(250,79,35)" rx="2" ry="2" />
<text  x="766.78" y="415.5" ></text>
</g>
<g >
<title>rocksdb::EncodeVarint32 (60,606,060 samples, 0.01%)</title><rect x="556.2" y="885" width="0.2" height="15.0" fill="rgb(223,114,54)" rx="2" ry="2" />
<text  x="559.22" y="895.5" ></text>
</g>
<g >
<title>rocksdb::ExtractValueType (888,888,880 samples, 0.16%)</title><rect x="1018.5" y="629" width="1.9" height="15.0" fill="rgb(250,80,7)" rx="2" ry="2" />
<text  x="1021.49" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (90,909,090 samples, 0.02%)</title><rect x="891.9" y="629" width="0.2" height="15.0" fill="rgb(206,2,6)" rx="2" ry="2" />
<text  x="894.88" y="639.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::BGWorkCompaction (223,323,230,090 samples, 41.26%)</title><rect x="691.8" y="757" width="486.9" height="15.0" fill="rgb(251,99,22)" rx="2" ry="2" />
<text  x="694.81" y="767.5" >rocksdb::DBImpl::BGWorkCompaction</text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (202,020,200 samples, 0.04%)</title><rect x="49.8" y="661" width="0.4" height="15.0" fill="rgb(252,35,26)" rx="2" ry="2" />
<text  x="52.79" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_ptr (575,757,570 samples, 0.11%)</title><rect x="944.5" y="597" width="1.2" height="15.0" fill="rgb(221,175,4)" rx="2" ry="2" />
<text  x="947.45" y="607.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::AllocateNode (60,606,060 samples, 0.01%)</title><rect x="81.7" y="789" width="0.2" height="15.0" fill="rgb(228,56,37)" rx="2" ry="2" />
<text  x="84.73" y="799.5" ></text>
</g>
<g >
<title>rocksdb::Compaction::SupportsPerKeyPlacement (191,919,190 samples, 0.04%)</title><rect x="938.3" y="629" width="0.4" height="15.0" fill="rgb(214,54,33)" rx="2" ry="2" />
<text  x="941.26" y="639.5" ></text>
</g>
<g >
<title>rocksdb::ReadOnlyInlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::ReadOnlyInlineSkipList (11,595,959,480 samples, 2.14%)</title><rect x="664.3" y="597" width="25.3" height="15.0" fill="rgb(208,17,38)" rx="2" ry="2" />
<text  x="667.28" y="607.5" >r..</text>
</g>
<g >
<title>std::operator&amp; (80,808,080 samples, 0.01%)</title><rect x="999.0" y="613" width="0.2" height="15.0" fill="rgb(228,29,41)" rx="2" ry="2" />
<text  x="1001.98" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::BlobGarbageMeter, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;::operator bool (101,010,100 samples, 0.02%)</title><rect x="1161.5" y="661" width="0.2" height="15.0" fill="rgb(218,76,45)" rx="2" ry="2" />
<text  x="1164.46" y="671.5" ></text>
</g>
<g >
<title>__find_get_block (50,505,050 samples, 0.01%)</title><rect x="42.6" y="501" width="0.1" height="15.0" fill="rgb(250,75,4)" rx="2" ry="2" />
<text  x="45.64" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (80,808,080 samples, 0.01%)</title><rect x="1109.8" y="517" width="0.1" height="15.0" fill="rgb(245,66,49)" rx="2" ry="2" />
<text  x="1112.77" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::end@plt (171,717,170 samples, 0.03%)</title><rect x="1092.2" y="629" width="0.3" height="15.0" fill="rgb(232,207,19)" rx="2" ry="2" />
<text  x="1095.15" y="639.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::CompactionHeapItemComparator::operator (121,212,120 samples, 0.02%)</title><rect x="733.6" y="597" width="0.3" height="15.0" fill="rgb(230,218,6)" rx="2" ry="2" />
<text  x="736.63" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (141,414,140 samples, 0.03%)</title><rect x="553.0" y="805" width="0.3" height="15.0" fill="rgb(235,215,42)" rx="2" ry="2" />
<text  x="555.96" y="815.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::BlockReadAmpBitmap, std::default_delete&lt;rocksdb::BlockReadAmpBitmap&gt; &gt;::unique_ptr&lt;std::default_delete&lt;rocksdb::BlockReadAmpBitmap&gt;, void&gt; (50,505,050 samples, 0.01%)</title><rect x="804.7" y="421" width="0.2" height="15.0" fill="rgb(218,81,45)" rx="2" ry="2" />
<text  x="807.74" y="431.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (4,181,818,140 samples, 0.77%)</title><rect x="803.5" y="517" width="9.1" height="15.0" fill="rgb(226,91,54)" rx="2" ry="2" />
<text  x="806.49" y="527.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status (4,353,535,310 samples, 0.80%)</title><rect x="824.1" y="581" width="9.5" height="15.0" fill="rgb(216,141,1)" rx="2" ry="2" />
<text  x="827.10" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::begin (50,505,050 samples, 0.01%)</title><rect x="62.1" y="853" width="0.1" height="15.0" fill="rgb(240,62,2)" rx="2" ry="2" />
<text  x="65.08" y="863.5" ></text>
</g>
<g >
<title>rocksdb::BlockContents::~BlockContents (60,606,060 samples, 0.01%)</title><rect x="768.7" y="389" width="0.1" height="15.0" fill="rgb(214,80,19)" rx="2" ry="2" />
<text  x="771.69" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (111,111,110 samples, 0.02%)</title><rect x="221.2" y="885" width="0.2" height="15.0" fill="rgb(241,20,12)" rx="2" ry="2" />
<text  x="224.15" y="895.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::end (50,505,050 samples, 0.01%)</title><rect x="572.4" y="981" width="0.1" height="15.0" fill="rgb(207,51,54)" rx="2" ry="2" />
<text  x="575.38" y="991.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatchInternal::SetCount (70,707,070 samples, 0.01%)</title><rect x="557.9" y="917" width="0.1" height="15.0" fill="rgb(249,155,32)" rx="2" ry="2" />
<text  x="560.87" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::get (70,707,070 samples, 0.01%)</title><rect x="1067.0" y="597" width="0.2" height="15.0" fill="rgb(247,59,45)" rx="2" ry="2" />
<text  x="1070.05" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (50,505,050 samples, 0.01%)</title><rect x="169.0" y="821" width="0.2" height="15.0" fill="rgb(254,188,23)" rx="2" ry="2" />
<text  x="172.05" y="831.5" ></text>
</g>
<g >
<title>vfs_write (1,555,555,540 samples, 0.29%)</title><rect x="39.6" y="725" width="3.4" height="15.0" fill="rgb(221,178,19)" rx="2" ry="2" />
<text  x="42.58" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator[] (50,505,050 samples, 0.01%)</title><rect x="568.6" y="981" width="0.1" height="15.0" fill="rgb(209,211,3)" rx="2" ry="2" />
<text  x="571.62" y="991.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey (101,010,100 samples, 0.02%)</title><rect x="147.8" y="741" width="0.2" height="15.0" fill="rgb(211,63,26)" rx="2" ry="2" />
<text  x="150.79" y="751.5" ></text>
</g>
<g >
<title>malloc (505,050,500 samples, 0.09%)</title><rect x="659.3" y="1013" width="1.1" height="15.0" fill="rgb(221,114,51)" rx="2" ry="2" />
<text  x="662.31" y="1023.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (969,696,960 samples, 0.18%)</title><rect x="854.4" y="549" width="2.1" height="15.0" fill="rgb(245,87,17)" rx="2" ry="2" />
<text  x="857.40" y="559.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (171,717,170 samples, 0.03%)</title><rect x="796.4" y="453" width="0.4" height="15.0" fill="rgb(229,73,26)" rx="2" ry="2" />
<text  x="799.40" y="463.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::Invalidate (60,606,060 samples, 0.01%)</title><rect x="949.4" y="661" width="0.2" height="15.0" fill="rgb(211,227,15)" rx="2" ry="2" />
<text  x="952.43" y="671.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (222,222,220 samples, 0.04%)</title><rect x="1004.3" y="565" width="0.5" height="15.0" fill="rgb(241,183,24)" rx="2" ry="2" />
<text  x="1007.33" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="863.2" y="533" width="0.3" height="15.0" fill="rgb(228,200,27)" rx="2" ry="2" />
<text  x="866.23" y="543.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (70,707,070 samples, 0.01%)</title><rect x="242.2" y="885" width="0.2" height="15.0" fill="rgb(228,81,27)" rx="2" ry="2" />
<text  x="245.20" y="895.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::SstPartitioner*, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="1081.8" y="549" width="0.2" height="15.0" fill="rgb(223,64,0)" rx="2" ry="2" />
<text  x="1084.83" y="559.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::WriteThread::Writer*&gt;::compare_exchange_weak (191,919,190 samples, 0.04%)</title><rect x="527.6" y="853" width="0.4" height="15.0" fill="rgb(213,190,29)" rx="2" ry="2" />
<text  x="530.59" y="863.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::SeekToFirstImpl (90,909,090 samples, 0.02%)</title><rect x="769.5" y="485" width="0.2" height="15.0" fill="rgb(223,205,5)" rx="2" ry="2" />
<text  x="772.53" y="495.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;, rocksdb::CompactionMergingIterator::HeapItem*&gt;::iterator_impl (121,212,120 samples, 0.02%)</title><rect x="735.7" y="581" width="0.3" height="15.0" fill="rgb(227,172,13)" rx="2" ry="2" />
<text  x="738.72" y="591.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::AddWithLastKey (242,424,240 samples, 0.04%)</title><rect x="1059.9" y="645" width="0.6" height="15.0" fill="rgb(242,72,30)" rx="2" ry="2" />
<text  x="1062.94" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (111,111,110 samples, 0.02%)</title><rect x="890.7" y="597" width="0.2" height="15.0" fill="rgb(212,75,17)" rx="2" ry="2" />
<text  x="893.65" y="607.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::value (1,686,868,670 samples, 0.31%)</title><rect x="921.9" y="613" width="3.7" height="15.0" fill="rgb(238,32,40)" rx="2" ry="2" />
<text  x="924.94" y="623.5" ></text>
</g>
<g >
<title>ROCKSDB_XXH3_64bits (525,252,520 samples, 0.10%)</title><rect x="990.3" y="549" width="1.1" height="15.0" fill="rgb(222,223,14)" rx="2" ry="2" />
<text  x="993.28" y="559.5" ></text>
</g>
<g >
<title>__strlen_evex (60,606,060 samples, 0.01%)</title><rect x="48.7" y="805" width="0.1" height="15.0" fill="rgb(228,212,21)" rx="2" ry="2" />
<text  x="51.69" y="815.5" ></text>
</g>
<g >
<title>rocksdb::Block::ApproximateMemoryUsage (50,505,050 samples, 0.01%)</title><rect x="803.5" y="501" width="0.1" height="15.0" fill="rgb(218,140,51)" rx="2" ry="2" />
<text  x="806.53" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::_M_ptr (202,020,200 samples, 0.04%)</title><rect x="1063.0" y="581" width="0.5" height="15.0" fill="rgb(215,47,32)" rx="2" ry="2" />
<text  x="1066.02" y="591.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (727,272,720 samples, 0.13%)</title><rect x="1105.3" y="597" width="1.6" height="15.0" fill="rgb(230,105,14)" rx="2" ry="2" />
<text  x="1108.32" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (262,626,260 samples, 0.05%)</title><rect x="787.7" y="485" width="0.5" height="15.0" fill="rgb(236,47,51)" rx="2" ry="2" />
<text  x="790.65" y="495.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (90,909,090 samples, 0.02%)</title><rect x="172.6" y="837" width="0.2" height="15.0" fill="rgb(213,180,53)" rx="2" ry="2" />
<text  x="175.61" y="847.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="177.3" y="805" width="0.2" height="15.0" fill="rgb(222,100,43)" rx="2" ry="2" />
<text  x="180.30" y="815.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count (80,808,080 samples, 0.01%)</title><rect x="197.6" y="789" width="0.2" height="15.0" fill="rgb(223,78,26)" rx="2" ry="2" />
<text  x="200.63" y="799.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Next (121,919,190,700 samples, 22.53%)</title><rect x="698.2" y="677" width="265.8" height="15.0" fill="rgb(207,200,41)" rx="2" ry="2" />
<text  x="701.18" y="687.5" >rocksdb::CompactionIterator::Next</text>
</g>
<g >
<title>rocksdb::WriteThread::CreateMissingNewerLinks (151,515,150 samples, 0.03%)</title><rect x="222.0" y="869" width="0.4" height="15.0" fill="rgb(205,28,19)" rx="2" ry="2" />
<text  x="225.03" y="879.5" ></text>
</g>
<g >
<title>rocksdb::Compaction::output_level (121,212,120 samples, 0.02%)</title><rect x="1061.7" y="645" width="0.2" height="15.0" fill="rgb(248,204,35)" rx="2" ry="2" />
<text  x="1064.68" y="655.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::reset_root_cmp_cache (50,505,050 samples, 0.01%)</title><rect x="707.5" y="581" width="0.1" height="15.0" fill="rgb(228,39,20)" rx="2" ry="2" />
<text  x="710.47" y="591.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::operator= (50,505,050 samples, 0.01%)</title><rect x="36.5" y="853" width="0.1" height="15.0" fill="rgb(230,35,14)" rx="2" ry="2" />
<text  x="39.47" y="863.5" ></text>
</g>
<g >
<title>rocksdb::Configurable::ConfigureOptions (50,505,050 samples, 0.01%)</title><rect x="661.6" y="437" width="0.1" height="15.0" fill="rgb(247,12,35)" rx="2" ry="2" />
<text  x="664.57" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;@plt (101,010,100 samples, 0.02%)</title><rect x="1068.6" y="549" width="0.2" height="15.0" fill="rgb(247,12,38)" rx="2" ry="2" />
<text  x="1071.59" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (161,616,160 samples, 0.03%)</title><rect x="1133.9" y="597" width="0.4" height="15.0" fill="rgb(218,85,14)" rx="2" ry="2" />
<text  x="1136.93" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (404,040,400 samples, 0.07%)</title><rect x="911.6" y="629" width="0.9" height="15.0" fill="rgb(211,212,42)" rx="2" ry="2" />
<text  x="914.57" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (1,656,565,640 samples, 0.31%)</title><rect x="972.2" y="629" width="3.6" height="15.0" fill="rgb(219,197,11)" rx="2" ry="2" />
<text  x="975.16" y="639.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Iterator::Valid (141,414,140 samples, 0.03%)</title><rect x="667.2" y="581" width="0.3" height="15.0" fill="rgb(226,204,17)" rx="2" ry="2" />
<text  x="670.23" y="591.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (212,121,210 samples, 0.04%)</title><rect x="793.9" y="517" width="0.4" height="15.0" fill="rgb(215,153,26)" rx="2" ry="2" />
<text  x="796.86" y="527.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (111,111,110 samples, 0.02%)</title><rect x="533.1" y="885" width="0.2" height="15.0" fill="rgb(251,145,21)" rx="2" ry="2" />
<text  x="536.10" y="895.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="852.8" y="485" width="0.1" height="15.0" fill="rgb(221,51,26)" rx="2" ry="2" />
<text  x="855.84" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (50,505,050 samples, 0.01%)</title><rect x="34.3" y="805" width="0.1" height="15.0" fill="rgb(214,125,38)" rx="2" ry="2" />
<text  x="37.31" y="815.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::io_status (70,707,070 samples, 0.01%)</title><rect x="990.1" y="565" width="0.2" height="15.0" fill="rgb(245,72,5)" rx="2" ry="2" />
<text  x="993.10" y="575.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (111,111,110 samples, 0.02%)</title><rect x="1140.3" y="357" width="0.3" height="15.0" fill="rgb(220,161,5)" rx="2" ry="2" />
<text  x="1143.34" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, unsigned int&amp;, unsigned long&amp;&gt;::_M_tail (60,606,060 samples, 0.01%)</title><rect x="561.0" y="885" width="0.1" height="15.0" fill="rgb(235,171,11)" rx="2" ry="2" />
<text  x="563.98" y="895.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;::base (313,131,310 samples, 0.06%)</title><rect x="954.5" y="613" width="0.7" height="15.0" fill="rgb(206,132,6)" rx="2" ry="2" />
<text  x="957.47" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_drop_node (70,707,070 samples, 0.01%)</title><rect x="62.6" y="837" width="0.2" height="15.0" fill="rgb(213,98,14)" rx="2" ry="2" />
<text  x="65.63" y="847.5" ></text>
</g>
<g >
<title>pagecache_get_page (121,212,120 samples, 0.02%)</title><rect x="994.0" y="309" width="0.3" height="15.0" fill="rgb(227,126,20)" rx="2" ry="2" />
<text  x="997.02" y="319.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Valid (111,111,110 samples, 0.02%)</title><rect x="915.2" y="629" width="0.2" height="15.0" fill="rgb(217,31,16)" rx="2" ry="2" />
<text  x="918.18" y="639.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="792.2" y="501" width="0.1" height="15.0" fill="rgb(229,113,54)" rx="2" ry="2" />
<text  x="795.17" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;std::_Rb_tree_node_base*, std::_Rb_tree_node_base*&gt;::pair&lt;std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;*&amp;, std::_Rb_tree_node_base*&amp;, true&gt; (60,606,060 samples, 0.01%)</title><rect x="74.0" y="757" width="0.2" height="15.0" fill="rgb(252,36,16)" rx="2" ry="2" />
<text  x="77.04" y="767.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (50,505,050 samples, 0.01%)</title><rect x="554.0" y="805" width="0.1" height="15.0" fill="rgb(250,124,8)" rx="2" ry="2" />
<text  x="556.95" y="815.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (272,727,270 samples, 0.05%)</title><rect x="843.7" y="565" width="0.6" height="15.0" fill="rgb(221,204,44)" rx="2" ry="2" />
<text  x="846.70" y="575.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::WriteBatch::ProtectionInfo*, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="564.9" y="869" width="0.2" height="15.0" fill="rgb(213,224,2)" rx="2" ry="2" />
<text  x="567.94" y="879.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_level (131,313,130 samples, 0.02%)</title><rect x="1105.0" y="597" width="0.3" height="15.0" fill="rgb(219,149,32)" rx="2" ry="2" />
<text  x="1108.02" y="607.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;53ul&gt; (323,232,320 samples, 0.06%)</title><rect x="1137.4" y="645" width="0.7" height="15.0" fill="rgb(243,220,0)" rx="2" ry="2" />
<text  x="1140.37" y="655.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (474,747,470 samples, 0.09%)</title><rect x="807.9" y="389" width="1.0" height="15.0" fill="rgb(241,29,13)" rx="2" ry="2" />
<text  x="810.91" y="399.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (151,515,150 samples, 0.03%)</title><rect x="1113.8" y="645" width="0.3" height="15.0" fill="rgb(209,109,3)" rx="2" ry="2" />
<text  x="1116.76" y="655.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (333,333,330 samples, 0.06%)</title><rect x="745.8" y="565" width="0.7" height="15.0" fill="rgb(214,2,25)" rx="2" ry="2" />
<text  x="748.79" y="575.5" ></text>
</g>
<g >
<title>std::operator&amp;@plt (262,626,260 samples, 0.05%)</title><rect x="538.5" y="885" width="0.5" height="15.0" fill="rgb(221,60,50)" rx="2" ry="2" />
<text  x="541.47" y="895.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block_kData&gt; (3,232,323,200 samples, 0.60%)</title><rect x="804.3" y="501" width="7.1" height="15.0" fill="rgb(233,3,23)" rx="2" ry="2" />
<text  x="807.35" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (101,010,100 samples, 0.02%)</title><rect x="567.0" y="901" width="0.2" height="15.0" fill="rgb(221,65,9)" rx="2" ry="2" />
<text  x="570.01" y="911.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::SetKeyImpl (676,767,670 samples, 0.13%)</title><rect x="889.7" y="613" width="1.5" height="15.0" fill="rgb(219,82,19)" rx="2" ry="2" />
<text  x="892.75" y="623.5" ></text>
</g>
<g >
<title>rocksdb::IsExtendedValueType (151,515,150 samples, 0.03%)</title><rect x="887.3" y="645" width="0.3" height="15.0" fill="rgb(216,61,45)" rx="2" ry="2" />
<text  x="890.26" y="655.5" ></text>
</g>
<g >
<title>__brk (70,707,070 samples, 0.01%)</title><rect x="10.4" y="997" width="0.2" height="15.0" fill="rgb(248,167,22)" rx="2" ry="2" />
<text  x="13.44" y="1007.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Valid (262,626,260 samples, 0.05%)</title><rect x="921.3" y="613" width="0.6" height="15.0" fill="rgb(239,29,22)" rx="2" ry="2" />
<text  x="924.28" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt;::end (111,111,110 samples, 0.02%)</title><rect x="1074.8" y="613" width="0.2" height="15.0" fill="rgb(211,159,15)" rx="2" ry="2" />
<text  x="1077.76" y="623.5" ></text>
</g>
<g >
<title>rocksdb::MergeHelper::keys[abi:cxx11] (60,606,060 samples, 0.01%)</title><rect x="952.2" y="645" width="0.1" height="15.0" fill="rgb(227,57,6)" rx="2" ry="2" />
<text  x="955.16" y="655.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (3,484,848,450 samples, 0.64%)</title><rect x="760.7" y="485" width="7.6" height="15.0" fill="rgb(237,120,13)" rx="2" ry="2" />
<text  x="763.74" y="495.5" ></text>
</g>
<g >
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::DeleteValue (80,808,080 samples, 0.01%)</title><rect x="768.7" y="421" width="0.2" height="15.0" fill="rgb(246,141,24)" rx="2" ry="2" />
<text  x="771.69" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (434,343,430 samples, 0.08%)</title><rect x="177.5" y="853" width="1.0" height="15.0" fill="rgb(252,212,39)" rx="2" ry="2" />
<text  x="180.52" y="863.5" ></text>
</g>
<g >
<title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Insert (333,333,330 samples, 0.06%)</title><rect x="811.5" y="485" width="0.8" height="15.0" fill="rgb(228,212,7)" rx="2" ry="2" />
<text  x="814.52" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (242,424,240 samples, 0.04%)</title><rect x="848.1" y="485" width="0.6" height="15.0" fill="rgb(218,229,34)" rx="2" ry="2" />
<text  x="851.13" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (272,727,270 samples, 0.05%)</title><rect x="782.7" y="469" width="0.6" height="15.0" fill="rgb(217,18,5)" rx="2" ry="2" />
<text  x="785.68" y="479.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (505,050,500 samples, 0.09%)</title><rect x="1164.7" y="629" width="1.1" height="15.0" fill="rgb(233,122,0)" rx="2" ry="2" />
<text  x="1167.74" y="639.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (161,616,160 samples, 0.03%)</title><rect x="552.9" y="821" width="0.4" height="15.0" fill="rgb(216,148,23)" rx="2" ry="2" />
<text  x="555.92" y="831.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (70,707,070 samples, 0.01%)</title><rect x="175.7" y="805" width="0.2" height="15.0" fill="rgb(253,174,30)" rx="2" ry="2" />
<text  x="178.70" y="815.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char [], rocksdb::CustomDeleter&gt;::get (50,505,050 samples, 0.01%)</title><rect x="765.3" y="357" width="0.1" height="15.0" fill="rgb(213,109,44)" rx="2" ry="2" />
<text  x="768.30" y="367.5" ></text>
</g>
<g >
<title>new_sync_read (393,939,390 samples, 0.07%)</title><rect x="808.0" y="357" width="0.8" height="15.0" fill="rgb(207,45,47)" rx="2" ry="2" />
<text  x="810.98" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_put_node (80,808,080 samples, 0.01%)</title><rect x="63.9" y="821" width="0.2" height="15.0" fill="rgb(206,0,23)" rx="2" ry="2" />
<text  x="66.93" y="831.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (222,222,220 samples, 0.04%)</title><rect x="585.1" y="917" width="0.5" height="15.0" fill="rgb(216,19,17)" rx="2" ry="2" />
<text  x="588.07" y="927.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (141,414,140 samples, 0.03%)</title><rect x="789.1" y="517" width="0.4" height="15.0" fill="rgb(205,74,8)" rx="2" ry="2" />
<text  x="792.15" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (60,606,060 samples, 0.01%)</title><rect x="993.0" y="517" width="0.1" height="15.0" fill="rgb(207,139,44)" rx="2" ry="2" />
<text  x="995.99" y="527.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (13,898,989,760 samples, 2.57%)</title><rect x="661.1" y="789" width="30.3" height="15.0" fill="rgb(239,186,7)" rx="2" ry="2" />
<text  x="664.13" y="799.5" >st..</text>
</g>
<g >
<title>rocksdb::lru_cache::LRUCacheShard::Release (202,020,200 samples, 0.04%)</title><rect x="813.3" y="405" width="0.4" height="15.0" fill="rgb(213,206,21)" rx="2" ry="2" />
<text  x="816.31" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (222,222,220 samples, 0.04%)</title><rect x="1114.3" y="645" width="0.5" height="15.0" fill="rgb(219,44,24)" rx="2" ry="2" />
<text  x="1117.31" y="655.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ExtractLargeValueIfNeededImpl (60,606,060 samples, 0.01%)</title><rect x="937.7" y="629" width="0.1" height="15.0" fill="rgb(241,168,22)" rx="2" ry="2" />
<text  x="940.71" y="639.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::IsDeleteRangeSentinelKey (1,020,202,010 samples, 0.19%)</title><rect x="914.2" y="645" width="2.2" height="15.0" fill="rgb(234,95,9)" rx="2" ry="2" />
<text  x="917.17" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (90,909,090 samples, 0.02%)</title><rect x="221.7" y="853" width="0.2" height="15.0" fill="rgb(214,126,52)" rx="2" ry="2" />
<text  x="224.74" y="863.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (50,505,050 samples, 0.01%)</title><rect x="801.2" y="549" width="0.1" height="15.0" fill="rgb(243,93,41)" rx="2" ry="2" />
<text  x="804.15" y="559.5" ></text>
</g>
<g >
<title>get_page_from_freelist (90,909,090 samples, 0.02%)</title><rect x="689.7" y="325" width="0.2" height="15.0" fill="rgb(253,51,6)" rx="2" ry="2" />
<text  x="692.67" y="335.5" ></text>
</g>
<g >
<title>stop_this_handle (60,606,060 samples, 0.01%)</title><rect x="41.7" y="549" width="0.2" height="15.0" fill="rgb(253,221,51)" rx="2" ry="2" />
<text  x="44.73" y="559.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (90,909,090 samples, 0.02%)</title><rect x="302.9" y="869" width="0.2" height="15.0" fill="rgb(241,189,21)" rx="2" ry="2" />
<text  x="305.90" y="879.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (131,313,130 samples, 0.02%)</title><rect x="542.7" y="853" width="0.3" height="15.0" fill="rgb(251,26,17)" rx="2" ry="2" />
<text  x="545.74" y="863.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (111,111,110 samples, 0.02%)</title><rect x="1140.3" y="341" width="0.3" height="15.0" fill="rgb(231,39,46)" rx="2" ry="2" />
<text  x="1143.34" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::end (90,909,090 samples, 0.02%)</title><rect x="899.4" y="613" width="0.2" height="15.0" fill="rgb(214,22,54)" rx="2" ry="2" />
<text  x="902.37" y="623.5" ></text>
</g>
<g >
<title>rocksdb::PersistRocksDBOptions (50,505,050 samples, 0.01%)</title><rect x="661.4" y="613" width="0.1" height="15.0" fill="rgb(228,20,40)" rx="2" ry="2" />
<text  x="664.42" y="623.5" ></text>
</g>
<g >
<title>tcp_push_one (101,010,100 samples, 0.02%)</title><rect x="690.3" y="389" width="0.3" height="15.0" fill="rgb(227,93,25)" rx="2" ry="2" />
<text  x="693.34" y="399.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::IOStatus (121,212,120 samples, 0.02%)</title><rect x="52.9" y="901" width="0.3" height="15.0" fill="rgb(226,72,26)" rx="2" ry="2" />
<text  x="55.92" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt;::__normal_iterator (121,212,120 samples, 0.02%)</title><rect x="1042.3" y="597" width="0.2" height="15.0" fill="rgb(228,150,32)" rx="2" ry="2" />
<text  x="1045.27" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Mod&lt;unsigned long, 4294967296ul, 1ul, 0ul, true, true&gt;::__calc (5,090,909,040 samples, 0.94%)</title><rect x="609.8" y="933" width="11.1" height="15.0" fill="rgb(244,71,35)" rx="2" ry="2" />
<text  x="612.82" y="943.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (272,727,270 samples, 0.05%)</title><rect x="690.8" y="597" width="0.6" height="15.0" fill="rgb(252,5,34)" rx="2" ry="2" />
<text  x="693.84" y="607.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (222,222,220 samples, 0.04%)</title><rect x="1001.2" y="485" width="0.5" height="15.0" fill="rgb(246,168,6)" rx="2" ry="2" />
<text  x="1004.20" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (4,232,323,190 samples, 0.78%)</title><rect x="1124.7" y="597" width="9.2" height="15.0" fill="rgb(237,107,54)" rx="2" ry="2" />
<text  x="1127.70" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (50,505,050 samples, 0.01%)</title><rect x="1028.2" y="613" width="0.1" height="15.0" fill="rgb(240,120,6)" rx="2" ry="2" />
<text  x="1031.22" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (60,606,060 samples, 0.01%)</title><rect x="542.9" y="805" width="0.1" height="15.0" fill="rgb(246,134,18)" rx="2" ry="2" />
<text  x="545.87" y="815.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_level (80,808,080 samples, 0.01%)</title><rect x="720.6" y="533" width="0.1" height="15.0" fill="rgb(225,139,26)" rx="2" ry="2" />
<text  x="723.55" y="543.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid (90,909,090 samples, 0.02%)</title><rect x="966.2" y="661" width="0.2" height="15.0" fill="rgb(237,227,12)" rx="2" ry="2" />
<text  x="969.19" y="671.5" ></text>
</g>
<g >
<title>rocksdb::DeleteScheduler::DeleteFile (272,727,270 samples, 0.05%)</title><rect x="690.8" y="661" width="0.6" height="15.0" fill="rgb(214,227,18)" rx="2" ry="2" />
<text  x="693.84" y="671.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (636,363,630 samples, 0.12%)</title><rect x="895.0" y="613" width="1.4" height="15.0" fill="rgb(228,163,2)" rx="2" ry="2" />
<text  x="898.03" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (575,757,570 samples, 0.11%)</title><rect x="909.1" y="597" width="1.2" height="15.0" fill="rgb(220,39,49)" rx="2" ry="2" />
<text  x="912.08" y="607.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::Flush (565,656,560 samples, 0.10%)</title><rect x="993.6" y="549" width="1.2" height="15.0" fill="rgb(245,110,22)" rx="2" ry="2" />
<text  x="996.58" y="559.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (191,919,190 samples, 0.04%)</title><rect x="910.8" y="613" width="0.4" height="15.0" fill="rgb(206,17,27)" rx="2" ry="2" />
<text  x="913.78" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (1,383,838,370 samples, 0.26%)</title><rect x="1128.6" y="581" width="3.0" height="15.0" fill="rgb(253,4,19)" rx="2" ry="2" />
<text  x="1131.60" y="591.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatch::GetDataSize (50,505,050 samples, 0.01%)</title><rect x="557.1" y="901" width="0.1" height="15.0" fill="rgb(230,30,18)" rx="2" ry="2" />
<text  x="560.06" y="911.5" ></text>
</g>
<g >
<title>rocksdb::VarintLength@plt (50,505,050 samples, 0.01%)</title><rect x="689.5" y="581" width="0.1" height="15.0" fill="rgb(211,156,9)" rx="2" ry="2" />
<text  x="692.45" y="591.5" ></text>
</g>
<g >
<title>__GI___libc_write (1,797,979,780 samples, 0.33%)</title><rect x="39.1" y="805" width="3.9" height="15.0" fill="rgb(230,161,33)" rx="2" ry="2" />
<text  x="42.11" y="815.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (3,525,252,490 samples, 0.65%)</title><rect x="312.7" y="821" width="7.7" height="15.0" fill="rgb(251,54,51)" rx="2" ry="2" />
<text  x="315.74" y="831.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Next (141,414,140 samples, 0.03%)</title><rect x="776.6" y="549" width="0.3" height="15.0" fill="rgb(215,9,43)" rx="2" ry="2" />
<text  x="779.64" y="559.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (474,747,470 samples, 0.09%)</title><rect x="176.1" y="853" width="1.1" height="15.0" fill="rgb(226,218,15)" rx="2" ry="2" />
<text  x="179.14" y="863.5" ></text>
</g>
<g >
<title>std::move&lt;unsigned char&amp;&gt; (60,606,060 samples, 0.01%)</title><rect x="1123.6" y="629" width="0.2" height="15.0" fill="rgb(246,123,44)" rx="2" ry="2" />
<text  x="1126.62" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::Tracer, std::default_delete&lt;rocksdb::Tracer&gt; &gt;::operator bool (242,424,240 samples, 0.04%)</title><rect x="544.7" y="901" width="0.5" height="15.0" fill="rgb(226,99,22)" rx="2" ry="2" />
<text  x="547.66" y="911.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::get_left (272,727,270 samples, 0.05%)</title><rect x="732.3" y="597" width="0.6" height="15.0" fill="rgb(208,99,10)" rx="2" ry="2" />
<text  x="735.33" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::FileMetaData* const*, std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt; &gt;::base@plt (121,212,120 samples, 0.02%)</title><rect x="1073.5" y="597" width="0.3" height="15.0" fill="rgb(215,159,3)" rx="2" ry="2" />
<text  x="1076.50" y="607.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::SeekToFirstImpl (60,606,060 samples, 0.01%)</title><rect x="814.7" y="517" width="0.2" height="15.0" fill="rgb(240,61,34)" rx="2" ry="2" />
<text  x="817.74" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::rend (191,919,190 samples, 0.04%)</title><rect x="961.9" y="661" width="0.4" height="15.0" fill="rgb(241,201,6)" rx="2" ry="2" />
<text  x="964.87" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (70,707,070 samples, 0.01%)</title><rect x="10.4" y="965" width="0.2" height="15.0" fill="rgb(251,37,27)" rx="2" ry="2" />
<text  x="13.44" y="975.5" ></text>
</g>
<g >
<title>rocksdb::Status::MarkChecked (80,808,080 samples, 0.01%)</title><rect x="969.0" y="677" width="0.2" height="15.0" fill="rgb(242,54,51)" rx="2" ry="2" />
<text  x="972.01" y="687.5" ></text>
</g>
<g >
<title>rocksdb::DecodeEntry::operator (151,515,150 samples, 0.03%)</title><rect x="773.6" y="469" width="0.3" height="15.0" fill="rgb(218,11,22)" rx="2" ry="2" />
<text  x="776.56" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (80,808,080 samples, 0.01%)</title><rect x="996.7" y="581" width="0.2" height="15.0" fill="rgb(231,162,52)" rx="2" ry="2" />
<text  x="999.71" y="591.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::Invalidate (505,050,500 samples, 0.09%)</title><rect x="813.0" y="517" width="1.1" height="15.0" fill="rgb(234,38,26)" rx="2" ry="2" />
<text  x="816.02" y="527.5" ></text>
</g>
<g >
<title>rocksdb::InternalKeyComparator::CompareKeySeq (12,858,585,730 samples, 2.38%)</title><rect x="107.7" y="693" width="28.1" height="15.0" fill="rgb(210,189,4)" rx="2" ry="2" />
<text  x="110.74" y="703.5" >r..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::_M_ptr (50,505,050 samples, 0.01%)</title><rect x="179.4" y="885" width="0.1" height="15.0" fill="rgb(230,197,21)" rx="2" ry="2" />
<text  x="182.44" y="895.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (494,949,490 samples, 0.09%)</title><rect x="912.5" y="629" width="1.0" height="15.0" fill="rgb(230,54,12)" rx="2" ry="2" />
<text  x="915.45" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (101,010,100 samples, 0.02%)</title><rect x="541.0" y="853" width="0.3" height="15.0" fill="rgb(209,115,32)" rx="2" ry="2" />
<text  x="544.05" y="863.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (727,272,720 samples, 0.13%)</title><rect x="180.6" y="885" width="1.6" height="15.0" fill="rgb(235,63,13)" rx="2" ry="2" />
<text  x="183.63" y="895.5" ></text>
</g>
<g >
<title>std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;::pair&lt;rocksdb::MemTable* const&amp;, 0ul&gt; (151,515,150 samples, 0.03%)</title><rect x="71.1" y="677" width="0.4" height="15.0" fill="rgb(214,58,28)" rx="2" ry="2" />
<text  x="74.13" y="687.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::status (3,424,242,390 samples, 0.63%)</title><rect x="845.6" y="581" width="7.5" height="15.0" fill="rgb(231,128,29)" rx="2" ry="2" />
<text  x="848.59" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (50,505,050 samples, 0.01%)</title><rect x="838.8" y="565" width="0.1" height="15.0" fill="rgb(212,84,50)" rx="2" ry="2" />
<text  x="841.79" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (393,939,390 samples, 0.07%)</title><rect x="864.8" y="597" width="0.9" height="15.0" fill="rgb(228,174,12)" rx="2" ry="2" />
<text  x="867.84" y="607.5" ></text>
</g>
<g >
<title>rocksdb::MemTableRep::KeyComparator::decode_key (101,010,100 samples, 0.02%)</title><rect x="160.5" y="757" width="0.2" height="15.0" fill="rgb(237,209,25)" rx="2" ry="2" />
<text  x="163.46" y="767.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Next (2,969,696,940 samples, 0.55%)</title><rect x="815.3" y="565" width="6.4" height="15.0" fill="rgb(217,91,30)" rx="2" ry="2" />
<text  x="818.27" y="575.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="786.6" y="421" width="0.3" height="15.0" fill="rgb(248,63,27)" rx="2" ry="2" />
<text  x="789.64" y="431.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="800.8" y="469" width="0.1" height="15.0" fill="rgb(220,171,34)" rx="2" ry="2" />
<text  x="803.78" y="479.5" ></text>
</g>
<g >
<title>@plt (70,707,070 samples, 0.01%)</title><rect x="963.8" y="645" width="0.2" height="15.0" fill="rgb(222,150,33)" rx="2" ry="2" />
<text  x="966.83" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (747,474,740 samples, 0.14%)</title><rect x="830.8" y="533" width="1.6" height="15.0" fill="rgb(208,223,49)" rx="2" ry="2" />
<text  x="833.82" y="543.5" ></text>
</g>
<g >
<title>ksys_write (1,686,868,670 samples, 0.31%)</title><rect x="39.3" y="741" width="3.7" height="15.0" fill="rgb(219,146,11)" rx="2" ry="2" />
<text  x="42.29" y="751.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (555,555,550 samples, 0.10%)</title><rect x="993.6" y="389" width="1.2" height="15.0" fill="rgb(246,15,39)" rx="2" ry="2" />
<text  x="996.60" y="399.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (70,707,070 samples, 0.01%)</title><rect x="200.0" y="869" width="0.1" height="15.0" fill="rgb(224,195,15)" rx="2" ry="2" />
<text  x="202.96" y="879.5" ></text>
</g>
<g >
<title>do_anonymous_page (252,525,250 samples, 0.05%)</title><rect x="658.5" y="901" width="0.6" height="15.0" fill="rgb(228,104,41)" rx="2" ry="2" />
<text  x="661.51" y="911.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::allocate (60,606,060 samples, 0.01%)</title><rect x="582.4" y="885" width="0.1" height="15.0" fill="rgb(236,38,43)" rx="2" ry="2" />
<text  x="585.36" y="895.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::GetInstance (50,505,050 samples, 0.01%)</title><rect x="1137.2" y="645" width="0.1" height="15.0" fill="rgb(240,105,18)" rx="2" ry="2" />
<text  x="1140.17" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::SavePoints, std::default_delete&lt;rocksdb::SavePoints&gt; &gt;::_M_ptr (111,111,110 samples, 0.02%)</title><rect x="564.4" y="901" width="0.2" height="15.0" fill="rgb(226,75,34)" rx="2" ry="2" />
<text  x="567.37" y="911.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="928.6" y="565" width="0.1" height="15.0" fill="rgb(211,193,17)" rx="2" ry="2" />
<text  x="931.57" y="575.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::SuperVersion*, 8ul&gt;::end (50,505,050 samples, 0.01%)</title><rect x="31.6" y="869" width="0.1" height="15.0" fill="rgb(223,185,8)" rx="2" ry="2" />
<text  x="34.63" y="879.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (151,515,150 samples, 0.03%)</title><rect x="844.0" y="533" width="0.3" height="15.0" fill="rgb(208,68,7)" rx="2" ry="2" />
<text  x="846.96" y="543.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;::_Deque_iterator (252,525,250 samples, 0.05%)</title><rect x="954.6" y="597" width="0.6" height="15.0" fill="rgb(209,157,6)" rx="2" ry="2" />
<text  x="957.60" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt;::end (121,212,120 samples, 0.02%)</title><rect x="1042.5" y="613" width="0.3" height="15.0" fill="rgb(244,19,35)" rx="2" ry="2" />
<text  x="1045.54" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (70,707,070 samples, 0.01%)</title><rect x="717.4" y="549" width="0.1" height="15.0" fill="rgb(252,186,38)" rx="2" ry="2" />
<text  x="720.38" y="559.5" ></text>
</g>
<g >
<title>XXH3_accumulate_avx512 (222,222,220 samples, 0.04%)</title><rect x="806.3" y="325" width="0.5" height="15.0" fill="rgb(217,84,16)" rx="2" ry="2" />
<text  x="809.28" y="335.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (141,414,140 samples, 0.03%)</title><rect x="337.6" y="821" width="0.3" height="15.0" fill="rgb(210,118,4)" rx="2" ry="2" />
<text  x="340.56" y="831.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (60,606,060 samples, 0.01%)</title><rect x="10.6" y="997" width="0.1" height="15.0" fill="rgb(225,118,20)" rx="2" ry="2" />
<text  x="13.59" y="1007.5" ></text>
</g>
<g >
<title>mpage_submit_page (50,505,050 samples, 0.01%)</title><rect x="661.2" y="453" width="0.1" height="15.0" fill="rgb(241,50,50)" rx="2" ry="2" />
<text  x="664.18" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (444,444,440 samples, 0.08%)</title><rect x="782.3" y="485" width="1.0" height="15.0" fill="rgb(251,162,50)" rx="2" ry="2" />
<text  x="785.30" y="495.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::UpdateFilesToCutForTTLStates@plt (50,505,050 samples, 0.01%)</title><rect x="1083.7" y="645" width="0.1" height="15.0" fill="rgb(239,73,25)" rx="2" ry="2" />
<text  x="1086.72" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (222,222,220 samples, 0.04%)</title><rect x="928.3" y="613" width="0.4" height="15.0" fill="rgb(212,45,14)" rx="2" ry="2" />
<text  x="931.26" y="623.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::SkipListRep::PackLocal (13,212,121,080 samples, 2.44%)</title><rect x="661.8" y="629" width="28.8" height="15.0" fill="rgb(241,99,0)" rx="2" ry="2" />
<text  x="664.75" y="639.5" >ro..</text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Next (161,616,160 samples, 0.03%)</title><rect x="699.2" y="645" width="0.4" height="15.0" fill="rgb(245,59,8)" rx="2" ry="2" />
<text  x="702.23" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="791.2" y="469" width="0.1" height="15.0" fill="rgb(253,192,15)" rx="2" ry="2" />
<text  x="794.15" y="479.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;long&gt;::operator (4,505,050,460 samples, 0.83%)</title><rect x="639.6" y="949" width="9.8" height="15.0" fill="rgb(227,129,49)" rx="2" ry="2" />
<text  x="642.55" y="959.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::value (2,555,555,530 samples, 0.47%)</title><rect x="920.5" y="645" width="5.6" height="15.0" fill="rgb(207,189,27)" rx="2" ry="2" />
<text  x="923.49" y="655.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::HeapItem::key (1,888,888,870 samples, 0.35%)</title><rect x="708.4" y="565" width="4.2" height="15.0" fill="rgb(229,49,51)" rx="2" ry="2" />
<text  x="711.44" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::operator bool (757,575,750 samples, 0.14%)</title><rect x="944.1" y="629" width="1.7" height="15.0" fill="rgb(223,33,28)" rx="2" ry="2" />
<text  x="947.14" y="639.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1,363,636,350 samples, 0.25%)</title><rect x="39.9" y="677" width="3.0" height="15.0" fill="rgb(224,221,22)" rx="2" ry="2" />
<text  x="42.93" y="687.5" ></text>
</g>
<g >
<title>ext4_evict_inode (70,707,070 samples, 0.01%)</title><rect x="1178.5" y="533" width="0.2" height="15.0" fill="rgb(209,136,4)" rx="2" ry="2" />
<text  x="1181.55" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::IntTblPropCollector*, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::_M_head@plt (90,909,090 samples, 0.02%)</title><rect x="1041.0" y="549" width="0.2" height="15.0" fill="rgb(254,2,40)" rx="2" ry="2" />
<text  x="1043.97" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (474,747,470 samples, 0.09%)</title><rect x="912.5" y="613" width="1.0" height="15.0" fill="rgb(240,178,49)" rx="2" ry="2" />
<text  x="915.50" y="623.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (90,909,090 samples, 0.02%)</title><rect x="994.6" y="325" width="0.2" height="15.0" fill="rgb(217,85,23)" rx="2" ry="2" />
<text  x="997.62" y="335.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*&gt;::compare_exchange_strong (131,313,130 samples, 0.02%)</title><rect x="160.7" y="757" width="0.3" height="15.0" fill="rgb(236,133,2)" rx="2" ry="2" />
<text  x="163.68" y="767.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (363,636,360 samples, 0.07%)</title><rect x="1116.6" y="613" width="0.8" height="15.0" fill="rgb(216,11,39)" rx="2" ry="2" />
<text  x="1119.64" y="623.5" ></text>
</g>
<g >
<title>__netif_receive_skb (80,808,080 samples, 0.01%)</title><rect x="690.3" y="133" width="0.2" height="15.0" fill="rgb(245,128,47)" rx="2" ry="2" />
<text  x="693.34" y="143.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Next (90,909,090 samples, 0.02%)</title><rect x="866.4" y="629" width="0.2" height="15.0" fill="rgb(250,195,47)" rx="2" ry="2" />
<text  x="869.43" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (141,414,140 samples, 0.03%)</title><rect x="1140.3" y="469" width="0.3" height="15.0" fill="rgb(224,61,34)" rx="2" ry="2" />
<text  x="1143.30" y="479.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::IsDeleteRangeSentinelKey (222,222,220 samples, 0.04%)</title><rect x="750.9" y="597" width="0.5" height="15.0" fill="rgb(220,72,39)" rx="2" ry="2" />
<text  x="753.94" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (141,414,140 samples, 0.03%)</title><rect x="1034.7" y="565" width="0.3" height="15.0" fill="rgb(249,48,42)" rx="2" ry="2" />
<text  x="1037.65" y="575.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::PrepareOutput (5,595,959,540 samples, 1.03%)</title><rect x="935.3" y="661" width="12.2" height="15.0" fill="rgb(241,146,43)" rx="2" ry="2" />
<text  x="938.31" y="671.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (131,313,130 samples, 0.02%)</title><rect x="736.6" y="565" width="0.3" height="15.0" fill="rgb(217,70,47)" rx="2" ry="2" />
<text  x="739.60" y="575.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Next (232,323,230 samples, 0.04%)</title><rect x="692.1" y="693" width="0.5" height="15.0" fill="rgb(235,9,21)" rx="2" ry="2" />
<text  x="695.08" y="703.5" ></text>
</g>
<g >
<title>TLS init function for rocksdb::perf_context (171,717,170 samples, 0.03%)</title><rect x="719.1" y="517" width="0.4" height="15.0" fill="rgb(205,9,1)" rx="2" ry="2" />
<text  x="722.12" y="527.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::PreprocessWrite (666,666,660 samples, 0.12%)</title><rect x="29.1" y="901" width="1.4" height="15.0" fill="rgb(229,123,33)" rx="2" ry="2" />
<text  x="32.07" y="911.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader (252,525,250 samples, 0.05%)</title><rect x="220.9" y="901" width="0.5" height="15.0" fill="rgb(223,77,15)" rx="2" ry="2" />
<text  x="223.89" y="911.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="1063.2" y="549" width="0.3" height="15.0" fill="rgb(223,29,1)" rx="2" ry="2" />
<text  x="1066.20" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (919,191,910 samples, 0.17%)</title><rect x="854.5" y="533" width="2.0" height="15.0" fill="rgb(245,226,2)" rx="2" ry="2" />
<text  x="857.47" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_lower_bound (212,121,210 samples, 0.04%)</title><rect x="904.6" y="581" width="0.5" height="15.0" fill="rgb(241,36,1)" rx="2" ry="2" />
<text  x="907.63" y="591.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::CASNext (90,909,090 samples, 0.02%)</title><rect x="161.3" y="773" width="0.2" height="15.0" fill="rgb(218,55,24)" rx="2" ry="2" />
<text  x="164.27" y="783.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (90,909,090 samples, 0.02%)</title><rect x="584.0" y="917" width="0.2" height="15.0" fill="rgb(242,193,18)" rx="2" ry="2" />
<text  x="586.99" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::SuperVersion*, std::allocator&lt;rocksdb::SuperVersion*&gt; &gt;::vector (60,606,060 samples, 0.01%)</title><rect x="30.6" y="853" width="0.1" height="15.0" fill="rgb(223,118,29)" rx="2" ry="2" />
<text  x="33.61" y="863.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt; (1,565,656,550 samples, 0.29%)</title><rect x="1047.4" y="629" width="3.4" height="15.0" fill="rgb(234,169,51)" rx="2" ry="2" />
<text  x="1050.41" y="639.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (223,323,230,090 samples, 41.26%)</title><rect x="691.8" y="821" width="486.9" height="15.0" fill="rgb(205,111,8)" rx="2" ry="2" />
<text  x="694.81" y="831.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::status (8,787,878,700 samples, 1.62%)</title><rect x="845.0" y="613" width="19.2" height="15.0" fill="rgb(239,109,30)" rx="2" ry="2" />
<text  x="848.04" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt;@plt (80,808,080 samples, 0.01%)</title><rect x="988.6" y="629" width="0.2" height="15.0" fill="rgb(220,202,45)" rx="2" ry="2" />
<text  x="991.65" y="639.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::empty (50,505,050 samples, 0.01%)</title><rect x="1017.2" y="629" width="0.1" height="15.0" fill="rgb(237,153,46)" rx="2" ry="2" />
<text  x="1020.21" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (141,414,140 samples, 0.03%)</title><rect x="850.6" y="453" width="0.3" height="15.0" fill="rgb(239,164,33)" rx="2" ry="2" />
<text  x="853.59" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (303,030,300 samples, 0.06%)</title><rect x="851.4" y="517" width="0.7" height="15.0" fill="rgb(214,41,17)" rx="2" ry="2" />
<text  x="854.41" y="527.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::use_direct_io (70,707,070 samples, 0.01%)</title><rect x="995.0" y="549" width="0.1" height="15.0" fill="rgb(244,13,10)" rx="2" ry="2" />
<text  x="997.99" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::begin (90,909,090 samples, 0.02%)</title><rect x="1087.0" y="629" width="0.2" height="15.0" fill="rgb(208,48,20)" rx="2" ry="2" />
<text  x="1090.02" y="639.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (191,919,190 samples, 0.04%)</title><rect x="40.5" y="629" width="0.5" height="15.0" fill="rgb(222,12,31)" rx="2" ry="2" />
<text  x="43.54" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::CompactionIterator*, false&gt;::_M_head@plt (212,121,210 samples, 0.04%)</title><rect x="1174.0" y="597" width="0.5" height="15.0" fill="rgb(209,3,5)" rx="2" ry="2" />
<text  x="1176.99" y="607.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*&gt;::load (676,767,670 samples, 0.13%)</title><rect x="665.6" y="549" width="1.4" height="15.0" fill="rgb(214,141,32)" rx="2" ry="2" />
<text  x="668.56" y="559.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::NextAndGetResult (7,858,585,780 samples, 1.45%)</title><rect x="759.8" y="565" width="17.2" height="15.0" fill="rgb(215,156,9)" rx="2" ry="2" />
<text  x="762.84" y="575.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (666,666,660 samples, 0.12%)</title><rect x="842.8" y="597" width="1.5" height="15.0" fill="rgb(221,87,9)" rx="2" ry="2" />
<text  x="845.84" y="607.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="1133.7" y="581" width="0.2" height="15.0" fill="rgb(221,34,50)" rx="2" ry="2" />
<text  x="1136.73" y="591.5" ></text>
</g>
<g >
<title>__tls_get_addr (272,727,270 samples, 0.05%)</title><rect x="122.7" y="645" width="0.6" height="15.0" fill="rgb(228,42,54)" rx="2" ry="2" />
<text  x="125.71" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (141,414,140 samples, 0.03%)</title><rect x="839.4" y="549" width="0.4" height="15.0" fill="rgb(219,89,50)" rx="2" ry="2" />
<text  x="842.45" y="559.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::Status, unsigned int, unsigned long&gt;::_Tuple_impl&lt;rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;, void&gt; (1,060,606,050 samples, 0.20%)</title><rect x="552.5" y="869" width="2.3" height="15.0" fill="rgb(234,9,27)" rx="2" ry="2" />
<text  x="555.52" y="879.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::GetInstance (50,505,050 samples, 0.01%)</title><rect x="57.1" y="901" width="0.1" height="15.0" fill="rgb(217,174,30)" rx="2" ry="2" />
<text  x="60.08" y="911.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt; &gt;::allocate (111,111,110 samples, 0.02%)</title><rect x="71.9" y="725" width="0.2" height="15.0" fill="rgb(237,29,41)" rx="2" ry="2" />
<text  x="74.90" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (161,616,160 samples, 0.03%)</title><rect x="798.4" y="469" width="0.3" height="15.0" fill="rgb(253,172,34)" rx="2" ry="2" />
<text  x="801.38" y="479.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (222,222,220 samples, 0.04%)</title><rect x="853.9" y="549" width="0.5" height="15.0" fill="rgb(251,18,4)" rx="2" ry="2" />
<text  x="856.90" y="559.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Valid (50,505,050 samples, 0.01%)</title><rect x="771.3" y="517" width="0.1" height="15.0" fill="rgb(218,185,8)" rx="2" ry="2" />
<text  x="774.29" y="527.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (141,414,140 samples, 0.03%)</title><rect x="798.4" y="453" width="0.3" height="15.0" fill="rgb(252,117,49)" rx="2" ry="2" />
<text  x="801.42" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (70,707,070 samples, 0.01%)</title><rect x="689.0" y="565" width="0.1" height="15.0" fill="rgb(235,20,43)" rx="2" ry="2" />
<text  x="691.99" y="575.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (70,707,070 samples, 0.01%)</title><rect x="194.9" y="853" width="0.2" height="15.0" fill="rgb(223,136,3)" rx="2" ry="2" />
<text  x="197.92" y="863.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (313,131,310 samples, 0.06%)</title><rect x="931.7" y="645" width="0.6" height="15.0" fill="rgb(238,73,46)" rx="2" ry="2" />
<text  x="934.66" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (1,474,747,460 samples, 0.27%)</title><rect x="827.3" y="533" width="3.3" height="15.0" fill="rgb(249,209,2)" rx="2" ry="2" />
<text  x="830.34" y="543.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::FilterBlockBuilder*, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="1050.4" y="581" width="0.2" height="15.0" fill="rgb(213,114,20)" rx="2" ry="2" />
<text  x="1053.40" y="591.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (121,212,120 samples, 0.02%)</title><rect x="993.7" y="341" width="0.3" height="15.0" fill="rgb(226,60,25)" rx="2" ry="2" />
<text  x="996.72" y="351.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (90,909,090 samples, 0.02%)</title><rect x="778.8" y="421" width="0.2" height="15.0" fill="rgb(224,103,3)" rx="2" ry="2" />
<text  x="781.76" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (171,717,170 samples, 0.03%)</title><rect x="833.1" y="565" width="0.3" height="15.0" fill="rgb(228,4,20)" rx="2" ry="2" />
<text  x="836.06" y="575.5" ></text>
</g>
<g >
<title>rocksdb::StopWatch::~StopWatch (50,505,050 samples, 0.01%)</title><rect x="547.1" y="917" width="0.2" height="15.0" fill="rgb(211,5,19)" rx="2" ry="2" />
<text  x="550.15" y="927.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (50,505,050 samples, 0.01%)</title><rect x="990.1" y="485" width="0.1" height="15.0" fill="rgb(244,168,36)" rx="2" ry="2" />
<text  x="993.10" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (60,606,060 samples, 0.01%)</title><rect x="846.2" y="485" width="0.1" height="15.0" fill="rgb(213,137,19)" rx="2" ry="2" />
<text  x="849.17" y="495.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::CopyBufferToHeapBuf (161,616,160 samples, 0.03%)</title><rect x="805.6" y="437" width="0.3" height="15.0" fill="rgb(225,195,34)" rx="2" ry="2" />
<text  x="808.56" y="447.5" ></text>
</g>
<g >
<title>get_page_from_freelist (101,010,100 samples, 0.02%)</title><rect x="994.0" y="245" width="0.2" height="15.0" fill="rgb(232,69,22)" rx="2" ry="2" />
<text  x="997.02" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (111,111,110 samples, 0.02%)</title><rect x="974.2" y="549" width="0.3" height="15.0" fill="rgb(224,33,13)" rx="2" ry="2" />
<text  x="977.23" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (333,333,330 samples, 0.06%)</title><rect x="583.5" y="933" width="0.7" height="15.0" fill="rgb(230,228,53)" rx="2" ry="2" />
<text  x="586.48" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;rocksdb::FileMetaData* const*, std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt; &gt; (191,919,190 samples, 0.04%)</title><rect x="1073.8" y="597" width="0.4" height="15.0" fill="rgb(246,164,7)" rx="2" ry="2" />
<text  x="1076.77" y="607.5" ></text>
</g>
<g >
<title>std::operator&amp; (70,707,070 samples, 0.01%)</title><rect x="144.6" y="693" width="0.2" height="15.0" fill="rgb(245,161,35)" rx="2" ry="2" />
<text  x="147.64" y="703.5" ></text>
</g>
<g >
<title>__sched_yield (80,101,009,300 samples, 14.80%)</title><rect x="352.6" y="853" width="174.6" height="15.0" fill="rgb(211,201,11)" rx="2" ry="2" />
<text  x="355.60" y="863.5" >__sched_yield</text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::ColumnFamilySet, std::default_delete&lt;rocksdb::ColumnFamilySet&gt; &gt;::get (161,616,160 samples, 0.03%)</title><rect x="57.9" y="885" width="0.4" height="15.0" fill="rgb(240,61,33)" rx="2" ry="2" />
<text  x="60.94" y="895.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (111,111,110 samples, 0.02%)</title><rect x="174.3" y="837" width="0.2" height="15.0" fill="rgb(248,192,9)" rx="2" ry="2" />
<text  x="177.29" y="847.5" ></text>
</g>
<g >
<title>malloc (60,606,060 samples, 0.01%)</title><rect x="71.9" y="709" width="0.2" height="15.0" fill="rgb(232,82,39)" rx="2" ry="2" />
<text  x="74.95" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IndexBuilder, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt;::get (222,222,220 samples, 0.04%)</title><rect x="1054.3" y="629" width="0.5" height="15.0" fill="rgb(240,79,28)" rx="2" ry="2" />
<text  x="1057.32" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::FlushBlockPolicy, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt;::_M_ptr (262,626,260 samples, 0.05%)</title><rect x="1051.5" y="613" width="0.5" height="15.0" fill="rgb(215,34,17)" rx="2" ry="2" />
<text  x="1054.46" y="623.5" ></text>
</g>
<g >
<title>new_sync_write (1,414,141,400 samples, 0.26%)</title><rect x="39.8" y="709" width="3.1" height="15.0" fill="rgb(210,70,28)" rx="2" ry="2" />
<text  x="42.84" y="719.5" ></text>
</g>
<g >
<title>alloc_pages_vma (171,717,170 samples, 0.03%)</title><rect x="663.6" y="469" width="0.3" height="15.0" fill="rgb(216,111,53)" rx="2" ry="2" />
<text  x="666.56" y="479.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::replace_top (15,888,888,730 samples, 2.94%)</title><rect x="704.3" y="613" width="34.6" height="15.0" fill="rgb(207,195,12)" rx="2" ry="2" />
<text  x="707.30" y="623.5" >ro..</text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Valid (131,313,130 samples, 0.02%)</title><rect x="886.6" y="645" width="0.3" height="15.0" fill="rgb(212,77,44)" rx="2" ry="2" />
<text  x="889.60" y="655.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::get_left (90,909,090 samples, 0.02%)</title><rect x="707.2" y="581" width="0.2" height="15.0" fill="rgb(230,54,39)" rx="2" ry="2" />
<text  x="710.16" y="591.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (505,050,500 samples, 0.09%)</title><rect x="942.4" y="613" width="1.1" height="15.0" fill="rgb(253,75,42)" rx="2" ry="2" />
<text  x="945.43" y="623.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::insert&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (2,606,060,580 samples, 0.48%)</title><rect x="581.7" y="981" width="5.7" height="15.0" fill="rgb(208,168,15)" rx="2" ry="2" />
<text  x="584.74" y="991.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::IndexBuilder, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt;::_M_ptr (181,818,180 samples, 0.03%)</title><rect x="1054.8" y="613" width="0.4" height="15.0" fill="rgb(250,159,0)" rx="2" ry="2" />
<text  x="1057.80" y="623.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::Valid (444,444,440 samples, 0.08%)</title><rect x="915.4" y="629" width="1.0" height="15.0" fill="rgb(227,32,7)" rx="2" ry="2" />
<text  x="918.43" y="639.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="320.7" y="869" width="0.3" height="15.0" fill="rgb(212,108,26)" rx="2" ry="2" />
<text  x="323.67" y="879.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::value (2,171,717,150 samples, 0.40%)</title><rect x="920.9" y="629" width="4.7" height="15.0" fill="rgb(248,102,39)" rx="2" ry="2" />
<text  x="923.91" y="639.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatch::~WriteBatch (505,050,500 samples, 0.09%)</title><rect x="564.0" y="933" width="1.1" height="15.0" fill="rgb(244,226,40)" rx="2" ry="2" />
<text  x="567.04" y="943.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (202,020,200 samples, 0.04%)</title><rect x="797.7" y="501" width="0.4" height="15.0" fill="rgb(218,67,53)" rx="2" ry="2" />
<text  x="800.69" y="511.5" ></text>
</g>
<g >
<title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Insert (181,818,180 samples, 0.03%)</title><rect x="767.6" y="453" width="0.4" height="15.0" fill="rgb(244,115,40)" rx="2" ry="2" />
<text  x="770.61" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (313,131,310 samples, 0.06%)</title><rect x="839.1" y="565" width="0.7" height="15.0" fill="rgb(252,70,9)" rx="2" ry="2" />
<text  x="842.07" y="575.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::CurrentSizeEstimate@plt (121,212,120 samples, 0.02%)</title><rect x="1016.9" y="629" width="0.3" height="15.0" fill="rgb(206,193,51)" rx="2" ry="2" />
<text  x="1019.95" y="639.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (80,808,080 samples, 0.01%)</title><rect x="1125.6" y="565" width="0.2" height="15.0" fill="rgb(212,152,13)" rx="2" ry="2" />
<text  x="1128.63" y="575.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::IsDeleteRangeSentinelKey@plt (121,212,120 samples, 0.02%)</title><rect x="978.6" y="661" width="0.2" height="15.0" fill="rgb(253,215,28)" rx="2" ry="2" />
<text  x="981.59" y="671.5" ></text>
</g>
<g >
<title>XXH3_accumulate_avx512 (171,717,170 samples, 0.03%)</title><rect x="762.4" y="293" width="0.4" height="15.0" fill="rgb(233,143,48)" rx="2" ry="2" />
<text  x="765.39" y="303.5" ></text>
</g>
<g >
<title>do_writepages (131,313,130 samples, 0.02%)</title><rect x="1140.3" y="389" width="0.3" height="15.0" fill="rgb(250,35,38)" rx="2" ry="2" />
<text  x="1143.32" y="399.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (575,757,570 samples, 0.11%)</title><rect x="831.1" y="501" width="1.3" height="15.0" fill="rgb(221,137,52)" rx="2" ry="2" />
<text  x="834.15" y="511.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::UpdateGrandparentBoundaryInfo (1,393,939,380 samples, 0.26%)</title><rect x="1072.0" y="629" width="3.0" height="15.0" fill="rgb(231,201,18)" rx="2" ry="2" />
<text  x="1074.96" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::get (141,414,140 samples, 0.03%)</title><rect x="839.8" y="581" width="0.3" height="15.0" fill="rgb(211,190,16)" rx="2" ry="2" />
<text  x="842.78" y="591.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::WriteThread::Writer*&gt;::load (101,010,100 samples, 0.02%)</title><rect x="528.1" y="869" width="0.2" height="15.0" fill="rgb(214,156,32)" rx="2" ry="2" />
<text  x="531.12" y="879.5" ></text>
</g>
<g >
<title>__fget_files (60,606,060 samples, 0.01%)</title><rect x="39.3" y="693" width="0.1" height="15.0" fill="rgb(239,137,49)" rx="2" ry="2" />
<text  x="42.29" y="703.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (90,909,090 samples, 0.02%)</title><rect x="690.3" y="357" width="0.2" height="15.0" fill="rgb(222,197,25)" rx="2" ry="2" />
<text  x="693.34" y="367.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (262,626,260 samples, 0.05%)</title><rect x="106.9" y="677" width="0.5" height="15.0" fill="rgb(254,69,19)" rx="2" ry="2" />
<text  x="109.85" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (606,060,600 samples, 0.11%)</title><rect x="55.2" y="869" width="1.3" height="15.0" fill="rgb(209,196,21)" rx="2" ry="2" />
<text  x="58.19" y="879.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (242,424,240 samples, 0.04%)</title><rect x="1038.1" y="565" width="0.6" height="15.0" fill="rgb(239,208,7)" rx="2" ry="2" />
<text  x="1041.13" y="575.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::SeekToFirst (101,010,100 samples, 0.02%)</title><rect x="814.7" y="533" width="0.2" height="15.0" fill="rgb(221,53,45)" rx="2" ry="2" />
<text  x="817.67" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (161,616,160 samples, 0.03%)</title><rect x="846.9" y="453" width="0.4" height="15.0" fill="rgb(240,123,37)" rx="2" ry="2" />
<text  x="849.94" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (262,626,260 samples, 0.05%)</title><rect x="828.5" y="485" width="0.6" height="15.0" fill="rgb(206,218,1)" rx="2" ry="2" />
<text  x="831.55" y="495.5" ></text>
</g>
<g >
<title>rocksdb::ReadRecordFromWriteBatch (848,484,840 samples, 0.16%)</title><rect x="172.9" y="853" width="1.8" height="15.0" fill="rgb(254,11,16)" rx="2" ry="2" />
<text  x="175.90" y="863.5" ></text>
</g>
<g >
<title>rocksdb::InternalKey::size (121,212,120 samples, 0.02%)</title><rect x="1098.3" y="645" width="0.3" height="15.0" fill="rgb(208,22,21)" rx="2" ry="2" />
<text  x="1101.32" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (202,020,200 samples, 0.04%)</title><rect x="926.1" y="645" width="0.4" height="15.0" fill="rgb(238,118,28)" rx="2" ry="2" />
<text  x="929.06" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char [], rocksdb::CustomDeleter&gt;::unique_ptr&lt;rocksdb::CustomDeleter, void&gt; (50,505,050 samples, 0.01%)</title><rect x="804.5" y="453" width="0.1" height="15.0" fill="rgb(251,185,42)" rx="2" ry="2" />
<text  x="807.48" y="463.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (3,313,131,280 samples, 0.61%)</title><rect x="574.2" y="933" width="7.3" height="15.0" fill="rgb(253,183,13)" rx="2" ry="2" />
<text  x="577.23" y="943.5" ></text>
</g>
<g >
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::DeleteValue (111,111,110 samples, 0.02%)</title><rect x="813.0" y="453" width="0.3" height="15.0" fill="rgb(253,141,13)" rx="2" ry="2" />
<text  x="816.04" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::operator (80,808,080 samples, 0.01%)</title><rect x="792.4" y="565" width="0.1" height="15.0" fill="rgb(236,208,28)" rx="2" ry="2" />
<text  x="795.36" y="575.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::Value (141,414,140 samples, 0.03%)</title><rect x="50.4" y="837" width="0.3" height="15.0" fill="rgb(216,141,47)" rx="2" ry="2" />
<text  x="53.37" y="847.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (212,121,210 samples, 0.04%)</title><rect x="751.6" y="565" width="0.5" height="15.0" fill="rgb(220,6,9)" rx="2" ry="2" />
<text  x="754.60" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (131,313,130 samples, 0.02%)</title><rect x="835.4" y="453" width="0.3" height="15.0" fill="rgb(207,136,36)" rx="2" ry="2" />
<text  x="838.40" y="463.5" ></text>
</g>
<g >
<title>rocksdb::FSWritableFilePtr::operator (50,505,050 samples, 0.01%)</title><rect x="48.2" y="805" width="0.1" height="15.0" fill="rgb(235,55,25)" rx="2" ry="2" />
<text  x="51.21" y="815.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::IOStatus (111,111,110 samples, 0.02%)</title><rect x="47.1" y="821" width="0.2" height="15.0" fill="rgb(245,200,8)" rx="2" ry="2" />
<text  x="50.11" y="831.5" ></text>
</g>
<g >
<title>pthread_cond_signal@@GLIBC_2.3.2 (70,707,070 samples, 0.01%)</title><rect x="660.4" y="1013" width="0.2" height="15.0" fill="rgb(243,10,31)" rx="2" ry="2" />
<text  x="663.41" y="1023.5" ></text>
</g>
<g >
<title>rocksdb::Random::Next (50,505,050 samples, 0.01%)</title><rect x="81.4" y="757" width="0.1" height="15.0" fill="rgb(231,76,36)" rx="2" ry="2" />
<text  x="84.42" y="767.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="799.6" y="421" width="0.2" height="15.0" fill="rgb(249,182,18)" rx="2" ry="2" />
<text  x="802.61" y="431.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::IOStatus (90,909,090 samples, 0.02%)</title><rect x="52.9" y="885" width="0.2" height="15.0" fill="rgb(234,142,26)" rx="2" ry="2" />
<text  x="55.94" y="895.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;rocksdb::SpinMutex&gt;::unlock (70,707,070 samples, 0.01%)</title><rect x="79.8" y="725" width="0.1" height="15.0" fill="rgb(242,4,0)" rx="2" ry="2" />
<text  x="82.79" y="735.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::begin@plt (101,010,100 samples, 0.02%)</title><rect x="734.2" y="597" width="0.2" height="15.0" fill="rgb(216,181,32)" rx="2" ry="2" />
<text  x="737.23" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (141,414,140 samples, 0.03%)</title><rect x="1140.3" y="485" width="0.3" height="15.0" fill="rgb(236,158,39)" rx="2" ry="2" />
<text  x="1143.30" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_node (70,707,070 samples, 0.01%)</title><rect x="582.3" y="901" width="0.2" height="15.0" fill="rgb(224,223,51)" rx="2" ry="2" />
<text  x="585.34" y="911.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (131,313,130 samples, 0.02%)</title><rect x="842.5" y="581" width="0.3" height="15.0" fill="rgb(222,6,33)" rx="2" ry="2" />
<text  x="845.53" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (282,828,280 samples, 0.05%)</title><rect x="48.5" y="821" width="0.7" height="15.0" fill="rgb(235,179,18)" rx="2" ry="2" />
<text  x="51.54" y="831.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::SuperVersionContext::WriteStallNotification, 8ul&gt;::~autovector (222,222,220 samples, 0.04%)</title><rect x="32.4" y="869" width="0.5" height="15.0" fill="rgb(251,102,37)" rx="2" ry="2" />
<text  x="35.42" y="879.5" ></text>
</g>
<g >
<title>ext4_sync_file (101,010,100 samples, 0.02%)</title><rect x="661.1" y="565" width="0.3" height="15.0" fill="rgb(252,178,52)" rx="2" ry="2" />
<text  x="664.13" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (90,909,090 samples, 0.02%)</title><rect x="794.1" y="453" width="0.2" height="15.0" fill="rgb(245,154,19)" rx="2" ry="2" />
<text  x="797.10" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::Tracer, std::default_delete&lt;rocksdb::Tracer&gt; &gt;::_M_ptr (151,515,150 samples, 0.03%)</title><rect x="544.8" y="869" width="0.3" height="15.0" fill="rgb(240,83,5)" rx="2" ry="2" />
<text  x="547.81" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;rocksdb::MemTable*&gt;, true&gt;::_Rb_tree_impl (80,808,080 samples, 0.01%)</title><rect x="68.6" y="757" width="0.2" height="15.0" fill="rgb(206,26,50)" rx="2" ry="2" />
<text  x="71.62" y="767.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="975.6" y="533" width="0.1" height="15.0" fill="rgb(244,88,41)" rx="2" ry="2" />
<text  x="978.57" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (50,505,050 samples, 0.01%)</title><rect x="752.0" y="549" width="0.1" height="15.0" fill="rgb(220,201,34)" rx="2" ry="2" />
<text  x="754.95" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::WriteBatch::ProtectionInfo*, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt; (90,909,090 samples, 0.02%)</title><rect x="564.9" y="885" width="0.2" height="15.0" fill="rgb(214,29,53)" rx="2" ry="2" />
<text  x="567.85" y="895.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (343,434,340 samples, 0.06%)</title><rect x="1001.0" y="533" width="0.7" height="15.0" fill="rgb(231,26,20)" rx="2" ry="2" />
<text  x="1003.98" y="543.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (70,707,070 samples, 0.01%)</title><rect x="29.4" y="869" width="0.2" height="15.0" fill="rgb(244,228,17)" rx="2" ry="2" />
<text  x="32.45" y="879.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (80,808,080 samples, 0.01%)</title><rect x="221.8" y="821" width="0.1" height="15.0" fill="rgb(249,16,20)" rx="2" ry="2" />
<text  x="224.77" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (101,010,100 samples, 0.02%)</title><rect x="168.6" y="789" width="0.2" height="15.0" fill="rgb(223,2,29)" rx="2" ry="2" />
<text  x="171.58" y="799.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::NextAndGetResult (15,767,676,610 samples, 2.91%)</title><rect x="758.6" y="597" width="34.4" height="15.0" fill="rgb(234,61,51)" rx="2" ry="2" />
<text  x="761.58" y="607.5" >ro..</text>
</g>
<g >
<title>rocksdb::Status::OK (696,969,690 samples, 0.13%)</title><rect x="895.0" y="629" width="1.5" height="15.0" fill="rgb(218,0,53)" rx="2" ry="2" />
<text  x="897.97" y="639.5" ></text>
</g>
<g >
<title>rocksdb::SubcompactionState::Current (80,808,080 samples, 0.01%)</title><rect x="1161.2" y="661" width="0.2" height="15.0" fill="rgb(210,218,48)" rx="2" ry="2" />
<text  x="1164.19" y="671.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (90,909,090 samples, 0.02%)</title><rect x="1095.5" y="517" width="0.2" height="15.0" fill="rgb(235,211,4)" rx="2" ry="2" />
<text  x="1098.46" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (50,505,050 samples, 0.01%)</title><rect x="811.0" y="453" width="0.1" height="15.0" fill="rgb(250,174,28)" rx="2" ry="2" />
<text  x="814.02" y="463.5" ></text>
</g>
<g >
<title>std::operator&amp; (181,818,180 samples, 0.03%)</title><rect x="144.8" y="709" width="0.4" height="15.0" fill="rgb(240,52,17)" rx="2" ry="2" />
<text  x="147.80" y="719.5" ></text>
</g>
<g >
<title>rocksdb::Status::MarkChecked (60,606,060 samples, 0.01%)</title><rect x="917.9" y="613" width="0.1" height="15.0" fill="rgb(244,148,1)" rx="2" ry="2" />
<text  x="920.87" y="623.5" ></text>
</g>
<g >
<title>__tls_get_addr (101,010,100 samples, 0.02%)</title><rect x="1029.0" y="581" width="0.2" height="15.0" fill="rgb(240,205,9)" rx="2" ry="2" />
<text  x="1031.95" y="591.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::WriterSyncClose (161,616,160 samples, 0.03%)</title><rect x="1140.3" y="549" width="0.3" height="15.0" fill="rgb(223,173,4)" rx="2" ry="2" />
<text  x="1143.25" y="559.5" ></text>
</g>
<g >
<title>rocksdb::port::AsmVolatilePause (1,101,010,090 samples, 0.20%)</title><rect x="216.5" y="885" width="2.4" height="15.0" fill="rgb(209,166,11)" rx="2" ry="2" />
<text  x="219.50" y="895.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;&gt;::_M_assign&lt;rocksdb::Status, unsigned int, unsigned long&gt; (80,808,080 samples, 0.01%)</title><rect x="558.0" y="917" width="0.2" height="15.0" fill="rgb(233,139,51)" rx="2" ry="2" />
<text  x="561.03" y="927.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (70,707,070 samples, 0.01%)</title><rect x="691.2" y="485" width="0.2" height="15.0" fill="rgb(206,85,41)" rx="2" ry="2" />
<text  x="694.22" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (161,616,160 samples, 0.03%)</title><rect x="541.3" y="869" width="0.4" height="15.0" fill="rgb(235,41,24)" rx="2" ry="2" />
<text  x="544.31" y="879.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (5,252,525,200 samples, 0.97%)</title><rect x="1123.8" y="629" width="11.4" height="15.0" fill="rgb(240,45,34)" rx="2" ry="2" />
<text  x="1126.76" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (262,626,260 samples, 0.05%)</title><rect x="835.1" y="501" width="0.6" height="15.0" fill="rgb(217,69,15)" rx="2" ry="2" />
<text  x="838.11" y="511.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (292,929,290 samples, 0.05%)</title><rect x="751.4" y="581" width="0.7" height="15.0" fill="rgb(237,225,25)" rx="2" ry="2" />
<text  x="754.45" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (171,717,170 samples, 0.03%)</title><rect x="730.7" y="565" width="0.4" height="15.0" fill="rgb(232,28,22)" rx="2" ry="2" />
<text  x="733.68" y="575.5" ></text>
</g>
<g >
<title>rocksdb::UncompressBlockData (252,525,250 samples, 0.05%)</title><rect x="765.1" y="405" width="0.5" height="15.0" fill="rgb(239,86,6)" rx="2" ry="2" />
<text  x="768.06" y="415.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::AddWithLastKeyImpl (101,010,100 samples, 0.02%)</title><rect x="1043.0" y="597" width="0.2" height="15.0" fill="rgb(234,83,6)" rx="2" ry="2" />
<text  x="1045.96" y="607.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::empty (282,828,280 samples, 0.05%)</title><rect x="752.4" y="581" width="0.6" height="15.0" fill="rgb(221,42,54)" rx="2" ry="2" />
<text  x="755.39" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (141,414,140 samples, 0.03%)</title><rect x="927.5" y="629" width="0.3" height="15.0" fill="rgb(241,125,25)" rx="2" ry="2" />
<text  x="930.49" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::TableBuilder*, false&gt;::_M_head (222,222,220 samples, 0.04%)</title><rect x="1069.1" y="517" width="0.4" height="15.0" fill="rgb(212,73,13)" rx="2" ry="2" />
<text  x="1072.05" y="527.5" ></text>
</g>
<g >
<title>evict (70,707,070 samples, 0.01%)</title><rect x="1178.5" y="549" width="0.2" height="15.0" fill="rgb(234,62,2)" rx="2" ry="2" />
<text  x="1181.55" y="559.5" ></text>
</g>
<g >
<title>rocksdb::log::Writer::EmitPhysicalRecord (3,040,404,010 samples, 0.56%)</title><rect x="44.5" y="853" width="6.6" height="15.0" fill="rgb(214,72,38)" rx="2" ry="2" />
<text  x="47.46" y="863.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (50,505,050 samples, 0.01%)</title><rect x="197.5" y="789" width="0.1" height="15.0" fill="rgb(221,102,48)" rx="2" ry="2" />
<text  x="200.52" y="799.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (222,222,220 samples, 0.04%)</title><rect x="799.3" y="453" width="0.5" height="15.0" fill="rgb(218,124,4)" rx="2" ry="2" />
<text  x="802.30" y="463.5" ></text>
</g>
<g >
<title>[[vdso]] (60,606,060 samples, 0.01%)</title><rect x="180.5" y="885" width="0.1" height="15.0" fill="rgb(225,46,30)" rx="2" ry="2" />
<text  x="183.47" y="895.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::operator[] (212,121,210 samples, 0.04%)</title><rect x="736.1" y="565" width="0.5" height="15.0" fill="rgb(248,41,37)" rx="2" ry="2" />
<text  x="739.14" y="575.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::Writer::CallbackFailed (70,707,070 samples, 0.01%)</title><rect x="540.6" y="901" width="0.2" height="15.0" fill="rgb(229,153,52)" rx="2" ry="2" />
<text  x="543.63" y="911.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::Valid (161,616,160 samples, 0.03%)</title><rect x="922.6" y="581" width="0.4" height="15.0" fill="rgb(222,168,2)" rx="2" ry="2" />
<text  x="925.65" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (90,909,090 samples, 0.02%)</title><rect x="801.4" y="501" width="0.2" height="15.0" fill="rgb(216,176,0)" rx="2" ry="2" />
<text  x="804.42" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;&gt;::_Tuple_impl (60,606,060 samples, 0.01%)</title><rect x="558.8" y="901" width="0.2" height="15.0" fill="rgb(247,161,42)" rx="2" ry="2" />
<text  x="561.84" y="911.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="834.5" y="469" width="0.2" height="15.0" fill="rgb(239,83,37)" rx="2" ry="2" />
<text  x="837.54" y="479.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (242,424,240 samples, 0.04%)</title><rect x="1111.6" y="597" width="0.5" height="15.0" fill="rgb(225,52,30)" rx="2" ry="2" />
<text  x="1114.60" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::operator bool (1,252,525,240 samples, 0.23%)</title><rect x="1048.1" y="613" width="2.7" height="15.0" fill="rgb(213,208,2)" rx="2" ry="2" />
<text  x="1051.09" y="623.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::GetStatus (1,090,909,080 samples, 0.20%)</title><rect x="1000.3" y="597" width="2.4" height="15.0" fill="rgb(223,30,37)" rx="2" ry="2" />
<text  x="1003.32" y="607.5" ></text>
</g>
<g >
<title>std::operator&amp;@plt (90,909,090 samples, 0.02%)</title><rect x="220.4" y="885" width="0.2" height="15.0" fill="rgb(250,170,47)" rx="2" ry="2" />
<text  x="223.45" y="895.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned long, rocksdb::RangeDelAggregator::StripeRep, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::end (323,232,320 samples, 0.06%)</title><rect x="900.0" y="613" width="0.7" height="15.0" fill="rgb(246,203,9)" rx="2" ry="2" />
<text  x="903.03" y="623.5" ></text>
</g>
<g >
<title>rocksdb::GetLengthPrefixedSlice (1,202,020,190 samples, 0.22%)</title><rect x="148.1" y="741" width="2.6" height="15.0" fill="rgb(213,149,20)" rx="2" ry="2" />
<text  x="151.06" y="751.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (50,505,050 samples, 0.01%)</title><rect x="541.4" y="821" width="0.1" height="15.0" fill="rgb(210,44,32)" rx="2" ry="2" />
<text  x="544.35" y="831.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (434,343,430 samples, 0.08%)</title><rect x="926.9" y="645" width="0.9" height="15.0" fill="rgb(245,50,47)" rx="2" ry="2" />
<text  x="929.86" y="655.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::Writer::FinalStatus (717,171,710 samples, 0.13%)</title><rect x="540.8" y="901" width="1.6" height="15.0" fill="rgb(234,220,31)" rx="2" ry="2" />
<text  x="543.83" y="911.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (191,919,190 samples, 0.04%)</title><rect x="559.4" y="885" width="0.5" height="15.0" fill="rgb(237,69,5)" rx="2" ry="2" />
<text  x="562.43" y="895.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (6,484,848,420 samples, 1.20%)</title><rect x="331.6" y="853" width="14.2" height="15.0" fill="rgb(229,162,11)" rx="2" ry="2" />
<text  x="334.61" y="863.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (646,464,640 samples, 0.12%)</title><rect x="850.0" y="517" width="1.4" height="15.0" fill="rgb(245,81,26)" rx="2" ry="2" />
<text  x="853.00" y="527.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::IsKeyPinned (50,505,050 samples, 0.01%)</title><rect x="774.3" y="453" width="0.1" height="15.0" fill="rgb(246,19,22)" rx="2" ry="2" />
<text  x="777.28" y="463.5" ></text>
</g>
<g >
<title>rocksdb::InternalKey::size (70,707,070 samples, 0.01%)</title><rect x="1094.2" y="629" width="0.1" height="15.0" fill="rgb(227,48,12)" rx="2" ry="2" />
<text  x="1097.18" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="795.2" y="389" width="0.1" height="15.0" fill="rgb(244,9,21)" rx="2" ry="2" />
<text  x="798.23" y="399.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Iterator::Next (959,595,950 samples, 0.18%)</title><rect x="665.1" y="581" width="2.1" height="15.0" fill="rgb(251,179,14)" rx="2" ry="2" />
<text  x="668.14" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (151,515,150 samples, 0.03%)</title><rect x="928.4" y="597" width="0.3" height="15.0" fill="rgb(205,146,25)" rx="2" ry="2" />
<text  x="931.42" y="607.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (1,464,646,450 samples, 0.27%)</title><rect x="720.9" y="533" width="3.2" height="15.0" fill="rgb(251,133,12)" rx="2" ry="2" />
<text  x="723.90" y="543.5" ></text>
</g>
<g >
<title>std::mutex::lock (70,707,070 samples, 0.01%)</title><rect x="29.4" y="853" width="0.2" height="15.0" fill="rgb(230,44,1)" rx="2" ry="2" />
<text  x="32.45" y="863.5" ></text>
</g>
<g >
<title>rocksdb::Slice::compare (252,525,250 samples, 0.05%)</title><rect x="1106.4" y="581" width="0.5" height="15.0" fill="rgb(246,142,38)" rx="2" ry="2" />
<text  x="1109.36" y="591.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (646,464,640 samples, 0.12%)</title><rect x="729.6" y="581" width="1.5" height="15.0" fill="rgb(228,125,47)" rx="2" ry="2" />
<text  x="732.65" y="591.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (303,030,300 samples, 0.06%)</title><rect x="1067.9" y="549" width="0.7" height="15.0" fill="rgb(225,65,2)" rx="2" ry="2" />
<text  x="1070.93" y="559.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="854.3" y="469" width="0.1" height="15.0" fill="rgb(232,154,33)" rx="2" ry="2" />
<text  x="857.27" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="832.5" y="517" width="0.1" height="15.0" fill="rgb(237,83,21)" rx="2" ry="2" />
<text  x="835.51" y="527.5" ></text>
</g>
<g >
<title>rocksdb::DecodeEntry::operator (191,919,190 samples, 0.04%)</title><rect x="819.2" y="501" width="0.5" height="15.0" fill="rgb(231,172,53)" rx="2" ry="2" />
<text  x="822.23" y="511.5" ></text>
</g>
<g >
<title>rocksdb::PerfStepTimer::~PerfStepTimer (80,808,080 samples, 0.01%)</title><rect x="54.0" y="901" width="0.2" height="15.0" fill="rgb(238,7,35)" rx="2" ry="2" />
<text  x="57.00" y="911.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::GetStatus (181,818,180 samples, 0.03%)</title><rect x="999.5" y="613" width="0.4" height="15.0" fill="rgb(220,80,40)" rx="2" ry="2" />
<text  x="1002.51" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::BlobGarbageMeter, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;::get (626,262,620 samples, 0.12%)</title><rect x="1145.6" y="645" width="1.4" height="15.0" fill="rgb(230,229,26)" rx="2" ry="2" />
<text  x="1148.60" y="655.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; (2,383,838,360 samples, 0.44%)</title><rect x="339.4" y="805" width="5.2" height="15.0" fill="rgb(227,152,10)" rx="2" ry="2" />
<text  x="342.43" y="815.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::BlockBasedTablePropertiesCollector::InternalAdd (1,131,313,120 samples, 0.21%)</title><rect x="1033.8" y="613" width="2.4" height="15.0" fill="rgb(249,29,9)" rx="2" ry="2" />
<text  x="1036.75" y="623.5" ></text>
</g>
<g >
<title>iput (262,626,260 samples, 0.05%)</title><rect x="690.8" y="565" width="0.6" height="15.0" fill="rgb(241,96,4)" rx="2" ry="2" />
<text  x="693.84" y="575.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (191,919,190 samples, 0.04%)</title><rect x="754.7" y="549" width="0.4" height="15.0" fill="rgb(247,193,51)" rx="2" ry="2" />
<text  x="757.68" y="559.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Valid (111,111,110 samples, 0.02%)</title><rect x="920.2" y="613" width="0.3" height="15.0" fill="rgb(238,147,16)" rx="2" ry="2" />
<text  x="923.23" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (131,313,130 samples, 0.02%)</title><rect x="559.5" y="853" width="0.3" height="15.0" fill="rgb(220,221,39)" rx="2" ry="2" />
<text  x="562.52" y="863.5" ></text>
</g>
<g >
<title>rocksdb::SubcompactionState::Current (50,505,050 samples, 0.01%)</title><rect x="1162.4" y="677" width="0.1" height="15.0" fill="rgb(236,86,8)" rx="2" ry="2" />
<text  x="1165.43" y="687.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (60,606,060 samples, 0.01%)</title><rect x="838.5" y="581" width="0.1" height="15.0" fill="rgb(254,57,17)" rx="2" ry="2" />
<text  x="841.50" y="591.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (141,414,140 samples, 0.03%)</title><rect x="49.9" y="565" width="0.3" height="15.0" fill="rgb(208,213,1)" rx="2" ry="2" />
<text  x="52.93" y="575.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (70,707,070 samples, 0.01%)</title><rect x="1094.3" y="629" width="0.2" height="15.0" fill="rgb(230,187,1)" rx="2" ry="2" />
<text  x="1097.34" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (50,505,050 samples, 0.01%)</title><rect x="567.4" y="949" width="0.1" height="15.0" fill="rgb(209,132,14)" rx="2" ry="2" />
<text  x="570.38" y="959.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char [], rocksdb::CustomDeleter&gt;::~unique_ptr (50,505,050 samples, 0.01%)</title><rect x="768.7" y="373" width="0.1" height="15.0" fill="rgb(240,199,38)" rx="2" ry="2" />
<text  x="771.71" y="383.5" ></text>
</g>
<g >
<title>std::map&lt;rocksdb::MemTable*, rocksdb::MemTablePostProcessInfo, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::map (242,424,240 samples, 0.04%)</title><rect x="68.6" y="789" width="0.6" height="15.0" fill="rgb(226,48,16)" rx="2" ry="2" />
<text  x="71.62" y="799.5" ></text>
</g>
<g >
<title>do_unlinkat (70,707,070 samples, 0.01%)</title><rect x="1178.5" y="581" width="0.2" height="15.0" fill="rgb(253,223,17)" rx="2" ry="2" />
<text  x="1181.55" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (303,030,300 samples, 0.06%)</title><rect x="933.3" y="581" width="0.6" height="15.0" fill="rgb(212,129,43)" rx="2" ry="2" />
<text  x="936.29" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (151,515,150 samples, 0.03%)</title><rect x="542.7" y="869" width="0.4" height="15.0" fill="rgb(246,49,1)" rx="2" ry="2" />
<text  x="545.72" y="879.5" ></text>
</g>
<g >
<title>clear_page_orig (161,616,160 samples, 0.03%)</title><rect x="663.6" y="421" width="0.3" height="15.0" fill="rgb(245,119,35)" rx="2" ry="2" />
<text  x="666.56" y="431.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::EstimateSizeAfterKV (656,565,650 samples, 0.12%)</title><rect x="1024.0" y="597" width="1.4" height="15.0" fill="rgb(239,51,29)" rx="2" ry="2" />
<text  x="1026.97" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (181,818,180 samples, 0.03%)</title><rect x="56.6" y="901" width="0.4" height="15.0" fill="rgb(215,125,7)" rx="2" ry="2" />
<text  x="59.56" y="911.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::IOStatus (80,808,080 samples, 0.01%)</title><rect x="37.3" y="837" width="0.1" height="15.0" fill="rgb(242,21,24)" rx="2" ry="2" />
<text  x="40.26" y="847.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="177.3" y="789" width="0.2" height="15.0" fill="rgb(210,28,19)" rx="2" ry="2" />
<text  x="180.33" y="799.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="847.7" y="405" width="0.2" height="15.0" fill="rgb(211,101,33)" rx="2" ry="2" />
<text  x="850.71" y="415.5" ></text>
</g>
<g >
<title>rocksdb::ShortenedIndexBuilder::FindShortestInternalKeySeparator (181,818,180 samples, 0.03%)</title><rect x="1043.7" y="613" width="0.4" height="15.0" fill="rgb(228,186,2)" rx="2" ry="2" />
<text  x="1046.71" y="623.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (90,909,090 samples, 0.02%)</title><rect x="839.6" y="533" width="0.2" height="15.0" fill="rgb(246,162,26)" rx="2" ry="2" />
<text  x="842.56" y="543.5" ></text>
</g>
<g >
<title>rocksdb::FullTypedCacheInterface&lt;rocksdb::Block_kData, rocksdb::BlockCreateContext,  (60,606,060 samples, 0.01%)</title><rect x="810.2" y="453" width="0.2" height="15.0" fill="rgb(252,167,26)" rx="2" ry="2" />
<text  x="813.25" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="797.0" y="485" width="0.1" height="15.0" fill="rgb(214,35,46)" rx="2" ry="2" />
<text  x="799.97" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (343,434,340 samples, 0.06%)</title><rect x="799.9" y="517" width="0.7" height="15.0" fill="rgb(211,101,21)" rx="2" ry="2" />
<text  x="802.87" y="527.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::construct&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;rocksdb::MemTable* const&amp;&gt;, std::tuple&lt;&gt; &gt; (444,444,440 samples, 0.08%)</title><rect x="70.5" y="709" width="1.0" height="15.0" fill="rgb(221,173,51)" rx="2" ry="2" />
<text  x="73.52" y="719.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (222,222,220 samples, 0.04%)</title><rect x="918.7" y="597" width="0.5" height="15.0" fill="rgb(245,104,18)" rx="2" ry="2" />
<text  x="921.69" y="607.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (1,535,353,520 samples, 0.28%)</title><rect x="1066.9" y="613" width="3.3" height="15.0" fill="rgb(229,120,46)" rx="2" ry="2" />
<text  x="1069.90" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::operator (90,909,090 samples, 0.02%)</title><rect x="945.9" y="645" width="0.2" height="15.0" fill="rgb(212,153,10)" rx="2" ry="2" />
<text  x="948.86" y="655.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower (646,464,640 samples, 0.12%)</title><rect x="221.4" y="901" width="1.4" height="15.0" fill="rgb(238,207,43)" rx="2" ry="2" />
<text  x="224.44" y="911.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::CompactionOutputs::Output*, std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt; &gt;::operator- (474,747,470 samples, 0.09%)</title><rect x="1085.4" y="613" width="1.0" height="15.0" fill="rgb(248,84,53)" rx="2" ry="2" />
<text  x="1088.37" y="623.5" ></text>
</g>
<g >
<title>rocksdb::status_to_io_status (80,808,080 samples, 0.01%)</title><rect x="52.4" y="885" width="0.2" height="15.0" fill="rgb(252,191,39)" rx="2" ry="2" />
<text  x="55.39" y="895.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*&gt;::load (131,313,130 samples, 0.02%)</title><rect x="145.7" y="725" width="0.3" height="15.0" fill="rgb(232,194,4)" rx="2" ry="2" />
<text  x="148.72" y="735.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (80,808,080 samples, 0.01%)</title><rect x="568.2" y="981" width="0.2" height="15.0" fill="rgb(234,222,0)" rx="2" ry="2" />
<text  x="571.24" y="991.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (70,707,070 samples, 0.01%)</title><rect x="175.7" y="821" width="0.2" height="15.0" fill="rgb(211,14,47)" rx="2" ry="2" />
<text  x="178.70" y="831.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="792.2" y="517" width="0.1" height="15.0" fill="rgb(222,211,19)" rx="2" ry="2" />
<text  x="795.17" y="527.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::KeyIsAfterNode@plt (50,505,050 samples, 0.01%)</title><rect x="146.3" y="741" width="0.1" height="15.0" fill="rgb(242,43,1)" rx="2" ry="2" />
<text  x="149.32" y="751.5" ></text>
</g>
<g >
<title>rocksdb::UserComparatorWrapper::Compare@plt (80,808,080 samples, 0.01%)</title><rect x="160.3" y="741" width="0.2" height="15.0" fill="rgb(236,145,16)" rx="2" ry="2" />
<text  x="163.28" y="751.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (565,656,560 samples, 0.10%)</title><rect x="196.6" y="853" width="1.3" height="15.0" fill="rgb(250,219,9)" rx="2" ry="2" />
<text  x="199.62" y="863.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (181,818,180 samples, 0.03%)</title><rect x="1166.0" y="645" width="0.4" height="15.0" fill="rgb(234,118,8)" rx="2" ry="2" />
<text  x="1168.97" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (202,020,200 samples, 0.04%)</title><rect x="546.4" y="917" width="0.5" height="15.0" fill="rgb(210,182,52)" rx="2" ry="2" />
<text  x="549.44" y="927.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::SetInternalKey (1,242,424,230 samples, 0.23%)</title><rect x="888.6" y="629" width="2.7" height="15.0" fill="rgb(239,114,11)" rx="2" ry="2" />
<text  x="891.60" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (141,414,140 samples, 0.03%)</title><rect x="541.3" y="837" width="0.3" height="15.0" fill="rgb(250,51,24)" rx="2" ry="2" />
<text  x="544.33" y="847.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt;@plt (80,808,080 samples, 0.01%)</title><rect x="280.0" y="869" width="0.2" height="15.0" fill="rgb(243,79,32)" rx="2" ry="2" />
<text  x="282.99" y="879.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::IOOptions (141,414,140 samples, 0.03%)</title><rect x="992.6" y="549" width="0.3" height="15.0" fill="rgb(227,46,25)" rx="2" ry="2" />
<text  x="995.59" y="559.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (151,515,150 samples, 0.03%)</title><rect x="49.9" y="581" width="0.3" height="15.0" fill="rgb(245,223,10)" rx="2" ry="2" />
<text  x="52.90" y="591.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::BlockBasedTablePropertiesCollector::InternalAdd (141,414,140 samples, 0.03%)</title><rect x="988.8" y="629" width="0.3" height="15.0" fill="rgb(241,197,45)" rx="2" ry="2" />
<text  x="991.83" y="639.5" ></text>
</g>
<g >
<title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (232,323,230 samples, 0.04%)</title><rect x="151.8" y="725" width="0.5" height="15.0" fill="rgb(212,189,45)" rx="2" ry="2" />
<text  x="154.82" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (212,121,210 samples, 0.04%)</title><rect x="835.8" y="501" width="0.5" height="15.0" fill="rgb(205,103,9)" rx="2" ry="2" />
<text  x="838.79" y="511.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (70,707,070 samples, 0.01%)</title><rect x="1027.9" y="597" width="0.1" height="15.0" fill="rgb(237,92,26)" rx="2" ry="2" />
<text  x="1030.87" y="607.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (636,363,630 samples, 0.12%)</title><rect x="284.9" y="853" width="1.3" height="15.0" fill="rgb(223,167,8)" rx="2" ry="2" />
<text  x="287.86" y="863.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (141,414,140 samples, 0.03%)</title><rect x="835.9" y="469" width="0.4" height="15.0" fill="rgb(223,154,53)" rx="2" ry="2" />
<text  x="838.95" y="479.5" ></text>
</g>
<g >
<title>snappy::internal::CompressFragment (2,676,767,650 samples, 0.49%)</title><rect x="1180.3" y="997" width="5.8" height="15.0" fill="rgb(205,57,31)" rx="2" ry="2" />
<text  x="1183.31" y="1007.5" ></text>
</g>
<g >
<title>rocksdb::Block::~Block (70,707,070 samples, 0.01%)</title><rect x="768.7" y="405" width="0.1" height="15.0" fill="rgb(252,31,23)" rx="2" ry="2" />
<text  x="771.69" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (90,909,090 samples, 0.02%)</title><rect x="546.7" y="885" width="0.2" height="15.0" fill="rgb(210,166,42)" rx="2" ry="2" />
<text  x="549.66" y="895.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::MemTableInserter::SeekToColumnFamily (151,515,150 samples, 0.03%)</title><rect x="68.1" y="821" width="0.3" height="15.0" fill="rgb(222,51,38)" rx="2" ry="2" />
<text  x="71.07" y="831.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Add (34,111,110,770 samples, 6.30%)</title><rect x="984.0" y="645" width="74.4" height="15.0" fill="rgb(214,37,24)" rx="2" ry="2" />
<text  x="986.98" y="655.5" >rocksdb:..</text>
</g>
<g >
<title>alloc_pages_vma (161,616,160 samples, 0.03%)</title><rect x="658.6" y="885" width="0.4" height="15.0" fill="rgb(227,223,9)" rx="2" ry="2" />
<text  x="661.60" y="895.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*&gt;::compare_exchange_strong@plt (50,505,050 samples, 0.01%)</title><rect x="161.0" y="757" width="0.1" height="15.0" fill="rgb(231,118,42)" rx="2" ry="2" />
<text  x="163.96" y="767.5" ></text>
</g>
<g >
<title>handle_pte_fault (262,626,260 samples, 0.05%)</title><rect x="658.5" y="917" width="0.6" height="15.0" fill="rgb(220,153,39)" rx="2" ry="2" />
<text  x="661.51" y="927.5" ></text>
</g>
<g >
<title>rocksdb::NotifyCollectTableCollectorsOnAdd (202,020,200 samples, 0.04%)</title><rect x="1099.4" y="645" width="0.5" height="15.0" fill="rgb(248,152,6)" rx="2" ry="2" />
<text  x="1102.44" y="655.5" ></text>
</g>
<g >
<title>std::forward&lt;std::_Rb_tree_node_base*&amp;&gt; (60,606,060 samples, 0.01%)</title><rect x="73.7" y="741" width="0.2" height="15.0" fill="rgb(226,88,54)" rx="2" ry="2" />
<text  x="76.73" y="751.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (111,111,110 samples, 0.02%)</title><rect x="175.9" y="853" width="0.2" height="15.0" fill="rgb(233,38,51)" rx="2" ry="2" />
<text  x="178.89" y="863.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (272,727,270 samples, 0.05%)</title><rect x="1044.5" y="629" width="0.5" height="15.0" fill="rgb(211,2,5)" rx="2" ry="2" />
<text  x="1047.45" y="639.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (50,505,050 samples, 0.01%)</title><rect x="164.8" y="725" width="0.1" height="15.0" fill="rgb(223,219,41)" rx="2" ry="2" />
<text  x="167.84" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::SstPartitioner, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::_M_ptr (272,727,270 samples, 0.05%)</title><rect x="1079.1" y="613" width="0.5" height="15.0" fill="rgb(231,186,9)" rx="2" ry="2" />
<text  x="1082.05" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="836.1" y="437" width="0.2" height="15.0" fill="rgb(224,200,37)" rx="2" ry="2" />
<text  x="839.10" y="447.5" ></text>
</g>
<g >
<title>iput (70,707,070 samples, 0.01%)</title><rect x="1178.5" y="565" width="0.2" height="15.0" fill="rgb(235,95,39)" rx="2" ry="2" />
<text  x="1181.55" y="575.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="801.5" y="485" width="0.1" height="15.0" fill="rgb(253,188,53)" rx="2" ry="2" />
<text  x="804.46" y="495.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::duration&lt;unsigned long, void&gt; (80,808,080 samples, 0.01%)</title><rect x="194.2" y="869" width="0.2" height="15.0" fill="rgb(234,3,31)" rx="2" ry="2" />
<text  x="197.22" y="879.5" ></text>
</g>
<g >
<title>rocksdb::Random::Uniform (60,606,060 samples, 0.01%)</title><rect x="274.4" y="853" width="0.1" height="15.0" fill="rgb(244,116,26)" rx="2" ry="2" />
<text  x="277.40" y="863.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (212,121,210 samples, 0.04%)</title><rect x="827.7" y="485" width="0.5" height="15.0" fill="rgb(209,57,29)" rx="2" ry="2" />
<text  x="830.73" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (80,808,080 samples, 0.01%)</title><rect x="837.6" y="469" width="0.2" height="15.0" fill="rgb(252,154,31)" rx="2" ry="2" />
<text  x="840.64" y="479.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::GetInstance (60,606,060 samples, 0.01%)</title><rect x="1110.6" y="629" width="0.1" height="15.0" fill="rgb(214,141,1)" rx="2" ry="2" />
<text  x="1113.61" y="639.5" ></text>
</g>
<g >
<title>generic_perform_write (545,454,540 samples, 0.10%)</title><rect x="993.6" y="357" width="1.2" height="15.0" fill="rgb(208,138,38)" rx="2" ry="2" />
<text  x="996.63" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (191,919,190 samples, 0.04%)</title><rect x="660.7" y="1013" width="0.4" height="15.0" fill="rgb(233,151,40)" rx="2" ry="2" />
<text  x="663.69" y="1023.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::IsParallelCompressionEnabled (80,808,080 samples, 0.01%)</title><rect x="1059.3" y="629" width="0.1" height="15.0" fill="rgb(208,178,27)" rx="2" ry="2" />
<text  x="1062.25" y="639.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (3,474,747,440 samples, 0.64%)</title><rect x="337.9" y="821" width="7.5" height="15.0" fill="rgb(223,166,41)" rx="2" ry="2" />
<text  x="340.87" y="831.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::KeyComparator::operator (6,040,403,980 samples, 1.12%)</title><rect x="147.3" y="757" width="13.2" height="15.0" fill="rgb(210,70,43)" rx="2" ry="2" />
<text  x="150.29" y="767.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::_M_ptr (636,363,630 samples, 0.12%)</title><rect x="1040.1" y="581" width="1.4" height="15.0" fill="rgb(240,40,21)" rx="2" ry="2" />
<text  x="1043.07" y="591.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::status (1,808,080,790 samples, 0.33%)</title><rect x="784.7" y="549" width="3.9" height="15.0" fill="rgb(222,70,11)" rx="2" ry="2" />
<text  x="787.68" y="559.5" ></text>
</g>
<g >
<title>rocksdb::ReadOnlySkipListRep::PackLocal (454,545,450 samples, 0.08%)</title><rect x="689.6" y="613" width="1.0" height="15.0" fill="rgb(243,43,1)" rx="2" ry="2" />
<text  x="692.56" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (262,626,260 samples, 0.05%)</title><rect x="172.0" y="837" width="0.6" height="15.0" fill="rgb(236,2,38)" rx="2" ry="2" />
<text  x="175.00" y="847.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::front (242,424,240 samples, 0.04%)</title><rect x="865.7" y="613" width="0.6" height="15.0" fill="rgb(249,174,23)" rx="2" ry="2" />
<text  x="868.74" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::FileMetaData* const*, std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt; &gt;::base (212,121,210 samples, 0.04%)</title><rect x="1073.0" y="597" width="0.5" height="15.0" fill="rgb(244,18,47)" rx="2" ry="2" />
<text  x="1076.04" y="607.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::CurrentForward (80,808,080 samples, 0.01%)</title><rect x="701.0" y="629" width="0.2" height="15.0" fill="rgb(209,195,30)" rx="2" ry="2" />
<text  x="703.99" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (90,909,090 samples, 0.02%)</title><rect x="862.9" y="581" width="0.2" height="15.0" fill="rgb(224,153,13)" rx="2" ry="2" />
<text  x="865.88" y="591.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt; const, rocksdb::CompactionMergingIterator::HeapItem* const&gt;::operator* (595,959,590 samples, 0.11%)</title><rect x="753.8" y="565" width="1.3" height="15.0" fill="rgb(225,196,52)" rx="2" ry="2" />
<text  x="756.83" y="575.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::CurrentSizeEstimate (171,717,170 samples, 0.03%)</title><rect x="1023.6" y="597" width="0.4" height="15.0" fill="rgb(251,30,17)" rx="2" ry="2" />
<text  x="1026.60" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (454,545,450 samples, 0.08%)</title><rect x="856.6" y="533" width="1.0" height="15.0" fill="rgb(253,182,33)" rx="2" ry="2" />
<text  x="859.65" y="543.5" ></text>
</g>
<g >
<title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (212,121,210 samples, 0.04%)</title><rect x="123.8" y="661" width="0.4" height="15.0" fill="rgb(226,48,43)" rx="2" ry="2" />
<text  x="126.77" y="671.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (272,727,270 samples, 0.05%)</title><rect x="975.1" y="565" width="0.6" height="15.0" fill="rgb(234,21,11)" rx="2" ry="2" />
<text  x="978.11" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (373,737,370 samples, 0.07%)</title><rect x="837.1" y="533" width="0.8" height="15.0" fill="rgb(209,118,20)" rx="2" ry="2" />
<text  x="840.07" y="543.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::InvokeFilterIfNeeded (313,131,310 samples, 0.06%)</title><rect x="879.0" y="645" width="0.7" height="15.0" fill="rgb(252,206,8)" rx="2" ry="2" />
<text  x="882.00" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::get (666,666,660 samples, 0.12%)</title><rect x="944.3" y="613" width="1.5" height="15.0" fill="rgb(210,177,29)" rx="2" ry="2" />
<text  x="947.34" y="623.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::ShouldStopBefore (565,656,560 samples, 0.10%)</title><rect x="1156.8" y="661" width="1.3" height="15.0" fill="rgb(224,41,47)" rx="2" ry="2" />
<text  x="1159.83" y="671.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (373,737,370 samples, 0.07%)</title><rect x="1160.3" y="661" width="0.9" height="15.0" fill="rgb(225,110,19)" rx="2" ry="2" />
<text  x="1163.34" y="671.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (232,323,230 samples, 0.04%)</title><rect x="164.6" y="805" width="0.5" height="15.0" fill="rgb(207,118,10)" rx="2" ry="2" />
<text  x="167.64" y="815.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (70,707,070 samples, 0.01%)</title><rect x="1025.5" y="597" width="0.1" height="15.0" fill="rgb(215,67,13)" rx="2" ry="2" />
<text  x="1028.49" y="607.5" ></text>
</g>
<g >
<title>rocksdb::FlushBlockBySizePolicy::Update (90,909,090 samples, 0.02%)</title><rect x="1097.4" y="645" width="0.2" height="15.0" fill="rgb(238,128,50)" rx="2" ry="2" />
<text  x="1100.37" y="655.5" ></text>
</g>
<g >
<title>__libc_pread (535,353,530 samples, 0.10%)</title><rect x="807.8" y="437" width="1.2" height="15.0" fill="rgb(209,21,49)" rx="2" ry="2" />
<text  x="810.82" y="447.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (181,818,180 samples, 0.03%)</title><rect x="41.2" y="581" width="0.4" height="15.0" fill="rgb(218,112,53)" rx="2" ry="2" />
<text  x="44.23" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (323,232,320 samples, 0.06%)</title><rect x="799.9" y="501" width="0.7" height="15.0" fill="rgb(209,154,32)" rx="2" ry="2" />
<text  x="802.92" y="511.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::IsKeyPinned (353,535,350 samples, 0.07%)</title><rect x="940.0" y="645" width="0.8" height="15.0" fill="rgb(207,179,48)" rx="2" ry="2" />
<text  x="943.05" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (858,585,850 samples, 0.16%)</title><rect x="785.6" y="501" width="1.9" height="15.0" fill="rgb(212,11,28)" rx="2" ry="2" />
<text  x="788.65" y="511.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, false&gt;::_M_head@plt (80,808,080 samples, 0.01%)</title><rect x="791.0" y="469" width="0.2" height="15.0" fill="rgb(217,126,1)" rx="2" ry="2" />
<text  x="793.98" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::get (222,222,220 samples, 0.04%)</title><rect x="1144.9" y="613" width="0.4" height="15.0" fill="rgb(219,220,29)" rx="2" ry="2" />
<text  x="1147.85" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Mod&lt;unsigned long, 624ul, 1ul, 0ul, true, true&gt;::__calc (6,575,757,510 samples, 1.21%)</title><rect x="623.2" y="933" width="14.4" height="15.0" fill="rgb(218,12,42)" rx="2" ry="2" />
<text  x="626.23" y="943.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;rocksdb::SpinMutex&gt;::unique_lock (60,606,060 samples, 0.01%)</title><rect x="80.5" y="741" width="0.1" height="15.0" fill="rgb(235,147,17)" rx="2" ry="2" />
<text  x="83.49" y="751.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;rocksdb::SpinMutex&gt;::unlock (90,909,090 samples, 0.02%)</title><rect x="80.1" y="709" width="0.2" height="15.0" fill="rgb(207,153,1)" rx="2" ry="2" />
<text  x="83.05" y="719.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::CurrentForward (4,707,070,660 samples, 0.87%)</title><rect x="740.2" y="613" width="10.2" height="15.0" fill="rgb(224,91,37)" rx="2" ry="2" />
<text  x="743.17" y="623.5" ></text>
</g>
<g >
<title>rocksdb::FileMetaData::UpdateBoundaries (2,161,616,140 samples, 0.40%)</title><rect x="1092.7" y="645" width="4.7" height="15.0" fill="rgb(237,171,19)" rx="2" ry="2" />
<text  x="1095.66" y="655.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (252,525,250 samples, 0.05%)</title><rect x="752.4" y="565" width="0.6" height="15.0" fill="rgb(221,201,0)" rx="2" ry="2" />
<text  x="755.44" y="575.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::AllocateKey (1,616,161,600 samples, 0.30%)</title><rect x="78.2" y="789" width="3.5" height="15.0" fill="rgb(245,161,18)" rx="2" ry="2" />
<text  x="81.20" y="799.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::empty (313,131,310 samples, 0.06%)</title><rect x="751.4" y="597" width="0.7" height="15.0" fill="rgb(252,134,30)" rx="2" ry="2" />
<text  x="754.43" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (585,858,580 samples, 0.11%)</title><rect x="1094.5" y="629" width="1.3" height="15.0" fill="rgb(215,201,3)" rx="2" ry="2" />
<text  x="1097.53" y="639.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::get_right (50,505,050 samples, 0.01%)</title><rect x="707.4" y="581" width="0.1" height="15.0" fill="rgb(235,161,39)" rx="2" ry="2" />
<text  x="710.36" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (575,757,570 samples, 0.11%)</title><rect x="1000.6" y="581" width="1.2" height="15.0" fill="rgb(211,193,36)" rx="2" ry="2" />
<text  x="1003.59" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (434,343,430 samples, 0.08%)</title><rect x="1037.7" y="613" width="1.0" height="15.0" fill="rgb(236,82,44)" rx="2" ry="2" />
<text  x="1040.72" y="623.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::BatchPostProcess (717,171,710 samples, 0.13%)</title><rect x="60.0" y="869" width="1.6" height="15.0" fill="rgb(244,208,44)" rx="2" ry="2" />
<text  x="63.03" y="879.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (282,828,280 samples, 0.05%)</title><rect x="794.8" y="469" width="0.6" height="15.0" fill="rgb(208,213,25)" rx="2" ry="2" />
<text  x="797.77" y="479.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (202,020,200 samples, 0.04%)</title><rect x="1162.7" y="677" width="0.5" height="15.0" fill="rgb(220,34,9)" rx="2" ry="2" />
<text  x="1165.74" y="687.5" ></text>
</g>
<g >
<title>rocksdb::GetVarint32Ptr (939,393,930 samples, 0.17%)</title><rect x="104.8" y="677" width="2.1" height="15.0" fill="rgb(236,81,24)" rx="2" ry="2" />
<text  x="107.81" y="687.5" ></text>
</g>
<g >
<title>rocksdb::InternalKeyComparator::Compare (1,848,484,830 samples, 0.34%)</title><rect x="1026.5" y="629" width="4.0" height="15.0" fill="rgb(230,90,24)" rx="2" ry="2" />
<text  x="1029.46" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (878,787,870 samples, 0.16%)</title><rect x="859.4" y="517" width="1.9" height="15.0" fill="rgb(247,91,46)" rx="2" ry="2" />
<text  x="862.42" y="527.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (161,616,160 samples, 0.03%)</title><rect x="860.9" y="469" width="0.4" height="15.0" fill="rgb(211,3,21)" rx="2" ry="2" />
<text  x="863.94" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned long, rocksdb::RangeDelAggregator::StripeRep, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::end (50,505,050 samples, 0.01%)</title><rect x="913.5" y="629" width="0.1" height="15.0" fill="rgb(249,118,50)" rx="2" ry="2" />
<text  x="916.53" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (7,222,222,150 samples, 1.33%)</title><rect x="1119.5" y="645" width="15.7" height="15.0" fill="rgb(254,211,27)" rx="2" ry="2" />
<text  x="1122.46" y="655.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::TrimAppend (141,414,140 samples, 0.03%)</title><rect x="820.3" y="501" width="0.3" height="15.0" fill="rgb(210,123,8)" rx="2" ry="2" />
<text  x="823.27" y="511.5" ></text>
</g>
<g >
<title>rocksdb::Cleanable::DoCleanup (424,242,420 samples, 0.08%)</title><rect x="813.0" y="469" width="0.9" height="15.0" fill="rgb(252,160,27)" rx="2" ry="2" />
<text  x="816.02" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (171,717,170 samples, 0.03%)</title><rect x="849.6" y="469" width="0.4" height="15.0" fill="rgb(215,171,51)" rx="2" ry="2" />
<text  x="852.58" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (111,111,110 samples, 0.02%)</title><rect x="785.3" y="469" width="0.2" height="15.0" fill="rgb(222,119,19)" rx="2" ry="2" />
<text  x="788.30" y="479.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (13,898,989,760 samples, 2.57%)</title><rect x="661.1" y="949" width="30.3" height="15.0" fill="rgb(211,85,4)" rx="2" ry="2" />
<text  x="664.13" y="959.5" >st..</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (90,909,090 samples, 0.02%)</title><rect x="221.7" y="837" width="0.2" height="15.0" fill="rgb(220,38,18)" rx="2" ry="2" />
<text  x="224.74" y="847.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="797.9" y="453" width="0.2" height="15.0" fill="rgb(251,26,10)" rx="2" ry="2" />
<text  x="800.89" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt; &gt;::deallocate (121,212,120 samples, 0.02%)</title><rect x="63.6" y="789" width="0.2" height="15.0" fill="rgb(225,67,4)" rx="2" ry="2" />
<text  x="66.56" y="799.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::operator (70,707,070 samples, 0.01%)</title><rect x="639.4" y="949" width="0.2" height="15.0" fill="rgb(227,173,15)" rx="2" ry="2" />
<text  x="642.40" y="959.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::value (737,373,730 samples, 0.14%)</title><rect x="922.5" y="597" width="1.6" height="15.0" fill="rgb(219,42,48)" rx="2" ry="2" />
<text  x="925.49" y="607.5" ></text>
</g>
<g >
<title>sock_sendmsg (454,545,450 samples, 0.08%)</title><rect x="689.6" y="453" width="1.0" height="15.0" fill="rgb(241,202,34)" rx="2" ry="2" />
<text  x="692.56" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::get (60,606,060 samples, 0.01%)</title><rect x="932.5" y="629" width="0.1" height="15.0" fill="rgb(205,45,52)" rx="2" ry="2" />
<text  x="935.52" y="639.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Valid (202,020,200 samples, 0.04%)</title><rect x="822.4" y="581" width="0.4" height="15.0" fill="rgb(253,145,33)" rx="2" ry="2" />
<text  x="825.36" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="846.5" y="453" width="0.3" height="15.0" fill="rgb(212,145,6)" rx="2" ry="2" />
<text  x="849.47" y="463.5" ></text>
</g>
<g >
<title>block_invalidatepage (70,707,070 samples, 0.01%)</title><rect x="691.2" y="453" width="0.2" height="15.0" fill="rgb(249,192,40)" rx="2" ry="2" />
<text  x="694.22" y="463.5" ></text>
</g>
<g >
<title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Release (80,808,080 samples, 0.01%)</title><rect x="768.9" y="389" width="0.2" height="15.0" fill="rgb(229,76,6)" rx="2" ry="2" />
<text  x="771.89" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="859.0" y="453" width="0.2" height="15.0" fill="rgb(247,149,23)" rx="2" ry="2" />
<text  x="862.03" y="463.5" ></text>
</g>
<g >
<title>rocksdb::UncompressSerializedBlock (363,636,360 samples, 0.07%)</title><rect x="764.9" y="421" width="0.8" height="15.0" fill="rgb(232,124,49)" rx="2" ry="2" />
<text  x="767.88" y="431.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid (555,555,550 samples, 0.10%)</title><rect x="948.0" y="661" width="1.3" height="15.0" fill="rgb(252,58,52)" rx="2" ry="2" />
<text  x="951.04" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (60,606,060 samples, 0.01%)</title><rect x="565.6" y="933" width="0.2" height="15.0" fill="rgb(217,104,5)" rx="2" ry="2" />
<text  x="568.62" y="943.5" ></text>
</g>
<g >
<title>__GI___unlink (70,707,070 samples, 0.01%)</title><rect x="1178.5" y="645" width="0.2" height="15.0" fill="rgb(253,144,6)" rx="2" ry="2" />
<text  x="1181.55" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (151,515,150 samples, 0.03%)</title><rect x="797.8" y="469" width="0.3" height="15.0" fill="rgb(252,35,48)" rx="2" ry="2" />
<text  x="800.80" y="479.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::IOOptions (60,606,060 samples, 0.01%)</title><rect x="807.1" y="421" width="0.2" height="15.0" fill="rgb(205,191,22)" rx="2" ry="2" />
<text  x="810.14" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_begin (282,828,280 samples, 0.05%)</title><rect x="903.8" y="581" width="0.6" height="15.0" fill="rgb(227,229,15)" rx="2" ry="2" />
<text  x="906.78" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SavePoints, std::default_delete&lt;rocksdb::SavePoints&gt; &gt;::unique_ptr&lt;std::default_delete&lt;rocksdb::SavePoints&gt;, void&gt; (151,515,150 samples, 0.03%)</title><rect x="563.2" y="917" width="0.3" height="15.0" fill="rgb(209,154,53)" rx="2" ry="2" />
<text  x="566.20" y="927.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (565,656,560 samples, 0.10%)</title><rect x="1029.3" y="597" width="1.2" height="15.0" fill="rgb(252,30,36)" rx="2" ry="2" />
<text  x="1032.26" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;rocksdb::SuperVersion*, std::allocator&lt;rocksdb::SuperVersion*&gt; &gt;::_Vector_base (50,505,050 samples, 0.01%)</title><rect x="30.6" y="837" width="0.1" height="15.0" fill="rgb(210,7,38)" rx="2" ry="2" />
<text  x="33.61" y="847.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::CompactionIterator*, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt; (141,414,140 samples, 0.03%)</title><rect x="1174.8" y="645" width="0.3" height="15.0" fill="rgb(216,104,43)" rx="2" ry="2" />
<text  x="1177.80" y="655.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::downheap (12,252,525,130 samples, 2.26%)</title><rect x="704.6" y="597" width="26.7" height="15.0" fill="rgb(249,125,53)" rx="2" ry="2" />
<text  x="707.63" y="607.5" >r..</text>
</g>
<g >
<title>rocksdb::FlushBlockBySizePolicy::BlockAlmostFull (50,505,050 samples, 0.01%)</title><rect x="1020.4" y="629" width="0.1" height="15.0" fill="rgb(237,16,52)" rx="2" ry="2" />
<text  x="1023.43" y="639.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count (121,212,120 samples, 0.02%)</title><rect x="345.0" y="805" width="0.2" height="15.0" fill="rgb(237,144,1)" rx="2" ry="2" />
<text  x="347.98" y="815.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (101,010,100 samples, 0.02%)</title><rect x="783.6" y="453" width="0.2" height="15.0" fill="rgb(239,156,8)" rx="2" ry="2" />
<text  x="786.56" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IndexBuilder, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt;::get (818,181,810 samples, 0.15%)</title><rect x="1055.3" y="613" width="1.8" height="15.0" fill="rgb(238,208,21)" rx="2" ry="2" />
<text  x="1058.33" y="623.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (191,919,190 samples, 0.04%)</title><rect x="49.8" y="645" width="0.4" height="15.0" fill="rgb(218,118,16)" rx="2" ry="2" />
<text  x="52.82" y="655.5" ></text>
</g>
<g >
<title>rocksdb::PutVarint32Varint32Varint32 (90,909,090 samples, 0.02%)</title><rect x="1012.8" y="613" width="0.2" height="15.0" fill="rgb(240,146,13)" rx="2" ry="2" />
<text  x="1015.81" y="623.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (474,747,470 samples, 0.09%)</title><rect x="341.8" y="789" width="1.0" height="15.0" fill="rgb(228,104,42)" rx="2" ry="2" />
<text  x="344.81" y="799.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (60,606,060 samples, 0.01%)</title><rect x="174.7" y="853" width="0.2" height="15.0" fill="rgb(249,16,35)" rx="2" ry="2" />
<text  x="177.75" y="863.5" ></text>
</g>
<g >
<title>rocksdb::VersionSet::PackLocal (60,606,060 samples, 0.01%)</title><rect x="690.6" y="645" width="0.1" height="15.0" fill="rgb(229,124,29)" rx="2" ry="2" />
<text  x="693.56" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (252,525,250 samples, 0.05%)</title><rect x="799.2" y="469" width="0.6" height="15.0" fill="rgb(210,9,22)" rx="2" ry="2" />
<text  x="802.24" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (50,505,050 samples, 0.01%)</title><rect x="568.5" y="981" width="0.1" height="15.0" fill="rgb(205,34,20)" rx="2" ry="2" />
<text  x="571.51" y="991.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::Key (60,606,060 samples, 0.01%)</title><rect x="146.4" y="741" width="0.2" height="15.0" fill="rgb(236,11,30)" rx="2" ry="2" />
<text  x="149.43" y="751.5" ></text>
</g>
<g >
<title>rocksdb::MergeOutputIterator::Valid@plt (171,717,170 samples, 0.03%)</title><rect x="967.8" y="677" width="0.3" height="15.0" fill="rgb(239,144,19)" rx="2" ry="2" />
<text  x="970.77" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (121,212,120 samples, 0.02%)</title><rect x="164.8" y="757" width="0.2" height="15.0" fill="rgb(243,68,37)" rx="2" ry="2" />
<text  x="167.77" y="767.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::MemTable* const&amp;&gt;::_Tuple_impl (50,505,050 samples, 0.01%)</title><rect x="70.6" y="693" width="0.1" height="15.0" fill="rgb(207,158,45)" rx="2" ry="2" />
<text  x="73.56" y="703.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (161,616,160 samples, 0.03%)</title><rect x="302.5" y="869" width="0.4" height="15.0" fill="rgb(235,176,19)" rx="2" ry="2" />
<text  x="305.52" y="879.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::SstPartitioner, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::_M_ptr (1,020,202,010 samples, 0.19%)</title><rect x="1079.8" y="597" width="2.2" height="15.0" fill="rgb(227,55,46)" rx="2" ry="2" />
<text  x="1082.78" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalKeyComparator, std::default_delete&lt;rocksdb::InternalKeyComparator&gt; &gt;::operator= (80,808,080 samples, 0.01%)</title><rect x="804.0" y="437" width="0.2" height="15.0" fill="rgb(244,21,15)" rx="2" ry="2" />
<text  x="806.99" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::SstPartitioner*, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="1082.0" y="597" width="0.4" height="15.0" fill="rgb(251,21,14)" rx="2" ry="2" />
<text  x="1085.00" y="607.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::MemTableInserter::get_post_process_info (3,474,747,440 samples, 0.64%)</title><rect x="68.4" y="821" width="7.6" height="15.0" fill="rgb(248,168,30)" rx="2" ry="2" />
<text  x="71.40" y="831.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (171,717,170 samples, 0.03%)</title><rect x="827.8" y="469" width="0.4" height="15.0" fill="rgb(225,136,43)" rx="2" ry="2" />
<text  x="830.82" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Snappy_Uncompress (101,010,100 samples, 0.02%)</title><rect x="765.2" y="373" width="0.3" height="15.0" fill="rgb(206,83,28)" rx="2" ry="2" />
<text  x="768.23" y="383.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (141,414,140 samples, 0.03%)</title><rect x="49.9" y="549" width="0.3" height="15.0" fill="rgb(210,199,48)" rx="2" ry="2" />
<text  x="52.93" y="559.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::deallocate (50,505,050 samples, 0.01%)</title><rect x="63.4" y="789" width="0.2" height="15.0" fill="rgb(235,36,6)" rx="2" ry="2" />
<text  x="66.45" y="799.5" ></text>
</g>
<g >
<title>rocksdb::BlockPrefetcher::PrefetchIfNeeded (80,808,080 samples, 0.01%)</title><rect x="812.6" y="517" width="0.2" height="15.0" fill="rgb(244,6,45)" rx="2" ry="2" />
<text  x="815.63" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (1,313,131,300 samples, 0.24%)</title><rect x="584.4" y="933" width="2.8" height="15.0" fill="rgb(251,130,22)" rx="2" ry="2" />
<text  x="587.39" y="943.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (50,505,050 samples, 0.01%)</title><rect x="835.7" y="501" width="0.1" height="15.0" fill="rgb(232,23,19)" rx="2" ry="2" />
<text  x="838.68" y="511.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (70,707,070 samples, 0.01%)</title><rect x="42.6" y="533" width="0.1" height="15.0" fill="rgb(236,136,26)" rx="2" ry="2" />
<text  x="45.59" y="543.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (70,707,070 samples, 0.01%)</title><rect x="744.4" y="565" width="0.1" height="15.0" fill="rgb(221,185,46)" rx="2" ry="2" />
<text  x="747.36" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="791.3" y="517" width="0.1" height="15.0" fill="rgb(209,105,15)" rx="2" ry="2" />
<text  x="794.31" y="527.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::front (90,909,090 samples, 0.02%)</title><rect x="750.2" y="597" width="0.2" height="15.0" fill="rgb(250,64,53)" rx="2" ry="2" />
<text  x="753.19" y="607.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (161,616,160 samples, 0.03%)</title><rect x="847.5" y="437" width="0.4" height="15.0" fill="rgb(244,116,30)" rx="2" ry="2" />
<text  x="850.51" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (272,727,270 samples, 0.05%)</title><rect x="763.8" y="373" width="0.6" height="15.0" fill="rgb(240,74,54)" rx="2" ry="2" />
<text  x="766.78" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Slice::difference_offset (777,777,770 samples, 0.14%)</title><rect x="1009.9" y="597" width="1.7" height="15.0" fill="rgb(208,13,49)" rx="2" ry="2" />
<text  x="1012.92" y="607.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="852.2" y="485" width="0.1" height="15.0" fill="rgb(237,77,43)" rx="2" ry="2" />
<text  x="855.16" y="495.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::NextImpl (2,262,626,240 samples, 0.42%)</title><rect x="816.1" y="549" width="5.0" height="15.0" fill="rgb(247,96,2)" rx="2" ry="2" />
<text  x="819.13" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,737,373,720 samples, 0.32%)</title><rect x="39.2" y="789" width="3.8" height="15.0" fill="rgb(205,209,1)" rx="2" ry="2" />
<text  x="42.25" y="799.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (50,505,050 samples, 0.01%)</title><rect x="11.1" y="997" width="0.1" height="15.0" fill="rgb(225,37,27)" rx="2" ry="2" />
<text  x="14.12" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::SuperVersionContext::WriteStallNotification, std::allocator&lt;rocksdb::SuperVersionContext::WriteStallNotification&gt; &gt;::vector (60,606,060 samples, 0.01%)</title><rect x="30.8" y="853" width="0.1" height="15.0" fill="rgb(251,73,21)" rx="2" ry="2" />
<text  x="33.79" y="863.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="56.4" y="805" width="0.1" height="15.0" fill="rgb(210,65,54)" rx="2" ry="2" />
<text  x="59.38" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (222,222,220 samples, 0.04%)</title><rect x="582.8" y="917" width="0.5" height="15.0" fill="rgb(243,172,42)" rx="2" ry="2" />
<text  x="585.80" y="927.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::begin (90,909,090 samples, 0.02%)</title><rect x="753.3" y="565" width="0.2" height="15.0" fill="rgb(241,132,32)" rx="2" ry="2" />
<text  x="756.30" y="575.5" ></text>
</g>
<g >
<title>rocksdb::Slice::operator[] (90,909,090 samples, 0.02%)</title><rect x="174.9" y="853" width="0.2" height="15.0" fill="rgb(229,161,39)" rx="2" ry="2" />
<text  x="177.95" y="863.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (969,696,960 samples, 0.18%)</title><rect x="1131.6" y="581" width="2.1" height="15.0" fill="rgb(236,35,24)" rx="2" ry="2" />
<text  x="1134.62" y="591.5" ></text>
</g>
<g >
<title>XXH3_hashLong_internal_loop (242,424,240 samples, 0.04%)</title><rect x="806.3" y="341" width="0.5" height="15.0" fill="rgb(237,118,3)" rx="2" ry="2" />
<text  x="809.26" y="351.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::status (60,606,060 samples, 0.01%)</title><rect x="702.7" y="613" width="0.1" height="15.0" fill="rgb(209,159,31)" rx="2" ry="2" />
<text  x="705.71" y="623.5" ></text>
</g>
<g >
<title>wake_up_q (60,606,060 samples, 0.01%)</title><rect x="660.4" y="917" width="0.2" height="15.0" fill="rgb(228,158,9)" rx="2" ry="2" />
<text  x="663.43" y="927.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="785.4" y="453" width="0.1" height="15.0" fill="rgb(227,217,7)" rx="2" ry="2" />
<text  x="788.41" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (101,010,100 samples, 0.02%)</title><rect x="830.9" y="501" width="0.2" height="15.0" fill="rgb(221,85,54)" rx="2" ry="2" />
<text  x="833.93" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::WritableFileWriter, std::default_delete&lt;rocksdb::WritableFileWriter&gt; &gt;::_M_ptr (80,808,080 samples, 0.01%)</title><rect x="50.9" y="805" width="0.2" height="15.0" fill="rgb(249,74,34)" rx="2" ry="2" />
<text  x="53.92" y="815.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (333,333,330 samples, 0.06%)</title><rect x="856.9" y="501" width="0.7" height="15.0" fill="rgb(207,221,38)" rx="2" ry="2" />
<text  x="859.89" y="511.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (1,060,606,050 samples, 0.20%)</title><rect x="932.4" y="645" width="2.3" height="15.0" fill="rgb(234,150,29)" rx="2" ry="2" />
<text  x="935.36" y="655.5" ></text>
</g>
<g >
<title>std::operator&amp; (50,505,050 samples, 0.01%)</title><rect x="1165.8" y="629" width="0.2" height="15.0" fill="rgb(235,213,15)" rx="2" ry="2" />
<text  x="1168.84" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (434,343,430 samples, 0.08%)</title><rect x="927.8" y="645" width="0.9" height="15.0" fill="rgb(219,210,33)" rx="2" ry="2" />
<text  x="930.80" y="655.5" ></text>
</g>
<g >
<title>rocksdb::EncodeFixed32 (60,606,060 samples, 0.01%)</title><rect x="555.1" y="901" width="0.2" height="15.0" fill="rgb(244,169,41)" rx="2" ry="2" />
<text  x="558.12" y="911.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;char const []&gt;, true&gt;::_Head_base (50,505,050 samples, 0.01%)</title><rect x="1035.6" y="485" width="0.1" height="15.0" fill="rgb(218,184,8)" rx="2" ry="2" />
<text  x="1038.62" y="495.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::OK (50,505,050 samples, 0.01%)</title><rect x="990.1" y="533" width="0.1" height="15.0" fill="rgb(217,137,0)" rx="2" ry="2" />
<text  x="993.10" y="543.5" ></text>
</g>
<g >
<title>ext4_da_write_end (878,787,870 samples, 0.16%)</title><rect x="41.0" y="645" width="1.9" height="15.0" fill="rgb(220,210,4)" rx="2" ry="2" />
<text  x="43.96" y="655.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (202,020,200 samples, 0.04%)</title><rect x="1111.7" y="581" width="0.4" height="15.0" fill="rgb(208,219,17)" rx="2" ry="2" />
<text  x="1114.67" y="591.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (70,707,070 samples, 0.01%)</title><rect x="219.7" y="885" width="0.1" height="15.0" fill="rgb(207,81,7)" rx="2" ry="2" />
<text  x="222.65" y="895.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="787.2" y="421" width="0.3" height="15.0" fill="rgb(247,64,33)" rx="2" ry="2" />
<text  x="790.21" y="431.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (171,717,170 samples, 0.03%)</title><rect x="689.9" y="373" width="0.4" height="15.0" fill="rgb(244,93,14)" rx="2" ry="2" />
<text  x="692.94" y="383.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (232,323,230 samples, 0.04%)</title><rect x="749.7" y="597" width="0.5" height="15.0" fill="rgb(220,191,33)" rx="2" ry="2" />
<text  x="752.69" y="607.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatchInternal::GetColumnFamilyIdAndTimestampSize (1,747,474,730 samples, 0.32%)</title><rect x="551.2" y="917" width="3.9" height="15.0" fill="rgb(218,32,47)" rx="2" ry="2" />
<text  x="554.24" y="927.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (80,808,080 samples, 0.01%)</title><rect x="690.3" y="197" width="0.2" height="15.0" fill="rgb(250,8,5)" rx="2" ry="2" />
<text  x="693.34" y="207.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (70,707,070 samples, 0.01%)</title><rect x="34.3" y="837" width="0.2" height="15.0" fill="rgb(220,80,23)" rx="2" ry="2" />
<text  x="37.31" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::SuperVersionContext::WriteStallNotification, std::allocator&lt;rocksdb::SuperVersionContext::WriteStallNotification&gt; &gt;::~vector (111,111,110 samples, 0.02%)</title><rect x="32.7" y="853" width="0.2" height="15.0" fill="rgb(220,204,1)" rx="2" ry="2" />
<text  x="35.66" y="863.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::key (161,616,160 samples, 0.03%)</title><rect x="776.3" y="549" width="0.3" height="15.0" fill="rgb(228,9,44)" rx="2" ry="2" />
<text  x="779.29" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;rocksdb::InternalKeyComparator, std::default_delete&lt;rocksdb::InternalKeyComparator&gt;, true, true&gt;::operator= (70,707,070 samples, 0.01%)</title><rect x="804.0" y="421" width="0.2" height="15.0" fill="rgb(211,114,49)" rx="2" ry="2" />
<text  x="807.01" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (222,222,220 samples, 0.04%)</title><rect x="825.6" y="501" width="0.5" height="15.0" fill="rgb(216,136,3)" rx="2" ry="2" />
<text  x="828.60" y="511.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::IsKeyPinned (101,010,100 samples, 0.02%)</title><rect x="819.7" y="501" width="0.2" height="15.0" fill="rgb(232,12,3)" rx="2" ry="2" />
<text  x="822.69" y="511.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="838.1" y="517" width="0.2" height="15.0" fill="rgb(247,225,42)" rx="2" ry="2" />
<text  x="841.06" y="527.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (121,212,120 samples, 0.02%)</title><rect x="223.7" y="885" width="0.3" height="15.0" fill="rgb(244,26,43)" rx="2" ry="2" />
<text  x="226.73" y="895.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::WriteBlock (3,737,373,700 samples, 0.69%)</title><rect x="989.2" y="597" width="8.1" height="15.0" fill="rgb(214,17,46)" rx="2" ry="2" />
<text  x="992.18" y="607.5" ></text>
</g>
<g >
<title>std::move&lt;std::tuple&lt;rocksdb::Status, unsigned int, unsigned long&gt;&amp;&gt; (60,606,060 samples, 0.01%)</title><rect x="558.5" y="917" width="0.1" height="15.0" fill="rgb(244,151,46)" rx="2" ry="2" />
<text  x="561.47" y="927.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::_M_ptr (222,222,220 samples, 0.04%)</title><rect x="1169.5" y="645" width="0.5" height="15.0" fill="rgb(208,57,28)" rx="2" ry="2" />
<text  x="1172.50" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;::~vector (90,909,090 samples, 0.02%)</title><rect x="33.2" y="869" width="0.2" height="15.0" fill="rgb(228,60,50)" rx="2" ry="2" />
<text  x="36.23" y="879.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (50,505,050 samples, 0.01%)</title><rect x="551.9" y="901" width="0.1" height="15.0" fill="rgb(207,155,45)" rx="2" ry="2" />
<text  x="554.86" y="911.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::PackLocal (13,212,121,080 samples, 2.44%)</title><rect x="661.8" y="645" width="28.8" height="15.0" fill="rgb(250,74,1)" rx="2" ry="2" />
<text  x="664.75" y="655.5" >ro..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count@plt (80,808,080 samples, 0.01%)</title><rect x="320.3" y="805" width="0.1" height="15.0" fill="rgb(229,21,14)" rx="2" ry="2" />
<text  x="323.25" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt;::empty (232,323,230 samples, 0.04%)</title><rect x="1082.4" y="629" width="0.5" height="15.0" fill="rgb(243,66,15)" rx="2" ry="2" />
<text  x="1085.38" y="639.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::CASNext (1,707,070,690 samples, 0.32%)</title><rect x="84.6" y="757" width="3.7" height="15.0" fill="rgb(219,17,3)" rx="2" ry="2" />
<text  x="87.61" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_left (90,909,090 samples, 0.02%)</title><rect x="573.7" y="933" width="0.2" height="15.0" fill="rgb(217,6,18)" rx="2" ry="2" />
<text  x="576.71" y="943.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="582.2" y="901" width="0.1" height="15.0" fill="rgb(210,129,3)" rx="2" ry="2" />
<text  x="585.21" y="911.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (393,939,390 samples, 0.07%)</title><rect x="23.5" y="981" width="0.9" height="15.0" fill="rgb(228,14,3)" rx="2" ry="2" />
<text  x="26.54" y="991.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FlushBlockPolicy, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt;::operator (111,111,110 samples, 0.02%)</title><rect x="1151.0" y="645" width="0.3" height="15.0" fill="rgb(223,206,26)" rx="2" ry="2" />
<text  x="1154.02" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (80,808,080 samples, 0.01%)</title><rect x="921.7" y="581" width="0.2" height="15.0" fill="rgb(233,91,37)" rx="2" ry="2" />
<text  x="924.68" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="798.6" y="421" width="0.1" height="15.0" fill="rgb(228,27,49)" rx="2" ry="2" />
<text  x="801.62" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, std::_Bind&lt;void  (13,898,989,760 samples, 2.57%)</title><rect x="661.1" y="853" width="30.3" height="15.0" fill="rgb(238,167,43)" rx="2" ry="2" />
<text  x="664.13" y="863.5" >st..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count (828,282,820 samples, 0.15%)</title><rect x="317.2" y="789" width="1.8" height="15.0" fill="rgb(249,42,42)" rx="2" ry="2" />
<text  x="320.19" y="799.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="860.3" y="437" width="0.2" height="15.0" fill="rgb(227,176,31)" rx="2" ry="2" />
<text  x="863.33" y="447.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::GetInstance (121,212,120 samples, 0.02%)</title><rect x="1176.4" y="693" width="0.3" height="15.0" fill="rgb(249,139,48)" rx="2" ry="2" />
<text  x="1179.41" y="703.5" ></text>
</g>
<g >
<title>try_to_free_buffers (50,505,050 samples, 0.01%)</title><rect x="691.3" y="389" width="0.1" height="15.0" fill="rgb(211,138,39)" rx="2" ry="2" />
<text  x="694.26" y="399.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (777,777,770 samples, 0.14%)</title><rect x="942.3" y="629" width="1.7" height="15.0" fill="rgb(209,186,4)" rx="2" ry="2" />
<text  x="945.31" y="639.5" ></text>
</g>
<g >
<title>__handle_mm_fault (212,121,210 samples, 0.04%)</title><rect x="663.5" y="517" width="0.5" height="15.0" fill="rgb(211,81,31)" rx="2" ry="2" />
<text  x="666.49" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SuperVersion, std::default_delete&lt;rocksdb::SuperVersion&gt; &gt;::unique_ptr&lt;std::default_delete&lt;rocksdb::SuperVersion&gt;, void&gt; (50,505,050 samples, 0.01%)</title><rect x="31.3" y="885" width="0.1" height="15.0" fill="rgb(224,179,13)" rx="2" ry="2" />
<text  x="34.34" y="895.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (292,929,290 samples, 0.05%)</title><rect x="1133.1" y="517" width="0.6" height="15.0" fill="rgb(241,11,35)" rx="2" ry="2" />
<text  x="1136.05" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="861.1" y="437" width="0.2" height="15.0" fill="rgb(242,15,11)" rx="2" ry="2" />
<text  x="864.12" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="55.3" y="821" width="0.2" height="15.0" fill="rgb(249,205,34)" rx="2" ry="2" />
<text  x="58.34" y="831.5" ></text>
</g>
<g >
<title>exc_page_fault (171,717,170 samples, 0.03%)</title><rect x="664.6" y="565" width="0.4" height="15.0" fill="rgb(207,16,40)" rx="2" ry="2" />
<text  x="667.64" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (90,909,090 samples, 0.02%)</title><rect x="1189.1" y="1013" width="0.2" height="15.0" fill="rgb(225,139,43)" rx="2" ry="2" />
<text  x="1192.14" y="1023.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::IsDeleteRangeSentinelKey (343,434,340 samples, 0.06%)</title><rect x="914.4" y="629" width="0.8" height="15.0" fill="rgb(205,124,2)" rx="2" ry="2" />
<text  x="917.43" y="639.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::duration&lt;unsigned long, void&gt; (1,494,949,480 samples, 0.28%)</title><rect x="276.3" y="869" width="3.3" height="15.0" fill="rgb(216,158,23)" rx="2" ry="2" />
<text  x="279.29" y="879.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (424,242,420 samples, 0.08%)</title><rect x="1068.9" y="533" width="1.0" height="15.0" fill="rgb(226,64,35)" rx="2" ry="2" />
<text  x="1071.94" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::_M_ptr (101,010,100 samples, 0.02%)</title><rect x="34.9" y="805" width="0.2" height="15.0" fill="rgb(223,139,29)" rx="2" ry="2" />
<text  x="37.89" y="815.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;45ul&gt; (1,121,212,110 samples, 0.21%)</title><rect x="941.6" y="645" width="2.4" height="15.0" fill="rgb(236,200,9)" rx="2" ry="2" />
<text  x="944.57" y="655.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::LinkOne (505,050,500 samples, 0.09%)</title><rect x="527.2" y="885" width="1.1" height="15.0" fill="rgb(227,125,35)" rx="2" ry="2" />
<text  x="530.24" y="895.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="846.6" y="421" width="0.2" height="15.0" fill="rgb(246,117,36)" rx="2" ry="2" />
<text  x="849.63" y="431.5" ></text>
</g>
<g >
<title>std::operator== (80,808,080 samples, 0.01%)</title><rect x="906.5" y="613" width="0.2" height="15.0" fill="rgb(223,211,5)" rx="2" ry="2" />
<text  x="909.48" y="623.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (151,515,150 samples, 0.03%)</title><rect x="42.5" y="565" width="0.3" height="15.0" fill="rgb(230,98,22)" rx="2" ry="2" />
<text  x="45.48" y="575.5" ></text>
</g>
<g >
<title>rocksdb::Compaction::column_family_data (70,707,070 samples, 0.01%)</title><rect x="1064.5" y="629" width="0.2" height="15.0" fill="rgb(252,79,19)" rx="2" ry="2" />
<text  x="1067.54" y="639.5" ></text>
</g>
<g >
<title>rocksdb::IsValueType (353,535,350 samples, 0.07%)</title><rect x="893.8" y="629" width="0.8" height="15.0" fill="rgb(216,55,9)" rx="2" ry="2" />
<text  x="896.84" y="639.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ikey (343,434,340 samples, 0.06%)</title><rect x="978.8" y="661" width="0.8" height="15.0" fill="rgb(240,7,35)" rx="2" ry="2" />
<text  x="981.85" y="671.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (3,494,949,460 samples, 0.65%)</title><rect x="321.1" y="869" width="7.6" height="15.0" fill="rgb(236,70,49)" rx="2" ry="2" />
<text  x="324.11" y="879.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::Tracer, std::default_delete&lt;rocksdb::Tracer&gt; &gt;::get (181,818,180 samples, 0.03%)</title><rect x="544.8" y="885" width="0.4" height="15.0" fill="rgb(238,85,46)" rx="2" ry="2" />
<text  x="547.79" y="895.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (131,313,130 samples, 0.02%)</title><rect x="177.2" y="853" width="0.3" height="15.0" fill="rgb(251,69,34)" rx="2" ry="2" />
<text  x="180.17" y="863.5" ></text>
</g>
<g >
<title>rocksdb::InternalKeyComparator::Compare (5,393,939,340 samples, 1.00%)</title><rect x="712.7" y="565" width="11.8" height="15.0" fill="rgb(213,39,42)" rx="2" ry="2" />
<text  x="715.71" y="575.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (223,323,230,090 samples, 41.26%)</title><rect x="691.8" y="949" width="486.9" height="15.0" fill="rgb(243,84,5)" rx="2" ry="2" />
<text  x="694.81" y="959.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (151,515,150 samples, 0.03%)</title><rect x="856.1" y="453" width="0.3" height="15.0" fill="rgb(218,219,29)" rx="2" ry="2" />
<text  x="859.05" y="463.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::EnlargeBufferIfNeeded (101,010,100 samples, 0.02%)</title><rect x="889.5" y="613" width="0.2" height="15.0" fill="rgb(228,76,30)" rx="2" ry="2" />
<text  x="892.53" y="623.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (222,222,220 samples, 0.04%)</title><rect x="834.2" y="549" width="0.5" height="15.0" fill="rgb(212,93,28)" rx="2" ry="2" />
<text  x="837.23" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_write (454,545,450 samples, 0.08%)</title><rect x="689.6" y="581" width="1.0" height="15.0" fill="rgb(206,206,13)" rx="2" ry="2" />
<text  x="692.56" y="591.5" ></text>
</g>
<g >
<title>rocksdb::SavePoint::SavePoint (50,505,050 samples, 0.01%)</title><rect x="556.7" y="901" width="0.1" height="15.0" fill="rgb(208,181,20)" rx="2" ry="2" />
<text  x="559.66" y="911.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::Initialize (191,919,190 samples, 0.04%)</title><rect x="760.9" y="437" width="0.4" height="15.0" fill="rgb(226,87,32)" rx="2" ry="2" />
<text  x="763.92" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::end (282,828,280 samples, 0.05%)</title><rect x="1086.4" y="613" width="0.6" height="15.0" fill="rgb(226,203,37)" rx="2" ry="2" />
<text  x="1089.41" y="623.5" ></text>
</g>
<g >
<title>rocksdb::UserComparatorWrapper::Compare (70,707,070 samples, 0.01%)</title><rect x="160.1" y="741" width="0.2" height="15.0" fill="rgb(233,216,17)" rx="2" ry="2" />
<text  x="163.13" y="751.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::operator[] (242,424,240 samples, 0.04%)</title><rect x="754.2" y="549" width="0.5" height="15.0" fill="rgb(249,169,48)" rx="2" ry="2" />
<text  x="757.16" y="559.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;34ul&gt; (222,222,220 samples, 0.04%)</title><rect x="242.6" y="885" width="0.5" height="15.0" fill="rgb(242,25,39)" rx="2" ry="2" />
<text  x="245.58" y="895.5" ></text>
</g>
<g >
<title>__ip_finish_output (90,909,090 samples, 0.02%)</title><rect x="690.3" y="261" width="0.2" height="15.0" fill="rgb(213,78,47)" rx="2" ry="2" />
<text  x="693.34" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (3,191,919,160 samples, 0.59%)</title><rect x="574.3" y="917" width="7.0" height="15.0" fill="rgb(243,63,45)" rx="2" ry="2" />
<text  x="577.30" y="927.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (111,111,110 samples, 0.02%)</title><rect x="541.7" y="837" width="0.2" height="15.0" fill="rgb(254,12,27)" rx="2" ry="2" />
<text  x="544.66" y="847.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (292,929,290 samples, 0.05%)</title><rect x="788.8" y="549" width="0.7" height="15.0" fill="rgb(210,222,20)" rx="2" ry="2" />
<text  x="791.82" y="559.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Valid (70,707,070 samples, 0.01%)</title><rect x="923.2" y="565" width="0.2" height="15.0" fill="rgb(231,1,13)" rx="2" ry="2" />
<text  x="926.24" y="575.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (60,606,060 samples, 0.01%)</title><rect x="10.6" y="965" width="0.1" height="15.0" fill="rgb(230,166,23)" rx="2" ry="2" />
<text  x="13.59" y="975.5" ></text>
</g>
<g >
<title>std::pair&lt;bool*, rocksdb::Slice const&gt;::pair&lt;bool*, rocksdb::Slice const&amp;, true&gt; (343,434,340 samples, 0.06%)</title><rect x="1077.6" y="629" width="0.8" height="15.0" fill="rgb(245,172,14)" rx="2" ry="2" />
<text  x="1080.62" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (80,808,080 samples, 0.01%)</title><rect x="1159.1" y="661" width="0.1" height="15.0" fill="rgb(229,72,35)" rx="2" ry="2" />
<text  x="1162.06" y="671.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Invalidate (474,747,470 samples, 0.09%)</title><rect x="813.0" y="501" width="1.1" height="15.0" fill="rgb(232,138,35)" rx="2" ry="2" />
<text  x="816.02" y="511.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::~IOOptions (50,505,050 samples, 0.01%)</title><rect x="38.5" y="821" width="0.1" height="15.0" fill="rgb(245,210,23)" rx="2" ry="2" />
<text  x="41.50" y="831.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (101,010,100 samples, 0.02%)</title><rect x="788.3" y="501" width="0.2" height="15.0" fill="rgb(236,161,9)" rx="2" ry="2" />
<text  x="791.29" y="511.5" ></text>
</g>
<g >
<title>std::this_thread::yield (323,232,320 samples, 0.06%)</title><rect x="539.0" y="885" width="0.7" height="15.0" fill="rgb(218,152,48)" rx="2" ry="2" />
<text  x="542.04" y="895.5" ></text>
</g>
<g >
<title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Lookup (50,505,050 samples, 0.01%)</title><rect x="810.3" y="437" width="0.1" height="15.0" fill="rgb(240,6,32)" rx="2" ry="2" />
<text  x="813.27" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (282,828,280 samples, 0.05%)</title><rect x="861.5" y="549" width="0.6" height="15.0" fill="rgb(252,115,3)" rx="2" ry="2" />
<text  x="864.49" y="559.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (393,939,390 samples, 0.07%)</title><rect x="1159.3" y="661" width="0.8" height="15.0" fill="rgb(246,119,51)" rx="2" ry="2" />
<text  x="1162.26" y="671.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::AllocateNode (1,313,131,300 samples, 0.24%)</title><rect x="78.4" y="773" width="2.8" height="15.0" fill="rgb(245,19,36)" rx="2" ry="2" />
<text  x="81.36" y="783.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="780.8" y="437" width="0.3" height="15.0" fill="rgb(218,115,16)" rx="2" ry="2" />
<text  x="783.83" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (383,838,380 samples, 0.07%)</title><rect x="895.6" y="581" width="0.8" height="15.0" fill="rgb(233,46,27)" rx="2" ry="2" />
<text  x="898.56" y="591.5" ></text>
</g>
<g >
<title>std::map&lt;rocksdb::MemTable*, rocksdb::MemTablePostProcessInfo, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::lower_bound (50,505,050 samples, 0.01%)</title><rect x="69.5" y="805" width="0.1" height="15.0" fill="rgb(226,186,12)" rx="2" ry="2" />
<text  x="72.46" y="815.5" ></text>
</g>
<g >
<title>exc_page_fault (111,111,110 samples, 0.02%)</title><rect x="81.0" y="725" width="0.2" height="15.0" fill="rgb(253,206,41)" rx="2" ry="2" />
<text  x="83.98" y="735.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::empty (454,545,450 samples, 0.08%)</title><rect x="731.3" y="597" width="1.0" height="15.0" fill="rgb(233,159,10)" rx="2" ry="2" />
<text  x="734.34" y="607.5" ></text>
</g>
<g >
<title>rocksdb::DecodeFixed64 (101,010,100 samples, 0.02%)</title><rect x="1018.8" y="613" width="0.2" height="15.0" fill="rgb(221,178,44)" rx="2" ry="2" />
<text  x="1021.80" y="623.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatch::Count (121,212,120 samples, 0.02%)</title><rect x="555.4" y="885" width="0.2" height="15.0" fill="rgb(214,113,28)" rx="2" ry="2" />
<text  x="558.38" y="895.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="862.5" y="469" width="0.2" height="15.0" fill="rgb(219,66,21)" rx="2" ry="2" />
<text  x="865.51" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (282,828,280 samples, 0.05%)</title><rect x="573.1" y="933" width="0.6" height="15.0" fill="rgb(251,63,17)" rx="2" ry="2" />
<text  x="576.09" y="943.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (50,505,050 samples, 0.01%)</title><rect x="174.6" y="805" width="0.1" height="15.0" fill="rgb(221,167,33)" rx="2" ry="2" />
<text  x="177.59" y="815.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (101,010,100 samples, 0.02%)</title><rect x="168.6" y="757" width="0.2" height="15.0" fill="rgb(253,33,3)" rx="2" ry="2" />
<text  x="171.58" y="767.5" ></text>
</g>
<g >
<title>rocksdb::Slice::compare (121,212,120 samples, 0.02%)</title><rect x="1106.9" y="597" width="0.3" height="15.0" fill="rgb(223,160,32)" rx="2" ry="2" />
<text  x="1109.91" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::DynamicBloom, std::default_delete&lt;rocksdb::DynamicBloom&gt; &gt;::_M_ptr (202,020,200 samples, 0.04%)</title><rect x="166.3" y="773" width="0.4" height="15.0" fill="rgb(217,65,5)" rx="2" ry="2" />
<text  x="169.29" y="783.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::current_output (131,313,130 samples, 0.02%)</title><rect x="1158.1" y="661" width="0.3" height="15.0" fill="rgb(227,158,48)" rx="2" ry="2" />
<text  x="1161.07" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (1,030,303,020 samples, 0.19%)</title><rect x="1129.4" y="565" width="2.2" height="15.0" fill="rgb(239,78,26)" rx="2" ry="2" />
<text  x="1132.37" y="575.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::IsPausingManualCompaction (999,999,990 samples, 0.18%)</title><rect x="879.7" y="645" width="2.2" height="15.0" fill="rgb(237,66,10)" rx="2" ry="2" />
<text  x="882.68" y="655.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (131,313,130 samples, 0.02%)</title><rect x="859.7" y="469" width="0.3" height="15.0" fill="rgb(251,8,36)" rx="2" ry="2" />
<text  x="862.71" y="479.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; (191,919,190 samples, 0.04%)</title><rect x="199.4" y="805" width="0.4" height="15.0" fill="rgb(235,131,17)" rx="2" ry="2" />
<text  x="202.41" y="815.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*&gt;::compare_exchange_strong (1,656,565,640 samples, 0.31%)</title><rect x="84.7" y="741" width="3.6" height="15.0" fill="rgb(248,118,22)" rx="2" ry="2" />
<text  x="87.72" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::CompactionOutputs::Output*, std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt; &gt;::__normal_iterator (90,909,090 samples, 0.02%)</title><rect x="1085.0" y="613" width="0.2" height="15.0" fill="rgb(237,82,20)" rx="2" ry="2" />
<text  x="1088.04" y="623.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyData::ioptions (50,505,050 samples, 0.01%)</title><rect x="76.2" y="821" width="0.2" height="15.0" fill="rgb(211,179,36)" rx="2" ry="2" />
<text  x="79.24" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SavePoints, std::default_delete&lt;rocksdb::SavePoints&gt; &gt;::~unique_ptr (191,919,190 samples, 0.04%)</title><rect x="564.3" y="917" width="0.4" height="15.0" fill="rgb(208,164,36)" rx="2" ry="2" />
<text  x="567.30" y="927.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::top@plt (50,505,050 samples, 0.01%)</title><rect x="739.3" y="613" width="0.1" height="15.0" fill="rgb(222,145,36)" rx="2" ry="2" />
<text  x="742.34" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (131,313,130 samples, 0.02%)</title><rect x="848.7" y="517" width="0.3" height="15.0" fill="rgb(236,39,17)" rx="2" ry="2" />
<text  x="851.72" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (50,505,050 samples, 0.01%)</title><rect x="541.8" y="805" width="0.1" height="15.0" fill="rgb(231,115,21)" rx="2" ry="2" />
<text  x="544.80" y="815.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::SuperVersion, std::default_delete&lt;rocksdb::SuperVersion&gt; &gt;::__uniq_ptr_impl (70,707,070 samples, 0.01%)</title><rect x="31.0" y="837" width="0.1" height="15.0" fill="rgb(234,204,36)" rx="2" ry="2" />
<text  x="33.97" y="847.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (606,060,600 samples, 0.11%)</title><rect x="585.9" y="917" width="1.3" height="15.0" fill="rgb(243,85,1)" rx="2" ry="2" />
<text  x="588.93" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::operator bool (161,616,160 samples, 0.03%)</title><rect x="34.8" y="837" width="0.3" height="15.0" fill="rgb(222,131,1)" rx="2" ry="2" />
<text  x="37.75" y="847.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (1,171,717,160 samples, 0.22%)</title><rect x="157.2" y="709" width="2.5" height="15.0" fill="rgb(231,228,18)" rx="2" ry="2" />
<text  x="160.18" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::operator* (60,606,060 samples, 0.01%)</title><rect x="1178.3" y="693" width="0.1" height="15.0" fill="rgb(211,116,34)" rx="2" ry="2" />
<text  x="1181.26" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;rocksdb::MemTable* const&amp;&gt;, std::tuple&lt;&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="69.2" y="805" width="0.1" height="15.0" fill="rgb(235,69,50)" rx="2" ry="2" />
<text  x="72.15" y="815.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (181,818,180 samples, 0.03%)</title><rect x="835.3" y="469" width="0.4" height="15.0" fill="rgb(247,115,29)" rx="2" ry="2" />
<text  x="838.29" y="479.5" ></text>
</g>
<g >
<title>[[vdso]] (181,818,180 samples, 0.03%)</title><rect x="223.3" y="885" width="0.4" height="15.0" fill="rgb(224,178,53)" rx="2" ry="2" />
<text  x="226.33" y="895.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (515,151,510 samples, 0.10%)</title><rect x="856.5" y="549" width="1.1" height="15.0" fill="rgb(242,67,19)" rx="2" ry="2" />
<text  x="859.52" y="559.5" ></text>
</g>
<g >
<title>rocksdb::MergeHelper::keys[abi:cxx11] (222,222,220 samples, 0.04%)</title><rect x="951.3" y="661" width="0.5" height="15.0" fill="rgb(215,24,10)" rx="2" ry="2" />
<text  x="954.28" y="671.5" ></text>
</g>
<g >
<title>std::optional&lt;rocksdb::Slice&gt;::has_value (353,535,350 samples, 0.07%)</title><rect x="1167.0" y="677" width="0.7" height="15.0" fill="rgb(225,216,29)" rx="2" ry="2" />
<text  x="1169.96" y="687.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::VersionSet*, std::default_delete&lt;rocksdb::VersionSet&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="545.5" y="853" width="0.2" height="15.0" fill="rgb(243,190,33)" rx="2" ry="2" />
<text  x="548.54" y="863.5" ></text>
</g>
<g >
<title>rocksdb::VarintLength (60,606,060 samples, 0.01%)</title><rect x="689.2" y="565" width="0.2" height="15.0" fill="rgb(209,3,26)" rx="2" ry="2" />
<text  x="692.23" y="575.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (141,414,140 samples, 0.03%)</title><rect x="921.5" y="597" width="0.4" height="15.0" fill="rgb(253,211,1)" rx="2" ry="2" />
<text  x="924.55" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::CompactionOutputs::Output*, std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt; &gt;::__normal_iterator (242,424,240 samples, 0.04%)</title><rect x="1085.9" y="597" width="0.5" height="15.0" fill="rgb(254,61,5)" rx="2" ry="2" />
<text  x="1088.88" y="607.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (70,707,070 samples, 0.01%)</title><rect x="10.4" y="853" width="0.2" height="15.0" fill="rgb(224,167,52)" rx="2" ry="2" />
<text  x="13.44" y="863.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatchInternal::Iterate (51,595,959,080 samples, 9.53%)</title><rect x="66.2" y="869" width="112.4" height="15.0" fill="rgb(249,139,31)" rx="2" ry="2" />
<text  x="69.16" y="879.5" >rocksdb::Writ..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (242,424,240 samples, 0.04%)</title><rect x="829.5" y="453" width="0.5" height="15.0" fill="rgb(212,117,20)" rx="2" ry="2" />
<text  x="832.52" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (61,797,979,180 samples, 11.42%)</title><rect x="392.1" y="821" width="134.7" height="15.0" fill="rgb(227,222,8)" rx="2" ry="2" />
<text  x="395.11" y="831.5" >do_syscall_64</text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (515,151,510 samples, 0.10%)</title><rect x="1075.7" y="613" width="1.1" height="15.0" fill="rgb(213,44,13)" rx="2" ry="2" />
<text  x="1078.66" y="623.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::AdvanceInputIter (77,353,534,580 samples, 14.29%)</title><rect x="698.9" y="661" width="168.7" height="15.0" fill="rgb(252,117,4)" rx="2" ry="2" />
<text  x="701.92" y="671.5" >rocksdb::CompactionIt..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (212,121,210 samples, 0.04%)</title><rect x="855.3" y="501" width="0.5" height="15.0" fill="rgb(220,195,24)" rx="2" ry="2" />
<text  x="858.30" y="511.5" ></text>
</g>
<g >
<title>rocksdb::ImmutableDBOptions::PackLocal (60,606,060 samples, 0.01%)</title><rect x="690.6" y="629" width="0.1" height="15.0" fill="rgb(219,166,47)" rx="2" ry="2" />
<text  x="693.56" y="639.5" ></text>
</g>
<g >
<title>rocksdb::IndexBlockIter::NextImpl (131,313,130 samples, 0.02%)</title><rect x="769.1" y="485" width="0.3" height="15.0" fill="rgb(248,95,19)" rx="2" ry="2" />
<text  x="772.13" y="495.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::iter (50,505,050 samples, 0.01%)</title><rect x="845.5" y="581" width="0.1" height="15.0" fill="rgb(223,34,2)" rx="2" ry="2" />
<text  x="848.48" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (212,121,210 samples, 0.04%)</title><rect x="849.5" y="501" width="0.5" height="15.0" fill="rgb(238,83,14)" rx="2" ry="2" />
<text  x="852.49" y="511.5" ></text>
</g>
<g >
<title>XXH3_hashLong_64b_default (202,020,200 samples, 0.04%)</title><rect x="762.4" y="341" width="0.4" height="15.0" fill="rgb(223,156,30)" rx="2" ry="2" />
<text  x="765.37" y="351.5" ></text>
</g>
<g >
<title>__GI___unlink (272,727,270 samples, 0.05%)</title><rect x="690.8" y="645" width="0.6" height="15.0" fill="rgb(253,193,44)" rx="2" ry="2" />
<text  x="693.84" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (232,323,230 samples, 0.04%)</title><rect x="1136.7" y="565" width="0.5" height="15.0" fill="rgb(233,42,42)" rx="2" ry="2" />
<text  x="1139.66" y="575.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::ParseNextKey&lt;rocksdb::DecodeEntryV4&gt; (60,606,060 samples, 0.01%)</title><rect x="814.2" y="485" width="0.2" height="15.0" fill="rgb(205,63,28)" rx="2" ry="2" />
<text  x="817.23" y="495.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::begin (151,515,150 samples, 0.03%)</title><rect x="733.9" y="597" width="0.3" height="15.0" fill="rgb(216,96,24)" rx="2" ry="2" />
<text  x="736.90" y="607.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (141,414,140 samples, 0.03%)</title><rect x="799.5" y="437" width="0.3" height="15.0" fill="rgb(218,166,23)" rx="2" ry="2" />
<text  x="802.48" y="447.5" ></text>
</g>
<g >
<title>rocksdb::ComputeBuiltinChecksumWithLastByte (545,454,540 samples, 0.10%)</title><rect x="990.3" y="565" width="1.1" height="15.0" fill="rgb(234,44,26)" rx="2" ry="2" />
<text  x="993.26" y="575.5" ></text>
</g>
<g >
<title>rocksdb::PutVarint32 (60,606,060 samples, 0.01%)</title><rect x="556.4" y="885" width="0.1" height="15.0" fill="rgb(207,77,17)" rx="2" ry="2" />
<text  x="559.35" y="895.5" ></text>
</g>
<g >
<title>XXH3_hashLong_64b_internal (515,151,510 samples, 0.10%)</title><rect x="990.3" y="501" width="1.1" height="15.0" fill="rgb(231,69,11)" rx="2" ry="2" />
<text  x="993.28" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (272,727,270 samples, 0.05%)</title><rect x="861.5" y="533" width="0.6" height="15.0" fill="rgb(244,126,53)" rx="2" ry="2" />
<text  x="864.52" y="543.5" ></text>
</g>
<g >
<title>std::operator&amp; (343,434,340 samples, 0.06%)</title><rect x="537.7" y="885" width="0.8" height="15.0" fill="rgb(254,26,9)" rx="2" ry="2" />
<text  x="540.72" y="895.5" ></text>
</g>
<g >
<title>rocksdb::Status::MarkChecked (70,707,070 samples, 0.01%)</title><rect x="1114.8" y="645" width="0.1" height="15.0" fill="rgb(238,56,32)" rx="2" ry="2" />
<text  x="1117.79" y="655.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (121,212,120 samples, 0.02%)</title><rect x="526.6" y="805" width="0.2" height="15.0" fill="rgb(209,118,51)" rx="2" ry="2" />
<text  x="529.58" y="815.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (222,222,220 samples, 0.04%)</title><rect x="849.5" y="517" width="0.5" height="15.0" fill="rgb(223,36,3)" rx="2" ry="2" />
<text  x="852.47" y="527.5" ></text>
</g>
<g >
<title>std::move&lt;std::_Tuple_impl&lt;2ul, unsigned long&gt;&amp;&gt; (50,505,050 samples, 0.01%)</title><rect x="561.5" y="885" width="0.1" height="15.0" fill="rgb(242,83,15)" rx="2" ry="2" />
<text  x="564.53" y="895.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (282,828,280 samples, 0.05%)</title><rect x="912.9" y="597" width="0.6" height="15.0" fill="rgb(235,27,24)" rx="2" ry="2" />
<text  x="915.92" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (50,505,050 samples, 0.01%)</title><rect x="222.9" y="869" width="0.1" height="15.0" fill="rgb(207,78,27)" rx="2" ry="2" />
<text  x="225.93" y="879.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (90,909,090 samples, 0.02%)</title><rect x="774.5" y="469" width="0.2" height="15.0" fill="rgb(227,110,51)" rx="2" ry="2" />
<text  x="777.48" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (50,505,050 samples, 0.01%)</title><rect x="175.4" y="837" width="0.1" height="15.0" fill="rgb(215,164,35)" rx="2" ry="2" />
<text  x="178.43" y="847.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (313,131,310 samples, 0.06%)</title><rect x="1117.5" y="645" width="0.7" height="15.0" fill="rgb(206,209,31)" rx="2" ry="2" />
<text  x="1120.52" y="655.5" ></text>
</g>
<g >
<title>rocksdb::CompressBlock (141,414,140 samples, 0.03%)</title><rect x="989.4" y="565" width="0.3" height="15.0" fill="rgb(242,21,5)" rx="2" ry="2" />
<text  x="992.38" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (242,424,240 samples, 0.04%)</title><rect x="828.6" y="469" width="0.5" height="15.0" fill="rgb(226,27,27)" rx="2" ry="2" />
<text  x="831.59" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="847.0" y="437" width="0.3" height="15.0" fill="rgb(221,123,7)" rx="2" ry="2" />
<text  x="850.02" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (272,727,270 samples, 0.05%)</title><rect x="796.2" y="485" width="0.6" height="15.0" fill="rgb(216,26,2)" rx="2" ry="2" />
<text  x="799.20" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::unique_ptr&lt;std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt;, void&gt; (232,323,230 samples, 0.04%)</title><rect x="563.5" y="917" width="0.5" height="15.0" fill="rgb(217,149,8)" rx="2" ry="2" />
<text  x="566.53" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::operator (383,838,380 samples, 0.07%)</title><rect x="1177.4" y="693" width="0.9" height="15.0" fill="rgb(246,61,3)" rx="2" ry="2" />
<text  x="1180.43" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (50,505,050 samples, 0.01%)</title><rect x="176.5" y="789" width="0.1" height="15.0" fill="rgb(233,94,51)" rx="2" ry="2" />
<text  x="179.53" y="799.5" ></text>
</g>
<g >
<title>try_to_release_page (70,707,070 samples, 0.01%)</title><rect x="691.2" y="437" width="0.2" height="15.0" fill="rgb(217,145,4)" rx="2" ry="2" />
<text  x="694.22" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (50,505,050 samples, 0.01%)</title><rect x="852.2" y="501" width="0.1" height="15.0" fill="rgb(250,22,49)" rx="2" ry="2" />
<text  x="855.16" y="511.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid (232,323,230 samples, 0.04%)</title><rect x="692.6" y="693" width="0.5" height="15.0" fill="rgb(251,81,52)" rx="2" ry="2" />
<text  x="695.60" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (171,717,170 samples, 0.03%)</title><rect x="797.8" y="485" width="0.3" height="15.0" fill="rgb(249,102,34)" rx="2" ry="2" />
<text  x="800.76" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="781.4" y="437" width="0.4" height="15.0" fill="rgb(225,181,52)" rx="2" ry="2" />
<text  x="784.44" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (141,414,140 samples, 0.03%)</title><rect x="854.9" y="469" width="0.3" height="15.0" fill="rgb(254,216,34)" rx="2" ry="2" />
<text  x="857.93" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (575,757,570 samples, 0.11%)</title><rect x="1116.3" y="645" width="1.2" height="15.0" fill="rgb(211,145,23)" rx="2" ry="2" />
<text  x="1119.27" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (343,434,340 samples, 0.06%)</title><rect x="1045.9" y="629" width="0.7" height="15.0" fill="rgb(219,27,53)" rx="2" ry="2" />
<text  x="1048.89" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (101,010,100 samples, 0.02%)</title><rect x="1001.3" y="469" width="0.2" height="15.0" fill="rgb(228,178,46)" rx="2" ry="2" />
<text  x="1004.29" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::_M_ptr (999,999,990 samples, 0.18%)</title><rect x="1067.7" y="565" width="2.2" height="15.0" fill="rgb(246,164,33)" rx="2" ry="2" />
<text  x="1070.69" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="863.7" y="533" width="0.2" height="15.0" fill="rgb(251,113,2)" rx="2" ry="2" />
<text  x="866.67" y="543.5" ></text>
</g>
<g >
<title>rocksdb::Cleanable::DoCleanup (131,313,130 samples, 0.02%)</title><rect x="897.6" y="613" width="0.3" height="15.0" fill="rgb(238,93,35)" rx="2" ry="2" />
<text  x="900.59" y="623.5" ></text>
</g>
<g >
<title>__schedule (40,333,332,930 samples, 7.45%)</title><rect x="411.7" y="757" width="88.0" height="15.0" fill="rgb(237,142,3)" rx="2" ry="2" />
<text  x="414.73" y="767.5" >__schedule</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="859.8" y="453" width="0.2" height="15.0" fill="rgb(226,62,20)" rx="2" ry="2" />
<text  x="862.82" y="463.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::value (393,939,390 samples, 0.07%)</title><rect x="924.4" y="597" width="0.9" height="15.0" fill="rgb(245,164,8)" rx="2" ry="2" />
<text  x="927.41" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char, rocksdb::CustomDeleter, true, true&gt;::__uniq_ptr_data (50,505,050 samples, 0.01%)</title><rect x="804.5" y="437" width="0.1" height="15.0" fill="rgb(210,226,53)" rx="2" ry="2" />
<text  x="807.48" y="447.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Next (161,616,160 samples, 0.03%)</title><rect x="823.4" y="581" width="0.3" height="15.0" fill="rgb(239,152,38)" rx="2" ry="2" />
<text  x="826.35" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (191,919,190 samples, 0.04%)</title><rect x="153.8" y="709" width="0.4" height="15.0" fill="rgb(241,46,1)" rx="2" ry="2" />
<text  x="156.83" y="719.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::key (60,606,060 samples, 0.01%)</title><rect x="823.2" y="565" width="0.2" height="15.0" fill="rgb(238,105,53)" rx="2" ry="2" />
<text  x="826.22" y="575.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (60,606,060 samples, 0.01%)</title><rect x="546.2" y="917" width="0.2" height="15.0" fill="rgb(248,154,25)" rx="2" ry="2" />
<text  x="549.24" y="927.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Valid (575,757,570 samples, 0.11%)</title><rect x="711.3" y="533" width="1.3" height="15.0" fill="rgb(254,88,47)" rx="2" ry="2" />
<text  x="714.30" y="543.5" ></text>
</g>
<g >
<title>rocksdb::PersistRocksDBOptions (90,909,090 samples, 0.02%)</title><rect x="661.5" y="597" width="0.2" height="15.0" fill="rgb(230,2,34)" rx="2" ry="2" />
<text  x="664.53" y="607.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (161,616,160 samples, 0.03%)</title><rect x="319.0" y="805" width="0.3" height="15.0" fill="rgb(208,20,2)" rx="2" ry="2" />
<text  x="322.00" y="815.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;, rocksdb::CompactionMergingIterator::HeapItem*&gt;::operator* (111,111,110 samples, 0.02%)</title><rect x="737.2" y="597" width="0.2" height="15.0" fill="rgb(229,64,8)" rx="2" ry="2" />
<text  x="740.20" y="607.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Valid (50,505,050 samples, 0.01%)</title><rect x="758.9" y="565" width="0.1" height="15.0" fill="rgb(209,116,15)" rx="2" ry="2" />
<text  x="761.94" y="575.5" ></text>
</g>
<g >
<title>rocksdb::operator== (252,525,250 samples, 0.05%)</title><rect x="931.1" y="645" width="0.6" height="15.0" fill="rgb(227,28,45)" rx="2" ry="2" />
<text  x="934.11" y="655.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw (313,131,310 samples, 0.06%)</title><rect x="49.6" y="805" width="0.6" height="15.0" fill="rgb(234,131,51)" rx="2" ry="2" />
<text  x="52.55" y="815.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::_M_ptr (101,010,100 samples, 0.02%)</title><rect x="1067.4" y="581" width="0.2" height="15.0" fill="rgb(226,120,33)" rx="2" ry="2" />
<text  x="1070.36" y="591.5" ></text>
</g>
<g >
<title>rocksdb::CoreLocalArray&lt;rocksdb::ConcurrentArena::Shard&gt;::AccessAtCore (262,626,260 samples, 0.05%)</title><rect x="78.7" y="725" width="0.6" height="15.0" fill="rgb(246,120,38)" rx="2" ry="2" />
<text  x="81.73" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;rocksdb::MemTable* const&amp;&gt;, std::tuple&lt;&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="73.3" y="773" width="0.1" height="15.0" fill="rgb(248,163,51)" rx="2" ry="2" />
<text  x="76.31" y="783.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Valid (262,626,260 samples, 0.05%)</title><rect x="914.5" y="613" width="0.6" height="15.0" fill="rgb(209,167,22)" rx="2" ry="2" />
<text  x="917.54" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;&gt;::_M_assign&lt;rocksdb::Status, unsigned int, unsigned long&gt; (1,111,111,100 samples, 0.21%)</title><rect x="559.4" y="901" width="2.4" height="15.0" fill="rgb(233,145,23)" rx="2" ry="2" />
<text  x="562.39" y="911.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (353,535,350 samples, 0.07%)</title><rect x="1029.3" y="581" width="0.8" height="15.0" fill="rgb(221,23,30)" rx="2" ry="2" />
<text  x="1032.33" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (151,515,150 samples, 0.03%)</title><rect x="860.2" y="469" width="0.3" height="15.0" fill="rgb(207,15,28)" rx="2" ry="2" />
<text  x="863.17" y="479.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (242,424,240 samples, 0.04%)</title><rect x="947.0" y="581" width="0.5" height="15.0" fill="rgb(223,182,24)" rx="2" ry="2" />
<text  x="949.96" y="591.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader (191,919,190 samples, 0.04%)</title><rect x="222.8" y="901" width="0.5" height="15.0" fill="rgb(209,186,27)" rx="2" ry="2" />
<text  x="225.85" y="911.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::IsDeleteRangeSentinelKey (444,444,440 samples, 0.08%)</title><rect x="977.6" y="661" width="1.0" height="15.0" fill="rgb(249,105,53)" rx="2" ry="2" />
<text  x="980.62" y="671.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::duration&lt;unsigned long, void&gt;@plt (222,222,220 samples, 0.04%)</title><rect x="533.8" y="885" width="0.5" height="15.0" fill="rgb(217,36,13)" rx="2" ry="2" />
<text  x="536.80" y="895.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="850.7" y="421" width="0.2" height="15.0" fill="rgb(223,115,4)" rx="2" ry="2" />
<text  x="853.75" y="431.5" ></text>
</g>
<g >
<title>ip_local_out (90,909,090 samples, 0.02%)</title><rect x="690.3" y="309" width="0.2" height="15.0" fill="rgb(247,122,34)" rx="2" ry="2" />
<text  x="693.34" y="319.5" ></text>
</g>
<g >
<title>generic_file_read_iter (161,616,160 samples, 0.03%)</title><rect x="763.9" y="293" width="0.3" height="15.0" fill="rgb(248,80,16)" rx="2" ry="2" />
<text  x="766.87" y="303.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (525,252,520 samples, 0.10%)</title><rect x="1000.7" y="565" width="1.1" height="15.0" fill="rgb(236,227,16)" rx="2" ry="2" />
<text  x="1003.65" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::CompactionIterator*, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt; (1,393,939,380 samples, 0.26%)</title><rect x="1171.8" y="629" width="3.0" height="15.0" fill="rgb(254,6,13)" rx="2" ry="2" />
<text  x="1174.77" y="639.5" ></text>
</g>
<g >
<title>do_anonymous_page (111,111,110 samples, 0.02%)</title><rect x="664.8" y="485" width="0.2" height="15.0" fill="rgb(230,149,43)" rx="2" ry="2" />
<text  x="667.77" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void  (223,323,230,090 samples, 41.26%)</title><rect x="691.8" y="885" width="486.9" height="15.0" fill="rgb(226,180,4)" rx="2" ry="2" />
<text  x="694.81" y="895.5" >std::function&lt;void </text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (151,515,150 samples, 0.03%)</title><rect x="1145.0" y="581" width="0.3" height="15.0" fill="rgb(221,195,25)" rx="2" ry="2" />
<text  x="1148.01" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (373,737,370 samples, 0.07%)</title><rect x="974.9" y="597" width="0.8" height="15.0" fill="rgb(220,179,23)" rx="2" ry="2" />
<text  x="977.89" y="607.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::AddWithLastKey (4,898,989,850 samples, 0.91%)</title><rect x="1004.9" y="629" width="10.7" height="15.0" fill="rgb(223,226,15)" rx="2" ry="2" />
<text  x="1007.95" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter@plt (50,505,050 samples, 0.01%)</title><rect x="1124.6" y="597" width="0.1" height="15.0" fill="rgb(253,12,8)" rx="2" ry="2" />
<text  x="1127.59" y="607.5" ></text>
</g>
<g >
<title>__libc_start_call_main (287,494,946,620 samples, 53.12%)</title><rect x="23.2" y="1013" width="626.8" height="15.0" fill="rgb(229,25,31)" rx="2" ry="2" />
<text  x="26.17" y="1023.5" >__libc_start_call_main</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (434,343,430 samples, 0.08%)</title><rect x="829.1" y="501" width="1.0" height="15.0" fill="rgb(242,215,8)" rx="2" ry="2" />
<text  x="832.12" y="511.5" ></text>
</g>
<g >
<title>rocksdb::ParsedInternalKey::ParsedInternalKey (323,232,320 samples, 0.06%)</title><rect x="910.5" y="629" width="0.7" height="15.0" fill="rgb(239,224,44)" rx="2" ry="2" />
<text  x="913.49" y="639.5" ></text>
</g>
<g >
<title>rocksdb::RandomAccessFileReader::Read (434,343,430 samples, 0.08%)</title><rect x="763.7" y="421" width="1.0" height="15.0" fill="rgb(205,145,22)" rx="2" ry="2" />
<text  x="766.74" y="431.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (252,525,250 samples, 0.05%)</title><rect x="972.8" y="581" width="0.5" height="15.0" fill="rgb(205,209,35)" rx="2" ry="2" />
<text  x="975.79" y="591.5" ></text>
</g>
<g >
<title>vfs_read (222,222,220 samples, 0.04%)</title><rect x="763.8" y="341" width="0.5" height="15.0" fill="rgb(250,199,41)" rx="2" ry="2" />
<text  x="766.82" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::operator bool (363,636,360 samples, 0.07%)</title><rect x="1144.5" y="629" width="0.8" height="15.0" fill="rgb(243,34,40)" rx="2" ry="2" />
<text  x="1147.55" y="639.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::FilterBlockBuilder*, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;@plt (151,515,150 samples, 0.03%)</title><rect x="1049.3" y="565" width="0.3" height="15.0" fill="rgb(213,193,26)" rx="2" ry="2" />
<text  x="1052.28" y="575.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::Extend (111,111,110 samples, 0.02%)</title><rect x="50.4" y="821" width="0.2" height="15.0" fill="rgb(206,116,53)" rx="2" ry="2" />
<text  x="53.39" y="831.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (292,929,290 samples, 0.05%)</title><rect x="1107.2" y="629" width="0.6" height="15.0" fill="rgb(219,201,31)" rx="2" ry="2" />
<text  x="1110.17" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__mod&lt;unsigned long, 4294967296ul, 1ul, 0ul&gt; (181,818,180 samples, 0.03%)</title><rect x="587.5" y="965" width="0.4" height="15.0" fill="rgb(237,54,13)" rx="2" ry="2" />
<text  x="590.51" y="975.5" ></text>
</g>
<g >
<title>std::operator== (50,505,050 samples, 0.01%)</title><rect x="954.4" y="613" width="0.1" height="15.0" fill="rgb(207,180,48)" rx="2" ry="2" />
<text  x="957.36" y="623.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::RecomputeSpliceLevels (70,707,070 samples, 0.01%)</title><rect x="161.8" y="773" width="0.1" height="15.0" fill="rgb(245,68,8)" rx="2" ry="2" />
<text  x="164.76" y="783.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (323,232,320 samples, 0.06%)</title><rect x="787.5" y="517" width="0.7" height="15.0" fill="rgb(231,100,37)" rx="2" ry="2" />
<text  x="790.52" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::operator (727,272,720 samples, 0.13%)</title><rect x="1153.6" y="645" width="1.6" height="15.0" fill="rgb(239,81,1)" rx="2" ry="2" />
<text  x="1156.64" y="655.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (202,020,200 samples, 0.04%)</title><rect x="279.6" y="869" width="0.4" height="15.0" fill="rgb(251,128,14)" rx="2" ry="2" />
<text  x="282.55" y="879.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="799.0" y="437" width="0.2" height="15.0" fill="rgb(231,47,21)" rx="2" ry="2" />
<text  x="801.97" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (50,505,050 samples, 0.01%)</title><rect x="174.6" y="789" width="0.1" height="15.0" fill="rgb(226,143,31)" rx="2" ry="2" />
<text  x="177.59" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_construct_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;rocksdb::MemTable* const&amp;&gt;, std::tuple&lt;&gt; &gt; (717,171,710 samples, 0.13%)</title><rect x="70.1" y="741" width="1.6" height="15.0" fill="rgb(251,170,21)" rx="2" ry="2" />
<text  x="73.12" y="751.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="825.7" y="485" width="0.2" height="15.0" fill="rgb(224,135,23)" rx="2" ry="2" />
<text  x="828.68" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (80,808,080 samples, 0.01%)</title><rect x="800.4" y="437" width="0.2" height="15.0" fill="rgb(214,211,38)" rx="2" ry="2" />
<text  x="803.38" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="857.8" y="517" width="0.1" height="15.0" fill="rgb(222,39,13)" rx="2" ry="2" />
<text  x="860.77" y="527.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::NextFromInput (30,232,322,930 samples, 5.59%)</title><rect x="869.4" y="661" width="65.9" height="15.0" fill="rgb(254,42,44)" rx="2" ry="2" />
<text  x="872.40" y="671.5" >rocksdb..</text>
</g>
<g >
<title>rocksdb::DeleteDBFile (70,707,070 samples, 0.01%)</title><rect x="1178.5" y="693" width="0.2" height="15.0" fill="rgb(213,38,35)" rx="2" ry="2" />
<text  x="1181.55" y="703.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (70,707,070 samples, 0.01%)</title><rect x="65.2" y="869" width="0.2" height="15.0" fill="rgb(236,166,45)" rx="2" ry="2" />
<text  x="68.23" y="879.5" ></text>
</g>
<g >
<title>__strlen_evex (121,212,120 samples, 0.02%)</title><rect x="638.4" y="949" width="0.3" height="15.0" fill="rgb(214,124,12)" rx="2" ry="2" />
<text  x="641.43" y="959.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Iterator::Next (50,505,050 samples, 0.01%)</title><rect x="664.0" y="597" width="0.1" height="15.0" fill="rgb(251,80,18)" rx="2" ry="2" />
<text  x="666.97" y="607.5" ></text>
</g>
<g >
<title>rocksdb::OutputValidator::Add (6,050,504,990 samples, 1.12%)</title><rect x="1099.9" y="645" width="13.2" height="15.0" fill="rgb(245,60,21)" rx="2" ry="2" />
<text  x="1102.91" y="655.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Bind&lt;void  (223,323,230,090 samples, 41.26%)</title><rect x="691.8" y="837" width="486.9" height="15.0" fill="rgb(230,8,38)" rx="2" ry="2" />
<text  x="694.81" y="847.5" >std::__invoke_impl&lt;void, std::_Bind&lt;void </text>
</g>
<g >
<title>rocksdb::MemTable::ShouldFlushNow (242,424,240 samples, 0.04%)</title><rect x="61.0" y="837" width="0.6" height="15.0" fill="rgb(240,199,34)" rx="2" ry="2" />
<text  x="64.03" y="847.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (373,737,370 samples, 0.07%)</title><rect x="860.5" y="501" width="0.8" height="15.0" fill="rgb(216,80,8)" rx="2" ry="2" />
<text  x="863.50" y="511.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatchInternal::Count (60,606,060 samples, 0.01%)</title><rect x="66.0" y="869" width="0.2" height="15.0" fill="rgb(219,180,7)" rx="2" ry="2" />
<text  x="69.02" y="879.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::IntTblPropCollector*, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="1041.2" y="549" width="0.3" height="15.0" fill="rgb(227,129,38)" rx="2" ry="2" />
<text  x="1044.17" y="559.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator-- (343,434,340 samples, 0.06%)</title><rect x="218.9" y="885" width="0.8" height="15.0" fill="rgb(213,129,31)" rx="2" ry="2" />
<text  x="221.90" y="895.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::IndexBuilder*, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt; (282,828,280 samples, 0.05%)</title><rect x="1055.9" y="581" width="0.6" height="15.0" fill="rgb(229,194,53)" rx="2" ry="2" />
<text  x="1058.91" y="591.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="852.2" y="469" width="0.1" height="15.0" fill="rgb(238,179,9)" rx="2" ry="2" />
<text  x="855.16" y="479.5" ></text>
</g>
<g >
<title>rocksdb::UserComparatorWrapper::Compare (3,111,111,080 samples, 0.57%)</title><rect x="717.7" y="549" width="6.8" height="15.0" fill="rgb(247,1,38)" rx="2" ry="2" />
<text  x="720.69" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (858,585,850 samples, 0.16%)</title><rect x="830.6" y="549" width="1.8" height="15.0" fill="rgb(246,221,5)" rx="2" ry="2" />
<text  x="833.57" y="559.5" ></text>
</g>
<g >
<title>TLS init function for rocksdb::perf_context (70,707,070 samples, 0.01%)</title><rect x="1103.6" y="581" width="0.1" height="15.0" fill="rgb(252,189,4)" rx="2" ry="2" />
<text  x="1106.56" y="591.5" ></text>
</g>
<g >
<title>rocksdb::ShortenedIndexBuilder::AddIndexEntry (696,969,690 samples, 0.13%)</title><rect x="1042.8" y="629" width="1.5" height="15.0" fill="rgb(235,108,40)" rx="2" ry="2" />
<text  x="1045.80" y="639.5" ></text>
</g>
<g >
<title>rocksdb::CompressData (80,808,080 samples, 0.01%)</title><rect x="989.4" y="549" width="0.2" height="15.0" fill="rgb(218,75,26)" rx="2" ry="2" />
<text  x="992.38" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::VersionSet, std::default_delete&lt;rocksdb::VersionSet&gt; &gt;::_M_ptr (121,212,120 samples, 0.02%)</title><rect x="545.4" y="869" width="0.3" height="15.0" fill="rgb(205,228,31)" rx="2" ry="2" />
<text  x="548.43" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (303,030,300 samples, 0.06%)</title><rect x="73.5" y="773" width="0.7" height="15.0" fill="rgb(211,190,1)" rx="2" ry="2" />
<text  x="76.51" y="783.5" ></text>
</g>
<g >
<title>rocksdb::UserComparatorWrapper::Compare (989,898,980 samples, 0.18%)</title><rect x="1028.3" y="613" width="2.2" height="15.0" fill="rgb(244,81,20)" rx="2" ry="2" />
<text  x="1031.33" y="623.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (101,010,100 samples, 0.02%)</title><rect x="50.0" y="501" width="0.2" height="15.0" fill="rgb(246,54,49)" rx="2" ry="2" />
<text  x="53.01" y="511.5" ></text>
</g>
<g >
<title>rocksdb::RangeDelAggregator::ShouldDelete (282,828,280 samples, 0.05%)</title><rect x="957.0" y="661" width="0.6" height="15.0" fill="rgb(246,61,45)" rx="2" ry="2" />
<text  x="960.03" y="671.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="974.4" y="533" width="0.1" height="15.0" fill="rgb(249,23,8)" rx="2" ry="2" />
<text  x="977.36" y="543.5" ></text>
</g>
<g >
<title>rocksdb::FilePrefetchBuffer::TryReadFromCacheUntracked (70,707,070 samples, 0.01%)</title><rect x="806.9" y="421" width="0.2" height="15.0" fill="rgb(248,16,46)" rx="2" ry="2" />
<text  x="809.94" y="431.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000000l&gt;, void&gt; (212,121,210 samples, 0.04%)</title><rect x="305.6" y="853" width="0.4" height="15.0" fill="rgb(238,140,9)" rx="2" ry="2" />
<text  x="308.58" y="863.5" ></text>
</g>
<g >
<title>rocksdb::EncodeVarint32 (565,656,560 samples, 0.10%)</title><rect x="1008.6" y="581" width="1.2" height="15.0" fill="rgb(217,133,39)" rx="2" ry="2" />
<text  x="1011.58" y="591.5" ></text>
</g>
<g >
<title>__handle_mm_fault (282,828,280 samples, 0.05%)</title><rect x="658.5" y="933" width="0.6" height="15.0" fill="rgb(250,38,21)" rx="2" ry="2" />
<text  x="661.47" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_addr (70,707,070 samples, 0.01%)</title><rect x="573.4" y="885" width="0.2" height="15.0" fill="rgb(219,41,46)" rx="2" ry="2" />
<text  x="576.44" y="895.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WritableFileWriter, std::default_delete&lt;rocksdb::WritableFileWriter&gt; &gt;::get (80,808,080 samples, 0.01%)</title><rect x="50.9" y="821" width="0.2" height="15.0" fill="rgb(251,140,52)" rx="2" ry="2" />
<text  x="53.92" y="831.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice::Splice (80,808,080 samples, 0.01%)</title><rect x="162.4" y="789" width="0.2" height="15.0" fill="rgb(215,219,28)" rx="2" ry="2" />
<text  x="165.39" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::CompactionOutputs::Output*, std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt; &gt;::__normal_iterator (151,515,150 samples, 0.03%)</title><rect x="1086.7" y="597" width="0.3" height="15.0" fill="rgb(242,171,13)" rx="2" ry="2" />
<text  x="1089.69" y="607.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::BackgroundCompaction (223,252,523,020 samples, 41.25%)</title><rect x="691.8" y="725" width="486.7" height="15.0" fill="rgb(223,133,19)" rx="2" ry="2" />
<text  x="694.81" y="735.5" >rocksdb::DBImpl::BackgroundCompaction</text>
</g>
<g >
<title>ext4_writepages (90,909,090 samples, 0.02%)</title><rect x="661.2" y="501" width="0.2" height="15.0" fill="rgb(247,182,43)" rx="2" ry="2" />
<text  x="664.16" y="511.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (171,717,170 samples, 0.03%)</title><rect x="49.9" y="629" width="0.3" height="15.0" fill="rgb(211,141,43)" rx="2" ry="2" />
<text  x="52.86" y="639.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid (272,727,270 samples, 0.05%)</title><rect x="939.2" y="645" width="0.6" height="15.0" fill="rgb(226,229,27)" rx="2" ry="2" />
<text  x="942.23" y="655.5" ></text>
</g>
<g >
<title>std::tie&lt;rocksdb::Status, unsigned int, unsigned long&gt; (202,020,200 samples, 0.04%)</title><rect x="558.8" y="917" width="0.5" height="15.0" fill="rgb(246,59,5)" rx="2" ry="2" />
<text  x="561.84" y="927.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (242,424,240 samples, 0.04%)</title><rect x="154.2" y="709" width="0.6" height="15.0" fill="rgb(213,140,31)" rx="2" ry="2" />
<text  x="157.25" y="719.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::ConcurrentArena::Shard*, std::default_delete&lt;rocksdb::ConcurrentArena::Shard []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="79.1" y="661" width="0.1" height="15.0" fill="rgb(211,111,6)" rx="2" ry="2" />
<text  x="82.11" y="671.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::seed (22,313,131,090 samples, 4.12%)</title><rect x="588.9" y="965" width="48.7" height="15.0" fill="rgb(209,31,42)" rx="2" ry="2" />
<text  x="591.92" y="975.5" >std:..</text>
</g>
<g >
<title>rocksdb::Slice::size (90,909,090 samples, 0.02%)</title><rect x="926.6" y="645" width="0.2" height="15.0" fill="rgb(206,116,36)" rx="2" ry="2" />
<text  x="929.61" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::DynamicBloom*, std::default_delete&lt;rocksdb::DynamicBloom&gt; &gt; (141,414,140 samples, 0.03%)</title><rect x="166.4" y="757" width="0.3" height="15.0" fill="rgb(237,106,32)" rx="2" ry="2" />
<text  x="169.42" y="767.5" ></text>
</g>
<g >
<title>perf_event_mmap_event (70,707,070 samples, 0.01%)</title><rect x="10.4" y="885" width="0.2" height="15.0" fill="rgb(235,210,44)" rx="2" ry="2" />
<text  x="13.44" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (4,101,010,060 samples, 0.76%)</title><rect x="572.6" y="949" width="8.9" height="15.0" fill="rgb(235,179,46)" rx="2" ry="2" />
<text  x="575.56" y="959.5" ></text>
</g>
<g >
<title>std::this_thread::yield (80,595,958,790 samples, 14.89%)</title><rect x="351.5" y="869" width="175.7" height="15.0" fill="rgb(209,189,48)" rx="2" ry="2" />
<text  x="354.52" y="879.5" >std::this_thread::yield</text>
</g>
<g >
<title>rocksdb::NotifyCollectTableCollectorsOnAdd (5,565,656,510 samples, 1.03%)</title><rect x="1030.7" y="629" width="12.1" height="15.0" fill="rgb(229,145,5)" rx="2" ry="2" />
<text  x="1033.67" y="639.5" ></text>
</g>
<g >
<title>std::forward&lt;bool*&gt; (141,414,140 samples, 0.03%)</title><rect x="1076.8" y="629" width="0.3" height="15.0" fill="rgb(254,4,12)" rx="2" ry="2" />
<text  x="1079.78" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (70,707,070 samples, 0.01%)</title><rect x="1178.5" y="629" width="0.2" height="15.0" fill="rgb(206,20,43)" rx="2" ry="2" />
<text  x="1181.55" y="639.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="838.2" y="485" width="0.1" height="15.0" fill="rgb(239,200,4)" rx="2" ry="2" />
<text  x="841.19" y="495.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, false&gt;::_M_head@plt (50,505,050 samples, 0.01%)</title><rect x="841.3" y="501" width="0.2" height="15.0" fill="rgb(219,16,49)" rx="2" ry="2" />
<text  x="844.34" y="511.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::status (2,181,818,160 samples, 0.40%)</title><rect x="833.6" y="581" width="4.7" height="15.0" fill="rgb(235,148,53)" rx="2" ry="2" />
<text  x="836.59" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (272,727,270 samples, 0.05%)</title><rect x="788.9" y="533" width="0.6" height="15.0" fill="rgb(236,92,3)" rx="2" ry="2" />
<text  x="791.86" y="543.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (13,898,989,760 samples, 2.57%)</title><rect x="661.1" y="1013" width="30.3" height="15.0" fill="rgb(221,79,45)" rx="2" ry="2" />
<text  x="664.13" y="1023.5" >[l..</text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="854.9" y="485" width="0.3" height="15.0" fill="rgb(252,175,47)" rx="2" ry="2" />
<text  x="857.86" y="495.5" ></text>
</g>
<g >
<title>rocksdb::Slice::compare (1,676,767,660 samples, 0.31%)</title><rect x="131.6" y="645" width="3.7" height="15.0" fill="rgb(244,55,29)" rx="2" ry="2" />
<text  x="134.63" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (111,111,110 samples, 0.02%)</title><rect x="1011.6" y="597" width="0.3" height="15.0" fill="rgb(220,45,48)" rx="2" ry="2" />
<text  x="1014.62" y="607.5" ></text>
</g>
<g >
<title>rocksdb::InternalKeyComparator::Compare (444,444,440 samples, 0.08%)</title><rect x="725.3" y="581" width="1.0" height="15.0" fill="rgb(206,192,52)" rx="2" ry="2" />
<text  x="728.33" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::FlushBlockPolicy*, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="1054.0" y="597" width="0.3" height="15.0" fill="rgb(225,175,39)" rx="2" ry="2" />
<text  x="1057.03" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::FlushBlockPolicy, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt;::_M_ptr (878,787,870 samples, 0.16%)</title><rect x="1052.1" y="597" width="1.9" height="15.0" fill="rgb(226,139,13)" rx="2" ry="2" />
<text  x="1055.12" y="607.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count@plt (80,808,080 samples, 0.01%)</title><rect x="323.4" y="853" width="0.2" height="15.0" fill="rgb(216,63,2)" rx="2" ry="2" />
<text  x="326.40" y="863.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (313,131,310 samples, 0.06%)</title><rect x="975.0" y="581" width="0.7" height="15.0" fill="rgb(226,223,28)" rx="2" ry="2" />
<text  x="978.02" y="591.5" ></text>
</g>
<g >
<title>kmem_cache_free (50,505,050 samples, 0.01%)</title><rect x="41.6" y="549" width="0.1" height="15.0" fill="rgb(242,173,23)" rx="2" ry="2" />
<text  x="44.62" y="559.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::MemTableInserter::PutCF (48,656,565,170 samples, 8.99%)</title><rect x="66.7" y="853" width="106.1" height="15.0" fill="rgb(250,13,11)" rx="2" ry="2" />
<text  x="69.73" y="863.5" >rocksdb::(an..</text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (191,919,190 samples, 0.04%)</title><rect x="741.5" y="549" width="0.4" height="15.0" fill="rgb(212,1,48)" rx="2" ry="2" />
<text  x="744.47" y="559.5" ></text>
</g>
<g >
<title>rocksdb::Block::usable_size (50,505,050 samples, 0.01%)</title><rect x="803.5" y="485" width="0.1" height="15.0" fill="rgb(245,57,8)" rx="2" ry="2" />
<text  x="806.53" y="495.5" ></text>
</g>
<g >
<title>rocksdb::InstrumentedMutexLock::InstrumentedMutexLock (90,909,090 samples, 0.02%)</title><rect x="29.6" y="885" width="0.2" height="15.0" fill="rgb(216,94,26)" rx="2" ry="2" />
<text  x="32.64" y="895.5" ></text>
</g>
<g >
<title>rocksdb::IsValueType (70,707,070 samples, 0.01%)</title><rect x="1030.5" y="629" width="0.2" height="15.0" fill="rgb(242,89,3)" rx="2" ry="2" />
<text  x="1033.51" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (343,434,340 samples, 0.06%)</title><rect x="1035.1" y="549" width="0.7" height="15.0" fill="rgb(225,59,33)" rx="2" ry="2" />
<text  x="1038.09" y="559.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyMemTablesImpl::ColumnFamilyMemTablesImpl (161,616,160 samples, 0.03%)</title><rect x="28.3" y="901" width="0.4" height="15.0" fill="rgb(227,168,38)" rx="2" ry="2" />
<text  x="31.34" y="911.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Valid (202,020,200 samples, 0.04%)</title><rect x="924.8" y="581" width="0.4" height="15.0" fill="rgb(234,79,47)" rx="2" ry="2" />
<text  x="927.76" y="591.5" ></text>
</g>
<g >
<title>[unknown] (90,909,090 samples, 0.02%)</title><rect x="1179.8" y="997" width="0.2" height="15.0" fill="rgb(234,149,12)" rx="2" ry="2" />
<text  x="1182.78" y="1007.5" ></text>
</g>
<g >
<title>rocksdb::Status::MarkChecked@plt (50,505,050 samples, 0.01%)</title><rect x="1114.9" y="645" width="0.2" height="15.0" fill="rgb(231,136,0)" rx="2" ry="2" />
<text  x="1117.95" y="655.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (202,020,200 samples, 0.04%)</title><rect x="49.8" y="677" width="0.4" height="15.0" fill="rgb(244,195,35)" rx="2" ry="2" />
<text  x="52.79" y="687.5" ></text>
</g>
<g >
<title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (414,141,410 samples, 0.08%)</title><rect x="713.3" y="549" width="0.9" height="15.0" fill="rgb(219,14,23)" rx="2" ry="2" />
<text  x="716.33" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FilePrefetchBuffer, std::default_delete&lt;rocksdb::FilePrefetchBuffer&gt; &gt;::operator bool (60,606,060 samples, 0.01%)</title><rect x="812.7" y="485" width="0.1" height="15.0" fill="rgb(218,78,29)" rx="2" ry="2" />
<text  x="815.67" y="495.5" ></text>
</g>
<g >
<title>rocksdb::UserComparatorWrapper::Compare (2,060,606,040 samples, 0.38%)</title><rect x="155.3" y="725" width="4.5" height="15.0" fill="rgb(221,147,37)" rx="2" ry="2" />
<text  x="158.28" y="735.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::front (2,161,616,140 samples, 0.40%)</title><rect x="744.8" y="581" width="4.7" height="15.0" fill="rgb(236,42,39)" rx="2" ry="2" />
<text  x="747.75" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (161,616,160 samples, 0.03%)</title><rect x="171.5" y="837" width="0.4" height="15.0" fill="rgb(229,161,21)" rx="2" ry="2" />
<text  x="174.51" y="847.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::KeyComparator::operator (161,616,160 samples, 0.03%)</title><rect x="162.0" y="773" width="0.4" height="15.0" fill="rgb(215,153,29)" rx="2" ry="2" />
<text  x="165.00" y="783.5" ></text>
</g>
<g >
<title>rocksdb::EncodeVarint32 (50,505,050 samples, 0.01%)</title><rect x="76.9" y="821" width="0.1" height="15.0" fill="rgb(234,4,0)" rx="2" ry="2" />
<text  x="79.88" y="831.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::Invalidate (222,222,220 samples, 0.04%)</title><rect x="768.6" y="485" width="0.5" height="15.0" fill="rgb(217,121,36)" rx="2" ry="2" />
<text  x="771.62" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;@plt (121,212,120 samples, 0.02%)</title><rect x="826.5" y="501" width="0.2" height="15.0" fill="rgb(237,202,5)" rx="2" ry="2" />
<text  x="829.46" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="863.8" y="501" width="0.1" height="15.0" fill="rgb(228,119,7)" rx="2" ry="2" />
<text  x="866.83" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (202,020,200 samples, 0.04%)</title><rect x="787.0" y="453" width="0.5" height="15.0" fill="rgb(249,163,15)" rx="2" ry="2" />
<text  x="790.01" y="463.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::SetKeyImpl (60,606,060 samples, 0.01%)</title><rect x="819.9" y="501" width="0.1" height="15.0" fill="rgb(226,142,25)" rx="2" ry="2" />
<text  x="822.91" y="511.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (171,717,170 samples, 0.03%)</title><rect x="848.3" y="469" width="0.4" height="15.0" fill="rgb(219,11,32)" rx="2" ry="2" />
<text  x="851.28" y="479.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (252,525,250 samples, 0.05%)</title><rect x="40.4" y="645" width="0.6" height="15.0" fill="rgb(254,0,49)" rx="2" ry="2" />
<text  x="43.41" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (282,828,280 samples, 0.05%)</title><rect x="55.6" y="821" width="0.6" height="15.0" fill="rgb(224,200,32)" rx="2" ry="2" />
<text  x="58.59" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::operator (111,111,110 samples, 0.02%)</title><rect x="801.6" y="549" width="0.3" height="15.0" fill="rgb(234,129,30)" rx="2" ry="2" />
<text  x="804.64" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (313,131,310 samples, 0.06%)</title><rect x="909.6" y="565" width="0.7" height="15.0" fill="rgb(225,9,10)" rx="2" ry="2" />
<text  x="912.61" y="575.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::WriteContext::WriteContext (454,545,450 samples, 0.08%)</title><rect x="30.5" y="901" width="1.0" height="15.0" fill="rgb(237,36,46)" rx="2" ry="2" />
<text  x="33.52" y="911.5" ></text>
</g>
<g >
<title>XXH3_accumulate_512_avx512 (373,737,370 samples, 0.07%)</title><rect x="990.5" y="453" width="0.8" height="15.0" fill="rgb(224,92,1)" rx="2" ry="2" />
<text  x="993.46" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (50,505,050 samples, 0.01%)</title><rect x="176.0" y="837" width="0.1" height="15.0" fill="rgb(227,131,24)" rx="2" ry="2" />
<text  x="179.03" y="847.5" ></text>
</g>
<g >
<title>rocksdb::CompactionJob::Run (223,242,422,010 samples, 41.25%)</title><rect x="691.8" y="709" width="486.7" height="15.0" fill="rgb(248,6,53)" rx="2" ry="2" />
<text  x="694.83" y="719.5" >rocksdb::CompactionJob::Run</text>
</g>
<g >
<title>rocksdb::PerfStepTimer::Stop (111,111,110 samples, 0.02%)</title><rect x="53.8" y="901" width="0.2" height="15.0" fill="rgb(250,136,47)" rx="2" ry="2" />
<text  x="56.76" y="911.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::status (4,989,898,940 samples, 0.92%)</title><rect x="853.1" y="597" width="10.8" height="15.0" fill="rgb(226,119,32)" rx="2" ry="2" />
<text  x="856.06" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (151,515,150 samples, 0.03%)</title><rect x="846.4" y="469" width="0.4" height="15.0" fill="rgb(225,136,42)" rx="2" ry="2" />
<text  x="849.43" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt;, true, true&gt;::__uniq_ptr_data (161,616,160 samples, 0.03%)</title><rect x="563.6" y="901" width="0.3" height="15.0" fill="rgb(230,149,34)" rx="2" ry="2" />
<text  x="566.55" y="911.5" ></text>
</g>
<g >
<title>std::numeric_limits&lt;unsigned long&gt;::max (222,222,220 samples, 0.04%)</title><rect x="738.5" y="597" width="0.4" height="15.0" fill="rgb(225,33,13)" rx="2" ry="2" />
<text  x="741.45" y="607.5" ></text>
</g>
<g >
<title>generic_perform_write (1,292,929,280 samples, 0.24%)</title><rect x="40.1" y="661" width="2.8" height="15.0" fill="rgb(238,12,16)" rx="2" ry="2" />
<text  x="43.08" y="671.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (50,505,050 samples, 0.01%)</title><rect x="170.2" y="821" width="0.1" height="15.0" fill="rgb(209,218,1)" rx="2" ry="2" />
<text  x="173.17" y="831.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::RealCompaction::SupportsPerKeyPlacement (181,818,180 samples, 0.03%)</title><rect x="947.5" y="661" width="0.4" height="15.0" fill="rgb(233,160,18)" rx="2" ry="2" />
<text  x="950.51" y="671.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::DefaultColumnFamily (80,808,080 samples, 0.01%)</title><rect x="567.9" y="981" width="0.2" height="15.0" fill="rgb(244,4,31)" rx="2" ry="2" />
<text  x="570.91" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt;::end (50,505,050 samples, 0.01%)</title><rect x="1071.8" y="597" width="0.1" height="15.0" fill="rgb(221,198,25)" rx="2" ry="2" />
<text  x="1074.83" y="607.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="1145.2" y="549" width="0.1" height="15.0" fill="rgb(221,195,6)" rx="2" ry="2" />
<text  x="1148.21" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (292,929,290 samples, 0.05%)</title><rect x="787.6" y="501" width="0.6" height="15.0" fill="rgb(250,32,12)" rx="2" ry="2" />
<text  x="790.59" y="511.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (70,707,070 samples, 0.01%)</title><rect x="691.2" y="405" width="0.2" height="15.0" fill="rgb(211,195,35)" rx="2" ry="2" />
<text  x="694.22" y="415.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (434,343,430 samples, 0.08%)</title><rect x="1144.4" y="645" width="0.9" height="15.0" fill="rgb(254,195,29)" rx="2" ry="2" />
<text  x="1147.39" y="655.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::Next (90,909,090 samples, 0.02%)</title><rect x="146.7" y="741" width="0.2" height="15.0" fill="rgb(252,6,31)" rx="2" ry="2" />
<text  x="149.69" y="751.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="851.2" y="421" width="0.1" height="15.0" fill="rgb(250,88,38)" rx="2" ry="2" />
<text  x="854.16" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (50,505,050 samples, 0.01%)</title><rect x="1046.7" y="629" width="0.2" height="15.0" fill="rgb(223,88,30)" rx="2" ry="2" />
<text  x="1049.74" y="639.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::IndexBuilder*, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt; (202,020,200 samples, 0.04%)</title><rect x="1055.4" y="581" width="0.5" height="15.0" fill="rgb(223,45,44)" rx="2" ry="2" />
<text  x="1058.44" y="591.5" ></text>
</g>
<g >
<title>rocksdb::UserComparatorWrapper::Compare (1,838,383,820 samples, 0.34%)</title><rect x="1103.2" y="613" width="4.0" height="15.0" fill="rgb(244,42,24)" rx="2" ry="2" />
<text  x="1106.17" y="623.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::SkipListRep::InsertKeyConcurrently (80,808,080 samples, 0.01%)</title><rect x="76.1" y="821" width="0.1" height="15.0" fill="rgb(210,48,28)" rx="2" ry="2" />
<text  x="79.07" y="831.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::operator= (50,505,050 samples, 0.01%)</title><rect x="993.2" y="533" width="0.1" height="15.0" fill="rgb(240,126,29)" rx="2" ry="2" />
<text  x="996.21" y="543.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, std::_Bind&lt;void  (223,323,230,090 samples, 41.26%)</title><rect x="691.8" y="853" width="486.9" height="15.0" fill="rgb(209,110,33)" rx="2" ry="2" />
<text  x="694.81" y="863.5" >std::__invoke_r&lt;void, std::_Bind&lt;void </text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::VersionSet, std::default_delete&lt;rocksdb::VersionSet&gt; &gt;::_M_ptr (60,606,060 samples, 0.01%)</title><rect x="545.3" y="885" width="0.1" height="15.0" fill="rgb(246,36,10)" rx="2" ry="2" />
<text  x="548.25" y="895.5" ></text>
</g>
<g >
<title>ext4_invalidatepage (70,707,070 samples, 0.01%)</title><rect x="691.2" y="469" width="0.2" height="15.0" fill="rgb(217,223,4)" rx="2" ry="2" />
<text  x="694.22" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (4,999,999,950 samples, 0.92%)</title><rect x="1123.9" y="613" width="10.9" height="15.0" fill="rgb(216,0,21)" rx="2" ry="2" />
<text  x="1126.89" y="623.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (373,737,370 samples, 0.07%)</title><rect x="329.8" y="853" width="0.8" height="15.0" fill="rgb(253,103,51)" rx="2" ry="2" />
<text  x="332.81" y="863.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey (454,545,450 samples, 0.08%)</title><rect x="1101.9" y="613" width="1.0" height="15.0" fill="rgb(251,76,4)" rx="2" ry="2" />
<text  x="1104.93" y="623.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="850.3" y="453" width="0.2" height="15.0" fill="rgb(211,115,46)" rx="2" ry="2" />
<text  x="853.35" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (222,222,220 samples, 0.04%)</title><rect x="834.2" y="533" width="0.5" height="15.0" fill="rgb(251,9,25)" rx="2" ry="2" />
<text  x="837.23" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_fdatasync (141,414,140 samples, 0.03%)</title><rect x="1140.3" y="453" width="0.3" height="15.0" fill="rgb(232,105,39)" rx="2" ry="2" />
<text  x="1143.30" y="463.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::UpdateInternalKey (282,828,280 samples, 0.05%)</title><rect x="940.8" y="645" width="0.6" height="15.0" fill="rgb(246,65,50)" rx="2" ry="2" />
<text  x="943.82" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (333,333,330 samples, 0.06%)</title><rect x="840.7" y="533" width="0.8" height="15.0" fill="rgb(217,92,37)" rx="2" ry="2" />
<text  x="843.73" y="543.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (2,535,353,510 samples, 0.47%)</title><rect x="970.4" y="677" width="5.5" height="15.0" fill="rgb(235,166,17)" rx="2" ry="2" />
<text  x="973.39" y="687.5" ></text>
</g>
<g >
<title>rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper (223,323,230,090 samples, 41.26%)</title><rect x="691.8" y="917" width="486.9" height="15.0" fill="rgb(245,61,46)" rx="2" ry="2" />
<text  x="694.81" y="927.5" >rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper</text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="198.1" y="853" width="0.3" height="15.0" fill="rgb(213,40,32)" rx="2" ry="2" />
<text  x="201.11" y="863.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::IntTblPropCollector*, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::_M_head (191,919,190 samples, 0.04%)</title><rect x="1040.6" y="549" width="0.4" height="15.0" fill="rgb(248,5,10)" rx="2" ry="2" />
<text  x="1043.56" y="559.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (252,525,250 samples, 0.05%)</title><rect x="534.3" y="885" width="0.5" height="15.0" fill="rgb(249,156,33)" rx="2" ry="2" />
<text  x="537.29" y="895.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::FSWritableFileTracingWrapper, std::default_delete&lt;rocksdb::FSWritableFileTracingWrapper&gt; &gt;::_M_ptr (50,505,050 samples, 0.01%)</title><rect x="992.5" y="501" width="0.1" height="15.0" fill="rgb(229,11,14)" rx="2" ry="2" />
<text  x="995.46" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::operator (979,797,970 samples, 0.18%)</title><rect x="1039.5" y="613" width="2.2" height="15.0" fill="rgb(225,17,27)" rx="2" ry="2" />
<text  x="1042.54" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Slice::difference_offset (414,141,410 samples, 0.08%)</title><rect x="1013.4" y="613" width="0.9" height="15.0" fill="rgb(209,125,31)" rx="2" ry="2" />
<text  x="1016.38" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (828,282,820 samples, 0.15%)</title><rect x="785.7" y="485" width="1.8" height="15.0" fill="rgb(219,132,47)" rx="2" ry="2" />
<text  x="788.69" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::SavePoints, std::default_delete&lt;rocksdb::SavePoints&gt; &gt;::_M_ptr (70,707,070 samples, 0.01%)</title><rect x="51.8" y="821" width="0.1" height="15.0" fill="rgb(229,126,40)" rx="2" ry="2" />
<text  x="54.78" y="831.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (50,505,050 samples, 0.01%)</title><rect x="896.1" y="517" width="0.1" height="15.0" fill="rgb(212,150,18)" rx="2" ry="2" />
<text  x="899.13" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::back (1,010,101,000 samples, 0.19%)</title><rect x="1084.8" y="629" width="2.2" height="15.0" fill="rgb(206,48,46)" rx="2" ry="2" />
<text  x="1087.82" y="639.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::WritableFileWriter*, std::default_delete&lt;rocksdb::WritableFileWriter&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="51.0" y="789" width="0.1" height="15.0" fill="rgb(237,46,42)" rx="2" ry="2" />
<text  x="53.98" y="799.5" ></text>
</g>
<g >
<title>rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;::IsDeleteRangeSentinelKey (242,424,240 samples, 0.04%)</title><rect x="755.2" y="597" width="0.6" height="15.0" fill="rgb(237,215,31)" rx="2" ry="2" />
<text  x="758.24" y="607.5" ></text>
</g>
<g >
<title>rocksdb::ConcurrentArena::Allocate (60,606,060 samples, 0.01%)</title><rect x="78.2" y="773" width="0.2" height="15.0" fill="rgb(221,223,29)" rx="2" ry="2" />
<text  x="81.23" y="783.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::get (151,515,150 samples, 0.03%)</title><rect x="557.4" y="869" width="0.3" height="15.0" fill="rgb(234,139,24)" rx="2" ry="2" />
<text  x="560.36" y="879.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::ParseNextKey&lt;rocksdb::DecodeEntry&gt; (1,161,616,150 samples, 0.21%)</title><rect x="772.2" y="485" width="2.6" height="15.0" fill="rgb(222,74,53)" rx="2" ry="2" />
<text  x="775.24" y="495.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::value (191,919,190 samples, 0.04%)</title><rect x="925.6" y="629" width="0.5" height="15.0" fill="rgb(223,156,9)" rx="2" ry="2" />
<text  x="928.64" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (161,616,160 samples, 0.03%)</title><rect x="801.3" y="549" width="0.3" height="15.0" fill="rgb(241,159,36)" rx="2" ry="2" />
<text  x="804.26" y="559.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::CompactionOutputs::Output*, std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt; &gt;::operator* (60,606,060 samples, 0.01%)</title><rect x="1085.2" y="613" width="0.2" height="15.0" fill="rgb(245,60,47)" rx="2" ry="2" />
<text  x="1088.24" y="623.5" ></text>
</g>
<g >
<title>rocksdb::GetColumnFamilyOptionsFromMap (50,505,050 samples, 0.01%)</title><rect x="661.6" y="517" width="0.1" height="15.0" fill="rgb(228,190,53)" rx="2" ry="2" />
<text  x="664.57" y="527.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="785.2" y="517" width="0.4" height="15.0" fill="rgb(233,213,26)" rx="2" ry="2" />
<text  x="788.21" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (111,111,110 samples, 0.02%)</title><rect x="553.0" y="789" width="0.3" height="15.0" fill="rgb(231,62,43)" rx="2" ry="2" />
<text  x="556.03" y="799.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count (70,707,070 samples, 0.01%)</title><rect x="199.7" y="789" width="0.1" height="15.0" fill="rgb(226,154,9)" rx="2" ry="2" />
<text  x="202.68" y="799.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (50,505,050 samples, 0.01%)</title><rect x="800.2" y="437" width="0.1" height="15.0" fill="rgb(235,6,3)" rx="2" ry="2" />
<text  x="803.23" y="447.5" ></text>
</g>
<g >
<title>rocksdb::IsValueType (202,020,200 samples, 0.04%)</title><rect x="908.3" y="613" width="0.5" height="15.0" fill="rgb(248,43,32)" rx="2" ry="2" />
<text  x="911.31" y="623.5" ></text>
</g>
<g >
<title>rocksdb::InternalKeyComparator::CompareKeySeq (4,060,606,020 samples, 0.75%)</title><rect x="150.9" y="741" width="8.9" height="15.0" fill="rgb(211,114,2)" rx="2" ry="2" />
<text  x="153.92" y="751.5" ></text>
</g>
<g >
<title>rocksdb::IndexBlockIter::DecodeCurrentValue (90,909,090 samples, 0.02%)</title><rect x="814.4" y="485" width="0.2" height="15.0" fill="rgb(250,73,46)" rx="2" ry="2" />
<text  x="817.37" y="495.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;@plt (60,606,060 samples, 0.01%)</title><rect x="219.9" y="885" width="0.2" height="15.0" fill="rgb(207,34,9)" rx="2" ry="2" />
<text  x="222.94" y="895.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (191,919,190 samples, 0.04%)</title><rect x="912.0" y="613" width="0.5" height="15.0" fill="rgb(221,99,27)" rx="2" ry="2" />
<text  x="915.03" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="780.4" y="421" width="0.1" height="15.0" fill="rgb(252,28,42)" rx="2" ry="2" />
<text  x="783.38" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;::_Rb_tree_iterator (50,505,050 samples, 0.01%)</title><rect x="62.2" y="837" width="0.1" height="15.0" fill="rgb(218,218,51)" rx="2" ry="2" />
<text  x="65.24" y="847.5" ></text>
</g>
<g >
<title>rocksdb::lru_cache::LRUHandleTable::Remove (70,707,070 samples, 0.01%)</title><rect x="813.4" y="389" width="0.2" height="15.0" fill="rgb(218,108,35)" rx="2" ry="2" />
<text  x="816.40" y="399.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::~IOStatus (50,505,050 samples, 0.01%)</title><rect x="36.6" y="853" width="0.1" height="15.0" fill="rgb(240,184,19)" rx="2" ry="2" />
<text  x="39.58" y="863.5" ></text>
</g>
<g >
<title>jbd2__journal_start (161,616,160 samples, 0.03%)</title><rect x="41.3" y="565" width="0.3" height="15.0" fill="rgb(228,99,24)" rx="2" ry="2" />
<text  x="44.27" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::resize (50,505,050 samples, 0.01%)</title><rect x="997.4" y="565" width="0.1" height="15.0" fill="rgb(235,156,30)" rx="2" ry="2" />
<text  x="1000.41" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_mbegin (161,616,160 samples, 0.03%)</title><rect x="904.0" y="565" width="0.4" height="15.0" fill="rgb(207,20,28)" rx="2" ry="2" />
<text  x="907.04" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::get (2,191,919,170 samples, 0.40%)</title><rect x="1170.5" y="661" width="4.8" height="15.0" fill="rgb(208,18,42)" rx="2" ry="2" />
<text  x="1173.49" y="671.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (434,343,430 samples, 0.08%)</title><rect x="1154.2" y="597" width="1.0" height="15.0" fill="rgb(215,82,1)" rx="2" ry="2" />
<text  x="1157.24" y="607.5" ></text>
</g>
<g >
<title>rocksdb::RocksDBOptionsParser::EndSection (60,606,060 samples, 0.01%)</title><rect x="661.6" y="533" width="0.1" height="15.0" fill="rgb(228,103,24)" rx="2" ry="2" />
<text  x="664.57" y="543.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;long&gt;::operator (4,808,080,760 samples, 0.89%)</title><rect x="639.1" y="981" width="10.5" height="15.0" fill="rgb(211,77,14)" rx="2" ry="2" />
<text  x="642.07" y="991.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt;::end (131,313,130 samples, 0.02%)</title><rect x="1058.1" y="629" width="0.3" height="15.0" fill="rgb(212,153,5)" rx="2" ry="2" />
<text  x="1061.06" y="639.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::front (1,222,222,210 samples, 0.23%)</title><rect x="734.5" y="597" width="2.7" height="15.0" fill="rgb(210,217,40)" rx="2" ry="2" />
<text  x="737.53" y="607.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (202,020,200 samples, 0.04%)</title><rect x="1095.3" y="549" width="0.4" height="15.0" fill="rgb(243,23,54)" rx="2" ry="2" />
<text  x="1098.28" y="559.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (70,707,070 samples, 0.01%)</title><rect x="993.0" y="533" width="0.1" height="15.0" fill="rgb(219,167,26)" rx="2" ry="2" />
<text  x="995.97" y="543.5" ></text>
</g>
<g >
<title>rocksdb::ConfigurableHelper::ConfigureOptions (50,505,050 samples, 0.01%)</title><rect x="661.6" y="421" width="0.1" height="15.0" fill="rgb(238,196,28)" rx="2" ry="2" />
<text  x="664.57" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (111,111,110 samples, 0.02%)</title><rect x="838.1" y="533" width="0.2" height="15.0" fill="rgb(249,178,54)" rx="2" ry="2" />
<text  x="841.06" y="543.5" ></text>
</g>
<g >
<title>std::operator== (212,121,210 samples, 0.04%)</title><rect x="953.7" y="629" width="0.5" height="15.0" fill="rgb(247,227,50)" rx="2" ry="2" />
<text  x="956.74" y="639.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (272,727,270 samples, 0.05%)</title><rect x="945.1" y="565" width="0.6" height="15.0" fill="rgb(207,111,23)" rx="2" ry="2" />
<text  x="948.11" y="575.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatch::Iterate (60,606,060 samples, 0.01%)</title><rect x="58.8" y="901" width="0.1" height="15.0" fill="rgb(247,41,49)" rx="2" ry="2" />
<text  x="61.78" y="911.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ikey (70,707,070 samples, 0.01%)</title><rect x="1062.4" y="645" width="0.1" height="15.0" fill="rgb(209,4,0)" rx="2" ry="2" />
<text  x="1065.38" y="655.5" ></text>
</g>
<g >
<title>do_brk_flags (70,707,070 samples, 0.01%)</title><rect x="10.4" y="917" width="0.2" height="15.0" fill="rgb(223,177,7)" rx="2" ry="2" />
<text  x="13.44" y="927.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_context (202,020,200 samples, 0.04%)</title><rect x="27.4" y="901" width="0.5" height="15.0" fill="rgb(214,129,7)" rx="2" ry="2" />
<text  x="30.42" y="911.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (313,131,310 samples, 0.06%)</title><rect x="169.5" y="805" width="0.7" height="15.0" fill="rgb(238,224,45)" rx="2" ry="2" />
<text  x="172.49" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (141,414,140 samples, 0.03%)</title><rect x="744.0" y="533" width="0.3" height="15.0" fill="rgb(254,25,28)" rx="2" ry="2" />
<text  x="746.98" y="543.5" ></text>
</g>
<g >
<title>rocksdb::ImmutableOptions::PackLocal (101,010,100 samples, 0.02%)</title><rect x="661.5" y="629" width="0.3" height="15.0" fill="rgb(253,87,20)" rx="2" ry="2" />
<text  x="664.53" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (161,616,160 samples, 0.03%)</title><rect x="798.9" y="453" width="0.3" height="15.0" fill="rgb(220,112,14)" rx="2" ry="2" />
<text  x="801.86" y="463.5" ></text>
</g>
<g >
<title>rocksdb::BlockContents::BlockContents (60,606,060 samples, 0.01%)</title><rect x="804.5" y="469" width="0.1" height="15.0" fill="rgb(213,43,22)" rx="2" ry="2" />
<text  x="807.46" y="479.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned char&gt;::operator unsigned char (50,505,050 samples, 0.01%)</title><rect x="527.3" y="869" width="0.1" height="15.0" fill="rgb(218,10,34)" rx="2" ry="2" />
<text  x="530.33" y="879.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;rocksdb::MemTable* const&amp;&gt;, std::tuple&lt;&gt; &gt; (525,252,520 samples, 0.10%)</title><rect x="70.5" y="725" width="1.2" height="15.0" fill="rgb(208,105,32)" rx="2" ry="2" />
<text  x="73.52" y="735.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (191,919,190 samples, 0.04%)</title><rect x="735.3" y="581" width="0.4" height="15.0" fill="rgb(235,171,32)" rx="2" ry="2" />
<text  x="738.31" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::FilterBlockBuilder*, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="1050.2" y="533" width="0.2" height="15.0" fill="rgb(220,90,50)" rx="2" ry="2" />
<text  x="1053.22" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (272,727,270 samples, 0.05%)</title><rect x="848.1" y="501" width="0.6" height="15.0" fill="rgb(243,125,2)" rx="2" ry="2" />
<text  x="851.08" y="511.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (313,131,310 samples, 0.06%)</title><rect x="316.5" y="789" width="0.7" height="15.0" fill="rgb(226,172,7)" rx="2" ry="2" />
<text  x="319.51" y="799.5" ></text>
</g>
<g >
<title>std::chrono::operator&gt;=&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (252,525,250 samples, 0.05%)</title><rect x="536.8" y="885" width="0.5" height="15.0" fill="rgb(234,163,31)" rx="2" ry="2" />
<text  x="539.80" y="895.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_context (101,010,100 samples, 0.02%)</title><rect x="109.0" y="677" width="0.2" height="15.0" fill="rgb(237,87,33)" rx="2" ry="2" />
<text  x="111.99" y="687.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::Invalidate (50,505,050 samples, 0.01%)</title><rect x="884.6" y="645" width="0.1" height="15.0" fill="rgb(232,68,21)" rx="2" ry="2" />
<text  x="887.57" y="655.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;34ul&gt; (60,606,060 samples, 0.01%)</title><rect x="57.3" y="901" width="0.2" height="15.0" fill="rgb(225,155,36)" rx="2" ry="2" />
<text  x="60.33" y="911.5" ></text>
</g>
<g >
<title>__lock_text_start (60,606,060 samples, 0.01%)</title><rect x="660.4" y="885" width="0.2" height="15.0" fill="rgb(215,76,40)" rx="2" ry="2" />
<text  x="663.43" y="895.5" ></text>
</g>
<g >
<title>XXH3_hashLong_64b_default (262,626,260 samples, 0.05%)</title><rect x="806.3" y="373" width="0.5" height="15.0" fill="rgb(230,228,35)" rx="2" ry="2" />
<text  x="809.26" y="383.5" ></text>
</g>
<g >
<title>std::move&lt;rocksdb::Status::Code&amp;&gt; (252,525,250 samples, 0.05%)</title><rect x="1142.2" y="645" width="0.5" height="15.0" fill="rgb(238,83,15)" rx="2" ry="2" />
<text  x="1145.19" y="655.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyData::GetID (70,707,070 samples, 0.01%)</title><rect x="551.7" y="869" width="0.1" height="15.0" fill="rgb(237,208,32)" rx="2" ry="2" />
<text  x="554.68" y="879.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (272,727,270 samples, 0.05%)</title><rect x="800.0" y="485" width="0.6" height="15.0" fill="rgb(248,139,16)" rx="2" ry="2" />
<text  x="802.96" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;&gt;::operator=&lt;rocksdb::Status, unsigned int, unsigned long&gt; (1,505,050,490 samples, 0.28%)</title><rect x="559.3" y="917" width="3.3" height="15.0" fill="rgb(217,100,27)" rx="2" ry="2" />
<text  x="562.28" y="927.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count (212,121,210 samples, 0.04%)</title><rect x="319.8" y="805" width="0.5" height="15.0" fill="rgb(245,152,51)" rx="2" ry="2" />
<text  x="322.79" y="815.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::IsPausingManualCompaction (414,141,410 samples, 0.08%)</title><rect x="868.2" y="661" width="0.9" height="15.0" fill="rgb(254,129,19)" rx="2" ry="2" />
<text  x="871.23" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::FileMetaData* const*, std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt; &gt;::__normal_iterator (191,919,190 samples, 0.04%)</title><rect x="1071.4" y="581" width="0.4" height="15.0" fill="rgb(221,88,45)" rx="2" ry="2" />
<text  x="1074.41" y="591.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::operator= (50,505,050 samples, 0.01%)</title><rect x="51.3" y="885" width="0.1" height="15.0" fill="rgb(211,135,2)" rx="2" ry="2" />
<text  x="54.29" y="895.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Valid (292,929,290 samples, 0.05%)</title><rect x="915.8" y="613" width="0.6" height="15.0" fill="rgb(211,104,38)" rx="2" ry="2" />
<text  x="918.76" y="623.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::NextEntryOffset@plt (50,505,050 samples, 0.01%)</title><rect x="772.1" y="485" width="0.1" height="15.0" fill="rgb(217,157,35)" rx="2" ry="2" />
<text  x="775.13" y="495.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey (505,050,500 samples, 0.09%)</title><rect x="1027.1" y="613" width="1.1" height="15.0" fill="rgb(207,198,24)" rx="2" ry="2" />
<text  x="1030.12" y="623.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (444,444,440 samples, 0.08%)</title><rect x="689.6" y="405" width="1.0" height="15.0" fill="rgb(207,7,0)" rx="2" ry="2" />
<text  x="692.59" y="415.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyData::user_comparator (80,808,080 samples, 0.01%)</title><rect x="566.5" y="917" width="0.2" height="15.0" fill="rgb(218,196,33)" rx="2" ry="2" />
<text  x="569.50" y="927.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid (202,020,200 samples, 0.04%)</title><rect x="939.4" y="629" width="0.4" height="15.0" fill="rgb(221,143,14)" rx="2" ry="2" />
<text  x="942.39" y="639.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::EstimateSizeAfterKV (202,020,200 samples, 0.04%)</title><rect x="1021.9" y="613" width="0.5" height="15.0" fill="rgb(240,158,34)" rx="2" ry="2" />
<text  x="1024.93" y="623.5" ></text>
</g>
<g >
<title>rocksdb::lru_cache::LRUCacheShard::Release (60,606,060 samples, 0.01%)</title><rect x="768.9" y="373" width="0.1" height="15.0" fill="rgb(251,137,24)" rx="2" ry="2" />
<text  x="771.89" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="1004.6" y="533" width="0.2" height="15.0" fill="rgb(225,6,41)" rx="2" ry="2" />
<text  x="1007.64" y="543.5" ></text>
</g>
<g >
<title>alloc_pages_vma (101,010,100 samples, 0.02%)</title><rect x="664.8" y="469" width="0.2" height="15.0" fill="rgb(229,2,36)" rx="2" ry="2" />
<text  x="667.77" y="479.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count (818,181,810 samples, 0.15%)</title><rect x="342.8" y="789" width="1.8" height="15.0" fill="rgb(209,1,23)" rx="2" ry="2" />
<text  x="345.85" y="799.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (272,727,270 samples, 0.05%)</title><rect x="847.3" y="469" width="0.6" height="15.0" fill="rgb(207,222,26)" rx="2" ry="2" />
<text  x="850.31" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="1069.8" y="517" width="0.1" height="15.0" fill="rgb(217,2,31)" rx="2" ry="2" />
<text  x="1072.76" y="527.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindSpliceForLevel&lt;true&gt; (26,090,908,830 samples, 4.82%)</title><rect x="89.2" y="741" width="56.9" height="15.0" fill="rgb(253,9,17)" rx="2" ry="2" />
<text  x="92.24" y="751.5" >rocksd..</text>
</g>
<g >
<title>std::map&lt;rocksdb::MemTable*, rocksdb::MemTablePostProcessInfo, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::operator[] (2,888,888,860 samples, 0.53%)</title><rect x="69.7" y="805" width="6.3" height="15.0" fill="rgb(214,147,23)" rx="2" ry="2" />
<text  x="72.68" y="815.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (80,808,080 samples, 0.01%)</title><rect x="773.3" y="453" width="0.1" height="15.0" fill="rgb(252,141,30)" rx="2" ry="2" />
<text  x="776.27" y="463.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid (373,737,370 samples, 0.07%)</title><rect x="883.8" y="629" width="0.8" height="15.0" fill="rgb(237,69,32)" rx="2" ry="2" />
<text  x="886.76" y="639.5" ></text>
</g>
<g >
<title>ext4_sync_file (141,414,140 samples, 0.03%)</title><rect x="1140.3" y="437" width="0.3" height="15.0" fill="rgb(244,114,41)" rx="2" ry="2" />
<text  x="1143.30" y="447.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (686,868,680 samples, 0.13%)</title><rect x="1164.5" y="645" width="1.5" height="15.0" fill="rgb(232,179,50)" rx="2" ry="2" />
<text  x="1167.48" y="655.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::status (6,595,959,530 samples, 1.22%)</title><rect x="777.0" y="565" width="14.4" height="15.0" fill="rgb(224,133,27)" rx="2" ry="2" />
<text  x="780.04" y="575.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="863.8" y="517" width="0.1" height="15.0" fill="rgb(248,46,36)" rx="2" ry="2" />
<text  x="866.76" y="527.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (919,191,910 samples, 0.17%)</title><rect x="1164.4" y="661" width="2.0" height="15.0" fill="rgb(244,181,31)" rx="2" ry="2" />
<text  x="1167.41" y="671.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="841.5" y="549" width="0.1" height="15.0" fill="rgb(223,48,39)" rx="2" ry="2" />
<text  x="844.45" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (323,232,320 samples, 0.06%)</title><rect x="790.6" y="501" width="0.7" height="15.0" fill="rgb(212,96,9)" rx="2" ry="2" />
<text  x="793.60" y="511.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (80,808,080 samples, 0.01%)</title><rect x="737.0" y="581" width="0.2" height="15.0" fill="rgb(246,181,30)" rx="2" ry="2" />
<text  x="740.02" y="591.5" ></text>
</g>
<g >
<title>__GI___libc_write (555,555,550 samples, 0.10%)</title><rect x="993.6" y="501" width="1.2" height="15.0" fill="rgb(246,33,43)" rx="2" ry="2" />
<text  x="996.60" y="511.5" ></text>
</g>
<g >
<title>std::random_device::random_device (50,505,050 samples, 0.01%)</title><rect x="649.9" y="997" width="0.1" height="15.0" fill="rgb(212,58,29)" rx="2" ry="2" />
<text  x="652.86" y="1007.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (565,656,560 samples, 0.10%)</title><rect x="540.8" y="885" width="1.3" height="15.0" fill="rgb(223,102,52)" rx="2" ry="2" />
<text  x="543.85" y="895.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently (36,808,080,440 samples, 6.80%)</title><rect x="82.1" y="789" width="80.3" height="15.0" fill="rgb(212,100,30)" rx="2" ry="2" />
<text  x="85.15" y="799.5" >rocksdb::..</text>
</g>
<g >
<title>rocksdb::UserComparatorWrapper::Compare (181,818,180 samples, 0.03%)</title><rect x="136.4" y="693" width="0.4" height="15.0" fill="rgb(226,70,43)" rx="2" ry="2" />
<text  x="139.39" y="703.5" ></text>
</g>
<g >
<title>ip_local_deliver (70,707,070 samples, 0.01%)</title><rect x="690.3" y="85" width="0.2" height="15.0" fill="rgb(247,117,28)" rx="2" ry="2" />
<text  x="693.34" y="95.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::get (565,656,560 samples, 0.10%)</title><rect x="946.3" y="629" width="1.2" height="15.0" fill="rgb(211,139,21)" rx="2" ry="2" />
<text  x="949.28" y="639.5" ></text>
</g>
<g >
<title>rocksdb::PutVarint32Varint32Varint32 (1,020,202,010 samples, 0.19%)</title><rect x="1007.6" y="597" width="2.2" height="15.0" fill="rgb(221,77,35)" rx="2" ry="2" />
<text  x="1010.59" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::operator (121,212,120 samples, 0.02%)</title><rect x="1153.3" y="645" width="0.3" height="15.0" fill="rgb(230,129,30)" rx="2" ry="2" />
<text  x="1156.29" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (111,111,110 samples, 0.02%)</title><rect x="177.2" y="837" width="0.3" height="15.0" fill="rgb(215,217,6)" rx="2" ry="2" />
<text  x="180.22" y="847.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::IOOptions (60,606,060 samples, 0.01%)</title><rect x="807.1" y="437" width="0.2" height="15.0" fill="rgb(241,80,7)" rx="2" ry="2" />
<text  x="810.14" y="447.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (868,686,860 samples, 0.16%)</title><rect x="824.8" y="549" width="1.9" height="15.0" fill="rgb(223,86,1)" rx="2" ry="2" />
<text  x="827.83" y="559.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::InitDataBlock (4,444,444,400 samples, 0.82%)</title><rect x="803.3" y="533" width="9.7" height="15.0" fill="rgb(221,186,1)" rx="2" ry="2" />
<text  x="806.33" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (191,919,190 samples, 0.04%)</title><rect x="850.9" y="469" width="0.4" height="15.0" fill="rgb(238,126,19)" rx="2" ry="2" />
<text  x="853.90" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Slice::difference_offset@plt (141,414,140 samples, 0.03%)</title><rect x="1014.3" y="613" width="0.3" height="15.0" fill="rgb(218,202,43)" rx="2" ry="2" />
<text  x="1017.28" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::_M_ptr (595,959,590 samples, 0.11%)</title><rect x="1153.9" y="613" width="1.3" height="15.0" fill="rgb(205,47,7)" rx="2" ry="2" />
<text  x="1156.88" y="623.5" ></text>
</g>
<g >
<title>__tls_get_addr (565,656,560 samples, 0.10%)</title><rect x="1103.7" y="581" width="1.2" height="15.0" fill="rgb(232,1,23)" rx="2" ry="2" />
<text  x="1106.72" y="591.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::GetInternalKey (141,414,140 samples, 0.03%)</title><rect x="770.9" y="501" width="0.3" height="15.0" fill="rgb(222,173,30)" rx="2" ry="2" />
<text  x="773.92" y="511.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (242,424,240 samples, 0.04%)</title><rect x="690.8" y="501" width="0.6" height="15.0" fill="rgb(232,17,22)" rx="2" ry="2" />
<text  x="693.84" y="511.5" ></text>
</g>
<g >
<title>rocksdb::IndexValue::EncodeTo (50,505,050 samples, 0.01%)</title><rect x="1043.4" y="613" width="0.1" height="15.0" fill="rgb(223,77,4)" rx="2" ry="2" />
<text  x="1046.40" y="623.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::FlushBlockPolicy*, false&gt;::_M_head (252,525,250 samples, 0.05%)</title><rect x="1053.3" y="549" width="0.5" height="15.0" fill="rgb(253,211,51)" rx="2" ry="2" />
<text  x="1056.26" y="559.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (70,707,070 samples, 0.01%)</title><rect x="811.0" y="485" width="0.1" height="15.0" fill="rgb(208,214,17)" rx="2" ry="2" />
<text  x="813.97" y="495.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::replace_top (383,838,380 samples, 0.07%)</title><rect x="700.2" y="629" width="0.8" height="15.0" fill="rgb(220,43,37)" rx="2" ry="2" />
<text  x="703.16" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::end (323,232,320 samples, 0.06%)</title><rect x="1089.9" y="613" width="0.7" height="15.0" fill="rgb(240,19,49)" rx="2" ry="2" />
<text  x="1092.91" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FSWritableFileTracingWrapper, std::default_delete&lt;rocksdb::FSWritableFileTracingWrapper&gt; &gt;::get (50,505,050 samples, 0.01%)</title><rect x="992.5" y="517" width="0.1" height="15.0" fill="rgb(233,52,7)" rx="2" ry="2" />
<text  x="995.46" y="527.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::status (3,353,535,320 samples, 0.62%)</title><rect x="845.7" y="565" width="7.3" height="15.0" fill="rgb(222,67,20)" rx="2" ry="2" />
<text  x="848.66" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (50,505,050 samples, 0.01%)</title><rect x="972.0" y="629" width="0.2" height="15.0" fill="rgb(251,211,43)" rx="2" ry="2" />
<text  x="975.05" y="639.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="913.4" y="549" width="0.1" height="15.0" fill="rgb(245,217,26)" rx="2" ry="2" />
<text  x="916.38" y="559.5" ></text>
</g>
<g >
<title>std::random_device::random_device (464,646,460 samples, 0.09%)</title><rect x="638.1" y="981" width="1.0" height="15.0" fill="rgb(212,109,0)" rx="2" ry="2" />
<text  x="641.05" y="991.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::FileChecksumGenerator, std::default_delete&lt;rocksdb::FileChecksumGenerator&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="47.7" y="805" width="0.3" height="15.0" fill="rgb(213,33,13)" rx="2" ry="2" />
<text  x="50.70" y="815.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (101,010,100 samples, 0.02%)</title><rect x="1114.1" y="645" width="0.2" height="15.0" fill="rgb(231,222,21)" rx="2" ry="2" />
<text  x="1117.09" y="655.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::IsParallelCompressionEnabled (70,707,070 samples, 0.01%)</title><rect x="1059.5" y="645" width="0.2" height="15.0" fill="rgb(210,78,49)" rx="2" ry="2" />
<text  x="1062.52" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Cleanable::DoCleanup (222,222,220 samples, 0.04%)</title><rect x="896.9" y="629" width="0.5" height="15.0" fill="rgb(225,215,8)" rx="2" ry="2" />
<text  x="899.93" y="639.5" ></text>
</g>
<g >
<title>__memset_evex_unaligned_erms (80,808,080 samples, 0.01%)</title><rect x="1116.4" y="629" width="0.2" height="15.0" fill="rgb(234,122,30)" rx="2" ry="2" />
<text  x="1119.45" y="639.5" ></text>
</g>
<g >
<title>rocksdb::operator== (555,555,550 samples, 0.10%)</title><rect x="877.2" y="629" width="1.2" height="15.0" fill="rgb(210,158,10)" rx="2" ry="2" />
<text  x="880.19" y="639.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey (242,424,240 samples, 0.04%)</title><rect x="103.0" y="693" width="0.6" height="15.0" fill="rgb(230,69,54)" rx="2" ry="2" />
<text  x="106.04" y="703.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (50,505,050 samples, 0.01%)</title><rect x="1117.0" y="549" width="0.2" height="15.0" fill="rgb(219,225,29)" rx="2" ry="2" />
<text  x="1120.04" y="559.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="795.8" y="421" width="0.1" height="15.0" fill="rgb(239,191,32)" rx="2" ry="2" />
<text  x="798.76" y="431.5" ></text>
</g>
<g >
<title>rocksdb:low (228,595,957,310 samples, 42.24%)</title><rect x="691.6" y="1029" width="498.4" height="15.0" fill="rgb(243,128,35)" rx="2" ry="2" />
<text  x="694.61" y="1039.5" >rocksdb:low</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="792.2" y="485" width="0.1" height="15.0" fill="rgb(218,130,53)" rx="2" ry="2" />
<text  x="795.19" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="826.1" y="501" width="0.4" height="15.0" fill="rgb(237,79,38)" rx="2" ry="2" />
<text  x="829.08" y="511.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (202,020,200 samples, 0.04%)</title><rect x="1045.2" y="629" width="0.4" height="15.0" fill="rgb(252,42,1)" rx="2" ry="2" />
<text  x="1048.16" y="639.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;rocksdb::SuperVersionContext::WriteStallNotification, std::allocator&lt;rocksdb::SuperVersionContext::WriteStallNotification&gt; &gt;::~_Vector_base (60,606,060 samples, 0.01%)</title><rect x="32.8" y="837" width="0.1" height="15.0" fill="rgb(222,218,19)" rx="2" ry="2" />
<text  x="35.77" y="847.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::~IOOptions (50,505,050 samples, 0.01%)</title><rect x="763.1" y="405" width="0.2" height="15.0" fill="rgb(227,141,35)" rx="2" ry="2" />
<text  x="766.14" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (161,616,160 samples, 0.03%)</title><rect x="1102.3" y="597" width="0.3" height="15.0" fill="rgb(251,46,27)" rx="2" ry="2" />
<text  x="1105.29" y="607.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::_M_head (181,818,180 samples, 0.03%)</title><rect x="1154.8" y="565" width="0.4" height="15.0" fill="rgb(237,35,14)" rx="2" ry="2" />
<text  x="1157.79" y="575.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="581.3" y="917" width="0.2" height="15.0" fill="rgb(240,58,5)" rx="2" ry="2" />
<text  x="584.28" y="927.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (223,323,230,090 samples, 41.26%)</title><rect x="691.8" y="869" width="486.9" height="15.0" fill="rgb(210,31,32)" rx="2" ry="2" />
<text  x="694.81" y="879.5" >std::_Function_handler&lt;void </text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Next (2,383,838,360 samples, 0.44%)</title><rect x="770.3" y="533" width="5.2" height="15.0" fill="rgb(243,227,28)" rx="2" ry="2" />
<text  x="773.25" y="543.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (373,737,370 samples, 0.07%)</title><rect x="1136.4" y="581" width="0.8" height="15.0" fill="rgb(212,31,33)" rx="2" ry="2" />
<text  x="1139.35" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (383,838,380 samples, 0.07%)</title><rect x="976.0" y="661" width="0.9" height="15.0" fill="rgb(227,97,30)" rx="2" ry="2" />
<text  x="979.03" y="671.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (151,515,150 samples, 0.03%)</title><rect x="837.5" y="485" width="0.3" height="15.0" fill="rgb(228,186,10)" rx="2" ry="2" />
<text  x="840.49" y="495.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (70,707,070 samples, 0.01%)</title><rect x="52.9" y="869" width="0.2" height="15.0" fill="rgb(236,225,13)" rx="2" ry="2" />
<text  x="55.94" y="879.5" ></text>
</g>
<g >
<title>XXH3_64bits_internal (525,252,520 samples, 0.10%)</title><rect x="990.3" y="533" width="1.1" height="15.0" fill="rgb(219,146,49)" rx="2" ry="2" />
<text  x="993.28" y="543.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::Size (101,010,100 samples, 0.02%)</title><rect x="820.0" y="501" width="0.3" height="15.0" fill="rgb(211,165,40)" rx="2" ry="2" />
<text  x="823.05" y="511.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (383,838,380 samples, 0.07%)</title><rect x="1105.5" y="581" width="0.8" height="15.0" fill="rgb(219,62,53)" rx="2" ry="2" />
<text  x="1108.50" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;rocksdb::SuperVersion, std::default_delete&lt;rocksdb::SuperVersion&gt;, true, true&gt;::__uniq_ptr_impl (90,909,090 samples, 0.02%)</title><rect x="31.0" y="853" width="0.2" height="15.0" fill="rgb(226,154,27)" rx="2" ry="2" />
<text  x="33.97" y="863.5" ></text>
</g>
<g >
<title>rocksdb::Cleanable::Reset (212,121,210 samples, 0.04%)</title><rect x="768.6" y="453" width="0.5" height="15.0" fill="rgb(223,134,18)" rx="2" ry="2" />
<text  x="771.62" y="463.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block_kData&gt; (171,717,170 samples, 0.03%)</title><rect x="766.4" y="453" width="0.4" height="15.0" fill="rgb(241,214,41)" rx="2" ry="2" />
<text  x="769.38" y="463.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::status (4,050,505,010 samples, 0.75%)</title><rect x="793.2" y="581" width="8.8" height="15.0" fill="rgb(253,220,5)" rx="2" ry="2" />
<text  x="796.18" y="591.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;53ul&gt; (767,676,760 samples, 0.14%)</title><rect x="1075.1" y="629" width="1.7" height="15.0" fill="rgb(249,85,19)" rx="2" ry="2" />
<text  x="1078.11" y="639.5" ></text>
</g>
<g >
<title>rocksdb::ConcurrentArena::MemoryAllocatedBytes (50,505,050 samples, 0.01%)</title><rect x="61.4" y="821" width="0.1" height="15.0" fill="rgb(227,73,50)" rx="2" ry="2" />
<text  x="64.40" y="831.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::UpdateFileChecksum (50,505,050 samples, 0.01%)</title><rect x="994.9" y="549" width="0.1" height="15.0" fill="rgb(232,81,15)" rx="2" ry="2" />
<text  x="997.86" y="559.5" ></text>
</g>
<g >
<title>rocksdb::IndexBlockIter::ParseNextIndexKey (111,111,110 samples, 0.02%)</title><rect x="769.2" y="469" width="0.2" height="15.0" fill="rgb(216,36,10)" rx="2" ry="2" />
<text  x="772.18" y="479.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::SetValid (151,515,150 samples, 0.03%)</title><rect x="949.6" y="661" width="0.4" height="15.0" fill="rgb(223,211,8)" rx="2" ry="2" />
<text  x="952.63" y="671.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (373,737,370 samples, 0.07%)</title><rect x="1118.6" y="629" width="0.9" height="15.0" fill="rgb(215,216,44)" rx="2" ry="2" />
<text  x="1121.65" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (272,727,270 samples, 0.05%)</title><rect x="168.3" y="821" width="0.6" height="15.0" fill="rgb(241,217,44)" rx="2" ry="2" />
<text  x="171.34" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (313,131,310 samples, 0.06%)</title><rect x="176.5" y="837" width="0.7" height="15.0" fill="rgb(205,37,10)" rx="2" ry="2" />
<text  x="179.49" y="847.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Valid (747,474,740 samples, 0.14%)</title><rect x="917.5" y="629" width="1.7" height="15.0" fill="rgb(245,147,26)" rx="2" ry="2" />
<text  x="920.54" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::empty (1,555,555,540 samples, 0.29%)</title><rect x="1087.2" y="629" width="3.4" height="15.0" fill="rgb(238,39,34)" rx="2" ry="2" />
<text  x="1090.22" y="639.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Valid (131,313,130 samples, 0.02%)</title><rect x="822.9" y="565" width="0.3" height="15.0" fill="rgb(214,187,27)" rx="2" ry="2" />
<text  x="825.87" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (878,787,870 samples, 0.16%)</title><rect x="780.0" y="485" width="1.9" height="15.0" fill="rgb(248,126,22)" rx="2" ry="2" />
<text  x="782.97" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalKeyComparator, std::default_delete&lt;rocksdb::InternalKeyComparator&gt; &gt;::unique_ptr&lt;std::default_delete&lt;rocksdb::InternalKeyComparator&gt;, void&gt; (70,707,070 samples, 0.01%)</title><rect x="803.8" y="421" width="0.2" height="15.0" fill="rgb(223,21,0)" rx="2" ry="2" />
<text  x="806.84" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (50,505,050 samples, 0.01%)</title><rect x="773.4" y="453" width="0.2" height="15.0" fill="rgb(227,184,41)" rx="2" ry="2" />
<text  x="776.45" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (131,313,130 samples, 0.02%)</title><rect x="788.2" y="517" width="0.3" height="15.0" fill="rgb(218,115,51)" rx="2" ry="2" />
<text  x="791.22" y="527.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (60,606,060 samples, 0.01%)</title><rect x="243.2" y="869" width="0.1" height="15.0" fill="rgb(226,223,18)" rx="2" ry="2" />
<text  x="246.17" y="879.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (353,535,350 samples, 0.07%)</title><rect x="1095.0" y="597" width="0.8" height="15.0" fill="rgb(251,151,50)" rx="2" ry="2" />
<text  x="1098.04" y="607.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt; (36,262,625,900 samples, 6.70%)</title><rect x="82.2" y="773" width="79.1" height="15.0" fill="rgb(229,135,32)" rx="2" ry="2" />
<text  x="85.21" y="783.5" >rocksdb::..</text>
</g>
<g >
<title>__alloc_pages (50,505,050 samples, 0.01%)</title><rect x="81.1" y="613" width="0.1" height="15.0" fill="rgb(249,82,8)" rx="2" ry="2" />
<text  x="84.07" y="623.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::status (222,222,220 samples, 0.04%)</title><rect x="693.2" y="693" width="0.4" height="15.0" fill="rgb(225,94,54)" rx="2" ry="2" />
<text  x="696.15" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_ptr (70,707,070 samples, 0.01%)</title><rect x="840.1" y="565" width="0.2" height="15.0" fill="rgb(217,149,33)" rx="2" ry="2" />
<text  x="843.13" y="575.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::UpdateFilesToCutForTTLStates (636,363,630 samples, 0.12%)</title><rect x="1070.6" y="629" width="1.4" height="15.0" fill="rgb(235,45,34)" rx="2" ry="2" />
<text  x="1073.57" y="639.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::JoinBatchGroup (50,505,050 samples, 0.01%)</title><rect x="548.1" y="917" width="0.1" height="15.0" fill="rgb(227,140,30)" rx="2" ry="2" />
<text  x="551.09" y="927.5" ></text>
</g>
<g >
<title>std::function&lt;rocksdb::Status  (171,717,170 samples, 0.03%)</title><rect x="1140.3" y="645" width="0.3" height="15.0" fill="rgb(248,97,51)" rx="2" ry="2" />
<text  x="1143.25" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="946.9" y="581" width="0.1" height="15.0" fill="rgb(233,142,29)" rx="2" ry="2" />
<text  x="949.85" y="591.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::WriteThread::Writer*&gt;::compare_exchange_weak (303,030,300 samples, 0.06%)</title><rect x="527.5" y="869" width="0.6" height="15.0" fill="rgb(208,191,16)" rx="2" ry="2" />
<text  x="530.46" y="879.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="311.9" y="821" width="0.2" height="15.0" fill="rgb(237,130,35)" rx="2" ry="2" />
<text  x="314.86" y="831.5" ></text>
</g>
<g >
<title>rocksdb::Compaction::output_level (252,525,250 samples, 0.05%)</title><rect x="1065.6" y="629" width="0.6" height="15.0" fill="rgb(209,95,18)" rx="2" ry="2" />
<text  x="1068.64" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::Block_kData, std::default_delete&lt;rocksdb::Block_kData&gt; &gt;::__uniq_ptr_impl (50,505,050 samples, 0.01%)</title><rect x="767.2" y="421" width="0.1" height="15.0" fill="rgb(252,177,45)" rx="2" ry="2" />
<text  x="770.22" y="431.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (272,727,270 samples, 0.05%)</title><rect x="322.8" y="853" width="0.6" height="15.0" fill="rgb(206,73,8)" rx="2" ry="2" />
<text  x="325.81" y="863.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::FindNextVisibleKey (111,111,110 samples, 0.02%)</title><rect x="701.2" y="629" width="0.2" height="15.0" fill="rgb(236,63,29)" rx="2" ry="2" />
<text  x="704.17" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (60,606,060 samples, 0.01%)</title><rect x="546.9" y="917" width="0.1" height="15.0" fill="rgb(251,101,42)" rx="2" ry="2" />
<text  x="549.90" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::BlobGarbageMeter, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;::operator bool (1,676,767,660 samples, 0.31%)</title><rect x="1147.4" y="645" width="3.6" height="15.0" fill="rgb(212,201,23)" rx="2" ry="2" />
<text  x="1150.36" y="655.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::operator[]@plt (90,909,090 samples, 0.02%)</title><rect x="737.8" y="597" width="0.2" height="15.0" fill="rgb(251,157,8)" rx="2" ry="2" />
<text  x="740.79" y="607.5" ></text>
</g>
<g >
<title>handle_pte_fault (80,808,080 samples, 0.01%)</title><rect x="81.0" y="661" width="0.2" height="15.0" fill="rgb(226,216,23)" rx="2" ry="2" />
<text  x="84.02" y="671.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::status (8,151,515,070 samples, 1.51%)</title><rect x="823.8" y="597" width="17.8" height="15.0" fill="rgb(221,79,5)" rx="2" ry="2" />
<text  x="826.81" y="607.5" ></text>
</g>
<g >
<title>[unknown] (3,414,141,380 samples, 0.63%)</title><rect x="1178.7" y="1013" width="7.4" height="15.0" fill="rgb(231,218,39)" rx="2" ry="2" />
<text  x="1181.70" y="1023.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*&gt;::load@plt (50,505,050 samples, 0.01%)</title><rect x="146.0" y="725" width="0.1" height="15.0" fill="rgb(214,140,42)" rx="2" ry="2" />
<text  x="149.01" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_ptr (151,515,150 samples, 0.03%)</title><rect x="863.6" y="549" width="0.3" height="15.0" fill="rgb(221,7,30)" rx="2" ry="2" />
<text  x="866.61" y="559.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (151,515,150 samples, 0.03%)</title><rect x="49.9" y="613" width="0.3" height="15.0" fill="rgb(237,117,13)" rx="2" ry="2" />
<text  x="52.90" y="623.5" ></text>
</g>
<g >
<title>alloc_pages (101,010,100 samples, 0.02%)</title><rect x="994.0" y="277" width="0.2" height="15.0" fill="rgb(224,33,36)" rx="2" ry="2" />
<text  x="997.02" y="287.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::NextFromInput (464,646,460 samples, 0.09%)</title><rect x="964.0" y="677" width="1.0" height="15.0" fill="rgb(251,85,20)" rx="2" ry="2" />
<text  x="966.98" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_drop_node (494,949,490 samples, 0.09%)</title><rect x="62.8" y="821" width="1.1" height="15.0" fill="rgb(214,69,38)" rx="2" ry="2" />
<text  x="65.83" y="831.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (50,505,050 samples, 0.01%)</title><rect x="920.4" y="597" width="0.1" height="15.0" fill="rgb(210,188,52)" rx="2" ry="2" />
<text  x="923.36" y="607.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::NextFromInput@plt (171,717,170 samples, 0.03%)</title><rect x="965.0" y="677" width="0.4" height="15.0" fill="rgb(225,143,27)" rx="2" ry="2" />
<text  x="968.00" y="687.5" ></text>
</g>
<g >
<title>std::move&lt;rocksdb::CompactionMergingIterator::HeapItem*&amp;&gt; (101,010,100 samples, 0.02%)</title><rect x="738.2" y="597" width="0.2" height="15.0" fill="rgb(237,134,43)" rx="2" ry="2" />
<text  x="741.21" y="607.5" ></text>
</g>
<g >
<title>handle_mm_fault (121,212,120 samples, 0.02%)</title><rect x="664.7" y="533" width="0.3" height="15.0" fill="rgb(224,96,39)" rx="2" ry="2" />
<text  x="667.75" y="543.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (383,838,380 samples, 0.07%)</title><rect x="663.1" y="581" width="0.9" height="15.0" fill="rgb(207,82,28)" rx="2" ry="2" />
<text  x="666.14" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FlushBlockPolicy, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt;::get (1,050,505,040 samples, 0.19%)</title><rect x="1052.0" y="613" width="2.3" height="15.0" fill="rgb(224,227,2)" rx="2" ry="2" />
<text  x="1055.03" y="623.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;::base (252,525,250 samples, 0.05%)</title><rect x="955.2" y="629" width="0.5" height="15.0" fill="rgb(230,222,18)" rx="2" ry="2" />
<text  x="958.18" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_ptr (393,939,390 samples, 0.07%)</title><rect x="933.1" y="597" width="0.8" height="15.0" fill="rgb(212,36,4)" rx="2" ry="2" />
<text  x="936.09" y="607.5" ></text>
</g>
<g >
<title>__memset_evex_unaligned_erms (70,707,070 samples, 0.01%)</title><rect x="834.0" y="549" width="0.2" height="15.0" fill="rgb(254,71,38)" rx="2" ry="2" />
<text  x="837.01" y="559.5" ></text>
</g>
<g >
<title>std::__detail::__mod&lt;unsigned long, 4294967296ul, 1ul, 0ul&gt; (6,484,848,420 samples, 1.20%)</title><rect x="606.8" y="949" width="14.1" height="15.0" fill="rgb(249,95,18)" rx="2" ry="2" />
<text  x="609.78" y="959.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::ParseNextKey&lt;rocksdb::DecodeEntry&gt; (121,212,120 samples, 0.02%)</title><rect x="771.4" y="501" width="0.3" height="15.0" fill="rgb(217,80,47)" rx="2" ry="2" />
<text  x="774.40" y="511.5" ></text>
</g>
<g >
<title>_int_free (60,606,060 samples, 0.01%)</title><rect x="657.7" y="1013" width="0.1" height="15.0" fill="rgb(224,221,37)" rx="2" ry="2" />
<text  x="660.70" y="1023.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::FindNextVisibleKey (2,868,686,840 samples, 0.53%)</title><rect x="750.4" y="613" width="6.3" height="15.0" fill="rgb(244,185,3)" rx="2" ry="2" />
<text  x="753.43" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (80,808,080 samples, 0.01%)</title><rect x="1026.2" y="613" width="0.2" height="15.0" fill="rgb(235,216,16)" rx="2" ry="2" />
<text  x="1029.22" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (373,737,370 samples, 0.07%)</title><rect x="1130.8" y="517" width="0.8" height="15.0" fill="rgb(233,178,36)" rx="2" ry="2" />
<text  x="1133.80" y="527.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt;@plt (70,707,070 samples, 0.01%)</title><rect x="344.8" y="805" width="0.2" height="15.0" fill="rgb(251,29,42)" rx="2" ry="2" />
<text  x="347.83" y="815.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (151,515,150 samples, 0.03%)</title><rect x="49.9" y="597" width="0.3" height="15.0" fill="rgb(217,209,8)" rx="2" ry="2" />
<text  x="52.90" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (50,505,050 samples, 0.01%)</title><rect x="569.1" y="965" width="0.2" height="15.0" fill="rgb(241,195,44)" rx="2" ry="2" />
<text  x="572.15" y="975.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="795.7" y="437" width="0.2" height="15.0" fill="rgb(211,181,18)" rx="2" ry="2" />
<text  x="798.67" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (50,505,050 samples, 0.01%)</title><rect x="169.8" y="741" width="0.1" height="15.0" fill="rgb(215,67,38)" rx="2" ry="2" />
<text  x="172.82" y="751.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Iterator::key (161,616,160 samples, 0.03%)</title><rect x="667.5" y="581" width="0.4" height="15.0" fill="rgb(241,199,47)" rx="2" ry="2" />
<text  x="670.54" y="591.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, false&gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="790.8" y="469" width="0.2" height="15.0" fill="rgb(238,76,53)" rx="2" ry="2" />
<text  x="793.85" y="479.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::SuperVersion*, 8ul&gt;::autovector (90,909,090 samples, 0.02%)</title><rect x="30.5" y="869" width="0.2" height="15.0" fill="rgb(211,62,0)" rx="2" ry="2" />
<text  x="33.55" y="879.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (626,262,620 samples, 0.12%)</title><rect x="778.0" y="501" width="1.4" height="15.0" fill="rgb(242,50,29)" rx="2" ry="2" />
<text  x="781.01" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (414,141,410 samples, 0.08%)</title><rect x="843.4" y="581" width="0.9" height="15.0" fill="rgb(218,4,3)" rx="2" ry="2" />
<text  x="846.39" y="591.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status (2,141,414,120 samples, 0.40%)</title><rect x="853.4" y="581" width="4.6" height="15.0" fill="rgb(243,220,50)" rx="2" ry="2" />
<text  x="856.37" y="591.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (60,606,060 samples, 0.01%)</title><rect x="783.3" y="485" width="0.1" height="15.0" fill="rgb(219,164,52)" rx="2" ry="2" />
<text  x="786.27" y="495.5" ></text>
</g>
<g >
<title>rocksdb::FlushBlockBySizePolicy::BlockAlmostFull (1,454,545,440 samples, 0.27%)</title><rect x="1023.0" y="613" width="3.2" height="15.0" fill="rgb(219,101,8)" rx="2" ry="2" />
<text  x="1026.05" y="623.5" ></text>
</g>
<g >
<title>rocksdb::MergeOutputIterator::Valid (2,121,212,100 samples, 0.39%)</title><rect x="951.8" y="661" width="4.6" height="15.0" fill="rgb(219,200,52)" rx="2" ry="2" />
<text  x="954.76" y="671.5" ></text>
</g>
<g >
<title>std::operator&amp; (90,909,090 samples, 0.02%)</title><rect x="1165.6" y="613" width="0.2" height="15.0" fill="rgb(236,6,30)" rx="2" ry="2" />
<text  x="1168.64" y="623.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::MemTableInserter::MemTableInserter (202,020,200 samples, 0.04%)</title><rect x="59.5" y="885" width="0.4" height="15.0" fill="rgb(215,225,3)" rx="2" ry="2" />
<text  x="62.48" y="895.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::Crc32AppendZeroes (373,737,370 samples, 0.07%)</title><rect x="49.4" y="821" width="0.8" height="15.0" fill="rgb(249,26,41)" rx="2" ry="2" />
<text  x="52.42" y="831.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (282,828,280 samples, 0.05%)</title><rect x="1095.1" y="581" width="0.7" height="15.0" fill="rgb(243,202,4)" rx="2" ry="2" />
<text  x="1098.15" y="591.5" ></text>
</g>
<g >
<title>rocksdb::PosixWritableFile::Append (555,555,550 samples, 0.10%)</title><rect x="993.6" y="517" width="1.2" height="15.0" fill="rgb(220,67,29)" rx="2" ry="2" />
<text  x="996.60" y="527.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::CurrentSizeEstimate (282,828,280 samples, 0.05%)</title><rect x="1016.3" y="629" width="0.6" height="15.0" fill="rgb(209,6,51)" rx="2" ry="2" />
<text  x="1019.33" y="639.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*&gt;::store (70,707,070 samples, 0.01%)</title><rect x="161.1" y="757" width="0.1" height="15.0" fill="rgb(248,228,17)" rx="2" ry="2" />
<text  x="164.07" y="767.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_head (90,909,090 samples, 0.02%)</title><rect x="933.3" y="565" width="0.2" height="15.0" fill="rgb(214,103,16)" rx="2" ry="2" />
<text  x="936.31" y="575.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (1,666,666,650 samples, 0.31%)</title><rect x="793.4" y="533" width="3.7" height="15.0" fill="rgb(220,46,43)" rx="2" ry="2" />
<text  x="796.44" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::ConcurrentArena::Shard*, std::default_delete&lt;rocksdb::ConcurrentArena::Shard []&gt; &gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="79.1" y="645" width="0.1" height="15.0" fill="rgb(245,120,17)" rx="2" ry="2" />
<text  x="82.11" y="655.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (222,222,220 samples, 0.04%)</title><rect x="1077.1" y="629" width="0.5" height="15.0" fill="rgb(235,151,52)" rx="2" ry="2" />
<text  x="1080.11" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (272,727,270 samples, 0.05%)</title><rect x="861.5" y="517" width="0.6" height="15.0" fill="rgb(232,172,36)" rx="2" ry="2" />
<text  x="864.52" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (252,525,250 samples, 0.05%)</title><rect x="865.1" y="581" width="0.6" height="15.0" fill="rgb(251,90,54)" rx="2" ry="2" />
<text  x="868.15" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (141,414,140 samples, 0.03%)</title><rect x="795.6" y="453" width="0.3" height="15.0" fill="rgb(247,203,27)" rx="2" ry="2" />
<text  x="798.58" y="463.5" ></text>
</g>
<g >
<title>rocksdb::ThreadPoolImpl::Impl::BGThread (13,898,989,760 samples, 2.57%)</title><rect x="661.1" y="901" width="30.3" height="15.0" fill="rgb(234,145,35)" rx="2" ry="2" />
<text  x="664.13" y="911.5" >ro..</text>
</g>
<g >
<title>vfs_read (444,444,440 samples, 0.08%)</title><rect x="808.0" y="373" width="0.9" height="15.0" fill="rgb(238,26,33)" rx="2" ry="2" />
<text  x="810.98" y="383.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (50,505,050 samples, 0.01%)</title><rect x="41.8" y="517" width="0.1" height="15.0" fill="rgb(237,43,30)" rx="2" ry="2" />
<text  x="44.76" y="527.5" ></text>
</g>
<g >
<title>perf_event_mmap (70,707,070 samples, 0.01%)</title><rect x="10.4" y="901" width="0.2" height="15.0" fill="rgb(211,112,10)" rx="2" ry="2" />
<text  x="13.44" y="911.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;rocksdb::Status  (171,717,170 samples, 0.03%)</title><rect x="1140.3" y="629" width="0.3" height="15.0" fill="rgb(246,156,42)" rx="2" ry="2" />
<text  x="1143.25" y="639.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::KeyCommitted (50,505,050 samples, 0.01%)</title><rect x="869.3" y="661" width="0.1" height="15.0" fill="rgb(216,81,26)" rx="2" ry="2" />
<text  x="872.29" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::get (808,080,800 samples, 0.15%)</title><rect x="932.9" y="613" width="1.8" height="15.0" fill="rgb(240,210,38)" rx="2" ry="2" />
<text  x="935.91" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (282,828,280 samples, 0.05%)</title><rect x="176.5" y="821" width="0.6" height="15.0" fill="rgb(241,73,14)" rx="2" ry="2" />
<text  x="179.49" y="831.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;rocksdb::MemTable* const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,202,020,190 samples, 0.22%)</title><rect x="70.0" y="773" width="2.6" height="15.0" fill="rgb(241,132,31)" rx="2" ry="2" />
<text  x="72.97" y="783.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (212,121,210 samples, 0.04%)</title><rect x="798.8" y="469" width="0.4" height="15.0" fill="rgb(237,87,50)" rx="2" ry="2" />
<text  x="801.77" y="479.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (141,414,140 samples, 0.03%)</title><rect x="735.4" y="565" width="0.3" height="15.0" fill="rgb(223,63,47)" rx="2" ry="2" />
<text  x="738.39" y="575.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (101,010,100 samples, 0.02%)</title><rect x="753.6" y="549" width="0.2" height="15.0" fill="rgb(232,91,18)" rx="2" ry="2" />
<text  x="756.56" y="559.5" ></text>
</g>
<g >
<title>clear_page_orig (90,909,090 samples, 0.02%)</title><rect x="689.7" y="309" width="0.2" height="15.0" fill="rgb(218,163,18)" rx="2" ry="2" />
<text  x="692.67" y="319.5" ></text>
</g>
<g >
<title>do_futex (70,707,070 samples, 0.01%)</title><rect x="660.4" y="949" width="0.2" height="15.0" fill="rgb(208,107,21)" rx="2" ry="2" />
<text  x="663.41" y="959.5" ></text>
</g>
<g >
<title>std::move&lt;rocksdb::Status::Code&amp;&gt; (60,606,060 samples, 0.01%)</title><rect x="1123.3" y="629" width="0.1" height="15.0" fill="rgb(244,197,48)" rx="2" ry="2" />
<text  x="1126.29" y="639.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (151,515,150 samples, 0.03%)</title><rect x="787.9" y="453" width="0.3" height="15.0" fill="rgb(223,104,13)" rx="2" ry="2" />
<text  x="790.87" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="780.9" y="405" width="0.2" height="15.0" fill="rgb(215,183,20)" rx="2" ry="2" />
<text  x="783.94" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::_M_ptr (797,979,790 samples, 0.15%)</title><rect x="1048.7" y="581" width="1.7" height="15.0" fill="rgb(238,125,19)" rx="2" ry="2" />
<text  x="1051.66" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::FlushBlockPolicy*, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt;::_M_head (171,717,170 samples, 0.03%)</title><rect x="1052.8" y="565" width="0.4" height="15.0" fill="rgb(250,73,36)" rx="2" ry="2" />
<text  x="1055.84" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (111,111,110 samples, 0.02%)</title><rect x="787.2" y="405" width="0.3" height="15.0" fill="rgb(238,23,4)" rx="2" ry="2" />
<text  x="790.21" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="836.7" y="437" width="0.2" height="15.0" fill="rgb(207,103,28)" rx="2" ry="2" />
<text  x="839.70" y="447.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::UpdateKey (373,737,370 samples, 0.07%)</title><rect x="770.5" y="517" width="0.8" height="15.0" fill="rgb(237,107,9)" rx="2" ry="2" />
<text  x="773.47" y="527.5" ></text>
</g>
<g >
<title>rocksdb::BlockPrefetcher::PrefetchIfNeeded (50,505,050 samples, 0.01%)</title><rect x="768.4" y="485" width="0.1" height="15.0" fill="rgb(213,157,31)" rx="2" ry="2" />
<text  x="771.36" y="495.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::MemTableInserter::~MemTableInserter (979,797,970 samples, 0.18%)</title><rect x="62.4" y="885" width="2.1" height="15.0" fill="rgb(224,96,4)" rx="2" ry="2" />
<text  x="65.39" y="895.5" ></text>
</g>
<g >
<title>rocksdb::GetLengthPrefixedSlice (9,101,010,010 samples, 1.68%)</title><rect x="669.1" y="565" width="19.8" height="15.0" fill="rgb(222,60,48)" rx="2" ry="2" />
<text  x="672.06" y="575.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;@plt (70,707,070 samples, 0.01%)</title><rect x="312.1" y="821" width="0.2" height="15.0" fill="rgb(227,137,12)" rx="2" ry="2" />
<text  x="315.15" y="831.5" ></text>
</g>
<g >
<title>__sched_yield (7,020,201,950 samples, 1.30%)</title><rect x="201.2" y="853" width="15.3" height="15.0" fill="rgb(241,147,32)" rx="2" ry="2" />
<text  x="204.18" y="863.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (101,010,100 samples, 0.02%)</title><rect x="798.5" y="437" width="0.2" height="15.0" fill="rgb(227,61,25)" rx="2" ry="2" />
<text  x="801.51" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (888,888,880 samples, 0.16%)</title><rect x="835.0" y="517" width="1.9" height="15.0" fill="rgb(230,195,29)" rx="2" ry="2" />
<text  x="837.96" y="527.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (50,505,050 samples, 0.01%)</title><rect x="838.3" y="581" width="0.2" height="15.0" fill="rgb(225,225,21)" rx="2" ry="2" />
<text  x="841.35" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (70,707,070 samples, 0.01%)</title><rect x="1178.5" y="613" width="0.2" height="15.0" fill="rgb(221,21,50)" rx="2" ry="2" />
<text  x="1181.55" y="623.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (222,222,220 samples, 0.04%)</title><rect x="800.1" y="469" width="0.5" height="15.0" fill="rgb(210,171,24)" rx="2" ry="2" />
<text  x="803.07" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (151,515,150 samples, 0.03%)</title><rect x="168.5" y="805" width="0.3" height="15.0" fill="rgb(226,71,6)" rx="2" ry="2" />
<text  x="171.47" y="815.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="800.8" y="485" width="0.1" height="15.0" fill="rgb(245,219,50)" rx="2" ry="2" />
<text  x="803.78" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_ptr (101,010,100 samples, 0.02%)</title><rect x="852.7" y="517" width="0.2" height="15.0" fill="rgb(245,189,8)" rx="2" ry="2" />
<text  x="855.73" y="527.5" ></text>
</g>
<g >
<title>std::chrono::operator&gt;=&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt;@plt (171,717,170 samples, 0.03%)</title><rect x="537.3" y="885" width="0.4" height="15.0" fill="rgb(245,69,10)" rx="2" ry="2" />
<text  x="540.35" y="895.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (80,808,080 samples, 0.01%)</title><rect x="175.7" y="837" width="0.2" height="15.0" fill="rgb(226,65,10)" rx="2" ry="2" />
<text  x="178.67" y="847.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;rocksdb::IOTracer,  (50,505,050 samples, 0.01%)</title><rect x="45.8" y="805" width="0.1" height="15.0" fill="rgb(235,17,30)" rx="2" ry="2" />
<text  x="48.79" y="815.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::KeyCommitted (80,808,080 samples, 0.01%)</title><rect x="883.2" y="645" width="0.2" height="15.0" fill="rgb(213,136,20)" rx="2" ry="2" />
<text  x="886.23" y="655.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (666,666,660 samples, 0.12%)</title><rect x="721.2" y="517" width="1.5" height="15.0" fill="rgb(236,89,40)" rx="2" ry="2" />
<text  x="724.21" y="527.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (70,707,070 samples, 0.01%)</title><rect x="717.5" y="549" width="0.2" height="15.0" fill="rgb(229,2,42)" rx="2" ry="2" />
<text  x="720.53" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SstPartitioner, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::operator bool (575,757,570 samples, 0.11%)</title><rect x="1151.7" y="645" width="1.3" height="15.0" fill="rgb(238,131,50)" rx="2" ry="2" />
<text  x="1154.75" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (232,323,230 samples, 0.04%)</title><rect x="842.3" y="597" width="0.5" height="15.0" fill="rgb(245,67,45)" rx="2" ry="2" />
<text  x="845.31" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (60,606,060 samples, 0.01%)</title><rect x="746.4" y="533" width="0.1" height="15.0" fill="rgb(215,44,0)" rx="2" ry="2" />
<text  x="749.36" y="543.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (90,909,090 samples, 0.02%)</title><rect x="846.6" y="437" width="0.2" height="15.0" fill="rgb(205,179,28)" rx="2" ry="2" />
<text  x="849.56" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (363,636,360 samples, 0.07%)</title><rect x="586.1" y="901" width="0.8" height="15.0" fill="rgb(245,194,6)" rx="2" ry="2" />
<text  x="589.13" y="911.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="855.5" y="453" width="0.3" height="15.0" fill="rgb(251,213,10)" rx="2" ry="2" />
<text  x="858.52" y="463.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt;@plt (70,707,070 samples, 0.01%)</title><rect x="321.0" y="869" width="0.1" height="15.0" fill="rgb(240,5,1)" rx="2" ry="2" />
<text  x="323.96" y="879.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (888,888,880 samples, 0.16%)</title><rect x="785.6" y="517" width="1.9" height="15.0" fill="rgb(211,162,29)" rx="2" ry="2" />
<text  x="788.58" y="527.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (223,323,230,090 samples, 41.26%)</title><rect x="691.8" y="789" width="486.9" height="15.0" fill="rgb(217,21,5)" rx="2" ry="2" />
<text  x="694.81" y="799.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>rocksdb::Block::~Block (111,111,110 samples, 0.02%)</title><rect x="813.0" y="437" width="0.3" height="15.0" fill="rgb(251,189,4)" rx="2" ry="2" />
<text  x="816.04" y="447.5" ></text>
</g>
<g >
<title>std::operator| (50,505,050 samples, 0.01%)</title><rect x="88.2" y="725" width="0.1" height="15.0" fill="rgb(218,6,15)" rx="2" ry="2" />
<text  x="91.22" y="735.5" ></text>
</g>
<g >
<title>new_sync_write (454,545,450 samples, 0.08%)</title><rect x="689.6" y="485" width="1.0" height="15.0" fill="rgb(226,77,51)" rx="2" ry="2" />
<text  x="692.56" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (131,313,130 samples, 0.02%)</title><rect x="585.2" y="885" width="0.3" height="15.0" fill="rgb(227,170,21)" rx="2" ry="2" />
<text  x="588.25" y="895.5" ></text>
</g>
<g >
<title>rocksdb::MergeOutputIterator::Valid (272,727,270 samples, 0.05%)</title><rect x="967.2" y="677" width="0.6" height="15.0" fill="rgb(243,159,50)" rx="2" ry="2" />
<text  x="970.18" y="687.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::ShouldStopBefore (8,909,090,820 samples, 1.65%)</title><rect x="1063.5" y="645" width="19.4" height="15.0" fill="rgb(250,77,31)" rx="2" ry="2" />
<text  x="1066.50" y="655.5" ></text>
</g>
<g >
<title>__tls_get_addr (111,111,110 samples, 0.02%)</title><rect x="156.6" y="693" width="0.2" height="15.0" fill="rgb(218,27,43)" rx="2" ry="2" />
<text  x="159.56" y="703.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::CompactionIterator*, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="1169.6" y="629" width="0.4" height="15.0" fill="rgb(209,190,54)" rx="2" ry="2" />
<text  x="1172.61" y="639.5" ></text>
</g>
<g >
<title>rocksdb::DecodeFixed64 (121,212,120 samples, 0.02%)</title><rect x="1019.4" y="597" width="0.3" height="15.0" fill="rgb(241,96,44)" rx="2" ry="2" />
<text  x="1022.39" y="607.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (131,313,130 samples, 0.02%)</title><rect x="196.0" y="853" width="0.3" height="15.0" fill="rgb(247,175,33)" rx="2" ry="2" />
<text  x="198.98" y="863.5" ></text>
</g>
<g >
<title>rocksdb::Configurable::ConfigureFromMap (50,505,050 samples, 0.01%)</title><rect x="661.6" y="485" width="0.1" height="15.0" fill="rgb(245,69,30)" rx="2" ry="2" />
<text  x="664.57" y="495.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (141,414,140 samples, 0.03%)</title><rect x="1027.6" y="597" width="0.3" height="15.0" fill="rgb(235,153,34)" rx="2" ry="2" />
<text  x="1030.56" y="607.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek (60,606,060 samples, 0.01%)</title><rect x="68.3" y="805" width="0.1" height="15.0" fill="rgb(224,87,22)" rx="2" ry="2" />
<text  x="71.27" y="815.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::ParseNextDataKey (90,909,090 samples, 0.02%)</title><rect x="821.1" y="549" width="0.2" height="15.0" fill="rgb(251,28,42)" rx="2" ry="2" />
<text  x="824.06" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (1,101,010,090 samples, 0.20%)</title><rect x="779.8" y="517" width="2.4" height="15.0" fill="rgb(205,20,37)" rx="2" ry="2" />
<text  x="782.77" y="527.5" ></text>
</g>
<g >
<title>do_syscall_64 (272,727,270 samples, 0.05%)</title><rect x="690.8" y="613" width="0.6" height="15.0" fill="rgb(209,182,33)" rx="2" ry="2" />
<text  x="693.84" y="623.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::ParseNextDataKey (2,141,414,120 samples, 0.40%)</title><rect x="816.4" y="533" width="4.7" height="15.0" fill="rgb(216,201,38)" rx="2" ry="2" />
<text  x="819.39" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::get (818,181,810 samples, 0.15%)</title><rect x="1039.9" y="597" width="1.8" height="15.0" fill="rgb(221,204,40)" rx="2" ry="2" />
<text  x="1042.90" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (191,919,190 samples, 0.04%)</title><rect x="118.5" y="677" width="0.4" height="15.0" fill="rgb(218,48,50)" rx="2" ry="2" />
<text  x="121.46" y="687.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::Writer::~Writer (171,717,170 samples, 0.03%)</title><rect x="543.3" y="901" width="0.4" height="15.0" fill="rgb(234,93,21)" rx="2" ry="2" />
<text  x="546.29" y="911.5" ></text>
</g>
<g >
<title>__alloc_pages (101,010,100 samples, 0.02%)</title><rect x="994.0" y="261" width="0.2" height="15.0" fill="rgb(248,56,7)" rx="2" ry="2" />
<text  x="997.02" y="271.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (1,030,303,020 samples, 0.19%)</title><rect x="1186.2" y="1013" width="2.2" height="15.0" fill="rgb(223,198,7)" rx="2" ry="2" />
<text  x="1189.17" y="1023.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::operator[] (282,828,280 samples, 0.05%)</title><rect x="747.8" y="549" width="0.7" height="15.0" fill="rgb(248,191,23)" rx="2" ry="2" />
<text  x="750.84" y="559.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="855.7" y="421" width="0.1" height="15.0" fill="rgb(226,29,20)" rx="2" ry="2" />
<text  x="858.66" y="431.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (90,909,090 samples, 0.02%)</title><rect x="689.7" y="373" width="0.2" height="15.0" fill="rgb(230,206,9)" rx="2" ry="2" />
<text  x="692.67" y="383.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::operator[] (1,535,353,520 samples, 0.28%)</title><rect x="726.3" y="581" width="3.3" height="15.0" fill="rgb(218,224,17)" rx="2" ry="2" />
<text  x="729.30" y="591.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="865.4" y="549" width="0.3" height="15.0" fill="rgb(247,207,48)" rx="2" ry="2" />
<text  x="868.41" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::FlushBlockPolicy*, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt; (585,858,580 samples, 0.11%)</title><rect x="1052.8" y="581" width="1.2" height="15.0" fill="rgb(228,219,8)" rx="2" ry="2" />
<text  x="1055.76" y="591.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::key (171,717,170 samples, 0.03%)</title><rect x="919.9" y="597" width="0.3" height="15.0" fill="rgb(236,59,32)" rx="2" ry="2" />
<text  x="922.85" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt;::__normal_iterator (242,424,240 samples, 0.04%)</title><rect x="1032.2" y="613" width="0.5" height="15.0" fill="rgb(230,37,40)" rx="2" ry="2" />
<text  x="1035.21" y="623.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (383,838,380 samples, 0.07%)</title><rect x="326.5" y="837" width="0.8" height="15.0" fill="rgb(220,110,10)" rx="2" ry="2" />
<text  x="329.46" y="847.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="825.9" y="453" width="0.2" height="15.0" fill="rgb(249,7,44)" rx="2" ry="2" />
<text  x="828.93" y="463.5" ></text>
</g>
<g >
<title>std::forward&lt;rocksdb::Slice const&amp;&gt; (70,707,070 samples, 0.01%)</title><rect x="1078.2" y="613" width="0.2" height="15.0" fill="rgb(239,85,7)" rx="2" ry="2" />
<text  x="1081.21" y="623.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::NoBarrier_SetNext (131,313,130 samples, 0.02%)</title><rect x="88.4" y="757" width="0.3" height="15.0" fill="rgb(249,9,40)" rx="2" ry="2" />
<text  x="91.42" y="767.5" ></text>
</g>
<g >
<title>futex_wake (60,606,060 samples, 0.01%)</title><rect x="660.4" y="933" width="0.2" height="15.0" fill="rgb(244,153,37)" rx="2" ry="2" />
<text  x="663.43" y="943.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (101,010,100 samples, 0.02%)</title><rect x="792.1" y="533" width="0.2" height="15.0" fill="rgb(215,221,41)" rx="2" ry="2" />
<text  x="795.10" y="543.5" ></text>
</g>
<g >
<title>do_sched_yield (48,747,474,260 samples, 9.01%)</title><rect x="393.4" y="789" width="106.3" height="15.0" fill="rgb(232,116,50)" rx="2" ry="2" />
<text  x="396.39" y="799.5" >do_sched_yield</text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (383,838,380 samples, 0.07%)</title><rect x="741.1" y="565" width="0.8" height="15.0" fill="rgb(243,6,47)" rx="2" ry="2" />
<text  x="744.05" y="575.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (70,707,070 samples, 0.01%)</title><rect x="894.7" y="629" width="0.1" height="15.0" fill="rgb(230,31,44)" rx="2" ry="2" />
<text  x="897.66" y="639.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt; const, rocksdb::CompactionMergingIterator::HeapItem* const&gt;::operator* (787,878,780 samples, 0.15%)</title><rect x="747.4" y="565" width="1.8" height="15.0" fill="rgb(209,122,44)" rx="2" ry="2" />
<text  x="750.44" y="575.5" ></text>
</g>
<g >
<title>std::random_device::_M_init (70,707,070 samples, 0.01%)</title><rect x="637.9" y="981" width="0.1" height="15.0" fill="rgb(239,156,5)" rx="2" ry="2" />
<text  x="640.88" y="991.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (151,515,150 samples, 0.03%)</title><rect x="46.8" y="805" width="0.3" height="15.0" fill="rgb(252,115,33)" rx="2" ry="2" />
<text  x="49.78" y="815.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (50,505,050 samples, 0.01%)</title><rect x="168.6" y="725" width="0.2" height="15.0" fill="rgb(253,217,16)" rx="2" ry="2" />
<text  x="171.65" y="735.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_context (717,171,710 samples, 0.13%)</title><rect x="719.0" y="533" width="1.6" height="15.0" fill="rgb(249,170,40)" rx="2" ry="2" />
<text  x="721.99" y="543.5" ></text>
</g>
<g >
<title>rocksdb::UserComparatorWrapper::Compare@plt (111,111,110 samples, 0.02%)</title><rect x="136.8" y="693" width="0.2" height="15.0" fill="rgb(216,53,27)" rx="2" ry="2" />
<text  x="139.78" y="703.5" ></text>
</g>
<g >
<title>generic_write_end (151,515,150 samples, 0.03%)</title><rect x="994.3" y="325" width="0.3" height="15.0" fill="rgb(229,68,10)" rx="2" ry="2" />
<text  x="997.29" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (242,424,240 samples, 0.04%)</title><rect x="763.8" y="357" width="0.5" height="15.0" fill="rgb(252,204,36)" rx="2" ry="2" />
<text  x="766.78" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (505,050,500 samples, 0.09%)</title><rect x="782.3" y="501" width="1.1" height="15.0" fill="rgb(251,87,47)" rx="2" ry="2" />
<text  x="785.30" y="511.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Bind&lt;void  (13,898,989,760 samples, 2.57%)</title><rect x="661.1" y="837" width="30.3" height="15.0" fill="rgb(215,218,31)" rx="2" ry="2" />
<text  x="664.13" y="847.5" >st..</text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (202,020,200 samples, 0.04%)</title><rect x="851.6" y="469" width="0.4" height="15.0" fill="rgb(225,61,8)" rx="2" ry="2" />
<text  x="854.61" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (242,424,240 samples, 0.04%)</title><rect x="176.5" y="805" width="0.5" height="15.0" fill="rgb(245,100,13)" rx="2" ry="2" />
<text  x="179.49" y="815.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (80,808,080 samples, 0.01%)</title><rect x="567.0" y="885" width="0.2" height="15.0" fill="rgb(232,20,8)" rx="2" ry="2" />
<text  x="570.01" y="895.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (262,626,260 samples, 0.05%)</title><rect x="837.3" y="501" width="0.6" height="15.0" fill="rgb(249,155,42)" rx="2" ry="2" />
<text  x="840.29" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (757,575,750 samples, 0.14%)</title><rect x="846.3" y="517" width="1.6" height="15.0" fill="rgb(248,213,23)" rx="2" ry="2" />
<text  x="849.30" y="527.5" ></text>
</g>
<g >
<title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (161,616,160 samples, 0.03%)</title><rect x="1101.6" y="613" width="0.3" height="15.0" fill="rgb(240,28,38)" rx="2" ry="2" />
<text  x="1104.58" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_base::_Hash_node_base (70,707,070 samples, 0.01%)</title><rect x="46.4" y="773" width="0.2" height="15.0" fill="rgb(244,197,42)" rx="2" ry="2" />
<text  x="49.45" y="783.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, false&gt;::_M_head (90,909,090 samples, 0.02%)</title><rect x="841.1" y="501" width="0.2" height="15.0" fill="rgb(215,19,44)" rx="2" ry="2" />
<text  x="844.14" y="511.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::ReadAndParseBlockFromFile&lt;rocksdb::Block_kData&gt; (2,232,323,210 samples, 0.41%)</title><rect x="761.5" y="453" width="4.8" height="15.0" fill="rgb(207,229,27)" rx="2" ry="2" />
<text  x="764.47" y="463.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::NextAndGetResult (262,626,260 samples, 0.05%)</title><rect x="739.4" y="613" width="0.6" height="15.0" fill="rgb(234,191,33)" rx="2" ry="2" />
<text  x="742.45" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (131,313,130 samples, 0.02%)</title><rect x="182.4" y="885" width="0.3" height="15.0" fill="rgb(218,132,1)" rx="2" ry="2" />
<text  x="185.37" y="895.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="781.5" y="421" width="0.3" height="15.0" fill="rgb(236,155,8)" rx="2" ry="2" />
<text  x="784.53" y="431.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::IsKeyPinned (90,909,090 samples, 0.02%)</title><rect x="820.4" y="485" width="0.2" height="15.0" fill="rgb(254,163,7)" rx="2" ry="2" />
<text  x="823.38" y="495.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (131,313,130 samples, 0.02%)</title><rect x="930.8" y="613" width="0.3" height="15.0" fill="rgb(213,42,20)" rx="2" ry="2" />
<text  x="933.82" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (434,343,430 samples, 0.08%)</title><rect x="975.9" y="677" width="1.0" height="15.0" fill="rgb(238,82,20)" rx="2" ry="2" />
<text  x="978.92" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;::_Rb_tree_iterator (151,515,150 samples, 0.03%)</title><rect x="904.8" y="565" width="0.3" height="15.0" fill="rgb(235,110,2)" rx="2" ry="2" />
<text  x="907.77" y="575.5" ></text>
</g>
<g >
<title>memcmp@plt (80,808,080 samples, 0.01%)</title><rect x="131.5" y="645" width="0.1" height="15.0" fill="rgb(205,227,4)" rx="2" ry="2" />
<text  x="134.45" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (212,121,210 samples, 0.04%)</title><rect x="785.8" y="469" width="0.5" height="15.0" fill="rgb(243,7,3)" rx="2" ry="2" />
<text  x="788.80" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::BlobGarbageMeter, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;::_M_ptr (171,717,170 samples, 0.03%)</title><rect x="1147.5" y="629" width="0.4" height="15.0" fill="rgb(225,13,53)" rx="2" ry="2" />
<text  x="1150.54" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (141,414,140 samples, 0.03%)</title><rect x="783.5" y="501" width="0.3" height="15.0" fill="rgb(216,224,17)" rx="2" ry="2" />
<text  x="786.47" y="511.5" ></text>
</g>
<g >
<title>filemap_fdatawrite_wbc (131,313,130 samples, 0.02%)</title><rect x="1140.3" y="405" width="0.3" height="15.0" fill="rgb(209,52,49)" rx="2" ry="2" />
<text  x="1143.32" y="415.5" ></text>
</g>
<g >
<title>__getblk_gfp (50,505,050 samples, 0.01%)</title><rect x="42.6" y="517" width="0.1" height="15.0" fill="rgb(218,156,12)" rx="2" ry="2" />
<text  x="45.64" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (181,818,180 samples, 0.03%)</title><rect x="573.2" y="917" width="0.4" height="15.0" fill="rgb(242,48,38)" rx="2" ry="2" />
<text  x="576.20" y="927.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid (141,414,140 samples, 0.03%)</title><rect x="966.1" y="677" width="0.3" height="15.0" fill="rgb(233,48,34)" rx="2" ry="2" />
<text  x="969.08" y="687.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_addr (60,606,060 samples, 0.01%)</title><rect x="585.4" y="869" width="0.1" height="15.0" fill="rgb(231,81,50)" rx="2" ry="2" />
<text  x="588.40" y="879.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (565,656,560 samples, 0.10%)</title><rect x="1118.2" y="645" width="1.3" height="15.0" fill="rgb(245,118,45)" rx="2" ry="2" />
<text  x="1121.23" y="655.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt;@plt (161,616,160 samples, 0.03%)</title><rect x="1141.3" y="645" width="0.4" height="15.0" fill="rgb(240,138,46)" rx="2" ry="2" />
<text  x="1144.33" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (80,808,080 samples, 0.01%)</title><rect x="174.5" y="837" width="0.2" height="15.0" fill="rgb(233,177,50)" rx="2" ry="2" />
<text  x="177.53" y="847.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (121,212,120 samples, 0.02%)</title><rect x="1131.4" y="501" width="0.2" height="15.0" fill="rgb(244,68,0)" rx="2" ry="2" />
<text  x="1134.35" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FSWritableFileTracingWrapper, std::default_delete&lt;rocksdb::FSWritableFileTracingWrapper&gt; &gt;::operator (60,606,060 samples, 0.01%)</title><rect x="992.4" y="533" width="0.2" height="15.0" fill="rgb(220,9,7)" rx="2" ry="2" />
<text  x="995.44" y="543.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::get_offset (353,535,350 samples, 0.07%)</title><rect x="998.4" y="629" width="0.8" height="15.0" fill="rgb(219,153,44)" rx="2" ry="2" />
<text  x="1001.38" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (101,010,100 samples, 0.02%)</title><rect x="56.7" y="885" width="0.3" height="15.0" fill="rgb(206,109,24)" rx="2" ry="2" />
<text  x="59.73" y="895.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::FindBlockForward (5,444,444,390 samples, 1.01%)</title><rect x="803.3" y="549" width="11.9" height="15.0" fill="rgb(228,62,15)" rx="2" ry="2" />
<text  x="806.29" y="559.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::MemTableInserter::PostProcess (1,131,313,120 samples, 0.21%)</title><rect x="59.9" y="885" width="2.5" height="15.0" fill="rgb(251,159,53)" rx="2" ry="2" />
<text  x="62.92" y="895.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (181,818,180 samples, 0.03%)</title><rect x="784.2" y="533" width="0.3" height="15.0" fill="rgb(212,92,3)" rx="2" ry="2" />
<text  x="787.15" y="543.5" ></text>
</g>
<g >
<title>std::optional&lt;rocksdb::Slice&gt;::has_value@plt (50,505,050 samples, 0.01%)</title><rect x="1177.3" y="693" width="0.1" height="15.0" fill="rgb(238,7,23)" rx="2" ry="2" />
<text  x="1180.32" y="703.5" ></text>
</g>
<g >
<title>ROCKSDB_XXH3_64bits (262,626,260 samples, 0.05%)</title><rect x="806.3" y="405" width="0.5" height="15.0" fill="rgb(234,35,36)" rx="2" ry="2" />
<text  x="809.26" y="415.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="789.2" y="485" width="0.3" height="15.0" fill="rgb(220,83,53)" rx="2" ry="2" />
<text  x="792.24" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FileChecksumGenerator, std::default_delete&lt;rocksdb::FileChecksumGenerator&gt; &gt;::operator bool (90,909,090 samples, 0.02%)</title><rect x="47.8" y="789" width="0.2" height="15.0" fill="rgb(239,140,37)" rx="2" ry="2" />
<text  x="50.79" y="799.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (50,505,050 samples, 0.01%)</title><rect x="831.8" y="469" width="0.1" height="15.0" fill="rgb(244,201,22)" rx="2" ry="2" />
<text  x="834.83" y="479.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (80,808,080 samples, 0.01%)</title><rect x="1180.0" y="997" width="0.2" height="15.0" fill="rgb(213,228,24)" rx="2" ry="2" />
<text  x="1182.98" y="1007.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (252,525,250 samples, 0.05%)</title><rect x="860.7" y="485" width="0.6" height="15.0" fill="rgb(229,47,41)" rx="2" ry="2" />
<text  x="863.74" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;rocksdb::Status, unsigned int, unsigned long&gt;::~tuple (80,808,080 samples, 0.01%)</title><rect x="562.7" y="917" width="0.1" height="15.0" fill="rgb(251,201,1)" rx="2" ry="2" />
<text  x="565.67" y="927.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="778.7" y="453" width="0.3" height="15.0" fill="rgb(219,167,36)" rx="2" ry="2" />
<text  x="781.71" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (50,505,050 samples, 0.01%)</title><rect x="176.7" y="773" width="0.1" height="15.0" fill="rgb(244,164,0)" rx="2" ry="2" />
<text  x="179.69" y="783.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::Append (1,797,979,780 samples, 0.33%)</title><rect x="45.3" y="837" width="3.9" height="15.0" fill="rgb(253,133,54)" rx="2" ry="2" />
<text  x="48.32" y="847.5" ></text>
</g>
<g >
<title>rocksdb::UserComparatorWrapper::user_comparator (50,505,050 samples, 0.01%)</title><rect x="566.6" y="901" width="0.1" height="15.0" fill="rgb(222,58,5)" rx="2" ry="2" />
<text  x="569.57" y="911.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::emplace_hint&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1,040,404,030 samples, 0.19%)</title><rect x="582.0" y="965" width="2.3" height="15.0" fill="rgb(253,8,39)" rx="2" ry="2" />
<text  x="585.03" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::get (50,505,050 samples, 0.01%)</title><rect x="179.9" y="885" width="0.1" height="15.0" fill="rgb(206,8,13)" rx="2" ry="2" />
<text  x="182.88" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Mod&lt;unsigned long, 624ul, 1ul, 0ul, true, true&gt;::__calc (484,848,480 samples, 0.09%)</title><rect x="605.7" y="949" width="1.1" height="15.0" fill="rgb(238,191,33)" rx="2" ry="2" />
<text  x="608.73" y="959.5" ></text>
</g>
<g >
<title>fdatasync (141,414,140 samples, 0.03%)</title><rect x="1140.3" y="501" width="0.3" height="15.0" fill="rgb(231,150,3)" rx="2" ry="2" />
<text  x="1143.30" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (272,727,270 samples, 0.05%)</title><rect x="763.8" y="389" width="0.6" height="15.0" fill="rgb(211,202,49)" rx="2" ry="2" />
<text  x="766.78" y="399.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Valid (111,111,110 samples, 0.02%)</title><rect x="776.0" y="549" width="0.3" height="15.0" fill="rgb(242,201,28)" rx="2" ry="2" />
<text  x="779.05" y="559.5" ></text>
</g>
<g >
<title>rocksdb::EncodeVarint32 (50,505,050 samples, 0.01%)</title><rect x="556.4" y="869" width="0.1" height="15.0" fill="rgb(220,165,32)" rx="2" ry="2" />
<text  x="559.37" y="879.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::HasBuilder (393,939,390 samples, 0.07%)</title><rect x="1062.6" y="645" width="0.9" height="15.0" fill="rgb(217,209,24)" rx="2" ry="2" />
<text  x="1065.64" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (171,717,170 samples, 0.03%)</title><rect x="1122.6" y="629" width="0.4" height="15.0" fill="rgb(223,202,14)" rx="2" ry="2" />
<text  x="1125.63" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (868,686,860 samples, 0.16%)</title><rect x="113.9" y="661" width="1.9" height="15.0" fill="rgb(230,146,25)" rx="2" ry="2" />
<text  x="116.86" y="671.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::TableBuilder*, false&gt;::_M_head@plt (101,010,100 samples, 0.02%)</title><rect x="1069.5" y="517" width="0.3" height="15.0" fill="rgb(246,44,11)" rx="2" ry="2" />
<text  x="1072.54" y="527.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt; const, rocksdb::CompactionMergingIterator::HeapItem* const&gt;::iterator_impl (90,909,090 samples, 0.02%)</title><rect x="745.6" y="549" width="0.2" height="15.0" fill="rgb(216,21,40)" rx="2" ry="2" />
<text  x="748.59" y="559.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (70,707,070 samples, 0.01%)</title><rect x="1109.5" y="517" width="0.1" height="15.0" fill="rgb(221,8,16)" rx="2" ry="2" />
<text  x="1112.49" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="850.8" y="405" width="0.1" height="15.0" fill="rgb(218,186,21)" rx="2" ry="2" />
<text  x="853.79" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (242,424,240 samples, 0.04%)</title><rect x="135.8" y="693" width="0.5" height="15.0" fill="rgb(248,103,1)" rx="2" ry="2" />
<text  x="138.77" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::ColumnFamilySet, std::default_delete&lt;rocksdb::ColumnFamilySet&gt; &gt;::_M_ptr (60,606,060 samples, 0.01%)</title><rect x="57.8" y="885" width="0.1" height="15.0" fill="rgb(253,169,12)" rx="2" ry="2" />
<text  x="60.81" y="895.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (262,626,260 samples, 0.05%)</title><rect x="915.8" y="597" width="0.6" height="15.0" fill="rgb(253,147,49)" rx="2" ry="2" />
<text  x="918.82" y="607.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::UpdateKey (303,030,300 samples, 0.06%)</title><rect x="815.4" y="549" width="0.7" height="15.0" fill="rgb(236,0,26)" rx="2" ry="2" />
<text  x="818.40" y="559.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::Clear (80,808,080 samples, 0.01%)</title><rect x="775.2" y="517" width="0.2" height="15.0" fill="rgb(232,129,54)" rx="2" ry="2" />
<text  x="778.23" y="527.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (223,323,230,090 samples, 41.26%)</title><rect x="691.8" y="997" width="486.9" height="15.0" fill="rgb(241,113,0)" rx="2" ry="2" />
<text  x="694.81" y="1007.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (303,030,300 samples, 0.06%)</title><rect x="49.6" y="757" width="0.6" height="15.0" fill="rgb(235,77,30)" rx="2" ry="2" />
<text  x="52.57" y="767.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FileChecksumGenerator, std::default_delete&lt;rocksdb::FileChecksumGenerator&gt; &gt;::get (90,909,090 samples, 0.02%)</title><rect x="47.8" y="773" width="0.2" height="15.0" fill="rgb(215,55,23)" rx="2" ry="2" />
<text  x="50.79" y="783.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (90,909,090 samples, 0.02%)</title><rect x="757.1" y="581" width="0.2" height="15.0" fill="rgb(251,93,12)" rx="2" ry="2" />
<text  x="760.09" y="591.5" ></text>
</g>
<g >
<title>_int_free (60,606,060 samples, 0.01%)</title><rect x="1180.2" y="997" width="0.1" height="15.0" fill="rgb(252,125,18)" rx="2" ry="2" />
<text  x="1183.16" y="1007.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1,242,424,230 samples, 0.23%)</title><rect x="296.6" y="837" width="2.7" height="15.0" fill="rgb(225,113,42)" rx="2" ry="2" />
<text  x="299.55" y="847.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (151,515,150 samples, 0.03%)</title><rect x="118.9" y="677" width="0.3" height="15.0" fill="rgb(213,29,21)" rx="2" ry="2" />
<text  x="121.88" y="687.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block_kData&gt; (121,212,120 samples, 0.02%)</title><rect x="810.2" y="469" width="0.2" height="15.0" fill="rgb(214,18,46)" rx="2" ry="2" />
<text  x="813.18" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="790.7" y="485" width="0.1" height="15.0" fill="rgb(228,87,1)" rx="2" ry="2" />
<text  x="793.67" y="495.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="182.4" y="869" width="0.2" height="15.0" fill="rgb(217,34,35)" rx="2" ry="2" />
<text  x="185.41" y="879.5" ></text>
</g>
<g >
<title>std::map&lt;rocksdb::MemTable*, rocksdb::MemTablePostProcessInfo, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::begin (50,505,050 samples, 0.01%)</title><rect x="179.5" y="885" width="0.2" height="15.0" fill="rgb(253,125,34)" rx="2" ry="2" />
<text  x="182.55" y="895.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::AwaitState (70,707,070 samples, 0.01%)</title><rect x="180.2" y="901" width="0.1" height="15.0" fill="rgb(225,99,41)" rx="2" ry="2" />
<text  x="183.19" y="911.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::empty (313,131,310 samples, 0.06%)</title><rect x="703.0" y="613" width="0.7" height="15.0" fill="rgb(253,138,48)" rx="2" ry="2" />
<text  x="705.98" y="623.5" ></text>
</g>
<g >
<title>rocksdb::PinnableSlice::Reset (484,848,480 samples, 0.09%)</title><rect x="896.8" y="645" width="1.1" height="15.0" fill="rgb(227,90,34)" rx="2" ry="2" />
<text  x="899.82" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (171,717,170 samples, 0.03%)</title><rect x="973.0" y="565" width="0.3" height="15.0" fill="rgb(219,38,52)" rx="2" ry="2" />
<text  x="975.97" y="575.5" ></text>
</g>
<g >
<title>XXH3_accumulate_512_avx512 (181,818,180 samples, 0.03%)</title><rect x="806.4" y="309" width="0.4" height="15.0" fill="rgb(205,55,7)" rx="2" ry="2" />
<text  x="809.37" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::operator bool (151,515,150 samples, 0.03%)</title><rect x="1070.2" y="613" width="0.4" height="15.0" fill="rgb(224,16,50)" rx="2" ry="2" />
<text  x="1073.24" y="623.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::duration&lt;unsigned long, void&gt; (212,121,210 samples, 0.04%)</title><rect x="533.3" y="885" width="0.5" height="15.0" fill="rgb(206,135,19)" rx="2" ry="2" />
<text  x="536.34" y="895.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (212,121,210 samples, 0.04%)</title><rect x="781.4" y="453" width="0.4" height="15.0" fill="rgb(216,59,48)" rx="2" ry="2" />
<text  x="784.35" y="463.5" ></text>
</g>
<g >
<title>handle_pte_fault (121,212,120 samples, 0.02%)</title><rect x="664.7" y="501" width="0.3" height="15.0" fill="rgb(221,200,6)" rx="2" ry="2" />
<text  x="667.75" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_ptr (70,707,070 samples, 0.01%)</title><rect x="801.7" y="517" width="0.2" height="15.0" fill="rgb(246,171,31)" rx="2" ry="2" />
<text  x="804.72" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::ConcurrentArena::Shard [], std::default_delete&lt;rocksdb::ConcurrentArena::Shard []&gt; &gt;::operator[] (171,717,170 samples, 0.03%)</title><rect x="78.9" y="709" width="0.4" height="15.0" fill="rgb(237,94,46)" rx="2" ry="2" />
<text  x="81.93" y="719.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;41ul&gt; (50,505,050 samples, 0.01%)</title><rect x="243.3" y="885" width="0.1" height="15.0" fill="rgb(214,63,5)" rx="2" ry="2" />
<text  x="246.30" y="895.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (101,010,100 samples, 0.02%)</title><rect x="781.6" y="405" width="0.2" height="15.0" fill="rgb(228,207,37)" rx="2" ry="2" />
<text  x="784.60" y="415.5" ></text>
</g>
<g >
<title>[remote_flush_test_server] (90,909,090 samples, 0.02%)</title><rect x="123.6" y="661" width="0.2" height="15.0" fill="rgb(218,194,26)" rx="2" ry="2" />
<text  x="126.57" y="671.5" ></text>
</g>
<g >
<title>rocksdb::ShortenedIndexBuilder::OnKeyAdded (292,929,290 samples, 0.05%)</title><rect x="1113.1" y="645" width="0.7" height="15.0" fill="rgb(223,7,19)" rx="2" ry="2" />
<text  x="1116.12" y="655.5" ></text>
</g>
<g >
<title>rocksdb::InternalKey::DecodeFrom (252,525,250 samples, 0.05%)</title><rect x="1093.6" y="629" width="0.6" height="15.0" fill="rgb(237,212,2)" rx="2" ry="2" />
<text  x="1096.63" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (252,525,250 samples, 0.05%)</title><rect x="795.4" y="469" width="0.5" height="15.0" fill="rgb(212,207,20)" rx="2" ry="2" />
<text  x="798.38" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (111,111,110 samples, 0.02%)</title><rect x="851.1" y="453" width="0.2" height="15.0" fill="rgb(251,54,8)" rx="2" ry="2" />
<text  x="854.08" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (90,909,090 samples, 0.02%)</title><rect x="716.6" y="533" width="0.2" height="15.0" fill="rgb(215,125,33)" rx="2" ry="2" />
<text  x="719.56" y="543.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::ColumnFamilySet*, std::default_delete&lt;rocksdb::ColumnFamilySet&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="58.1" y="837" width="0.1" height="15.0" fill="rgb(220,170,22)" rx="2" ry="2" />
<text  x="61.10" y="847.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (363,636,360 samples, 0.07%)</title><rect x="1001.9" y="581" width="0.8" height="15.0" fill="rgb(215,25,2)" rx="2" ry="2" />
<text  x="1004.89" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (101,010,100 samples, 0.02%)</title><rect x="861.9" y="485" width="0.2" height="15.0" fill="rgb(207,82,33)" rx="2" ry="2" />
<text  x="864.87" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (262,626,260 samples, 0.05%)</title><rect x="1112.2" y="629" width="0.6" height="15.0" fill="rgb(208,33,49)" rx="2" ry="2" />
<text  x="1115.20" y="639.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;long&gt;::operator (4,767,676,720 samples, 0.88%)</title><rect x="639.1" y="965" width="10.4" height="15.0" fill="rgb(205,207,44)" rx="2" ry="2" />
<text  x="642.09" y="975.5" ></text>
</g>
<g >
<title>[[vdso]] (676,767,670 samples, 0.13%)</title><rect x="180.7" y="869" width="1.5" height="15.0" fill="rgb(249,108,12)" rx="2" ry="2" />
<text  x="183.74" y="879.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatchInternal::Count (141,414,140 samples, 0.03%)</title><rect x="59.0" y="901" width="0.3" height="15.0" fill="rgb(213,72,50)" rx="2" ry="2" />
<text  x="61.96" y="911.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (50,505,050 samples, 0.01%)</title><rect x="242.9" y="837" width="0.1" height="15.0" fill="rgb(209,143,20)" rx="2" ry="2" />
<text  x="245.89" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (101,010,100 samples, 0.02%)</title><rect x="661.1" y="613" width="0.3" height="15.0" fill="rgb(205,174,6)" rx="2" ry="2" />
<text  x="664.13" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (797,979,790 samples, 0.15%)</title><rect x="116.7" y="661" width="1.8" height="15.0" fill="rgb(214,201,37)" rx="2" ry="2" />
<text  x="119.72" y="671.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::WriteBatch::ProtectionInfo*, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="35.0" y="789" width="0.1" height="15.0" fill="rgb(254,4,25)" rx="2" ry="2" />
<text  x="37.95" y="799.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned char&gt;::__atomic_base (50,505,050 samples, 0.01%)</title><rect x="543.1" y="885" width="0.1" height="15.0" fill="rgb(221,88,23)" rx="2" ry="2" />
<text  x="546.09" y="895.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (656,565,650 samples, 0.12%)</title><rect x="909.0" y="613" width="1.4" height="15.0" fill="rgb(219,136,32)" rx="2" ry="2" />
<text  x="911.97" y="623.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatchInternal::Put (1,292,929,280 samples, 0.24%)</title><rect x="555.1" y="917" width="2.8" height="15.0" fill="rgb(212,151,15)" rx="2" ry="2" />
<text  x="558.05" y="927.5" ></text>
</g>
<g >
<title>rocksdb::SuperVersionContext::~SuperVersionContext (434,343,430 samples, 0.08%)</title><rect x="32.1" y="885" width="0.9" height="15.0" fill="rgb(213,164,8)" rx="2" ry="2" />
<text  x="35.09" y="895.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Next (75,656,564,900 samples, 13.98%)</title><rect x="701.4" y="629" width="165.0" height="15.0" fill="rgb(207,98,36)" rx="2" ry="2" />
<text  x="704.43" y="639.5" >rocksdb::CompactionMe..</text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_context (686,868,680 samples, 0.13%)</title><rect x="1103.5" y="597" width="1.5" height="15.0" fill="rgb(228,208,22)" rx="2" ry="2" />
<text  x="1106.52" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (121,212,120 samples, 0.02%)</title><rect x="541.7" y="853" width="0.2" height="15.0" fill="rgb(251,95,21)" rx="2" ry="2" />
<text  x="544.66" y="863.5" ></text>
</g>
<g >
<title>ROCKSDB_XXH3_64bits (202,020,200 samples, 0.04%)</title><rect x="762.4" y="373" width="0.4" height="15.0" fill="rgb(250,162,41)" rx="2" ry="2" />
<text  x="765.37" y="383.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (353,535,350 samples, 0.07%)</title><rect x="808.1" y="341" width="0.7" height="15.0" fill="rgb(252,140,26)" rx="2" ry="2" />
<text  x="811.07" y="351.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatch::Handler::Handler (50,505,050 samples, 0.01%)</title><rect x="64.8" y="885" width="0.1" height="15.0" fill="rgb(254,2,40)" rx="2" ry="2" />
<text  x="67.81" y="895.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (161,616,160 samples, 0.03%)</title><rect x="834.4" y="517" width="0.3" height="15.0" fill="rgb(245,51,49)" rx="2" ry="2" />
<text  x="837.36" y="527.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::EqualWithoutTimestamp (1,050,505,040 samples, 0.19%)</title><rect x="876.1" y="645" width="2.3" height="15.0" fill="rgb(205,19,43)" rx="2" ry="2" />
<text  x="879.12" y="655.5" ></text>
</g>
<g >
<title>rocksdb::ParsedInternalKey::ParsedInternalKey (80,808,080 samples, 0.01%)</title><rect x="896.6" y="645" width="0.2" height="15.0" fill="rgb(216,221,5)" rx="2" ry="2" />
<text  x="899.64" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Random::OneIn (131,313,130 samples, 0.02%)</title><rect x="274.2" y="869" width="0.3" height="15.0" fill="rgb(232,129,7)" rx="2" ry="2" />
<text  x="277.25" y="879.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyData::IsDropped (111,111,110 samples, 0.02%)</title><rect x="691.8" y="693" width="0.3" height="15.0" fill="rgb(247,181,39)" rx="2" ry="2" />
<text  x="694.83" y="703.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="1038.3" y="549" width="0.4" height="15.0" fill="rgb(214,91,43)" rx="2" ry="2" />
<text  x="1041.29" y="559.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::top (1,434,343,420 samples, 0.27%)</title><rect x="752.1" y="597" width="3.1" height="15.0" fill="rgb(220,134,15)" rx="2" ry="2" />
<text  x="755.11" y="607.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt;@plt (161,616,160 samples, 0.03%)</title><rect x="287.4" y="853" width="0.3" height="15.0" fill="rgb(248,24,51)" rx="2" ry="2" />
<text  x="290.37" y="863.5" ></text>
</g>
<g >
<title>__alloc_pages (90,909,090 samples, 0.02%)</title><rect x="689.7" y="341" width="0.2" height="15.0" fill="rgb(253,220,26)" rx="2" ry="2" />
<text  x="692.67" y="351.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::ResetDataIter (222,222,220 samples, 0.04%)</title><rect x="768.6" y="501" width="0.5" height="15.0" fill="rgb(251,187,53)" rx="2" ry="2" />
<text  x="771.62" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::operator (181,818,180 samples, 0.03%)</title><rect x="1168.9" y="677" width="0.4" height="15.0" fill="rgb(244,12,33)" rx="2" ry="2" />
<text  x="1171.86" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_Rb_tree (232,323,230 samples, 0.04%)</title><rect x="68.6" y="773" width="0.5" height="15.0" fill="rgb(251,191,34)" rx="2" ry="2" />
<text  x="71.62" y="783.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (111,111,110 samples, 0.02%)</title><rect x="778.1" y="485" width="0.2" height="15.0" fill="rgb(205,138,41)" rx="2" ry="2" />
<text  x="781.05" y="495.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="829.0" y="421" width="0.1" height="15.0" fill="rgb(220,13,5)" rx="2" ry="2" />
<text  x="831.99" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::ColumnFamilySet, std::default_delete&lt;rocksdb::ColumnFamilySet&gt; &gt;::get (70,707,070 samples, 0.01%)</title><rect x="544.4" y="901" width="0.1" height="15.0" fill="rgb(244,196,24)" rx="2" ry="2" />
<text  x="547.39" y="911.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyHandleInternal::ColumnFamilyHandleInternal (70,707,070 samples, 0.01%)</title><rect x="28.5" y="885" width="0.1" height="15.0" fill="rgb(236,98,9)" rx="2" ry="2" />
<text  x="31.48" y="895.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (272,727,270 samples, 0.05%)</title><rect x="836.3" y="501" width="0.6" height="15.0" fill="rgb(253,148,48)" rx="2" ry="2" />
<text  x="839.26" y="511.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (464,646,460 samples, 0.09%)</title><rect x="169.2" y="821" width="1.0" height="15.0" fill="rgb(229,140,5)" rx="2" ry="2" />
<text  x="172.16" y="831.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::UpdateFlushState (303,030,300 samples, 0.06%)</title><rect x="60.9" y="853" width="0.7" height="15.0" fill="rgb(228,50,9)" rx="2" ry="2" />
<text  x="63.94" y="863.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::IndexBuilder, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt;::_M_ptr (505,050,500 samples, 0.09%)</title><rect x="1055.4" y="597" width="1.1" height="15.0" fill="rgb(221,124,44)" rx="2" ry="2" />
<text  x="1058.42" y="607.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (626,262,620 samples, 0.12%)</title><rect x="198.6" y="853" width="1.4" height="15.0" fill="rgb(238,59,9)" rx="2" ry="2" />
<text  x="201.60" y="863.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::Reset (50,505,050 samples, 0.01%)</title><rect x="997.4" y="581" width="0.1" height="15.0" fill="rgb(243,164,11)" rx="2" ry="2" />
<text  x="1000.41" y="591.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Valid (161,616,160 samples, 0.03%)</title><rect x="792.5" y="581" width="0.4" height="15.0" fill="rgb(251,137,52)" rx="2" ry="2" />
<text  x="795.54" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (232,323,230 samples, 0.04%)</title><rect x="976.4" y="645" width="0.5" height="15.0" fill="rgb(212,220,28)" rx="2" ry="2" />
<text  x="979.36" y="655.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::KeyIsAfterNode (90,909,090 samples, 0.02%)</title><rect x="146.1" y="741" width="0.2" height="15.0" fill="rgb(218,193,38)" rx="2" ry="2" />
<text  x="149.12" y="751.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Valid (60,606,060 samples, 0.01%)</title><rect x="923.7" y="533" width="0.2" height="15.0" fill="rgb(232,193,3)" rx="2" ry="2" />
<text  x="926.73" y="543.5" ></text>
</g>
<g >
<title>ksys_write (454,545,450 samples, 0.08%)</title><rect x="689.6" y="517" width="1.0" height="15.0" fill="rgb(213,17,5)" rx="2" ry="2" />
<text  x="692.56" y="527.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::IsUserKey (50,505,050 samples, 0.01%)</title><rect x="815.8" y="517" width="0.1" height="15.0" fill="rgb(208,173,43)" rx="2" ry="2" />
<text  x="818.82" y="527.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (303,030,300 samples, 0.06%)</title><rect x="1001.1" y="501" width="0.6" height="15.0" fill="rgb(226,121,6)" rx="2" ry="2" />
<text  x="1004.07" y="511.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (555,555,550 samples, 0.10%)</title><rect x="743.1" y="565" width="1.3" height="15.0" fill="rgb(237,97,16)" rx="2" ry="2" />
<text  x="746.15" y="575.5" ></text>
</g>
<g >
<title>rocksdb::IsValueType (90,909,090 samples, 0.02%)</title><rect x="908.1" y="597" width="0.2" height="15.0" fill="rgb(219,127,27)" rx="2" ry="2" />
<text  x="911.11" y="607.5" ></text>
</g>
<g >
<title>rocksdb::DecodeFixed32 (50,505,050 samples, 0.01%)</title><rect x="818.7" y="485" width="0.1" height="15.0" fill="rgb(250,140,40)" rx="2" ry="2" />
<text  x="821.70" y="495.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (60,606,060 samples, 0.01%)</title><rect x="657.5" y="1013" width="0.2" height="15.0" fill="rgb(247,80,52)" rx="2" ry="2" />
<text  x="660.54" y="1023.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::get (121,212,120 samples, 0.02%)</title><rect x="852.7" y="533" width="0.3" height="15.0" fill="rgb(214,190,34)" rx="2" ry="2" />
<text  x="855.71" y="543.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*&gt;::load (2,868,686,840 samples, 0.53%)</title><rect x="138.5" y="709" width="6.3" height="15.0" fill="rgb(248,22,45)" rx="2" ry="2" />
<text  x="141.54" y="719.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (70,707,070 samples, 0.01%)</title><rect x="800.7" y="501" width="0.2" height="15.0" fill="rgb(237,0,38)" rx="2" ry="2" />
<text  x="803.73" y="511.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (131,313,130 samples, 0.02%)</title><rect x="1133.4" y="501" width="0.3" height="15.0" fill="rgb(223,86,46)" rx="2" ry="2" />
<text  x="1136.40" y="511.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; (2,252,525,230 samples, 0.42%)</title><rect x="314.1" y="805" width="4.9" height="15.0" fill="rgb(243,148,2)" rx="2" ry="2" />
<text  x="317.08" y="815.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (121,212,120 samples, 0.02%)</title><rect x="864.5" y="597" width="0.3" height="15.0" fill="rgb(225,93,16)" rx="2" ry="2" />
<text  x="867.49" y="607.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;40ul&gt; (111,111,110 samples, 0.02%)</title><rect x="243.1" y="885" width="0.2" height="15.0" fill="rgb(225,228,45)" rx="2" ry="2" />
<text  x="246.06" y="895.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (363,636,360 samples, 0.07%)</title><rect x="829.3" y="485" width="0.7" height="15.0" fill="rgb(248,224,26)" rx="2" ry="2" />
<text  x="832.25" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (838,383,830 samples, 0.15%)</title><rect x="1125.8" y="565" width="1.8" height="15.0" fill="rgb(210,12,24)" rx="2" ry="2" />
<text  x="1128.80" y="575.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::front (959,595,950 samples, 0.18%)</title><rect x="753.1" y="581" width="2.1" height="15.0" fill="rgb(225,197,5)" rx="2" ry="2" />
<text  x="756.08" y="591.5" ></text>
</g>
<g >
<title>rocksdb::ConfigurableCFOptions::ConfigureOptions (50,505,050 samples, 0.01%)</title><rect x="661.6" y="453" width="0.1" height="15.0" fill="rgb(216,17,48)" rx="2" ry="2" />
<text  x="664.57" y="463.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::Next@plt (131,313,130 samples, 0.02%)</title><rect x="146.9" y="741" width="0.3" height="15.0" fill="rgb(213,166,1)" rx="2" ry="2" />
<text  x="149.89" y="751.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (111,111,110 samples, 0.02%)</title><rect x="46.2" y="773" width="0.2" height="15.0" fill="rgb(236,139,35)" rx="2" ry="2" />
<text  x="49.20" y="783.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;rocksdb::Block_kData, std::default_delete&lt;rocksdb::Block_kData&gt;, true, true&gt;::__uniq_ptr_data (60,606,060 samples, 0.01%)</title><rect x="767.2" y="437" width="0.1" height="15.0" fill="rgb(236,44,19)" rx="2" ry="2" />
<text  x="770.22" y="447.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::TrimAppend (161,616,160 samples, 0.03%)</title><rect x="774.0" y="469" width="0.4" height="15.0" fill="rgb(237,92,31)" rx="2" ry="2" />
<text  x="777.04" y="479.5" ></text>
</g>
<g >
<title>filemap_get_pages (90,909,090 samples, 0.02%)</title><rect x="808.6" y="293" width="0.2" height="15.0" fill="rgb(234,75,18)" rx="2" ry="2" />
<text  x="811.57" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Mod&lt;unsigned long, 4294967296ul, 1ul, 0ul, true, true&gt;::__calc (131,313,130 samples, 0.02%)</title><rect x="605.4" y="949" width="0.3" height="15.0" fill="rgb(240,132,29)" rx="2" ry="2" />
<text  x="608.44" y="959.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::GetRestartPoint (50,505,050 samples, 0.01%)</title><rect x="818.7" y="501" width="0.1" height="15.0" fill="rgb(220,101,26)" rx="2" ry="2" />
<text  x="821.70" y="511.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (151,515,150 samples, 0.03%)</title><rect x="586.9" y="901" width="0.3" height="15.0" fill="rgb(223,99,26)" rx="2" ry="2" />
<text  x="589.92" y="911.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::Key (60,606,060 samples, 0.01%)</title><rect x="161.5" y="773" width="0.1" height="15.0" fill="rgb(249,104,35)" rx="2" ry="2" />
<text  x="164.49" y="783.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_ptr (80,808,080 samples, 0.01%)</title><rect x="932.7" y="613" width="0.2" height="15.0" fill="rgb(233,15,31)" rx="2" ry="2" />
<text  x="935.74" y="623.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (181,818,180 samples, 0.03%)</title><rect x="526.8" y="821" width="0.4" height="15.0" fill="rgb(223,164,35)" rx="2" ry="2" />
<text  x="529.84" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::BlobGarbageMeter, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;::get@plt (181,818,180 samples, 0.03%)</title><rect x="1147.0" y="645" width="0.4" height="15.0" fill="rgb(235,158,50)" rx="2" ry="2" />
<text  x="1149.97" y="655.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::BlockFetcher (101,010,100 samples, 0.02%)</title><rect x="762.0" y="437" width="0.2" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="764.97" y="447.5" ></text>
</g>
<g >
<title>rocksdb::DB::Put (248,191,916,710 samples, 45.86%)</title><rect x="25.1" y="949" width="541.1" height="15.0" fill="rgb(251,211,3)" rx="2" ry="2" />
<text  x="28.13" y="959.5" >rocksdb::DB::Put</text>
</g>
<g >
<title>std::chrono::operator&lt;=&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="535.4" y="885" width="0.3" height="15.0" fill="rgb(254,184,39)" rx="2" ry="2" />
<text  x="538.43" y="895.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (545,454,540 samples, 0.10%)</title><rect x="1130.4" y="533" width="1.2" height="15.0" fill="rgb(205,195,5)" rx="2" ry="2" />
<text  x="1133.43" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::operator* (343,434,340 samples, 0.06%)</title><rect x="1169.3" y="677" width="0.7" height="15.0" fill="rgb(223,28,46)" rx="2" ry="2" />
<text  x="1172.25" y="687.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (131,313,130 samples, 0.02%)</title><rect x="242.8" y="869" width="0.3" height="15.0" fill="rgb(242,71,1)" rx="2" ry="2" />
<text  x="245.78" y="879.5" ></text>
</g>
<g >
<title>rocksdb::FullTypedCacheInterface&lt;rocksdb::Block_kData, rocksdb::BlockCreateContext,  (70,707,070 samples, 0.01%)</title><rect x="766.4" y="421" width="0.2" height="15.0" fill="rgb(205,224,43)" rx="2" ry="2" />
<text  x="769.40" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::ConcurrentArena::Shard [], std::default_delete&lt;rocksdb::ConcurrentArena::Shard []&gt; &gt;::get (70,707,070 samples, 0.01%)</title><rect x="78.7" y="709" width="0.2" height="15.0" fill="rgb(223,160,40)" rx="2" ry="2" />
<text  x="81.73" y="719.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter (18,555,555,370 samples, 3.43%)</title><rect x="180.3" y="901" width="40.5" height="15.0" fill="rgb(230,23,32)" rx="2" ry="2" />
<text  x="183.34" y="911.5" >roc..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (131,313,130 samples, 0.02%)</title><rect x="1014.9" y="613" width="0.2" height="15.0" fill="rgb(232,80,28)" rx="2" ry="2" />
<text  x="1017.86" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (151,515,150 samples, 0.03%)</title><rect x="848.3" y="453" width="0.3" height="15.0" fill="rgb(217,116,42)" rx="2" ry="2" />
<text  x="851.30" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (1,010,101,000 samples, 0.19%)</title><rect x="859.2" y="533" width="2.2" height="15.0" fill="rgb(238,180,1)" rx="2" ry="2" />
<text  x="862.25" y="543.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="859.6" y="485" width="0.4" height="15.0" fill="rgb(251,207,39)" rx="2" ry="2" />
<text  x="862.62" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (232,323,230 samples, 0.04%)</title><rect x="796.3" y="469" width="0.5" height="15.0" fill="rgb(211,26,15)" rx="2" ry="2" />
<text  x="799.28" y="479.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (242,424,240 samples, 0.04%)</title><rect x="861.6" y="501" width="0.5" height="15.0" fill="rgb(222,224,10)" rx="2" ry="2" />
<text  x="864.58" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;::_M_valptr (50,505,050 samples, 0.01%)</title><rect x="70.3" y="725" width="0.1" height="15.0" fill="rgb(235,108,33)" rx="2" ry="2" />
<text  x="73.28" y="735.5" ></text>
</g>
<g >
<title>std::random_device::_M_fini (50,505,050 samples, 0.01%)</title><rect x="637.7" y="981" width="0.1" height="15.0" fill="rgb(254,167,36)" rx="2" ry="2" />
<text  x="640.68" y="991.5" ></text>
</g>
<g >
<title>rocksdb::IsExtendedValueType (141,414,140 samples, 0.03%)</title><rect x="893.5" y="629" width="0.3" height="15.0" fill="rgb(206,96,3)" rx="2" ry="2" />
<text  x="896.54" y="639.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::ok (2,595,959,570 samples, 0.48%)</title><rect x="999.2" y="629" width="5.7" height="15.0" fill="rgb(228,57,19)" rx="2" ry="2" />
<text  x="1002.22" y="639.5" ></text>
</g>
<g >
<title>clear_page_orig (80,808,080 samples, 0.01%)</title><rect x="994.0" y="229" width="0.2" height="15.0" fill="rgb(242,7,12)" rx="2" ry="2" />
<text  x="997.02" y="239.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::UpdateOldestKeyTime (636,363,630 samples, 0.12%)</title><rect x="162.9" y="805" width="1.4" height="15.0" fill="rgb(218,207,37)" rx="2" ry="2" />
<text  x="165.90" y="815.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (50,505,050 samples, 0.01%)</title><rect x="165.1" y="805" width="0.2" height="15.0" fill="rgb(246,8,22)" rx="2" ry="2" />
<text  x="168.15" y="815.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (141,414,140 samples, 0.03%)</title><rect x="1015.3" y="613" width="0.3" height="15.0" fill="rgb(206,67,54)" rx="2" ry="2" />
<text  x="1018.27" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (101,010,100 samples, 0.02%)</title><rect x="857.7" y="533" width="0.2" height="15.0" fill="rgb(224,19,52)" rx="2" ry="2" />
<text  x="860.73" y="543.5" ></text>
</g>
<g >
<title>ip_queue_xmit (90,909,090 samples, 0.02%)</title><rect x="690.3" y="341" width="0.2" height="15.0" fill="rgb(220,45,15)" rx="2" ry="2" />
<text  x="693.34" y="351.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (50,505,050 samples, 0.01%)</title><rect x="42.5" y="549" width="0.1" height="15.0" fill="rgb(205,141,27)" rx="2" ry="2" />
<text  x="45.48" y="559.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockHashIndexBuilder::Valid (181,818,180 samples, 0.03%)</title><rect x="1022.7" y="613" width="0.3" height="15.0" fill="rgb(248,29,6)" rx="2" ry="2" />
<text  x="1025.65" y="623.5" ></text>
</g>
<g >
<title>ip_rcv (80,808,080 samples, 0.01%)</title><rect x="690.3" y="101" width="0.2" height="15.0" fill="rgb(241,221,18)" rx="2" ry="2" />
<text  x="693.34" y="111.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count@plt (323,232,320 samples, 0.06%)</title><rect x="286.2" y="853" width="0.8" height="15.0" fill="rgb(251,108,44)" rx="2" ry="2" />
<text  x="289.25" y="863.5" ></text>
</g>
<g >
<title>rocksdb::GetLengthPrefixedSlice@plt (111,111,110 samples, 0.02%)</title><rect x="101.7" y="709" width="0.3" height="15.0" fill="rgb(219,135,0)" rx="2" ry="2" />
<text  x="104.74" y="719.5" ></text>
</g>
<g >
<title>rocksdb::RocksDBOptionsParser::Parse (70,707,070 samples, 0.01%)</title><rect x="661.6" y="549" width="0.1" height="15.0" fill="rgb(252,229,50)" rx="2" ry="2" />
<text  x="664.57" y="559.5" ></text>
</g>
<g >
<title>rocksdb::IsValueType (80,808,080 samples, 0.01%)</title><rect x="893.7" y="613" width="0.1" height="15.0" fill="rgb(223,15,8)" rx="2" ry="2" />
<text  x="896.67" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="828.0" y="453" width="0.2" height="15.0" fill="rgb(219,126,32)" rx="2" ry="2" />
<text  x="831.02" y="463.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatch::WriteBatch (545,454,540 samples, 0.10%)</title><rect x="562.8" y="933" width="1.2" height="15.0" fill="rgb(225,21,2)" rx="2" ry="2" />
<text  x="565.85" y="943.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::Key (171,717,170 samples, 0.03%)</title><rect x="137.0" y="725" width="0.4" height="15.0" fill="rgb(253,124,40)" rx="2" ry="2" />
<text  x="140.02" y="735.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (464,646,460 samples, 0.09%)</title><rect x="1132.7" y="533" width="1.0" height="15.0" fill="rgb(219,84,34)" rx="2" ry="2" />
<text  x="1135.68" y="543.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (252,525,250 samples, 0.05%)</title><rect x="1038.1" y="581" width="0.6" height="15.0" fill="rgb(227,53,0)" rx="2" ry="2" />
<text  x="1041.11" y="591.5" ></text>
</g>
<g >
<title>std::make_tuple&lt;rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;&gt; (1,252,525,240 samples, 0.23%)</title><rect x="552.3" y="901" width="2.7" height="15.0" fill="rgb(239,105,2)" rx="2" ry="2" />
<text  x="555.28" y="911.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (70,707,070 samples, 0.01%)</title><rect x="846.1" y="501" width="0.2" height="15.0" fill="rgb(211,138,38)" rx="2" ry="2" />
<text  x="849.14" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::get (111,111,110 samples, 0.02%)</title><rect x="34.9" y="821" width="0.2" height="15.0" fill="rgb(218,199,44)" rx="2" ry="2" />
<text  x="37.86" y="831.5" ></text>
</g>
<g >
<title>rocksdb::VerifyBlockChecksum (272,727,270 samples, 0.05%)</title><rect x="806.2" y="437" width="0.6" height="15.0" fill="rgb(219,139,3)" rx="2" ry="2" />
<text  x="809.24" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (90,909,090 samples, 0.02%)</title><rect x="852.4" y="549" width="0.2" height="15.0" fill="rgb(216,126,53)" rx="2" ry="2" />
<text  x="855.44" y="559.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (2,121,212,100 samples, 0.39%)</title><rect x="858.1" y="565" width="4.6" height="15.0" fill="rgb(249,32,34)" rx="2" ry="2" />
<text  x="861.06" y="575.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (13,898,989,760 samples, 2.57%)</title><rect x="661.1" y="773" width="30.3" height="15.0" fill="rgb(231,72,29)" rx="2" ry="2" />
<text  x="664.13" y="783.5" >st..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (50,505,050 samples, 0.01%)</title><rect x="176.9" y="773" width="0.1" height="15.0" fill="rgb(252,76,39)" rx="2" ry="2" />
<text  x="179.91" y="783.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;rocksdb::SpinMutex&gt;::~unique_lock (80,808,080 samples, 0.01%)</title><rect x="80.6" y="741" width="0.2" height="15.0" fill="rgb(231,123,31)" rx="2" ry="2" />
<text  x="83.65" y="751.5" ></text>
</g>
<g >
<title>rocksdb::lru_cache::LRUCacheShard::Insert (181,818,180 samples, 0.03%)</title><rect x="767.6" y="437" width="0.4" height="15.0" fill="rgb(218,155,10)" rx="2" ry="2" />
<text  x="770.61" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (191,919,190 samples, 0.04%)</title><rect x="862.3" y="517" width="0.4" height="15.0" fill="rgb(223,119,21)" rx="2" ry="2" />
<text  x="865.26" y="527.5" ></text>
</g>
<g >
<title>std::move&lt;rocksdb::Status::SubCode&amp;&gt; (101,010,100 samples, 0.02%)</title><rect x="1143.4" y="645" width="0.2" height="15.0" fill="rgb(234,40,11)" rx="2" ry="2" />
<text  x="1146.38" y="655.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey@plt (50,505,050 samples, 0.01%)</title><rect x="103.6" y="693" width="0.1" height="15.0" fill="rgb(230,159,27)" rx="2" ry="2" />
<text  x="106.57" y="703.5" ></text>
</g>
<g >
<title>schedule (161,616,160 samples, 0.03%)</title><rect x="499.7" y="789" width="0.3" height="15.0" fill="rgb(246,22,3)" rx="2" ry="2" />
<text  x="502.67" y="799.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::operator bool (1,363,636,350 samples, 0.25%)</title><rect x="1067.3" y="597" width="2.9" height="15.0" fill="rgb(254,195,47)" rx="2" ry="2" />
<text  x="1070.27" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (50,505,050 samples, 0.01%)</title><rect x="1093.9" y="613" width="0.1" height="15.0" fill="rgb(250,33,17)" rx="2" ry="2" />
<text  x="1096.94" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (90,909,090 samples, 0.02%)</title><rect x="877.8" y="613" width="0.2" height="15.0" fill="rgb(230,43,4)" rx="2" ry="2" />
<text  x="880.81" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SstPartitioner, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::get (232,323,230 samples, 0.04%)</title><rect x="1078.4" y="629" width="0.5" height="15.0" fill="rgb(229,219,42)" rx="2" ry="2" />
<text  x="1081.37" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (737,373,730 samples, 0.14%)</title><rect x="794.4" y="501" width="1.6" height="15.0" fill="rgb(240,212,0)" rx="2" ry="2" />
<text  x="797.44" y="511.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="789.2" y="501" width="0.3" height="15.0" fill="rgb(205,36,51)" rx="2" ry="2" />
<text  x="792.17" y="511.5" ></text>
</g>
<g >
<title>filemap_fdatawrite_wbc (90,909,090 samples, 0.02%)</title><rect x="661.2" y="533" width="0.2" height="15.0" fill="rgb(212,17,21)" rx="2" ry="2" />
<text  x="664.16" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (70,707,070 samples, 0.01%)</title><rect x="34.3" y="821" width="0.2" height="15.0" fill="rgb(210,88,41)" rx="2" ry="2" />
<text  x="37.31" y="831.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::RecomputeSpliceLevels (26,818,181,550 samples, 4.96%)</title><rect x="88.7" y="757" width="58.5" height="15.0" fill="rgb(252,96,13)" rx="2" ry="2" />
<text  x="91.71" y="767.5" >rocksd..</text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::NextAndGetResult (121,212,120 samples, 0.02%)</title><rect x="702.4" y="613" width="0.3" height="15.0" fill="rgb(208,178,26)" rx="2" ry="2" />
<text  x="705.45" y="623.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;rocksdb::Slice, std::_Optional_base&lt;rocksdb::Slice, true, true&gt; &gt;::_M_is_engaged (303,030,300 samples, 0.06%)</title><rect x="1167.1" y="661" width="0.6" height="15.0" fill="rgb(229,229,13)" rx="2" ry="2" />
<text  x="1170.07" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::operator bool@plt (101,010,100 samples, 0.02%)</title><rect x="935.1" y="645" width="0.2" height="15.0" fill="rgb(251,141,45)" rx="2" ry="2" />
<text  x="938.09" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (626,262,620 samples, 0.12%)</title><rect x="850.0" y="501" width="1.4" height="15.0" fill="rgb(234,95,26)" rx="2" ry="2" />
<text  x="853.02" y="511.5" ></text>
</g>
<g >
<title>rocksdb::DeleteScheduler::DeleteFile (70,707,070 samples, 0.01%)</title><rect x="1178.5" y="661" width="0.2" height="15.0" fill="rgb(219,103,15)" rx="2" ry="2" />
<text  x="1181.55" y="671.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="849.8" y="421" width="0.2" height="15.0" fill="rgb(228,105,49)" rx="2" ry="2" />
<text  x="852.84" y="431.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::value (60,606,060 samples, 0.01%)</title><rect x="921.2" y="613" width="0.1" height="15.0" fill="rgb(241,134,10)" rx="2" ry="2" />
<text  x="924.15" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (373,737,370 samples, 0.07%)</title><rect x="1139.4" y="645" width="0.8" height="15.0" fill="rgb(250,23,45)" rx="2" ry="2" />
<text  x="1142.37" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (50,505,050 samples, 0.01%)</title><rect x="174.6" y="773" width="0.1" height="15.0" fill="rgb(251,187,46)" rx="2" ry="2" />
<text  x="177.59" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt;::begin (151,515,150 samples, 0.03%)</title><rect x="1074.2" y="597" width="0.3" height="15.0" fill="rgb(221,25,6)" rx="2" ry="2" />
<text  x="1077.18" y="607.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt; const, rocksdb::CompactionMergingIterator::HeapItem* const&gt;::operator* (60,606,060 samples, 0.01%)</title><rect x="749.5" y="581" width="0.1" height="15.0" fill="rgb(215,108,44)" rx="2" ry="2" />
<text  x="752.47" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (101,010,100 samples, 0.02%)</title><rect x="1036.0" y="597" width="0.2" height="15.0" fill="rgb(243,77,38)" rx="2" ry="2" />
<text  x="1038.95" y="607.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::FilterBlockBuilder*, false&gt;::_M_head (161,616,160 samples, 0.03%)</title><rect x="1049.9" y="533" width="0.3" height="15.0" fill="rgb(207,5,23)" rx="2" ry="2" />
<text  x="1052.87" y="543.5" ></text>
</g>
<g >
<title>do_syscall_64 (494,949,490 samples, 0.09%)</title><rect x="807.9" y="405" width="1.1" height="15.0" fill="rgb(240,121,13)" rx="2" ry="2" />
<text  x="810.91" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="787.2" y="437" width="0.3" height="15.0" fill="rgb(222,26,44)" rx="2" ry="2" />
<text  x="790.17" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="849.7" y="453" width="0.3" height="15.0" fill="rgb(251,86,0)" rx="2" ry="2" />
<text  x="852.73" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (202,020,200 samples, 0.04%)</title><rect x="860.1" y="501" width="0.4" height="15.0" fill="rgb(252,119,40)" rx="2" ry="2" />
<text  x="863.06" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::CompactionOutputs::Output const*, std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt; &gt;::__normal_iterator (272,727,270 samples, 0.05%)</title><rect x="1087.7" y="613" width="0.6" height="15.0" fill="rgb(212,59,28)" rx="2" ry="2" />
<text  x="1090.73" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (131,313,130 samples, 0.02%)</title><rect x="863.2" y="549" width="0.3" height="15.0" fill="rgb(242,156,41)" rx="2" ry="2" />
<text  x="866.21" y="559.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Valid (141,414,140 samples, 0.03%)</title><rect x="924.1" y="597" width="0.3" height="15.0" fill="rgb(242,84,38)" rx="2" ry="2" />
<text  x="927.10" y="607.5" ></text>
</g>
<g >
<title>std::this_thread::yield@plt (151,515,150 samples, 0.03%)</title><rect x="539.7" y="885" width="0.4" height="15.0" fill="rgb(224,182,40)" rx="2" ry="2" />
<text  x="542.75" y="895.5" ></text>
</g>
<g >
<title>std::chrono::operator&gt;=&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (717,171,710 samples, 0.13%)</title><rect x="198.4" y="869" width="1.6" height="15.0" fill="rgb(205,104,15)" rx="2" ry="2" />
<text  x="201.40" y="879.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::FindKeyForward (5,575,757,520 samples, 1.03%)</title><rect x="803.1" y="565" width="12.2" height="15.0" fill="rgb(245,120,0)" rx="2" ry="2" />
<text  x="806.11" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (131,313,130 samples, 0.02%)</title><rect x="801.3" y="533" width="0.3" height="15.0" fill="rgb(229,10,45)" rx="2" ry="2" />
<text  x="804.33" y="543.5" ></text>
</g>
<g >
<title>generic_file_read_iter (353,535,350 samples, 0.07%)</title><rect x="808.1" y="325" width="0.7" height="15.0" fill="rgb(211,215,35)" rx="2" ry="2" />
<text  x="811.07" y="335.5" ></text>
</g>
<g >
<title>rocksdb::Status::MarkChecked (80,808,080 samples, 0.01%)</title><rect x="927.3" y="629" width="0.2" height="15.0" fill="rgb(234,152,11)" rx="2" ry="2" />
<text  x="930.32" y="639.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::BlobGarbageMeter*, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;::_M_head@plt (181,818,180 samples, 0.03%)</title><rect x="1149.5" y="581" width="0.4" height="15.0" fill="rgb(247,123,15)" rx="2" ry="2" />
<text  x="1152.48" y="591.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid (171,717,170 samples, 0.03%)</title><rect x="1066.4" y="613" width="0.3" height="15.0" fill="rgb(248,180,41)" rx="2" ry="2" />
<text  x="1069.37" y="623.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (141,414,140 samples, 0.03%)</title><rect x="1063.2" y="565" width="0.3" height="15.0" fill="rgb(224,174,21)" rx="2" ry="2" />
<text  x="1066.15" y="575.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::status (70,707,070 samples, 0.01%)</title><rect x="740.0" y="613" width="0.2" height="15.0" fill="rgb(224,72,32)" rx="2" ry="2" />
<text  x="743.02" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;rocksdb::MemTable*&gt;, true&gt;::~_Rb_tree_impl (70,707,070 samples, 0.01%)</title><rect x="64.2" y="837" width="0.1" height="15.0" fill="rgb(246,167,23)" rx="2" ry="2" />
<text  x="67.15" y="847.5" ></text>
</g>
<g >
<title>get_page_from_freelist (131,313,130 samples, 0.02%)</title><rect x="658.6" y="853" width="0.3" height="15.0" fill="rgb(232,84,29)" rx="2" ry="2" />
<text  x="661.62" y="863.5" ></text>
</g>
<g >
<title>process_backlog (80,808,080 samples, 0.01%)</title><rect x="690.3" y="149" width="0.2" height="15.0" fill="rgb(217,194,50)" rx="2" ry="2" />
<text  x="693.34" y="159.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (393,939,390 samples, 0.07%)</title><rect x="304.5" y="853" width="0.8" height="15.0" fill="rgb(236,24,48)" rx="2" ry="2" />
<text  x="307.48" y="863.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (494,949,490 samples, 0.09%)</title><rect x="929.7" y="613" width="1.1" height="15.0" fill="rgb(214,171,17)" rx="2" ry="2" />
<text  x="932.74" y="623.5" ></text>
</g>
<g >
<title>file_write_and_wait_range (141,414,140 samples, 0.03%)</title><rect x="1140.3" y="421" width="0.3" height="15.0" fill="rgb(240,214,7)" rx="2" ry="2" />
<text  x="1143.30" y="431.5" ></text>
</g>
<g >
<title>handle_mm_fault (90,909,090 samples, 0.02%)</title><rect x="81.0" y="693" width="0.2" height="15.0" fill="rgb(254,151,44)" rx="2" ry="2" />
<text  x="84.02" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (171,717,170 samples, 0.03%)</title><rect x="172.2" y="805" width="0.4" height="15.0" fill="rgb(252,132,12)" rx="2" ry="2" />
<text  x="175.19" y="815.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;rocksdb::InternalKeyComparator, std::default_delete&lt;rocksdb::InternalKeyComparator&gt;, true, true&gt;::__uniq_ptr_impl (60,606,060 samples, 0.01%)</title><rect x="761.0" y="373" width="0.1" height="15.0" fill="rgb(207,214,0)" rx="2" ry="2" />
<text  x="763.96" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (191,919,190 samples, 0.04%)</title><rect x="154.9" y="725" width="0.4" height="15.0" fill="rgb(246,189,48)" rx="2" ry="2" />
<text  x="157.86" y="735.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (252,525,250 samples, 0.05%)</title><rect x="731.6" y="565" width="0.6" height="15.0" fill="rgb(211,1,25)" rx="2" ry="2" />
<text  x="734.65" y="575.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::key (171,717,170 samples, 0.03%)</title><rect x="724.5" y="565" width="0.3" height="15.0" fill="rgb(205,183,8)" rx="2" ry="2" />
<text  x="727.47" y="575.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::unordered_map (202,020,200 samples, 0.04%)</title><rect x="46.2" y="789" width="0.4" height="15.0" fill="rgb(218,109,11)" rx="2" ry="2" />
<text  x="49.20" y="799.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::InternalKeyComparator, std::default_delete&lt;rocksdb::InternalKeyComparator&gt; &gt;::operator= (50,505,050 samples, 0.01%)</title><rect x="804.0" y="405" width="0.1" height="15.0" fill="rgb(251,12,32)" rx="2" ry="2" />
<text  x="807.01" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (50,505,050 samples, 0.01%)</title><rect x="959.1" y="661" width="0.1" height="15.0" fill="rgb(249,126,28)" rx="2" ry="2" />
<text  x="962.07" y="671.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey (3,343,434,310 samples, 0.62%)</title><rect x="111.2" y="677" width="7.3" height="15.0" fill="rgb(234,95,11)" rx="2" ry="2" />
<text  x="114.17" y="687.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (90,909,090 samples, 0.02%)</title><rect x="795.1" y="405" width="0.2" height="15.0" fill="rgb(222,228,18)" rx="2" ry="2" />
<text  x="798.14" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr@plt (60,606,060 samples, 0.01%)</title><rect x="778.3" y="485" width="0.1" height="15.0" fill="rgb(247,81,20)" rx="2" ry="2" />
<text  x="781.29" y="495.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt; (232,323,230 samples, 0.04%)</title><rect x="760.9" y="469" width="0.5" height="15.0" fill="rgb(207,20,37)" rx="2" ry="2" />
<text  x="763.92" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Block_kData::Block (181,818,180 samples, 0.03%)</title><rect x="761.5" y="421" width="0.4" height="15.0" fill="rgb(252,217,10)" rx="2" ry="2" />
<text  x="764.53" y="431.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="928.5" y="581" width="0.2" height="15.0" fill="rgb(247,35,39)" rx="2" ry="2" />
<text  x="931.48" y="591.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (223,323,230,090 samples, 41.26%)</title><rect x="691.8" y="773" width="486.9" height="15.0" fill="rgb(213,90,4)" rx="2" ry="2" />
<text  x="694.81" y="783.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>std::move&lt;rocksdb::Status::Severity&amp;&gt; (282,828,280 samples, 0.05%)</title><rect x="1142.7" y="645" width="0.7" height="15.0" fill="rgb(221,15,13)" rx="2" ry="2" />
<text  x="1145.74" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="836.5" y="469" width="0.4" height="15.0" fill="rgb(245,229,29)" rx="2" ry="2" />
<text  x="839.48" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Random::GetTLSInstance (70,707,070 samples, 0.01%)</title><rect x="242.0" y="885" width="0.2" height="15.0" fill="rgb(248,185,0)" rx="2" ry="2" />
<text  x="245.03" y="895.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (727,272,720 samples, 0.13%)</title><rect x="830.8" y="517" width="1.6" height="15.0" fill="rgb(248,173,17)" rx="2" ry="2" />
<text  x="833.82" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size@plt (90,909,090 samples, 0.02%)</title><rect x="1112.9" y="629" width="0.2" height="15.0" fill="rgb(219,160,46)" rx="2" ry="2" />
<text  x="1115.90" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (80,808,080 samples, 0.01%)</title><rect x="895.9" y="517" width="0.1" height="15.0" fill="rgb(209,108,53)" rx="2" ry="2" />
<text  x="898.87" y="527.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::top (3,222,222,190 samples, 0.60%)</title><rect x="742.7" y="597" width="7.0" height="15.0" fill="rgb(240,0,7)" rx="2" ry="2" />
<text  x="745.66" y="607.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;35ul&gt; (111,111,110 samples, 0.02%)</title><rect x="165.5" y="805" width="0.3" height="15.0" fill="rgb(230,64,41)" rx="2" ry="2" />
<text  x="168.54" y="815.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::Sync (101,010,100 samples, 0.02%)</title><rect x="661.1" y="661" width="0.3" height="15.0" fill="rgb(219,147,30)" rx="2" ry="2" />
<text  x="664.13" y="671.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Next (70,707,070 samples, 0.01%)</title><rect x="802.0" y="597" width="0.2" height="15.0" fill="rgb(234,144,53)" rx="2" ry="2" />
<text  x="805.01" y="607.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::CompactionIterator*, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::_M_head (454,545,450 samples, 0.08%)</title><rect x="1172.1" y="613" width="1.0" height="15.0" fill="rgb(236,79,11)" rx="2" ry="2" />
<text  x="1175.07" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (555,555,550 samples, 0.10%)</title><rect x="993.6" y="485" width="1.2" height="15.0" fill="rgb(217,224,40)" rx="2" ry="2" />
<text  x="996.60" y="495.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (70,707,070 samples, 0.01%)</title><rect x="67.3" y="821" width="0.2" height="15.0" fill="rgb(233,47,37)" rx="2" ry="2" />
<text  x="70.35" y="831.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (303,030,300 samples, 0.06%)</title><rect x="1035.2" y="533" width="0.6" height="15.0" fill="rgb(208,170,27)" rx="2" ry="2" />
<text  x="1038.18" y="543.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (70,707,070 samples, 0.01%)</title><rect x="690.3" y="69" width="0.2" height="15.0" fill="rgb(242,163,33)" rx="2" ry="2" />
<text  x="693.34" y="79.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (3,474,747,440 samples, 0.64%)</title><rect x="650.0" y="1013" width="7.5" height="15.0" fill="rgb(218,22,28)" rx="2" ry="2" />
<text  x="652.97" y="1023.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyHandleInternal::ColumnFamilyHandleInternal (60,606,060 samples, 0.01%)</title><rect x="28.0" y="901" width="0.1" height="15.0" fill="rgb(236,167,41)" rx="2" ry="2" />
<text  x="30.97" y="911.5" ></text>
</g>
<g >
<title>tcp_write_xmit (101,010,100 samples, 0.02%)</title><rect x="690.3" y="373" width="0.3" height="15.0" fill="rgb(246,60,54)" rx="2" ry="2" />
<text  x="693.34" y="383.5" ></text>
</g>
<g >
<title>XXH3_64bits_internal (262,626,260 samples, 0.05%)</title><rect x="806.3" y="389" width="0.5" height="15.0" fill="rgb(218,139,20)" rx="2" ry="2" />
<text  x="809.26" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (90,909,090 samples, 0.02%)</title><rect x="852.1" y="517" width="0.2" height="15.0" fill="rgb(205,187,27)" rx="2" ry="2" />
<text  x="855.07" y="527.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (333,333,330 samples, 0.06%)</title><rect x="933.9" y="597" width="0.8" height="15.0" fill="rgb(247,147,50)" rx="2" ry="2" />
<text  x="936.95" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_insert_unique_pos (171,717,170 samples, 0.03%)</title><rect x="73.6" y="757" width="0.4" height="15.0" fill="rgb(242,206,4)" rx="2" ry="2" />
<text  x="76.58" y="767.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (50,505,050 samples, 0.01%)</title><rect x="243.2" y="837" width="0.1" height="15.0" fill="rgb(230,173,18)" rx="2" ry="2" />
<text  x="246.19" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (292,929,290 samples, 0.05%)</title><rect x="1189.4" y="1013" width="0.6" height="15.0" fill="rgb(209,152,28)" rx="2" ry="2" />
<text  x="1192.36" y="1023.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (141,414,140 samples, 0.03%)</title><rect x="994.0" y="341" width="0.3" height="15.0" fill="rgb(237,25,15)" rx="2" ry="2" />
<text  x="996.98" y="351.5" ></text>
</g>
<g >
<title>std::operator&amp; (70,707,070 samples, 0.01%)</title><rect x="1050.8" y="629" width="0.2" height="15.0" fill="rgb(235,184,29)" rx="2" ry="2" />
<text  x="1053.82" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (787,878,780 samples, 0.15%)</title><rect x="825.0" y="533" width="1.7" height="15.0" fill="rgb(214,196,25)" rx="2" ry="2" />
<text  x="828.00" y="543.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (757,575,750 samples, 0.14%)</title><rect x="41.2" y="613" width="1.6" height="15.0" fill="rgb(238,26,42)" rx="2" ry="2" />
<text  x="44.16" y="623.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::RealCompaction::allow_ingest_behind (252,525,250 samples, 0.05%)</title><rect x="938.7" y="645" width="0.5" height="15.0" fill="rgb(251,104,8)" rx="2" ry="2" />
<text  x="941.68" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (242,424,240 samples, 0.04%)</title><rect x="969.9" y="661" width="0.5" height="15.0" fill="rgb(219,29,53)" rx="2" ry="2" />
<text  x="972.86" y="671.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (151,515,150 samples, 0.03%)</title><rect x="976.5" y="613" width="0.4" height="15.0" fill="rgb(212,40,16)" rx="2" ry="2" />
<text  x="979.54" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::operator (626,262,620 samples, 0.12%)</title><rect x="790.1" y="549" width="1.3" height="15.0" fill="rgb(224,84,52)" rx="2" ry="2" />
<text  x="793.05" y="559.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (333,333,330 samples, 0.06%)</title><rect x="895.6" y="549" width="0.7" height="15.0" fill="rgb(211,127,42)" rx="2" ry="2" />
<text  x="898.61" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (1,828,282,810 samples, 0.34%)</title><rect x="971.9" y="661" width="4.0" height="15.0" fill="rgb(238,72,7)" rx="2" ry="2" />
<text  x="974.93" y="671.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (808,080,800 samples, 0.15%)</title><rect x="54.8" y="901" width="1.8" height="15.0" fill="rgb(237,224,7)" rx="2" ry="2" />
<text  x="57.79" y="911.5" ></text>
</g>
<g >
<title>rocksdb::IsValueType (50,505,050 samples, 0.01%)</title><rect x="1099.3" y="645" width="0.1" height="15.0" fill="rgb(237,220,54)" rx="2" ry="2" />
<text  x="1102.33" y="655.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (111,111,110 samples, 0.02%)</title><rect x="786.0" y="437" width="0.3" height="15.0" fill="rgb(228,61,25)" rx="2" ry="2" />
<text  x="789.02" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::_M_ptr (191,919,190 samples, 0.04%)</title><rect x="1144.9" y="597" width="0.4" height="15.0" fill="rgb(217,207,36)" rx="2" ry="2" />
<text  x="1147.92" y="607.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::operator= (60,606,060 samples, 0.01%)</title><rect x="45.0" y="837" width="0.1" height="15.0" fill="rgb(231,135,4)" rx="2" ry="2" />
<text  x="47.97" y="847.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (70,707,070 samples, 0.01%)</title><rect x="1178.5" y="597" width="0.2" height="15.0" fill="rgb(237,184,12)" rx="2" ry="2" />
<text  x="1181.55" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (171,717,170 samples, 0.03%)</title><rect x="1003.4" y="613" width="0.4" height="15.0" fill="rgb(211,95,16)" rx="2" ry="2" />
<text  x="1006.45" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (191,919,190 samples, 0.04%)</title><rect x="863.1" y="565" width="0.4" height="15.0" fill="rgb(217,132,49)" rx="2" ry="2" />
<text  x="866.08" y="575.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (50,505,050 samples, 0.01%)</title><rect x="165.7" y="789" width="0.1" height="15.0" fill="rgb(243,207,9)" rx="2" ry="2" />
<text  x="168.68" y="799.5" ></text>
</g>
<g >
<title>skb_do_copy_data_nocache (171,717,170 samples, 0.03%)</title><rect x="689.9" y="389" width="0.4" height="15.0" fill="rgb(233,172,33)" rx="2" ry="2" />
<text  x="692.94" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (50,505,050 samples, 0.01%)</title><rect x="992.7" y="501" width="0.1" height="15.0" fill="rgb(235,83,27)" rx="2" ry="2" />
<text  x="995.66" y="511.5" ></text>
</g>
<g >
<title>do_user_addr_fault (171,717,170 samples, 0.03%)</title><rect x="664.6" y="549" width="0.4" height="15.0" fill="rgb(237,57,16)" rx="2" ry="2" />
<text  x="667.64" y="559.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (90,909,090 samples, 0.02%)</title><rect x="855.0" y="453" width="0.2" height="15.0" fill="rgb(208,137,17)" rx="2" ry="2" />
<text  x="858.04" y="463.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::IsDeleteRangeSentinelKey (50,505,050 samples, 0.01%)</title><rect x="757.3" y="613" width="0.1" height="15.0" fill="rgb(230,16,27)" rx="2" ry="2" />
<text  x="760.28" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (333,333,330 samples, 0.06%)</title><rect x="837.1" y="517" width="0.8" height="15.0" fill="rgb(210,151,39)" rx="2" ry="2" />
<text  x="840.14" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_ptr (464,646,460 samples, 0.09%)</title><rect x="790.3" y="517" width="1.0" height="15.0" fill="rgb(212,22,54)" rx="2" ry="2" />
<text  x="793.29" y="527.5" ></text>
</g>
<g >
<title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Release (90,909,090 samples, 0.02%)</title><rect x="768.9" y="405" width="0.2" height="15.0" fill="rgb(237,94,3)" rx="2" ry="2" />
<text  x="771.89" y="415.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (90,909,090 samples, 0.02%)</title><rect x="40.1" y="645" width="0.2" height="15.0" fill="rgb(243,37,35)" rx="2" ry="2" />
<text  x="43.13" y="655.5" ></text>
</g>
<g >
<title>do_writepages (90,909,090 samples, 0.02%)</title><rect x="661.2" y="517" width="0.2" height="15.0" fill="rgb(236,135,19)" rx="2" ry="2" />
<text  x="664.16" y="527.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::Next (3,616,161,580 samples, 0.67%)</title><rect x="137.4" y="725" width="7.9" height="15.0" fill="rgb(223,32,0)" rx="2" ry="2" />
<text  x="140.40" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (494,949,490 samples, 0.09%)</title><rect x="1108.9" y="565" width="1.1" height="15.0" fill="rgb(238,124,38)" rx="2" ry="2" />
<text  x="1111.91" y="575.5" ></text>
</g>
<g >
<title>schedule (3,686,868,650 samples, 0.68%)</title><rect x="205.7" y="773" width="8.1" height="15.0" fill="rgb(212,217,4)" rx="2" ry="2" />
<text  x="208.73" y="783.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::WriteBatch::ProtectionInfo*, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="35.0" y="773" width="0.1" height="15.0" fill="rgb(224,85,15)" rx="2" ry="2" />
<text  x="38.00" y="783.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::HeapItem::key (262,626,260 samples, 0.05%)</title><rect x="919.7" y="613" width="0.5" height="15.0" fill="rgb(253,70,11)" rx="2" ry="2" />
<text  x="922.65" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (101,010,100 samples, 0.02%)</title><rect x="732.0" y="549" width="0.2" height="15.0" fill="rgb(211,170,26)" rx="2" ry="2" />
<text  x="734.98" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="553.5" y="757" width="0.1" height="15.0" fill="rgb(240,212,1)" rx="2" ry="2" />
<text  x="556.53" y="767.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (50,505,050 samples, 0.01%)</title><rect x="782.0" y="485" width="0.1" height="15.0" fill="rgb(242,127,33)" rx="2" ry="2" />
<text  x="784.97" y="495.5" ></text>
</g>
<g >
<title>rocksdb::lru_cache::LRUCacheShard::InsertItem (232,323,230 samples, 0.04%)</title><rect x="811.6" y="453" width="0.5" height="15.0" fill="rgb(247,9,54)" rx="2" ry="2" />
<text  x="814.61" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (131,313,130 samples, 0.02%)</title><rect x="56.2" y="837" width="0.3" height="15.0" fill="rgb(205,218,27)" rx="2" ry="2" />
<text  x="59.20" y="847.5" ></text>
</g>
<g >
<title>_int_free (111,111,110 samples, 0.02%)</title><rect x="10.9" y="997" width="0.2" height="15.0" fill="rgb(254,97,0)" rx="2" ry="2" />
<text  x="13.86" y="1007.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (70,707,070 samples, 0.01%)</title><rect x="1178.5" y="517" width="0.2" height="15.0" fill="rgb(229,23,36)" rx="2" ry="2" />
<text  x="1181.55" y="527.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyData::internal_comparator (50,505,050 samples, 0.01%)</title><rect x="1064.4" y="629" width="0.1" height="15.0" fill="rgb(222,127,40)" rx="2" ry="2" />
<text  x="1067.43" y="639.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator (131,313,130 samples, 0.02%)</title><rect x="566.5" y="933" width="0.2" height="15.0" fill="rgb(239,140,23)" rx="2" ry="2" />
<text  x="569.46" y="943.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="541.0" y="869" width="0.3" height="15.0" fill="rgb(253,42,39)" rx="2" ry="2" />
<text  x="544.02" y="879.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; (262,626,260 samples, 0.05%)</title><rect x="197.2" y="805" width="0.6" height="15.0" fill="rgb(242,226,19)" rx="2" ry="2" />
<text  x="200.23" y="815.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (444,444,440 samples, 0.08%)</title><rect x="1035.0" y="565" width="0.9" height="15.0" fill="rgb(214,6,41)" rx="2" ry="2" />
<text  x="1037.96" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (70,707,070 samples, 0.01%)</title><rect x="660.4" y="981" width="0.2" height="15.0" fill="rgb(247,146,42)" rx="2" ry="2" />
<text  x="663.41" y="991.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (818,181,810 samples, 0.15%)</title><rect x="345.8" y="869" width="1.7" height="15.0" fill="rgb(241,161,31)" rx="2" ry="2" />
<text  x="348.75" y="879.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (212,121,210 samples, 0.04%)</title><rect x="857.1" y="485" width="0.5" height="15.0" fill="rgb(218,134,26)" rx="2" ry="2" />
<text  x="860.09" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SstPartitioner, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::operator bool (1,585,858,570 samples, 0.29%)</title><rect x="1078.9" y="629" width="3.5" height="15.0" fill="rgb(242,42,49)" rx="2" ry="2" />
<text  x="1081.92" y="639.5" ></text>
</g>
<g >
<title>memcmp@plt (101,010,100 samples, 0.02%)</title><rect x="722.7" y="517" width="0.2" height="15.0" fill="rgb(243,101,20)" rx="2" ry="2" />
<text  x="725.66" y="527.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (222,222,220 samples, 0.04%)</title><rect x="1096.9" y="629" width="0.5" height="15.0" fill="rgb(225,15,15)" rx="2" ry="2" />
<text  x="1099.89" y="639.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::use_direct_io (111,111,110 samples, 0.02%)</title><rect x="48.1" y="821" width="0.3" height="15.0" fill="rgb(240,32,19)" rx="2" ry="2" />
<text  x="51.12" y="831.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_level (121,212,120 samples, 0.02%)</title><rect x="123.3" y="661" width="0.3" height="15.0" fill="rgb(214,19,5)" rx="2" ry="2" />
<text  x="126.30" y="671.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="847.6" y="421" width="0.3" height="15.0" fill="rgb(215,212,25)" rx="2" ry="2" />
<text  x="850.62" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::operator (595,959,590 samples, 0.11%)</title><rect x="946.2" y="645" width="1.3" height="15.0" fill="rgb(213,146,39)" rx="2" ry="2" />
<text  x="949.21" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (121,212,120 samples, 0.02%)</title><rect x="801.4" y="517" width="0.2" height="15.0" fill="rgb(232,224,8)" rx="2" ry="2" />
<text  x="804.35" y="527.5" ></text>
</g>
<g >
<title>rocksdb:high (13,979,797,840 samples, 2.58%)</title><rect x="661.1" y="1029" width="30.5" height="15.0" fill="rgb(231,44,17)" rx="2" ry="2" />
<text  x="664.13" y="1039.5" >ro..</text>
</g>
<g >
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters (101,010,100 samples, 0.02%)</title><rect x="540.1" y="901" width="0.2" height="15.0" fill="rgb(221,150,54)" rx="2" ry="2" />
<text  x="543.08" y="911.5" ></text>
</g>
<g >
<title>vfs_write (454,545,450 samples, 0.08%)</title><rect x="689.6" y="501" width="1.0" height="15.0" fill="rgb(208,55,19)" rx="2" ry="2" />
<text  x="692.56" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::get (181,818,180 samples, 0.03%)</title><rect x="863.5" y="565" width="0.4" height="15.0" fill="rgb(242,97,2)" rx="2" ry="2" />
<text  x="866.54" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::DynamicBloom*, std::default_delete&lt;rocksdb::DynamicBloom&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="166.7" y="773" width="0.2" height="15.0" fill="rgb(212,127,42)" rx="2" ry="2" />
<text  x="169.73" y="783.5" ></text>
</g>
<g >
<title>rocksdb::VarintLength (111,111,110 samples, 0.02%)</title><rect x="1025.2" y="581" width="0.2" height="15.0" fill="rgb(211,199,14)" rx="2" ry="2" />
<text  x="1028.16" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::IndexBuilder*, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="1056.0" y="565" width="0.1" height="15.0" fill="rgb(232,27,38)" rx="2" ry="2" />
<text  x="1058.97" y="575.5" ></text>
</g>
<g >
<title>std::map&lt;rocksdb::MemTable*, rocksdb::MemTablePostProcessInfo, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::end (70,707,070 samples, 0.01%)</title><rect x="75.1" y="789" width="0.2" height="15.0" fill="rgb(223,92,22)" rx="2" ry="2" />
<text  x="78.10" y="799.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (90,909,090 samples, 0.02%)</title><rect x="553.0" y="773" width="0.2" height="15.0" fill="rgb(247,180,15)" rx="2" ry="2" />
<text  x="556.03" y="783.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Valid (101,010,100 samples, 0.02%)</title><rect x="776.4" y="533" width="0.2" height="15.0" fill="rgb(254,207,14)" rx="2" ry="2" />
<text  x="779.35" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (424,242,420 samples, 0.08%)</title><rect x="1000.9" y="549" width="0.9" height="15.0" fill="rgb(221,224,30)" rx="2" ry="2" />
<text  x="1003.87" y="559.5" ></text>
</g>
<g >
<title>rocksdb::Cleanable::Reset (212,121,210 samples, 0.04%)</title><rect x="897.4" y="629" width="0.5" height="15.0" fill="rgb(228,159,51)" rx="2" ry="2" />
<text  x="900.41" y="639.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (60,606,060 samples, 0.01%)</title><rect x="243.2" y="853" width="0.1" height="15.0" fill="rgb(210,65,30)" rx="2" ry="2" />
<text  x="246.17" y="863.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, false&gt;::_M_head (161,616,160 samples, 0.03%)</title><rect x="933.6" y="549" width="0.3" height="15.0" fill="rgb(236,186,22)" rx="2" ry="2" />
<text  x="936.57" y="559.5" ></text>
</g>
<g >
<title>net_rx_action (80,808,080 samples, 0.01%)</title><rect x="690.3" y="181" width="0.2" height="15.0" fill="rgb(246,82,31)" rx="2" ry="2" />
<text  x="693.34" y="191.5" ></text>
</g>
<g >
<title>rocksdb::VarintLength (50,505,050 samples, 0.01%)</title><rect x="170.6" y="821" width="0.1" height="15.0" fill="rgb(244,148,19)" rx="2" ry="2" />
<text  x="173.63" y="831.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="780.2" y="453" width="0.3" height="15.0" fill="rgb(236,110,12)" rx="2" ry="2" />
<text  x="783.23" y="463.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;rocksdb::SavePoints&gt;, true&gt;::_Head_base (60,606,060 samples, 0.01%)</title><rect x="563.3" y="837" width="0.2" height="15.0" fill="rgb(220,81,34)" rx="2" ry="2" />
<text  x="566.33" y="847.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (50,505,050 samples, 0.01%)</title><rect x="168.6" y="741" width="0.2" height="15.0" fill="rgb(220,43,30)" rx="2" ry="2" />
<text  x="171.65" y="751.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (171,717,170 samples, 0.03%)</title><rect x="664.6" y="581" width="0.4" height="15.0" fill="rgb(238,172,9)" rx="2" ry="2" />
<text  x="667.64" y="591.5" ></text>
</g>
<g >
<title>std::operator!=&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt; (212,121,210 samples, 0.04%)</title><rect x="962.7" y="661" width="0.4" height="15.0" fill="rgb(233,106,34)" rx="2" ry="2" />
<text  x="965.69" y="671.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (70,707,070 samples, 0.01%)</title><rect x="690.3" y="53" width="0.2" height="15.0" fill="rgb(219,18,1)" rx="2" ry="2" />
<text  x="693.34" y="63.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (626,262,620 samples, 0.12%)</title><rect x="1132.3" y="549" width="1.4" height="15.0" fill="rgb(247,24,52)" rx="2" ry="2" />
<text  x="1135.32" y="559.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::CurrentSizeEstimate (414,141,410 samples, 0.08%)</title><rect x="1021.0" y="613" width="0.9" height="15.0" fill="rgb(234,211,1)" rx="2" ry="2" />
<text  x="1024.02" y="623.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::downheap (60,606,060 samples, 0.01%)</title><rect x="702.8" y="613" width="0.2" height="15.0" fill="rgb(224,117,36)" rx="2" ry="2" />
<text  x="705.84" y="623.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (242,424,240 samples, 0.04%)</title><rect x="55.7" y="789" width="0.5" height="15.0" fill="rgb(209,205,15)" rx="2" ry="2" />
<text  x="58.67" y="799.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::get (999,999,990 samples, 0.18%)</title><rect x="1048.6" y="597" width="2.2" height="15.0" fill="rgb(218,21,22)" rx="2" ry="2" />
<text  x="1051.64" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::begin (363,636,360 samples, 0.07%)</title><rect x="1089.1" y="613" width="0.8" height="15.0" fill="rgb(226,0,35)" rx="2" ry="2" />
<text  x="1092.12" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Block_kData::Block (141,414,140 samples, 0.03%)</title><rect x="804.6" y="453" width="0.3" height="15.0" fill="rgb(231,210,0)" rx="2" ry="2" />
<text  x="807.59" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (212,121,210 samples, 0.04%)</title><rect x="913.1" y="581" width="0.4" height="15.0" fill="rgb(235,192,23)" rx="2" ry="2" />
<text  x="916.07" y="591.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (111,111,110 samples, 0.02%)</title><rect x="1136.9" y="549" width="0.3" height="15.0" fill="rgb(249,47,5)" rx="2" ry="2" />
<text  x="1139.93" y="559.5" ></text>
</g>
<g >
<title>release_pages (101,010,100 samples, 0.02%)</title><rect x="690.8" y="469" width="0.3" height="15.0" fill="rgb(251,33,45)" rx="2" ry="2" />
<text  x="693.84" y="479.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (393,939,390 samples, 0.07%)</title><rect x="876.2" y="629" width="0.9" height="15.0" fill="rgb(249,172,44)" rx="2" ry="2" />
<text  x="879.23" y="639.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (223,323,230,090 samples, 41.26%)</title><rect x="691.8" y="805" width="486.9" height="15.0" fill="rgb(212,73,27)" rx="2" ry="2" />
<text  x="694.81" y="815.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::back@plt (101,010,100 samples, 0.02%)</title><rect x="1155.7" y="645" width="0.3" height="15.0" fill="rgb(254,215,22)" rx="2" ry="2" />
<text  x="1158.73" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::end (212,121,210 samples, 0.04%)</title><rect x="900.2" y="597" width="0.4" height="15.0" fill="rgb(215,189,41)" rx="2" ry="2" />
<text  x="903.19" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (2,050,505,030 samples, 0.38%)</title><rect x="853.5" y="565" width="4.4" height="15.0" fill="rgb(206,80,54)" rx="2" ry="2" />
<text  x="856.48" y="575.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_context (50,505,050 samples, 0.01%)</title><rect x="151.5" y="725" width="0.1" height="15.0" fill="rgb(232,148,37)" rx="2" ry="2" />
<text  x="154.49" y="735.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::operator (4,363,636,320 samples, 0.81%)</title><rect x="639.8" y="917" width="9.5" height="15.0" fill="rgb(217,134,19)" rx="2" ry="2" />
<text  x="642.77" y="927.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockHashIndexBuilder::Valid (50,505,050 samples, 0.01%)</title><rect x="1023.9" y="581" width="0.1" height="15.0" fill="rgb(209,148,44)" rx="2" ry="2" />
<text  x="1026.86" y="591.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::FileChecksumGenerator, std::default_delete&lt;rocksdb::FileChecksumGenerator&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="994.9" y="533" width="0.1" height="15.0" fill="rgb(221,151,0)" rx="2" ry="2" />
<text  x="997.86" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::VersionSet, std::default_delete&lt;rocksdb::VersionSet&gt; &gt;::operator (262,626,260 samples, 0.05%)</title><rect x="545.3" y="901" width="0.5" height="15.0" fill="rgb(247,89,47)" rx="2" ry="2" />
<text  x="548.25" y="911.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (90,909,090 samples, 0.02%)</title><rect x="1020.2" y="613" width="0.2" height="15.0" fill="rgb(227,12,35)" rx="2" ry="2" />
<text  x="1023.21" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (797,979,790 samples, 0.15%)</title><rect x="1108.3" y="613" width="1.8" height="15.0" fill="rgb(218,36,26)" rx="2" ry="2" />
<text  x="1111.34" y="623.5" ></text>
</g>
<g >
<title>xas_load (131,313,130 samples, 0.02%)</title><rect x="40.7" y="597" width="0.2" height="15.0" fill="rgb(214,189,52)" rx="2" ry="2" />
<text  x="43.66" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (141,414,140 samples, 0.03%)</title><rect x="857.6" y="549" width="0.3" height="15.0" fill="rgb(228,102,49)" rx="2" ry="2" />
<text  x="860.64" y="559.5" ></text>
</g>
<g >
<title>std::random_device::_M_init (5,464,646,410 samples, 1.01%)</title><rect x="11.3" y="997" width="11.9" height="15.0" fill="rgb(251,158,43)" rx="2" ry="2" />
<text  x="14.26" y="1007.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::get (242,424,240 samples, 0.04%)</title><rect x="1063.0" y="597" width="0.5" height="15.0" fill="rgb(236,30,42)" rx="2" ry="2" />
<text  x="1065.95" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FilePrefetchBuffer, std::default_delete&lt;rocksdb::FilePrefetchBuffer&gt; &gt;::get (50,505,050 samples, 0.01%)</title><rect x="812.7" y="469" width="0.1" height="15.0" fill="rgb(209,103,8)" rx="2" ry="2" />
<text  x="815.69" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (414,141,410 samples, 0.08%)</title><rect x="909.4" y="581" width="0.9" height="15.0" fill="rgb(222,146,32)" rx="2" ry="2" />
<text  x="912.44" y="591.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::FindKeyForward (4,424,242,380 samples, 0.82%)</title><rect x="760.6" y="533" width="9.7" height="15.0" fill="rgb(245,19,53)" rx="2" ry="2" />
<text  x="763.61" y="543.5" ></text>
</g>
<g >
<title>XXH3_hashLong_internal_loop (191,919,190 samples, 0.04%)</title><rect x="762.4" y="309" width="0.4" height="15.0" fill="rgb(235,165,47)" rx="2" ry="2" />
<text  x="765.37" y="319.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;45ul&gt; (373,737,370 samples, 0.07%)</title><rect x="961.0" y="661" width="0.8" height="15.0" fill="rgb(254,174,40)" rx="2" ry="2" />
<text  x="964.01" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (70,707,070 samples, 0.01%)</title><rect x="164.8" y="741" width="0.1" height="15.0" fill="rgb(237,6,33)" rx="2" ry="2" />
<text  x="167.79" y="751.5" ></text>
</g>
<g >
<title>rocksdb::BlockCreateContext::Create (202,020,200 samples, 0.04%)</title><rect x="761.5" y="437" width="0.5" height="15.0" fill="rgb(247,216,13)" rx="2" ry="2" />
<text  x="764.53" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::BlobGarbageMeter*, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt; (252,525,250 samples, 0.05%)</title><rect x="1149.9" y="581" width="0.5" height="15.0" fill="rgb(244,191,43)" rx="2" ry="2" />
<text  x="1152.88" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (252,525,250 samples, 0.05%)</title><rect x="1115.7" y="645" width="0.5" height="15.0" fill="rgb(241,25,44)" rx="2" ry="2" />
<text  x="1118.70" y="655.5" ></text>
</g>
<g >
<title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (60,606,060 samples, 0.01%)</title><rect x="720.8" y="533" width="0.1" height="15.0" fill="rgb(228,140,5)" rx="2" ry="2" />
<text  x="723.77" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (333,333,330 samples, 0.06%)</title><rect x="928.0" y="629" width="0.7" height="15.0" fill="rgb(220,118,41)" rx="2" ry="2" />
<text  x="931.02" y="639.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (151,515,150 samples, 0.03%)</title><rect x="753.5" y="565" width="0.3" height="15.0" fill="rgb(233,167,34)" rx="2" ry="2" />
<text  x="756.50" y="575.5" ></text>
</g>
<g >
<title>ip_finish_output2 (90,909,090 samples, 0.02%)</title><rect x="690.3" y="245" width="0.2" height="15.0" fill="rgb(227,195,20)" rx="2" ry="2" />
<text  x="693.34" y="255.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (242,424,240 samples, 0.04%)</title><rect x="858.6" y="549" width="0.6" height="15.0" fill="rgb(205,64,38)" rx="2" ry="2" />
<text  x="861.63" y="559.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (121,212,120 samples, 0.02%)</title><rect x="542.8" y="821" width="0.2" height="15.0" fill="rgb(248,79,16)" rx="2" ry="2" />
<text  x="545.76" y="831.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::end (70,707,070 samples, 0.01%)</title><rect x="62.2" y="853" width="0.1" height="15.0" fill="rgb(226,199,17)" rx="2" ry="2" />
<text  x="65.19" y="863.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatch::Put (5,979,797,920 samples, 1.10%)</title><rect x="549.8" y="933" width="13.0" height="15.0" fill="rgb(251,188,11)" rx="2" ry="2" />
<text  x="552.81" y="943.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::SstPartitioner*, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt; (494,949,490 samples, 0.09%)</title><rect x="1080.9" y="565" width="1.1" height="15.0" fill="rgb(206,48,10)" rx="2" ry="2" />
<text  x="1083.92" y="575.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (50,505,050 samples, 0.01%)</title><rect x="819.1" y="485" width="0.1" height="15.0" fill="rgb(226,22,14)" rx="2" ry="2" />
<text  x="822.12" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::end (50,505,050 samples, 0.01%)</title><rect x="572.4" y="965" width="0.1" height="15.0" fill="rgb(218,77,40)" rx="2" ry="2" />
<text  x="575.38" y="975.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (80,808,080 samples, 0.01%)</title><rect x="992.2" y="549" width="0.1" height="15.0" fill="rgb(222,57,8)" rx="2" ry="2" />
<text  x="995.15" y="559.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (939,393,930 samples, 0.17%)</title><rect x="1033.9" y="581" width="2.0" height="15.0" fill="rgb(222,162,4)" rx="2" ry="2" />
<text  x="1036.88" y="591.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="345.4" y="837" width="0.3" height="15.0" fill="rgb(217,127,34)" rx="2" ry="2" />
<text  x="348.44" y="847.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::Writer::ShouldWriteToMemtable (90,909,090 samples, 0.02%)</title><rect x="542.4" y="901" width="0.2" height="15.0" fill="rgb(246,134,4)" rx="2" ry="2" />
<text  x="545.39" y="911.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::SstPartitioner*, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt; (868,686,860 samples, 0.16%)</title><rect x="1080.1" y="581" width="1.9" height="15.0" fill="rgb(233,198,13)" rx="2" ry="2" />
<text  x="1083.11" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (141,414,140 samples, 0.03%)</title><rect x="543.4" y="885" width="0.3" height="15.0" fill="rgb(244,110,54)" rx="2" ry="2" />
<text  x="546.36" y="895.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (262,626,260 samples, 0.05%)</title><rect x="49.7" y="725" width="0.5" height="15.0" fill="rgb(239,173,2)" rx="2" ry="2" />
<text  x="52.66" y="735.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="795.0" y="437" width="0.3" height="15.0" fill="rgb(218,210,22)" rx="2" ry="2" />
<text  x="797.96" y="447.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::empty (919,191,910 samples, 0.17%)</title><rect x="740.6" y="597" width="2.0" height="15.0" fill="rgb(224,174,20)" rx="2" ry="2" />
<text  x="743.63" y="607.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::status (161,616,160 samples, 0.03%)</title><rect x="867.1" y="629" width="0.4" height="15.0" fill="rgb(222,216,4)" rx="2" ry="2" />
<text  x="870.13" y="639.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="794.1" y="437" width="0.2" height="15.0" fill="rgb(216,229,34)" rx="2" ry="2" />
<text  x="797.15" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (484,848,480 samples, 0.09%)</title><rect x="836.9" y="549" width="1.1" height="15.0" fill="rgb(247,16,23)" rx="2" ry="2" />
<text  x="839.94" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (292,929,290 samples, 0.05%)</title><rect x="829.4" y="469" width="0.6" height="15.0" fill="rgb(228,88,32)" rx="2" ry="2" />
<text  x="832.41" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_len&lt;unsigned long&gt; (161,616,160 samples, 0.03%)</title><rect x="570.6" y="965" width="0.4" height="15.0" fill="rgb(210,25,34)" rx="2" ry="2" />
<text  x="573.64" y="975.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="849.8" y="437" width="0.2" height="15.0" fill="rgb(247,109,15)" rx="2" ry="2" />
<text  x="852.78" y="447.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::unordered_map (101,010,100 samples, 0.02%)</title><rect x="992.7" y="517" width="0.2" height="15.0" fill="rgb(231,226,39)" rx="2" ry="2" />
<text  x="995.66" y="527.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (223,323,230,090 samples, 41.26%)</title><rect x="691.8" y="981" width="486.9" height="15.0" fill="rgb(227,8,39)" rx="2" ry="2" />
<text  x="694.81" y="991.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::SavePoints*, std::default_delete&lt;rocksdb::SavePoints&gt; &gt;::_Tuple_impl (80,808,080 samples, 0.01%)</title><rect x="563.3" y="853" width="0.2" height="15.0" fill="rgb(242,14,17)" rx="2" ry="2" />
<text  x="566.31" y="863.5" ></text>
</g>
<g >
<title>rocksdb::PlaceholderCacheInterface&lt; (202,020,200 samples, 0.04%)</title><rect x="767.6" y="469" width="0.4" height="15.0" fill="rgb(241,130,0)" rx="2" ry="2" />
<text  x="770.59" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (151,515,150 samples, 0.03%)</title><rect x="890.9" y="597" width="0.3" height="15.0" fill="rgb(208,54,38)" rx="2" ry="2" />
<text  x="893.89" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (414,141,410 samples, 0.08%)</title><rect x="856.7" y="517" width="0.9" height="15.0" fill="rgb(238,200,5)" rx="2" ry="2" />
<text  x="859.71" y="527.5" ></text>
</g>
<g >
<title>rocksdb::PerfStepTimer::Stop (50,505,050 samples, 0.01%)</title><rect x="54.1" y="885" width="0.1" height="15.0" fill="rgb(216,124,30)" rx="2" ry="2" />
<text  x="57.07" y="895.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (90,909,090 samples, 0.02%)</title><rect x="689.7" y="389" width="0.2" height="15.0" fill="rgb(206,146,32)" rx="2" ry="2" />
<text  x="692.67" y="399.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status (3,414,141,380 samples, 0.63%)</title><rect x="777.2" y="549" width="7.5" height="15.0" fill="rgb(233,19,47)" rx="2" ry="2" />
<text  x="780.24" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::VersionSet, std::default_delete&lt;rocksdb::VersionSet&gt; &gt;::get (191,919,190 samples, 0.04%)</title><rect x="545.4" y="885" width="0.4" height="15.0" fill="rgb(212,44,25)" rx="2" ry="2" />
<text  x="548.41" y="895.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::operator bool (262,626,260 samples, 0.05%)</title><rect x="1062.9" y="613" width="0.6" height="15.0" fill="rgb(241,170,29)" rx="2" ry="2" />
<text  x="1065.91" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (414,141,410 samples, 0.08%)</title><rect x="1037.8" y="597" width="0.9" height="15.0" fill="rgb(217,70,18)" rx="2" ry="2" />
<text  x="1040.76" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (161,616,160 samples, 0.03%)</title><rect x="1107.9" y="629" width="0.4" height="15.0" fill="rgb(251,171,11)" rx="2" ry="2" />
<text  x="1110.92" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="787.3" y="389" width="0.2" height="15.0" fill="rgb(231,194,30)" rx="2" ry="2" />
<text  x="790.30" y="399.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::ResetDataIter (515,151,510 samples, 0.10%)</title><rect x="813.0" y="533" width="1.1" height="15.0" fill="rgb(226,124,15)" rx="2" ry="2" />
<text  x="816.02" y="543.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (272,727,270 samples, 0.05%)</title><rect x="1116.8" y="581" width="0.6" height="15.0" fill="rgb(244,162,43)" rx="2" ry="2" />
<text  x="1119.78" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;@plt (90,909,090 samples, 0.02%)</title><rect x="779.2" y="469" width="0.2" height="15.0" fill="rgb(215,211,9)" rx="2" ry="2" />
<text  x="782.17" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (50,505,050 samples, 0.01%)</title><rect x="45.0" y="821" width="0.1" height="15.0" fill="rgb(226,173,24)" rx="2" ry="2" />
<text  x="47.99" y="831.5" ></text>
</g>
<g >
<title>std::function&lt;void  (13,898,989,760 samples, 2.57%)</title><rect x="661.1" y="885" width="30.3" height="15.0" fill="rgb(238,40,54)" rx="2" ry="2" />
<text  x="664.13" y="895.5" >st..</text>
</g>
<g >
<title>rocksdb::Compaction::immutable_options (151,515,150 samples, 0.03%)</title><rect x="937.2" y="645" width="0.3" height="15.0" fill="rgb(218,23,22)" rx="2" ry="2" />
<text  x="940.18" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (161,616,160 samples, 0.03%)</title><rect x="792.0" y="549" width="0.3" height="15.0" fill="rgb(214,152,35)" rx="2" ry="2" />
<text  x="794.97" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (90,909,090 samples, 0.02%)</title><rect x="546.7" y="869" width="0.2" height="15.0" fill="rgb(215,217,4)" rx="2" ry="2" />
<text  x="549.66" y="879.5" ></text>
</g>
<g >
<title>__handle_mm_fault (121,212,120 samples, 0.02%)</title><rect x="664.7" y="517" width="0.3" height="15.0" fill="rgb(245,98,27)" rx="2" ry="2" />
<text  x="667.75" y="527.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey (1,353,535,340 samples, 0.25%)</title><rect x="714.3" y="549" width="3.0" height="15.0" fill="rgb(249,187,9)" rx="2" ry="2" />
<text  x="717.34" y="559.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt; const, rocksdb::CompactionMergingIterator::HeapItem* const&gt;::iterator_impl@plt (121,212,120 samples, 0.02%)</title><rect x="747.2" y="565" width="0.2" height="15.0" fill="rgb(221,9,28)" rx="2" ry="2" />
<text  x="750.18" y="575.5" ></text>
</g>
<g >
<title>rocksdb::SstFileManagerImpl::ScheduleFileDeletion (70,707,070 samples, 0.01%)</title><rect x="1178.5" y="677" width="0.2" height="15.0" fill="rgb(249,109,14)" rx="2" ry="2" />
<text  x="1181.55" y="687.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (242,424,240 samples, 0.04%)</title><rect x="49.7" y="709" width="0.5" height="15.0" fill="rgb(254,12,14)" rx="2" ry="2" />
<text  x="52.71" y="719.5" ></text>
</g>
<g >
<title>clear_page_orig (60,606,060 samples, 0.01%)</title><rect x="658.7" y="837" width="0.1" height="15.0" fill="rgb(245,20,32)" rx="2" ry="2" />
<text  x="661.67" y="847.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::NextAndGetResult (222,222,220 samples, 0.04%)</title><rect x="841.7" y="597" width="0.5" height="15.0" fill="rgb(222,39,52)" rx="2" ry="2" />
<text  x="844.67" y="607.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_head (181,818,180 samples, 0.03%)</title><rect x="945.3" y="549" width="0.4" height="15.0" fill="rgb(242,56,45)" rx="2" ry="2" />
<text  x="948.31" y="559.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::begin (222,222,220 samples, 0.04%)</title><rect x="745.3" y="565" width="0.5" height="15.0" fill="rgb(251,58,30)" rx="2" ry="2" />
<text  x="748.30" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::_M_ptr (111,111,110 samples, 0.02%)</title><rect x="557.4" y="853" width="0.2" height="15.0" fill="rgb(211,7,31)" rx="2" ry="2" />
<text  x="560.39" y="863.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::get_offset (60,606,060 samples, 0.01%)</title><rect x="1059.7" y="645" width="0.1" height="15.0" fill="rgb(226,191,24)" rx="2" ry="2" />
<text  x="1062.72" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::FilterBlockBuilder*, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;@plt (90,909,090 samples, 0.02%)</title><rect x="1050.6" y="581" width="0.2" height="15.0" fill="rgb(219,64,38)" rx="2" ry="2" />
<text  x="1053.62" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (131,313,130 samples, 0.02%)</title><rect x="862.4" y="485" width="0.3" height="15.0" fill="rgb(220,142,51)" rx="2" ry="2" />
<text  x="865.40" y="495.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::value (111,111,110 samples, 0.02%)</title><rect x="980.0" y="661" width="0.3" height="15.0" fill="rgb(249,141,44)" rx="2" ry="2" />
<text  x="983.04" y="671.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000000l&gt;, void&gt; (4,595,959,550 samples, 0.85%)</title><rect x="335.4" y="837" width="10.0" height="15.0" fill="rgb(226,96,29)" rx="2" ry="2" />
<text  x="338.42" y="847.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SuperVersion, std::default_delete&lt;rocksdb::SuperVersion&gt; &gt;::unique_ptr&lt;std::default_delete&lt;rocksdb::SuperVersion&gt;, void&gt; (121,212,120 samples, 0.02%)</title><rect x="31.0" y="869" width="0.2" height="15.0" fill="rgb(250,163,14)" rx="2" ry="2" />
<text  x="33.97" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_mbegin (262,626,260 samples, 0.05%)</title><rect x="905.1" y="581" width="0.6" height="15.0" fill="rgb(224,105,36)" rx="2" ry="2" />
<text  x="908.10" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;rocksdb::MemTable* const&amp;&gt;, std::tuple&lt;&gt; &gt; (2,070,707,050 samples, 0.38%)</title><rect x="69.9" y="789" width="4.6" height="15.0" fill="rgb(251,77,28)" rx="2" ry="2" />
<text  x="72.94" y="799.5" ></text>
</g>
<g >
<title>XXH3_64bits_internal (202,020,200 samples, 0.04%)</title><rect x="762.4" y="357" width="0.4" height="15.0" fill="rgb(232,200,3)" rx="2" ry="2" />
<text  x="765.37" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10_impl&lt;unsigned long&gt; (575,757,570 samples, 0.11%)</title><rect x="569.4" y="965" width="1.2" height="15.0" fill="rgb(237,66,17)" rx="2" ry="2" />
<text  x="572.39" y="975.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (242,424,240 samples, 0.04%)</title><rect x="778.4" y="469" width="0.6" height="15.0" fill="rgb(213,222,33)" rx="2" ry="2" />
<text  x="781.45" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Block::NewDataIterator (222,222,220 samples, 0.04%)</title><rect x="760.9" y="453" width="0.5" height="15.0" fill="rgb(235,30,15)" rx="2" ry="2" />
<text  x="763.92" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::destroy&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="62.9" y="789" width="0.1" height="15.0" fill="rgb(210,181,12)" rx="2" ry="2" />
<text  x="65.90" y="799.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (313,131,310 samples, 0.06%)</title><rect x="49.6" y="789" width="0.6" height="15.0" fill="rgb(210,108,11)" rx="2" ry="2" />
<text  x="52.55" y="799.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="852.5" y="501" width="0.1" height="15.0" fill="rgb(206,110,31)" rx="2" ry="2" />
<text  x="855.53" y="511.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::status (1,616,161,600 samples, 0.30%)</title><rect x="999.9" y="613" width="3.5" height="15.0" fill="rgb(252,57,11)" rx="2" ry="2" />
<text  x="1002.90" y="623.5" ></text>
</g>
<g >
<title>_int_malloc (60,606,060 samples, 0.01%)</title><rect x="1188.6" y="1013" width="0.1" height="15.0" fill="rgb(235,178,18)" rx="2" ry="2" />
<text  x="1191.59" y="1023.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::WriteBuffered (2,717,171,690 samples, 0.50%)</title><rect x="38.0" y="837" width="5.9" height="15.0" fill="rgb(225,197,38)" rx="2" ry="2" />
<text  x="41.01" y="847.5" ></text>
</g>
<g >
<title>rocksdb::ThreadPoolImpl::Impl::BGThread (223,323,230,090 samples, 41.26%)</title><rect x="691.8" y="901" width="486.9" height="15.0" fill="rgb(217,173,30)" rx="2" ry="2" />
<text  x="694.81" y="911.5" >rocksdb::ThreadPoolImpl::Impl::BGThread</text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (363,636,360 samples, 0.07%)</title><rect x="946.7" y="597" width="0.8" height="15.0" fill="rgb(249,29,50)" rx="2" ry="2" />
<text  x="949.70" y="607.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1,707,070,690 samples, 0.32%)</title><rect x="323.6" y="853" width="3.7" height="15.0" fill="rgb(214,220,20)" rx="2" ry="2" />
<text  x="326.58" y="863.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::NextImpl (1,626,262,610 samples, 0.30%)</title><rect x="771.4" y="517" width="3.5" height="15.0" fill="rgb(210,177,51)" rx="2" ry="2" />
<text  x="774.40" y="527.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::ParseNextKey&lt;rocksdb::DecodeEntry&gt; (1,515,151,500 samples, 0.28%)</title><rect x="817.6" y="517" width="3.3" height="15.0" fill="rgb(248,8,40)" rx="2" ry="2" />
<text  x="820.58" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (707,070,700 samples, 0.13%)</title><rect x="846.4" y="485" width="1.5" height="15.0" fill="rgb(218,10,24)" rx="2" ry="2" />
<text  x="849.39" y="495.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::PurgeObsoleteFiles (272,727,270 samples, 0.05%)</title><rect x="690.8" y="725" width="0.6" height="15.0" fill="rgb(214,71,22)" rx="2" ry="2" />
<text  x="693.84" y="735.5" ></text>
</g>
<g >
<title>rocksdb::lru_cache::LRUCacheShard::InsertItem (121,212,120 samples, 0.02%)</title><rect x="767.6" y="421" width="0.3" height="15.0" fill="rgb(216,123,35)" rx="2" ry="2" />
<text  x="770.63" y="431.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::Next (797,979,790 samples, 0.15%)</title><rect x="665.4" y="565" width="1.8" height="15.0" fill="rgb(218,68,45)" rx="2" ry="2" />
<text  x="668.43" y="575.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="854.2" y="485" width="0.2" height="15.0" fill="rgb(216,90,33)" rx="2" ry="2" />
<text  x="857.25" y="495.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (90,909,090 samples, 0.02%)</title><rect x="942.1" y="629" width="0.2" height="15.0" fill="rgb(222,139,23)" rx="2" ry="2" />
<text  x="945.12" y="639.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::BlobGarbageMeter*, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;@plt (141,414,140 samples, 0.03%)</title><rect x="1148.6" y="597" width="0.3" height="15.0" fill="rgb(248,119,31)" rx="2" ry="2" />
<text  x="1151.62" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (373,737,370 samples, 0.07%)</title><rect x="973.7" y="597" width="0.8" height="15.0" fill="rgb(216,171,37)" rx="2" ry="2" />
<text  x="976.65" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (50,505,050 samples, 0.01%)</title><rect x="222.9" y="853" width="0.1" height="15.0" fill="rgb(251,17,32)" rx="2" ry="2" />
<text  x="225.93" y="863.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (70,707,070 samples, 0.01%)</title><rect x="50.1" y="485" width="0.1" height="15.0" fill="rgb(218,11,45)" rx="2" ry="2" />
<text  x="53.08" y="495.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (1,020,202,010 samples, 0.19%)</title><rect x="661.8" y="597" width="2.2" height="15.0" fill="rgb(222,189,34)" rx="2" ry="2" />
<text  x="664.75" y="607.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (181,818,180 samples, 0.03%)</title><rect x="752.6" y="549" width="0.4" height="15.0" fill="rgb(237,10,18)" rx="2" ry="2" />
<text  x="755.57" y="559.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;29ul&gt; (585,858,580 samples, 0.11%)</title><rect x="959.7" y="661" width="1.3" height="15.0" fill="rgb(235,104,35)" rx="2" ry="2" />
<text  x="962.73" y="671.5" ></text>
</g>
<g >
<title>rocksdb::ReadOnlyInlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::PackLocal (454,545,450 samples, 0.08%)</title><rect x="689.6" y="597" width="1.0" height="15.0" fill="rgb(222,77,54)" rx="2" ry="2" />
<text  x="692.56" y="607.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::FlushBlockPolicy*, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt; (363,636,360 samples, 0.07%)</title><rect x="1053.2" y="565" width="0.8" height="15.0" fill="rgb(209,158,11)" rx="2" ry="2" />
<text  x="1056.24" y="575.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::Status, false&gt;::_Head_base&lt;rocksdb::Status&amp;&gt; (747,474,740 samples, 0.14%)</title><rect x="552.7" y="853" width="1.6" height="15.0" fill="rgb(244,176,46)" rx="2" ry="2" />
<text  x="555.70" y="863.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (262,626,260 samples, 0.05%)</title><rect x="1095.1" y="565" width="0.6" height="15.0" fill="rgb(235,80,8)" rx="2" ry="2" />
<text  x="1098.15" y="575.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (898,989,890 samples, 0.17%)</title><rect x="1135.2" y="645" width="2.0" height="15.0" fill="rgb(229,209,43)" rx="2" ry="2" />
<text  x="1138.21" y="655.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;::_Deque_iterator (80,808,080 samples, 0.01%)</title><rect x="952.6" y="629" width="0.2" height="15.0" fill="rgb(239,209,29)" rx="2" ry="2" />
<text  x="955.64" y="639.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::UpdateGrandparentBoundaryInfo (181,818,180 samples, 0.03%)</title><rect x="1083.8" y="645" width="0.4" height="15.0" fill="rgb(247,56,13)" rx="2" ry="2" />
<text  x="1086.83" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (444,444,440 samples, 0.08%)</title><rect x="115.8" y="661" width="0.9" height="15.0" fill="rgb(216,184,1)" rx="2" ry="2" />
<text  x="118.75" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt;::__normal_iterator (70,707,070 samples, 0.01%)</title><rect x="1042.6" y="597" width="0.2" height="15.0" fill="rgb(241,72,9)" rx="2" ry="2" />
<text  x="1045.65" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;::_Rb_tree_iterator (373,737,370 samples, 0.07%)</title><rect x="905.7" y="581" width="0.8" height="15.0" fill="rgb(246,14,3)" rx="2" ry="2" />
<text  x="908.67" y="591.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::key (1,040,404,030 samples, 0.19%)</title><rect x="710.3" y="549" width="2.3" height="15.0" fill="rgb(239,36,54)" rx="2" ry="2" />
<text  x="713.29" y="559.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::IntTblPropCollector*, false&gt;::_M_head (101,010,100 samples, 0.02%)</title><rect x="1041.2" y="533" width="0.2" height="15.0" fill="rgb(209,196,45)" rx="2" ry="2" />
<text  x="1044.17" y="543.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (101,010,100 samples, 0.02%)</title><rect x="242.8" y="853" width="0.2" height="15.0" fill="rgb(232,229,54)" rx="2" ry="2" />
<text  x="245.78" y="863.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (101,010,100 samples, 0.02%)</title><rect x="763.9" y="261" width="0.3" height="15.0" fill="rgb(207,162,42)" rx="2" ry="2" />
<text  x="766.93" y="271.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (11,888,888,770 samples, 2.20%)</title><rect x="500.7" y="805" width="25.9" height="15.0" fill="rgb(242,97,45)" rx="2" ry="2" />
<text  x="503.66" y="815.5" >s..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (50,505,050 samples, 0.01%)</title><rect x="1035.7" y="485" width="0.1" height="15.0" fill="rgb(248,168,12)" rx="2" ry="2" />
<text  x="1038.73" y="495.5" ></text>
</g>
<g >
<title>rocksdb::IndexBlockIter::NextImpl (191,919,190 samples, 0.04%)</title><rect x="814.2" y="517" width="0.4" height="15.0" fill="rgb(223,12,23)" rx="2" ry="2" />
<text  x="817.19" y="527.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (484,848,480 samples, 0.09%)</title><rect x="1036.7" y="613" width="1.0" height="15.0" fill="rgb(226,86,41)" rx="2" ry="2" />
<text  x="1039.66" y="623.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::value (272,727,270 samples, 0.05%)</title><rect x="923.4" y="565" width="0.6" height="15.0" fill="rgb(253,138,50)" rx="2" ry="2" />
<text  x="926.40" y="575.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="825.9" y="469" width="0.2" height="15.0" fill="rgb(249,82,12)" rx="2" ry="2" />
<text  x="828.93" y="479.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::status (1,747,474,730 samples, 0.32%)</title><rect x="797.3" y="549" width="3.8" height="15.0" fill="rgb(236,107,13)" rx="2" ry="2" />
<text  x="800.25" y="559.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::CompactionIterator*, false&gt;::_M_head (262,626,260 samples, 0.05%)</title><rect x="1173.4" y="597" width="0.6" height="15.0" fill="rgb(206,220,51)" rx="2" ry="2" />
<text  x="1176.42" y="607.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::SetState (60,606,060 samples, 0.01%)</title><rect x="222.7" y="885" width="0.1" height="15.0" fill="rgb(242,53,14)" rx="2" ry="2" />
<text  x="225.69" y="895.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (70,707,070 samples, 0.01%)</title><rect x="851.9" y="437" width="0.1" height="15.0" fill="rgb(205,41,16)" rx="2" ry="2" />
<text  x="854.89" y="447.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid (424,242,420 samples, 0.08%)</title><rect x="884.7" y="645" width="0.9" height="15.0" fill="rgb(233,89,3)" rx="2" ry="2" />
<text  x="887.68" y="655.5" ></text>
</g>
<g >
<title>rocksdb::RandomAccessFileReader::Read (787,878,780 samples, 0.15%)</title><rect x="807.8" y="453" width="1.7" height="15.0" fill="rgb(213,48,5)" rx="2" ry="2" />
<text  x="810.76" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::get (1,181,818,170 samples, 0.22%)</title><rect x="1067.7" y="581" width="2.5" height="15.0" fill="rgb(205,227,25)" rx="2" ry="2" />
<text  x="1070.67" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (2,131,313,110 samples, 0.39%)</title><rect x="833.7" y="565" width="4.6" height="15.0" fill="rgb(254,135,7)" rx="2" ry="2" />
<text  x="836.66" y="575.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::FindBlockForward (4,282,828,240 samples, 0.79%)</title><rect x="760.7" y="517" width="9.3" height="15.0" fill="rgb(236,179,15)" rx="2" ry="2" />
<text  x="763.67" y="527.5" ></text>
</g>
<g >
<title>std::this_thread::yield (50,505,050 samples, 0.01%)</title><rect x="220.6" y="885" width="0.2" height="15.0" fill="rgb(244,126,49)" rx="2" ry="2" />
<text  x="223.64" y="895.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::FileChecksumGenerator, std::default_delete&lt;rocksdb::FileChecksumGenerator&gt; &gt;::_M_ptr (50,505,050 samples, 0.01%)</title><rect x="47.8" y="757" width="0.1" height="15.0" fill="rgb(231,181,19)" rx="2" ry="2" />
<text  x="50.81" y="767.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (50,505,050 samples, 0.01%)</title><rect x="862.0" y="469" width="0.1" height="15.0" fill="rgb(226,191,43)" rx="2" ry="2" />
<text  x="864.96" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IndexBuilder, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt;::operator (1,060,606,050 samples, 0.20%)</title><rect x="1054.8" y="629" width="2.3" height="15.0" fill="rgb(216,229,21)" rx="2" ry="2" />
<text  x="1057.80" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (181,818,180 samples, 0.03%)</title><rect x="878.0" y="613" width="0.4" height="15.0" fill="rgb(217,223,3)" rx="2" ry="2" />
<text  x="881.01" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (282,828,280 samples, 0.05%)</title><rect x="791.7" y="565" width="0.6" height="15.0" fill="rgb(245,91,4)" rx="2" ry="2" />
<text  x="794.70" y="575.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (3,888,888,850 samples, 0.72%)</title><rect x="824.2" y="565" width="8.4" height="15.0" fill="rgb(254,92,20)" rx="2" ry="2" />
<text  x="827.17" y="575.5" ></text>
</g>
<g >
<title>rocksdb::RocksDBOptionsParser::VerifyRocksDBOptionsFromFile (70,707,070 samples, 0.01%)</title><rect x="661.6" y="565" width="0.1" height="15.0" fill="rgb(217,109,32)" rx="2" ry="2" />
<text  x="664.57" y="575.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (646,464,640 samples, 0.12%)</title><rect x="879.9" y="629" width="1.4" height="15.0" fill="rgb(232,169,54)" rx="2" ry="2" />
<text  x="882.90" y="639.5" ></text>
</g>
<g >
<title>do_sched_yield (292,929,290 samples, 0.05%)</title><rect x="500.0" y="805" width="0.7" height="15.0" fill="rgb(219,149,52)" rx="2" ry="2" />
<text  x="503.02" y="815.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (13,898,989,760 samples, 2.57%)</title><rect x="661.1" y="869" width="30.3" height="15.0" fill="rgb(226,198,5)" rx="2" ry="2" />
<text  x="664.13" y="879.5" >st..</text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::operator bool (898,989,890 samples, 0.17%)</title><rect x="932.7" y="629" width="2.0" height="15.0" fill="rgb(231,156,43)" rx="2" ry="2" />
<text  x="935.71" y="639.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::CompactionHeapItemComparator::operator (7,959,595,880 samples, 1.47%)</title><rect x="707.6" y="581" width="17.3" height="15.0" fill="rgb(242,124,20)" rx="2" ry="2" />
<text  x="710.58" y="591.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::Append (1,808,080,790 samples, 0.33%)</title><rect x="992.0" y="565" width="3.9" height="15.0" fill="rgb(240,147,30)" rx="2" ry="2" />
<text  x="994.95" y="575.5" ></text>
</g>
<g >
<title>rocksdb::ComputeBuiltinChecksum (272,727,270 samples, 0.05%)</title><rect x="806.2" y="421" width="0.6" height="15.0" fill="rgb(208,137,2)" rx="2" ry="2" />
<text  x="809.24" y="431.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::value (50,505,050 samples, 0.01%)</title><rect x="921.0" y="613" width="0.2" height="15.0" fill="rgb(239,118,36)" rx="2" ry="2" />
<text  x="924.04" y="623.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::AddToOutput (111,111,110 samples, 0.02%)</title><rect x="966.9" y="677" width="0.3" height="15.0" fill="rgb(242,155,14)" rx="2" ry="2" />
<text  x="969.94" y="687.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="859.0" y="469" width="0.2" height="15.0" fill="rgb(250,4,39)" rx="2" ry="2" />
<text  x="862.00" y="479.5" ></text>
</g>
<g >
<title>start_this_handle (90,909,090 samples, 0.02%)</title><rect x="41.4" y="549" width="0.2" height="15.0" fill="rgb(248,110,12)" rx="2" ry="2" />
<text  x="44.43" y="559.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::IsKeyPinned (131,313,130 samples, 0.02%)</title><rect x="941.1" y="629" width="0.3" height="15.0" fill="rgb(222,158,16)" rx="2" ry="2" />
<text  x="944.15" y="639.5" ></text>
</g>
<g >
<title>rocksdb::PutLengthPrefixedSlice (50,505,050 samples, 0.01%)</title><rect x="550.4" y="917" width="0.2" height="15.0" fill="rgb(242,97,38)" rx="2" ry="2" />
<text  x="553.45" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (404,040,400 samples, 0.07%)</title><rect x="1116.6" y="629" width="0.9" height="15.0" fill="rgb(228,146,18)" rx="2" ry="2" />
<text  x="1119.64" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::InternalKeyComparator, std::default_delete&lt;rocksdb::InternalKeyComparator&gt; &gt;::operator= (70,707,070 samples, 0.01%)</title><rect x="761.1" y="373" width="0.2" height="15.0" fill="rgb(253,91,54)" rx="2" ry="2" />
<text  x="764.14" y="383.5" ></text>
</g>
<g >
<title>rocksdb::PinnableSlice::Reset (70,707,070 samples, 0.01%)</title><rect x="956.9" y="661" width="0.1" height="15.0" fill="rgb(214,147,33)" rx="2" ry="2" />
<text  x="959.87" y="671.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;::reverse_iterator (222,222,220 samples, 0.04%)</title><rect x="953.1" y="629" width="0.5" height="15.0" fill="rgb(222,61,43)" rx="2" ry="2" />
<text  x="956.11" y="639.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::EstimatedFileSize (515,151,510 samples, 0.10%)</title><rect x="1058.4" y="645" width="1.1" height="15.0" fill="rgb(211,139,18)" rx="2" ry="2" />
<text  x="1061.35" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_Auto_node::_M_insert (141,414,140 samples, 0.03%)</title><rect x="72.6" y="773" width="0.3" height="15.0" fill="rgb(217,14,23)" rx="2" ry="2" />
<text  x="75.59" y="783.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (161,616,160 samples, 0.03%)</title><rect x="840.4" y="533" width="0.3" height="15.0" fill="rgb(241,88,39)" rx="2" ry="2" />
<text  x="843.37" y="543.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (303,030,300 samples, 0.06%)</title><rect x="195.3" y="853" width="0.7" height="15.0" fill="rgb(220,187,39)" rx="2" ry="2" />
<text  x="198.32" y="863.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::AddWithLastKeyImpl (3,232,323,200 samples, 0.60%)</title><rect x="1005.7" y="613" width="7.0" height="15.0" fill="rgb(247,86,7)" rx="2" ry="2" />
<text  x="1008.67" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::empty (262,626,260 samples, 0.05%)</title><rect x="1156.0" y="645" width="0.5" height="15.0" fill="rgb(234,55,35)" rx="2" ry="2" />
<text  x="1158.95" y="655.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Valid (80,808,080 samples, 0.01%)</title><rect x="922.8" y="565" width="0.2" height="15.0" fill="rgb(245,99,8)" rx="2" ry="2" />
<text  x="925.83" y="575.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::PrepareOutput (252,525,250 samples, 0.05%)</title><rect x="965.4" y="677" width="0.5" height="15.0" fill="rgb(242,59,41)" rx="2" ry="2" />
<text  x="968.37" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (161,616,160 samples, 0.03%)</title><rect x="785.2" y="501" width="0.4" height="15.0" fill="rgb(237,56,48)" rx="2" ry="2" />
<text  x="788.23" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="834.6" y="453" width="0.1" height="15.0" fill="rgb(246,37,22)" rx="2" ry="2" />
<text  x="837.58" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (161,616,160 samples, 0.03%)</title><rect x="858.8" y="517" width="0.4" height="15.0" fill="rgb(209,51,39)" rx="2" ry="2" />
<text  x="861.81" y="527.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (90,909,090 samples, 0.02%)</title><rect x="1141.7" y="645" width="0.2" height="15.0" fill="rgb(210,41,26)" rx="2" ry="2" />
<text  x="1144.68" y="655.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;long&gt;::_S_nd&lt;unsigned long, std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;, unsigned int&gt; (4,383,838,340 samples, 0.81%)</title><rect x="639.7" y="933" width="9.6" height="15.0" fill="rgb(215,66,24)" rx="2" ry="2" />
<text  x="642.73" y="943.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;33ul&gt; (636,363,630 samples, 0.12%)</title><rect x="1110.8" y="629" width="1.4" height="15.0" fill="rgb(249,160,7)" rx="2" ry="2" />
<text  x="1113.76" y="639.5" ></text>
</g>
<g >
<title>sock_write_iter (454,545,450 samples, 0.08%)</title><rect x="689.6" y="469" width="1.0" height="15.0" fill="rgb(239,141,5)" rx="2" ry="2" />
<text  x="692.56" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_Auto_node::_M_key (171,717,170 samples, 0.03%)</title><rect x="72.9" y="773" width="0.4" height="15.0" fill="rgb(226,91,31)" rx="2" ry="2" />
<text  x="75.90" y="783.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt;@plt (50,505,050 samples, 0.01%)</title><rect x="195.2" y="853" width="0.1" height="15.0" fill="rgb(243,202,22)" rx="2" ry="2" />
<text  x="198.21" y="863.5" ></text>
</g>
<g >
<title>do_sched_yield (50,505,050 samples, 0.01%)</title><rect x="213.8" y="805" width="0.1" height="15.0" fill="rgb(244,33,33)" rx="2" ry="2" />
<text  x="216.82" y="815.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;rocksdb::SpinMutex&gt;::~unique_lock (131,313,130 samples, 0.02%)</title><rect x="80.0" y="725" width="0.3" height="15.0" fill="rgb(219,91,15)" rx="2" ry="2" />
<text  x="82.96" y="735.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Valid (141,414,140 samples, 0.03%)</title><rect x="844.7" y="613" width="0.3" height="15.0" fill="rgb(252,206,48)" rx="2" ry="2" />
<text  x="847.73" y="623.5" ></text>
</g>
<g >
<title>rocksdb::BlockCreateContext::Create (202,020,200 samples, 0.04%)</title><rect x="804.6" y="469" width="0.4" height="15.0" fill="rgb(214,77,13)" rx="2" ry="2" />
<text  x="807.59" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (141,414,140 samples, 0.03%)</title><rect x="909.9" y="517" width="0.4" height="15.0" fill="rgb(230,133,10)" rx="2" ry="2" />
<text  x="912.94" y="527.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (303,030,300 samples, 0.06%)</title><rect x="197.1" y="821" width="0.7" height="15.0" fill="rgb(214,194,6)" rx="2" ry="2" />
<text  x="200.15" y="831.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned long, rocksdb::RangeDelAggregator::StripeRep, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::lower_bound (151,515,150 samples, 0.03%)</title><rect x="913.6" y="629" width="0.4" height="15.0" fill="rgb(231,96,40)" rx="2" ry="2" />
<text  x="916.64" y="639.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (787,878,780 samples, 0.15%)</title><rect x="1129.9" y="549" width="1.7" height="15.0" fill="rgb(218,42,39)" rx="2" ry="2" />
<text  x="1132.90" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (262,626,260 samples, 0.05%)</title><rect x="862.1" y="549" width="0.6" height="15.0" fill="rgb(228,27,4)" rx="2" ry="2" />
<text  x="865.11" y="559.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (727,272,720 samples, 0.13%)</title><rect x="41.2" y="597" width="1.6" height="15.0" fill="rgb(233,142,6)" rx="2" ry="2" />
<text  x="44.23" y="607.5" ></text>
</g>
<g >
<title>rocksdb::RandomAccessFileReader::ShouldNotifyListeners (60,606,060 samples, 0.01%)</title><rect x="809.1" y="437" width="0.2" height="15.0" fill="rgb(250,192,51)" rx="2" ry="2" />
<text  x="812.12" y="447.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::status (3,929,292,890 samples, 0.73%)</title><rect x="793.3" y="565" width="8.6" height="15.0" fill="rgb(221,224,35)" rx="2" ry="2" />
<text  x="796.31" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (60,606,060 samples, 0.01%)</title><rect x="788.1" y="437" width="0.1" height="15.0" fill="rgb(214,56,4)" rx="2" ry="2" />
<text  x="791.07" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_brk (70,707,070 samples, 0.01%)</title><rect x="10.4" y="949" width="0.2" height="15.0" fill="rgb(235,116,5)" rx="2" ry="2" />
<text  x="13.44" y="959.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::EstimateSizeAfterKV@plt (90,909,090 samples, 0.02%)</title><rect x="1022.4" y="613" width="0.2" height="15.0" fill="rgb(219,198,25)" rx="2" ry="2" />
<text  x="1025.37" y="623.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyHandleInternal::SetCFD (60,606,060 samples, 0.01%)</title><rect x="68.1" y="805" width="0.1" height="15.0" fill="rgb(251,160,28)" rx="2" ry="2" />
<text  x="71.12" y="815.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, unsigned int, unsigned long&gt;::_Tuple_impl&lt;unsigned int&amp;, unsigned long&amp;, void&gt; (151,515,150 samples, 0.03%)</title><rect x="554.4" y="853" width="0.3" height="15.0" fill="rgb(239,57,54)" rx="2" ry="2" />
<text  x="557.41" y="863.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="799.7" y="405" width="0.1" height="15.0" fill="rgb(254,88,45)" rx="2" ry="2" />
<text  x="802.68" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Slice::compare (555,555,550 samples, 0.10%)</title><rect x="722.9" y="517" width="1.2" height="15.0" fill="rgb(209,189,16)" rx="2" ry="2" />
<text  x="725.88" y="527.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::GetInternalKey (90,909,090 samples, 0.02%)</title><rect x="815.8" y="533" width="0.2" height="15.0" fill="rgb(227,172,1)" rx="2" ry="2" />
<text  x="818.77" y="543.5" ></text>
</g>
<g >
<title>TLS init function for rocksdb::perf_context (111,111,110 samples, 0.02%)</title><rect x="156.3" y="693" width="0.3" height="15.0" fill="rgb(211,199,0)" rx="2" ry="2" />
<text  x="159.32" y="703.5" ></text>
</g>
<g >
<title>std::move&lt;rocksdb::CompactionMergingIterator::HeapItem*&amp;&gt; (50,505,050 samples, 0.01%)</title><rect x="731.2" y="581" width="0.1" height="15.0" fill="rgb(231,32,47)" rx="2" ry="2" />
<text  x="734.16" y="591.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::ok (50,505,050 samples, 0.01%)</title><rect x="996.3" y="581" width="0.1" height="15.0" fill="rgb(249,169,13)" rx="2" ry="2" />
<text  x="999.27" y="591.5" ></text>
</g>
<g >
<title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (585,858,580 samples, 0.11%)</title><rect x="109.6" y="677" width="1.2" height="15.0" fill="rgb(219,170,47)" rx="2" ry="2" />
<text  x="112.56" y="687.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock (323,232,320 samples, 0.06%)</title><rect x="989.2" y="581" width="0.7" height="15.0" fill="rgb(240,3,53)" rx="2" ry="2" />
<text  x="992.20" y="591.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::SstPartitioner*, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="1152.7" y="581" width="0.3" height="15.0" fill="rgb(252,113,17)" rx="2" ry="2" />
<text  x="1155.74" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (70,707,070 samples, 0.01%)</title><rect x="48.4" y="821" width="0.1" height="15.0" fill="rgb(235,141,42)" rx="2" ry="2" />
<text  x="51.36" y="831.5" ></text>
</g>
<g >
<title>rocksdb::LocalSavePoint::LocalSavePoint (222,222,220 samples, 0.04%)</title><rect x="555.3" y="901" width="0.5" height="15.0" fill="rgb(238,221,33)" rx="2" ry="2" />
<text  x="558.27" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::push_back (50,505,050 samples, 0.01%)</title><rect x="1043.1" y="581" width="0.1" height="15.0" fill="rgb(244,60,1)" rx="2" ry="2" />
<text  x="1046.07" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::Tracer*, std::default_delete&lt;rocksdb::Tracer&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="544.9" y="853" width="0.2" height="15.0" fill="rgb(230,213,23)" rx="2" ry="2" />
<text  x="547.92" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (70,707,070 samples, 0.01%)</title><rect x="72.7" y="757" width="0.2" height="15.0" fill="rgb(241,124,0)" rx="2" ry="2" />
<text  x="75.70" y="767.5" ></text>
</g>
<g >
<title>rocksdb::log::Writer::AddRecord (6,939,393,870 samples, 1.28%)</title><rect x="36.1" y="869" width="15.1" height="15.0" fill="rgb(248,7,38)" rx="2" ry="2" />
<text  x="39.07" y="879.5" ></text>
</g>
<g >
<title>std::__distance&lt;char*&gt; (50,505,050 samples, 0.01%)</title><rect x="571.8" y="933" width="0.1" height="15.0" fill="rgb(222,228,16)" rx="2" ry="2" />
<text  x="574.81" y="943.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (242,424,240 samples, 0.04%)</title><rect x="851.5" y="485" width="0.5" height="15.0" fill="rgb(228,24,51)" rx="2" ry="2" />
<text  x="854.52" y="495.5" ></text>
</g>
<g >
<title>do_sched_yield (4,323,232,280 samples, 0.80%)</title><rect x="204.3" y="789" width="9.5" height="15.0" fill="rgb(225,9,30)" rx="2" ry="2" />
<text  x="207.35" y="799.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="1069.9" y="565" width="0.3" height="15.0" fill="rgb(243,87,51)" rx="2" ry="2" />
<text  x="1072.87" y="575.5" ></text>
</g>
<g >
<title>rocksdb::SuperVersionContext::Clean (252,525,250 samples, 0.05%)</title><rect x="31.5" y="885" width="0.6" height="15.0" fill="rgb(220,49,25)" rx="2" ry="2" />
<text  x="34.54" y="895.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (111,111,110 samples, 0.02%)</title><rect x="198.8" y="837" width="0.3" height="15.0" fill="rgb(220,26,40)" rx="2" ry="2" />
<text  x="201.84" y="847.5" ></text>
</g>
<g >
<title>ip_finish_output (90,909,090 samples, 0.02%)</title><rect x="690.3" y="277" width="0.2" height="15.0" fill="rgb(220,79,2)" rx="2" ry="2" />
<text  x="693.34" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::operator bool (191,919,190 samples, 0.04%)</title><rect x="934.7" y="645" width="0.4" height="15.0" fill="rgb(240,62,11)" rx="2" ry="2" />
<text  x="937.67" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt;::base (131,313,130 samples, 0.02%)</title><rect x="1032.8" y="613" width="0.2" height="15.0" fill="rgb(230,34,6)" rx="2" ry="2" />
<text  x="1035.76" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (50,505,050 samples, 0.01%)</title><rect x="177.3" y="773" width="0.2" height="15.0" fill="rgb(220,57,8)" rx="2" ry="2" />
<text  x="180.35" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (50,505,050 samples, 0.01%)</title><rect x="754.6" y="517" width="0.1" height="15.0" fill="rgb(236,228,53)" rx="2" ry="2" />
<text  x="757.55" y="527.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;, rocksdb::CompactionMergingIterator::HeapItem*&gt;::iterator_impl (80,808,080 samples, 0.01%)</title><rect x="735.1" y="565" width="0.2" height="15.0" fill="rgb(240,153,51)" rx="2" ry="2" />
<text  x="738.13" y="575.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;29ul&gt; (979,797,970 samples, 0.18%)</title><rect x="929.0" y="645" width="2.1" height="15.0" fill="rgb(208,175,30)" rx="2" ry="2" />
<text  x="931.97" y="655.5" ></text>
</g>
<g >
<title>rocksdb::SpinMutex::try_lock (131,313,130 samples, 0.02%)</title><rect x="79.3" y="725" width="0.3" height="15.0" fill="rgb(250,121,5)" rx="2" ry="2" />
<text  x="82.30" y="735.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::CheckOutOfBound (70,707,070 samples, 0.01%)</title><rect x="760.4" y="533" width="0.2" height="15.0" fill="rgb(228,55,52)" rx="2" ry="2" />
<text  x="763.43" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (50,505,050 samples, 0.01%)</title><rect x="554.0" y="821" width="0.1" height="15.0" fill="rgb(248,108,11)" rx="2" ry="2" />
<text  x="556.95" y="831.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1,373,737,360 samples, 0.25%)</title><rect x="39.9" y="693" width="3.0" height="15.0" fill="rgb(235,31,17)" rx="2" ry="2" />
<text  x="42.93" y="703.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::SetInternalKey (2,232,323,210 samples, 0.41%)</title><rect x="887.6" y="645" width="4.9" height="15.0" fill="rgb(247,192,5)" rx="2" ry="2" />
<text  x="890.59" y="655.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (404,040,400 samples, 0.07%)</title><rect x="697.1" y="661" width="0.9" height="15.0" fill="rgb(241,52,5)" rx="2" ry="2" />
<text  x="700.10" y="671.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="865.6" y="517" width="0.1" height="15.0" fill="rgb(230,130,44)" rx="2" ry="2" />
<text  x="868.57" y="527.5" ></text>
</g>
<g >
<title>rocksdb::SubcompactionState::AddToOutput@plt (70,707,070 samples, 0.01%)</title><rect x="1176.3" y="693" width="0.1" height="15.0" fill="rgb(248,212,37)" rx="2" ry="2" />
<text  x="1179.26" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (353,535,350 samples, 0.07%)</title><rect x="828.3" y="501" width="0.8" height="15.0" fill="rgb(221,61,38)" rx="2" ry="2" />
<text  x="831.35" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (202,020,200 samples, 0.04%)</title><rect x="826.7" y="549" width="0.5" height="15.0" fill="rgb(251,6,48)" rx="2" ry="2" />
<text  x="829.72" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::WriteBatch::ProtectionInfo*, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="557.5" y="837" width="0.1" height="15.0" fill="rgb(238,35,17)" rx="2" ry="2" />
<text  x="560.52" y="847.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (80,808,080 samples, 0.01%)</title><rect x="555.8" y="853" width="0.2" height="15.0" fill="rgb(214,44,16)" rx="2" ry="2" />
<text  x="558.85" y="863.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::ParseNextDataKey (1,505,050,490 samples, 0.28%)</title><rect x="771.7" y="501" width="3.2" height="15.0" fill="rgb(238,50,44)" rx="2" ry="2" />
<text  x="774.66" y="511.5" ></text>
</g>
<g >
<title>__tls_get_addr (434,343,430 samples, 0.08%)</title><rect x="719.5" y="517" width="0.9" height="15.0" fill="rgb(214,201,14)" rx="2" ry="2" />
<text  x="722.49" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (50,505,050 samples, 0.01%)</title><rect x="638.8" y="949" width="0.1" height="15.0" fill="rgb(223,145,44)" rx="2" ry="2" />
<text  x="641.78" y="959.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::value (484,848,480 samples, 0.09%)</title><rect x="923.0" y="581" width="1.1" height="15.0" fill="rgb(249,141,28)" rx="2" ry="2" />
<text  x="926.05" y="591.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::IsDeleteRangeSentinelKey (141,414,140 samples, 0.03%)</title><rect x="886.3" y="645" width="0.3" height="15.0" fill="rgb(226,62,35)" rx="2" ry="2" />
<text  x="889.29" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (454,545,450 samples, 0.08%)</title><rect x="972.4" y="613" width="0.9" height="15.0" fill="rgb(247,124,28)" rx="2" ry="2" />
<text  x="975.35" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (212,121,210 samples, 0.04%)</title><rect x="582.1" y="933" width="0.5" height="15.0" fill="rgb(239,223,3)" rx="2" ry="2" />
<text  x="585.12" y="943.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (202,020,200 samples, 0.04%)</title><rect x="794.9" y="453" width="0.4" height="15.0" fill="rgb(237,121,30)" rx="2" ry="2" />
<text  x="797.90" y="463.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::Rep::CreateFilePrefetchBufferIfNotExists (70,707,070 samples, 0.01%)</title><rect x="812.6" y="501" width="0.2" height="15.0" fill="rgb(213,207,21)" rx="2" ry="2" />
<text  x="815.65" y="511.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::KeyComparator::operator (15,878,787,720 samples, 2.93%)</title><rect x="102.4" y="709" width="34.6" height="15.0" fill="rgb(252,74,22)" rx="2" ry="2" />
<text  x="105.41" y="719.5" >ro..</text>
</g>
<g >
<title>rocksdb::ExtractInternalKeyFooter (484,848,480 samples, 0.09%)</title><rect x="1019.1" y="613" width="1.1" height="15.0" fill="rgb(231,107,27)" rx="2" ry="2" />
<text  x="1022.11" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;::_Rb_tree_iterator (111,111,110 samples, 0.02%)</title><rect x="900.4" y="581" width="0.2" height="15.0" fill="rgb(208,47,49)" rx="2" ry="2" />
<text  x="903.41" y="591.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid (494,949,490 samples, 0.09%)</title><rect x="883.5" y="645" width="1.1" height="15.0" fill="rgb(209,216,54)" rx="2" ry="2" />
<text  x="886.49" y="655.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;@plt (272,727,270 samples, 0.05%)</title><rect x="534.8" y="885" width="0.6" height="15.0" fill="rgb(207,4,13)" rx="2" ry="2" />
<text  x="537.84" y="895.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="847.1" y="405" width="0.2" height="15.0" fill="rgb(226,133,50)" rx="2" ry="2" />
<text  x="850.13" y="415.5" ></text>
</g>
<g >
<title>[[vdso]] (7,818,181,740 samples, 1.44%)</title><rect x="224.9" y="869" width="17.0" height="15.0" fill="rgb(239,197,8)" rx="2" ry="2" />
<text  x="227.87" y="879.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::NextEntryOffset (191,919,190 samples, 0.04%)</title><rect x="818.8" y="501" width="0.4" height="15.0" fill="rgb(206,103,25)" rx="2" ry="2" />
<text  x="821.81" y="511.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState (50,505,050 samples, 0.01%)</title><rect x="547.7" y="917" width="0.2" height="15.0" fill="rgb(248,27,2)" rx="2" ry="2" />
<text  x="550.74" y="927.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (80,808,080 samples, 0.01%)</title><rect x="549.6" y="933" width="0.2" height="15.0" fill="rgb(226,52,52)" rx="2" ry="2" />
<text  x="552.63" y="943.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::SstPartitioner*, false&gt;::_M_head (404,040,400 samples, 0.07%)</title><rect x="1080.9" y="549" width="0.9" height="15.0" fill="rgb(222,226,48)" rx="2" ry="2" />
<text  x="1083.95" y="559.5" ></text>
</g>
<g >
<title>__wake_up (50,505,050 samples, 0.01%)</title><rect x="41.8" y="533" width="0.1" height="15.0" fill="rgb(225,223,6)" rx="2" ry="2" />
<text  x="44.76" y="543.5" ></text>
</g>
<g >
<title>std::map&lt;rocksdb::MemTable*, rocksdb::MemTablePostProcessInfo, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::end (70,707,070 samples, 0.01%)</title><rect x="62.2" y="869" width="0.1" height="15.0" fill="rgb(230,113,52)" rx="2" ry="2" />
<text  x="65.19" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_node (90,909,090 samples, 0.02%)</title><rect x="582.6" y="917" width="0.2" height="15.0" fill="rgb(242,222,29)" rx="2" ry="2" />
<text  x="585.58" y="927.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (191,919,190 samples, 0.04%)</title><rect x="846.9" y="469" width="0.4" height="15.0" fill="rgb(217,145,41)" rx="2" ry="2" />
<text  x="849.89" y="479.5" ></text>
</g>
<g >
<title>__page_cache_alloc (101,010,100 samples, 0.02%)</title><rect x="994.0" y="293" width="0.2" height="15.0" fill="rgb(244,155,34)" rx="2" ry="2" />
<text  x="997.02" y="303.5" ></text>
</g>
<g >
<title>handle_pte_fault (202,020,200 samples, 0.04%)</title><rect x="663.5" y="501" width="0.5" height="15.0" fill="rgb(254,116,32)" rx="2" ry="2" />
<text  x="666.51" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (232,323,230 samples, 0.04%)</title><rect x="855.9" y="485" width="0.5" height="15.0" fill="rgb(220,64,22)" rx="2" ry="2" />
<text  x="858.88" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (90,909,090 samples, 0.02%)</title><rect x="177.3" y="821" width="0.2" height="15.0" fill="rgb(228,91,9)" rx="2" ry="2" />
<text  x="180.26" y="831.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (393,939,390 samples, 0.07%)</title><rect x="715.7" y="533" width="0.9" height="15.0" fill="rgb(225,105,30)" rx="2" ry="2" />
<text  x="718.71" y="543.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="860.3" y="453" width="0.2" height="15.0" fill="rgb(236,83,42)" rx="2" ry="2" />
<text  x="863.26" y="463.5" ></text>
</g>
<g >
<title>@plt (70,707,070 samples, 0.01%)</title><rect x="1178.4" y="677" width="0.1" height="15.0" fill="rgb(229,158,19)" rx="2" ry="2" />
<text  x="1181.39" y="687.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block_kData&gt; (2,747,474,720 samples, 0.51%)</title><rect x="761.4" y="469" width="6.0" height="15.0" fill="rgb(215,8,14)" rx="2" ry="2" />
<text  x="764.42" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (90,909,090 samples, 0.02%)</title><rect x="1025.0" y="581" width="0.2" height="15.0" fill="rgb(223,6,38)" rx="2" ry="2" />
<text  x="1027.96" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WritableFileWriter, std::default_delete&lt;rocksdb::WritableFileWriter&gt; &gt;::operator (111,111,110 samples, 0.02%)</title><rect x="50.9" y="837" width="0.2" height="15.0" fill="rgb(230,78,29)" rx="2" ry="2" />
<text  x="53.85" y="847.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;char const []&gt;, true&gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="973.2" y="549" width="0.1" height="15.0" fill="rgb(210,106,36)" rx="2" ry="2" />
<text  x="976.17" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (252,525,250 samples, 0.05%)</title><rect x="827.6" y="501" width="0.6" height="15.0" fill="rgb(221,69,34)" rx="2" ry="2" />
<text  x="830.64" y="511.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="838.1" y="501" width="0.2" height="15.0" fill="rgb(245,194,24)" rx="2" ry="2" />
<text  x="841.15" y="511.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::GetIOStatus (60,606,060 samples, 0.01%)</title><rect x="990.1" y="549" width="0.1" height="15.0" fill="rgb(250,46,31)" rx="2" ry="2" />
<text  x="993.10" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (353,535,350 samples, 0.07%)</title><rect x="796.0" y="517" width="0.8" height="15.0" fill="rgb(211,153,50)" rx="2" ry="2" />
<text  x="799.04" y="527.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (50,505,050 samples, 0.01%)</title><rect x="720.4" y="517" width="0.2" height="15.0" fill="rgb(249,106,36)" rx="2" ry="2" />
<text  x="723.44" y="527.5" ></text>
</g>
<g >
<title>__alloc_pages (101,010,100 samples, 0.02%)</title><rect x="664.8" y="453" width="0.2" height="15.0" fill="rgb(231,127,49)" rx="2" ry="2" />
<text  x="667.77" y="463.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt; (212,121,210 samples, 0.04%)</title><rect x="34.6" y="853" width="0.5" height="15.0" fill="rgb(253,88,10)" rx="2" ry="2" />
<text  x="37.64" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_destroy_node (121,212,120 samples, 0.02%)</title><rect x="62.9" y="805" width="0.2" height="15.0" fill="rgb(208,147,44)" rx="2" ry="2" />
<text  x="65.85" y="815.5" ></text>
</g>
<g >
<title>inet_sendmsg (454,545,450 samples, 0.08%)</title><rect x="689.6" y="437" width="1.0" height="15.0" fill="rgb(246,181,17)" rx="2" ry="2" />
<text  x="692.56" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (90,909,090 samples, 0.02%)</title><rect x="1102.7" y="597" width="0.2" height="15.0" fill="rgb(235,126,50)" rx="2" ry="2" />
<text  x="1105.73" y="607.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="858.9" y="485" width="0.3" height="15.0" fill="rgb(214,10,43)" rx="2" ry="2" />
<text  x="861.94" y="495.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="320.4" y="837" width="0.3" height="15.0" fill="rgb(253,118,34)" rx="2" ry="2" />
<text  x="323.43" y="847.5" ></text>
</g>
<g >
<title>__fsnotify_parent (50,505,050 samples, 0.01%)</title><rect x="39.7" y="709" width="0.1" height="15.0" fill="rgb(236,52,17)" rx="2" ry="2" />
<text  x="42.71" y="719.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (575,757,570 samples, 0.11%)</title><rect x="55.2" y="853" width="1.3" height="15.0" fill="rgb(251,39,0)" rx="2" ry="2" />
<text  x="58.23" y="863.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::TableBuilder*, false&gt;::_M_head (101,010,100 samples, 0.02%)</title><rect x="1155.0" y="549" width="0.2" height="15.0" fill="rgb(209,58,0)" rx="2" ry="2" />
<text  x="1157.96" y="559.5" ></text>
</g>
<g >
<title>ip_output (90,909,090 samples, 0.02%)</title><rect x="690.3" y="293" width="0.2" height="15.0" fill="rgb(245,167,51)" rx="2" ry="2" />
<text  x="693.34" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (1,777,777,760 samples, 0.33%)</title><rect x="972.0" y="645" width="3.9" height="15.0" fill="rgb(221,37,29)" rx="2" ry="2" />
<text  x="974.98" y="655.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (161,616,160 samples, 0.03%)</title><rect x="763.9" y="309" width="0.3" height="15.0" fill="rgb(213,4,19)" rx="2" ry="2" />
<text  x="766.87" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::operator bool (60,606,060 samples, 0.01%)</title><rect x="946.1" y="645" width="0.1" height="15.0" fill="rgb(219,144,29)" rx="2" ry="2" />
<text  x="949.06" y="655.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;char const []&gt; &gt;@plt (50,505,050 samples, 0.01%)</title><rect x="1134.7" y="597" width="0.1" height="15.0" fill="rgb(253,114,48)" rx="2" ry="2" />
<text  x="1137.68" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (50,505,050 samples, 0.01%)</title><rect x="1045.7" y="629" width="0.1" height="15.0" fill="rgb(213,183,21)" rx="2" ry="2" />
<text  x="1048.67" y="639.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::CompactionIterator*, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="1169.7" y="613" width="0.3" height="15.0" fill="rgb(227,176,42)" rx="2" ry="2" />
<text  x="1172.72" y="623.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (50,505,050 samples, 0.01%)</title><rect x="541.4" y="805" width="0.1" height="15.0" fill="rgb(239,145,40)" rx="2" ry="2" />
<text  x="544.35" y="815.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::output_to_penultimate_level (171,717,170 samples, 0.03%)</title><rect x="966.5" y="677" width="0.3" height="15.0" fill="rgb(235,94,50)" rx="2" ry="2" />
<text  x="969.45" y="687.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (333,333,330 samples, 0.06%)</title><rect x="1126.9" y="533" width="0.7" height="15.0" fill="rgb(223,168,29)" rx="2" ry="2" />
<text  x="1129.91" y="543.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid (252,525,250 samples, 0.05%)</title><rect x="1066.2" y="629" width="0.5" height="15.0" fill="rgb(210,177,17)" rx="2" ry="2" />
<text  x="1069.19" y="639.5" ></text>
</g>
<g >
<title>__schedule (3,666,666,630 samples, 0.68%)</title><rect x="205.8" y="757" width="8.0" height="15.0" fill="rgb(213,74,24)" rx="2" ry="2" />
<text  x="208.78" y="767.5" ></text>
</g>
<g >
<title>rocksdb::DB::Put (249,292,926,800 samples, 46.06%)</title><rect x="24.4" y="981" width="543.5" height="15.0" fill="rgb(212,68,12)" rx="2" ry="2" />
<text  x="27.40" y="991.5" >rocksdb::DB::Put</text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;::operator* (50,505,050 samples, 0.01%)</title><rect x="61.8" y="869" width="0.1" height="15.0" fill="rgb(231,83,19)" rx="2" ry="2" />
<text  x="64.77" y="879.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::Write (240,262,623,860 samples, 44.39%)</title><rect x="25.6" y="933" width="523.8" height="15.0" fill="rgb(215,120,20)" rx="2" ry="2" />
<text  x="28.59" y="943.5" >rocksdb::DBImpl::Write</text>
</g>
<g >
<title>rocksdb::ParseInternalKey (222,222,220 samples, 0.04%)</title><rect x="956.4" y="661" width="0.5" height="15.0" fill="rgb(238,6,52)" rx="2" ry="2" />
<text  x="959.39" y="671.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator unsigned long (181,818,180 samples, 0.03%)</title><rect x="1058.7" y="613" width="0.4" height="15.0" fill="rgb(239,79,29)" rx="2" ry="2" />
<text  x="1061.75" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::_M_ptr (50,505,050 samples, 0.01%)</title><rect x="1039.8" y="597" width="0.1" height="15.0" fill="rgb(250,177,30)" rx="2" ry="2" />
<text  x="1042.76" y="607.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::BlobGarbageMeter*, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;@plt (111,111,110 samples, 0.02%)</title><rect x="1150.8" y="613" width="0.2" height="15.0" fill="rgb(241,64,51)" rx="2" ry="2" />
<text  x="1153.78" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (161,616,160 samples, 0.03%)</title><rect x="854.0" y="533" width="0.4" height="15.0" fill="rgb(254,15,27)" rx="2" ry="2" />
<text  x="857.03" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SavePoints, std::default_delete&lt;rocksdb::SavePoints&gt; &gt;::get (70,707,070 samples, 0.01%)</title><rect x="51.8" y="837" width="0.1" height="15.0" fill="rgb(234,15,21)" rx="2" ry="2" />
<text  x="54.78" y="847.5" ></text>
</g>
<g >
<title>ext4_writepages (131,313,130 samples, 0.02%)</title><rect x="1140.3" y="373" width="0.3" height="15.0" fill="rgb(246,211,0)" rx="2" ry="2" />
<text  x="1143.32" y="383.5" ></text>
</g>
<g >
<title>std::optional&lt;rocksdb::Slice&gt;::has_value (191,919,190 samples, 0.04%)</title><rect x="1176.9" y="693" width="0.4" height="15.0" fill="rgb(223,11,13)" rx="2" ry="2" />
<text  x="1179.90" y="703.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="863.3" y="501" width="0.2" height="15.0" fill="rgb(216,164,5)" rx="2" ry="2" />
<text  x="866.34" y="511.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (5,292,929,240 samples, 0.98%)</title><rect x="287.7" y="853" width="11.6" height="15.0" fill="rgb(254,125,53)" rx="2" ry="2" />
<text  x="290.72" y="863.5" ></text>
</g>
<g >
<title>rocksdb::ConcurrentArena::AllocatedAndUnused (70,707,070 samples, 0.01%)</title><rect x="61.2" y="821" width="0.2" height="15.0" fill="rgb(244,155,12)" rx="2" ry="2" />
<text  x="64.25" y="831.5" ></text>
</g>
<g >
<title>evict (262,626,260 samples, 0.05%)</title><rect x="690.8" y="549" width="0.6" height="15.0" fill="rgb(219,169,40)" rx="2" ry="2" />
<text  x="693.84" y="559.5" ></text>
</g>
<g >
<title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Release (282,828,280 samples, 0.05%)</title><rect x="813.3" y="421" width="0.6" height="15.0" fill="rgb(253,197,4)" rx="2" ry="2" />
<text  x="816.29" y="431.5" ></text>
</g>
<g >
<title>std::operator&amp; (121,212,120 samples, 0.02%)</title><rect x="881.0" y="613" width="0.3" height="15.0" fill="rgb(227,36,4)" rx="2" ry="2" />
<text  x="884.05" y="623.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (101,010,100 samples, 0.02%)</title><rect x="772.8" y="469" width="0.3" height="15.0" fill="rgb(206,65,18)" rx="2" ry="2" />
<text  x="775.83" y="479.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::SyncInternal (101,010,100 samples, 0.02%)</title><rect x="661.1" y="645" width="0.3" height="15.0" fill="rgb(239,59,36)" rx="2" ry="2" />
<text  x="664.13" y="655.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::GetInstance@plt (50,505,050 samples, 0.01%)</title><rect x="57.2" y="901" width="0.1" height="15.0" fill="rgb(213,85,16)" rx="2" ry="2" />
<text  x="60.19" y="911.5" ></text>
</g>
<g >
<title>std::make_unique&lt;rocksdb::InternalKeyComparator, rocksdb::Comparator const*&amp;&gt; (80,808,080 samples, 0.01%)</title><rect x="761.0" y="405" width="0.1" height="15.0" fill="rgb(218,42,46)" rx="2" ry="2" />
<text  x="763.96" y="415.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyOptions::PackLocal (50,505,050 samples, 0.01%)</title><rect x="661.4" y="629" width="0.1" height="15.0" fill="rgb(216,195,18)" rx="2" ry="2" />
<text  x="664.42" y="639.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ExtractLargeValueIfNeededImpl (161,616,160 samples, 0.03%)</title><rect x="937.8" y="645" width="0.4" height="15.0" fill="rgb(219,137,49)" rx="2" ry="2" />
<text  x="940.84" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (575,757,570 samples, 0.11%)</title><rect x="782.2" y="517" width="1.2" height="15.0" fill="rgb(235,52,23)" rx="2" ry="2" />
<text  x="785.17" y="527.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (101,010,100 samples, 0.02%)</title><rect x="222.9" y="885" width="0.2" height="15.0" fill="rgb(228,17,45)" rx="2" ry="2" />
<text  x="225.87" y="895.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::key (585,858,580 samples, 0.11%)</title><rect x="919.2" y="645" width="1.3" height="15.0" fill="rgb(205,63,30)" rx="2" ry="2" />
<text  x="922.21" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (161,616,160 samples, 0.03%)</title><rect x="855.4" y="469" width="0.4" height="15.0" fill="rgb(234,107,25)" rx="2" ry="2" />
<text  x="858.41" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (353,535,350 samples, 0.07%)</title><rect x="895.6" y="565" width="0.7" height="15.0" fill="rgb(217,136,2)" rx="2" ry="2" />
<text  x="898.56" y="575.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;::_Deque_iterator&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, void&gt; (101,010,100 samples, 0.02%)</title><rect x="952.3" y="645" width="0.2" height="15.0" fill="rgb(210,194,7)" rx="2" ry="2" />
<text  x="955.29" y="655.5" ></text>
</g>
</g>
</svg>
