<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="918.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="901" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="901" > </text>
<g id="frames">
<g >
<title>rocksdb::Status::code (101,010,100 samples, 0.02%)</title><rect x="688.7" y="405" width="0.2" height="15.0" fill="rgb(206,222,46)" rx="2" ry="2" />
<text  x="691.73" y="415.5" ></text>
</g>
<g >
<title>rocksdb::DecodeEntry::operator (212,121,210 samples, 0.03%)</title><rect x="874.3" y="325" width="0.4" height="15.0" fill="rgb(222,227,29)" rx="2" ry="2" />
<text  x="877.34" y="335.5" ></text>
</g>
<g >
<title>evict (80,808,080 samples, 0.01%)</title><rect x="1179.3" y="373" width="0.1" height="15.0" fill="rgb(209,6,49)" rx="2" ry="2" />
<text  x="1182.29" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (222,222,220 samples, 0.03%)</title><rect x="909.4" y="325" width="0.4" height="15.0" fill="rgb(234,122,18)" rx="2" ry="2" />
<text  x="912.35" y="335.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="905.8" y="293" width="0.2" height="15.0" fill="rgb(241,107,42)" rx="2" ry="2" />
<text  x="908.81" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (333,333,330 samples, 0.05%)</title><rect x="1033.3" y="341" width="0.6" height="15.0" fill="rgb(240,157,19)" rx="2" ry="2" />
<text  x="1036.32" y="351.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey (3,606,060,570 samples, 0.56%)</title><rect x="97.1" y="501" width="6.6" height="15.0" fill="rgb(224,60,20)" rx="2" ry="2" />
<text  x="100.07" y="511.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::SetState (161,616,160 samples, 0.03%)</title><rect x="454.8" y="709" width="0.3" height="15.0" fill="rgb(240,69,21)" rx="2" ry="2" />
<text  x="457.83" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;rocksdb::MemTable* const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,969,696,950 samples, 0.31%)</title><rect x="61.6" y="613" width="3.6" height="15.0" fill="rgb(228,158,8)" rx="2" ry="2" />
<text  x="64.56" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (111,111,110 samples, 0.02%)</title><rect x="1109.6" y="437" width="0.2" height="15.0" fill="rgb(241,98,30)" rx="2" ry="2" />
<text  x="1112.61" y="447.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; (313,131,310 samples, 0.05%)</title><rect x="167.6" y="629" width="0.6" height="15.0" fill="rgb(250,102,8)" rx="2" ry="2" />
<text  x="170.60" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (90,909,090 samples, 0.01%)</title><rect x="148.0" y="677" width="0.2" height="15.0" fill="rgb(247,157,22)" rx="2" ry="2" />
<text  x="150.99" y="687.5" ></text>
</g>
<g >
<title>rocksdb::InternalKey::DecodeFrom (191,919,190 samples, 0.03%)</title><rect x="710.0" y="437" width="0.3" height="15.0" fill="rgb(254,145,47)" rx="2" ry="2" />
<text  x="712.96" y="447.5" ></text>
</g>
<g >
<title>__GI___unlink (80,808,080 samples, 0.01%)</title><rect x="1179.3" y="469" width="0.1" height="15.0" fill="rgb(218,49,19)" rx="2" ry="2" />
<text  x="1182.29" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (515,151,510 samples, 0.08%)</title><rect x="888.8" y="373" width="1.0" height="15.0" fill="rgb(253,146,34)" rx="2" ry="2" />
<text  x="891.84" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::back (70,707,070 samples, 0.01%)</title><rect x="1042.4" y="389" width="0.1" height="15.0" fill="rgb(205,184,1)" rx="2" ry="2" />
<text  x="1045.36" y="399.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (181,818,180 samples, 0.03%)</title><rect x="44.7" y="373" width="0.3" height="15.0" fill="rgb(251,107,11)" rx="2" ry="2" />
<text  x="47.71" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::operator bool (171,717,170 samples, 0.03%)</title><rect x="694.7" y="421" width="0.3" height="15.0" fill="rgb(207,176,6)" rx="2" ry="2" />
<text  x="697.66" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (80,808,080 samples, 0.01%)</title><rect x="710.1" y="421" width="0.2" height="15.0" fill="rgb(246,161,6)" rx="2" ry="2" />
<text  x="713.11" y="431.5" ></text>
</g>
<g >
<title>XXH3_hashLong_internal_loop (363,636,360 samples, 0.06%)</title><rect x="569.7" y="293" width="0.7" height="15.0" fill="rgb(226,81,49)" rx="2" ry="2" />
<text  x="572.75" y="303.5" ></text>
</g>
<g >
<title>do_sched_yield (4,303,030,260 samples, 0.67%)</title><rect x="172.0" y="613" width="7.9" height="15.0" fill="rgb(220,145,5)" rx="2" ry="2" />
<text  x="174.98" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (60,606,060 samples, 0.01%)</title><rect x="139.5" y="565" width="0.1" height="15.0" fill="rgb(210,10,13)" rx="2" ry="2" />
<text  x="142.50" y="575.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::Next (77,333,332,560 samples, 12.10%)</title><rect x="772.5" y="469" width="142.8" height="15.0" fill="rgb(237,102,49)" rx="2" ry="2" />
<text  x="775.48" y="479.5" >rocksdb::SequenceI..</text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (90,909,090 samples, 0.01%)</title><rect x="853.8" y="261" width="0.2" height="15.0" fill="rgb(211,118,2)" rx="2" ry="2" />
<text  x="856.84" y="271.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (101,010,100 samples, 0.02%)</title><rect x="37.5" y="389" width="0.2" height="15.0" fill="rgb(250,177,0)" rx="2" ry="2" />
<text  x="40.53" y="399.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (252,525,250 samples, 0.04%)</title><rect x="690.6" y="373" width="0.5" height="15.0" fill="rgb(236,40,28)" rx="2" ry="2" />
<text  x="693.63" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (141,414,140 samples, 0.02%)</title><rect x="1084.2" y="389" width="0.3" height="15.0" fill="rgb(250,8,8)" rx="2" ry="2" />
<text  x="1087.22" y="399.5" ></text>
</g>
<g >
<title>__fget_files (60,606,060 samples, 0.01%)</title><rect x="35.9" y="517" width="0.1" height="15.0" fill="rgb(252,153,37)" rx="2" ry="2" />
<text  x="38.87" y="527.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::NextFromInput (454,545,450 samples, 0.07%)</title><rect x="1002.7" y="501" width="0.8" height="15.0" fill="rgb(209,181,29)" rx="2" ry="2" />
<text  x="1005.69" y="511.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;::base@plt (101,010,100 samples, 0.02%)</title><rect x="703.2" y="405" width="0.2" height="15.0" fill="rgb(250,217,36)" rx="2" ry="2" />
<text  x="706.22" y="415.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::PurgeObsoleteFiles (80,808,080 samples, 0.01%)</title><rect x="1179.3" y="549" width="0.1" height="15.0" fill="rgb(228,84,46)" rx="2" ry="2" />
<text  x="1182.29" y="559.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (353,535,350 samples, 0.06%)</title><rect x="809.1" y="389" width="0.7" height="15.0" fill="rgb(248,199,53)" rx="2" ry="2" />
<text  x="812.13" y="399.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (111,111,110 samples, 0.02%)</title><rect x="573.4" y="101" width="0.2" height="15.0" fill="rgb(223,106,30)" rx="2" ry="2" />
<text  x="576.36" y="111.5" ></text>
</g>
<g >
<title>do_syscall_64 (606,060,600 samples, 0.09%)</title><rect x="1026.6" y="293" width="1.1" height="15.0" fill="rgb(215,215,29)" rx="2" ry="2" />
<text  x="1029.60" y="303.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::status (1,393,939,380 samples, 0.22%)</title><rect x="577.0" y="421" width="2.6" height="15.0" fill="rgb(240,138,40)" rx="2" ry="2" />
<text  x="579.98" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (121,212,120 samples, 0.02%)</title><rect x="852.8" y="309" width="0.2" height="15.0" fill="rgb(222,23,17)" rx="2" ry="2" />
<text  x="855.82" y="319.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (242,424,240 samples, 0.04%)</title><rect x="974.6" y="389" width="0.4" height="15.0" fill="rgb(253,224,6)" rx="2" ry="2" />
<text  x="977.58" y="399.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::UpdateFileChecksum (181,818,180 samples, 0.03%)</title><rect x="42.8" y="645" width="0.3" height="15.0" fill="rgb(251,155,11)" rx="2" ry="2" />
<text  x="45.75" y="655.5" ></text>
</g>
<g >
<title>rocksdb::ThreadStatusUpdater::SetThreadOperationProperty (1,282,828,270 samples, 0.20%)</title><rect x="744.9" y="437" width="2.3" height="15.0" fill="rgb(225,95,26)" rx="2" ry="2" />
<text  x="747.87" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Status::MarkChecked (131,313,130 samples, 0.02%)</title><rect x="605.7" y="421" width="0.3" height="15.0" fill="rgb(248,100,34)" rx="2" ry="2" />
<text  x="608.71" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (121,212,120 samples, 0.02%)</title><rect x="687.7" y="421" width="0.2" height="15.0" fill="rgb(216,103,4)" rx="2" ry="2" />
<text  x="690.72" y="431.5" ></text>
</g>
<g >
<title>rocksdb::PosixWritableFile::Append (1,787,878,770 samples, 0.28%)</title><rect x="35.6" y="645" width="3.3" height="15.0" fill="rgb(250,18,31)" rx="2" ry="2" />
<text  x="38.63" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (292,929,290 samples, 0.05%)</title><rect x="881.6" y="309" width="0.5" height="15.0" fill="rgb(228,95,34)" rx="2" ry="2" />
<text  x="884.58" y="319.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::InvokeFilterIfNeeded (242,424,240 samples, 0.04%)</title><rect x="926.2" y="469" width="0.5" height="15.0" fill="rgb(236,211,7)" rx="2" ry="2" />
<text  x="929.23" y="479.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (70,707,070 samples, 0.01%)</title><rect x="1026.9" y="149" width="0.1" height="15.0" fill="rgb(213,121,44)" rx="2" ry="2" />
<text  x="1029.86" y="159.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (101,010,100 samples, 0.02%)</title><rect x="148.9" y="613" width="0.2" height="15.0" fill="rgb(214,213,52)" rx="2" ry="2" />
<text  x="151.89" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (101,010,100 samples, 0.02%)</title><rect x="457.8" y="709" width="0.2" height="15.0" fill="rgb(234,42,13)" rx="2" ry="2" />
<text  x="460.77" y="719.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::CompactionIterator*, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt; (1,323,232,310 samples, 0.21%)</title><rect x="1172.4" y="453" width="2.5" height="15.0" fill="rgb(206,64,29)" rx="2" ry="2" />
<text  x="1175.41" y="463.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::ReadBlockContents (1,676,767,660 samples, 0.26%)</title><rect x="826.4" y="261" width="3.1" height="15.0" fill="rgb(234,60,14)" rx="2" ry="2" />
<text  x="829.44" y="271.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (90,909,090 samples, 0.01%)</title><rect x="941.8" y="357" width="0.2" height="15.0" fill="rgb(237,193,53)" rx="2" ry="2" />
<text  x="944.85" y="367.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::CurrentSizeEstimate (222,222,220 samples, 0.03%)</title><rect x="595.3" y="389" width="0.4" height="15.0" fill="rgb(218,85,37)" rx="2" ry="2" />
<text  x="598.32" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::_M_ptr (282,828,280 samples, 0.04%)</title><rect x="1170.8" y="485" width="0.5" height="15.0" fill="rgb(214,208,39)" rx="2" ry="2" />
<text  x="1173.79" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_left (101,010,100 samples, 0.02%)</title><rect x="487.2" y="757" width="0.2" height="15.0" fill="rgb(237,140,13)" rx="2" ry="2" />
<text  x="490.23" y="767.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (131,313,130 samples, 0.02%)</title><rect x="845.1" y="341" width="0.2" height="15.0" fill="rgb(249,23,24)" rx="2" ry="2" />
<text  x="848.08" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (171,717,170 samples, 0.03%)</title><rect x="900.4" y="293" width="0.4" height="15.0" fill="rgb(216,227,36)" rx="2" ry="2" />
<text  x="903.44" y="303.5" ></text>
</g>
<g >
<title>std::optional&lt;rocksdb::Slice&gt;::has_value (191,919,190 samples, 0.03%)</title><rect x="1177.5" y="517" width="0.4" height="15.0" fill="rgb(214,98,48)" rx="2" ry="2" />
<text  x="1180.50" y="527.5" ></text>
</g>
<g >
<title>rocksdb::StopWatch::StopWatch (60,606,060 samples, 0.01%)</title><rect x="51.0" y="725" width="0.1" height="15.0" fill="rgb(222,52,23)" rx="2" ry="2" />
<text  x="54.00" y="735.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="694.3" y="325" width="0.1" height="15.0" fill="rgb(219,128,38)" rx="2" ry="2" />
<text  x="697.27" y="335.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (222,222,220 samples, 0.03%)</title><rect x="1094.4" y="421" width="0.4" height="15.0" fill="rgb(248,100,1)" rx="2" ry="2" />
<text  x="1097.42" y="431.5" ></text>
</g>
<g >
<title>do_unlinkat (80,808,080 samples, 0.01%)</title><rect x="1179.3" y="405" width="0.1" height="15.0" fill="rgb(247,206,49)" rx="2" ry="2" />
<text  x="1182.29" y="415.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="995.8" y="469" width="0.1" height="15.0" fill="rgb(245,172,33)" rx="2" ry="2" />
<text  x="998.75" y="479.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::UpdateFlushState (333,333,330 samples, 0.05%)</title><rect x="54.4" y="677" width="0.6" height="15.0" fill="rgb(225,107,47)" rx="2" ry="2" />
<text  x="57.41" y="687.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::NextImpl (2,242,424,220 samples, 0.35%)</title><rect x="871.9" y="373" width="4.1" height="15.0" fill="rgb(218,125,5)" rx="2" ry="2" />
<text  x="874.88" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (272,727,270 samples, 0.04%)</title><rect x="1069.2" y="453" width="0.5" height="15.0" fill="rgb(241,105,26)" rx="2" ry="2" />
<text  x="1072.19" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (121,212,120 samples, 0.02%)</title><rect x="961.6" y="421" width="0.2" height="15.0" fill="rgb(245,138,47)" rx="2" ry="2" />
<text  x="964.58" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, unsigned int, unsigned long&gt;::_Tuple_impl&lt;unsigned int&amp;, unsigned long&amp;, void&gt; (131,313,130 samples, 0.02%)</title><rect x="468.2" y="677" width="0.2" height="15.0" fill="rgb(240,223,43)" rx="2" ry="2" />
<text  x="471.16" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (828,282,820 samples, 0.13%)</title><rect x="842.0" y="309" width="1.5" height="15.0" fill="rgb(209,156,13)" rx="2" ry="2" />
<text  x="845.02" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::BlobGarbageMeter*, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;@plt (101,010,100 samples, 0.02%)</title><rect x="1154.6" y="437" width="0.2" height="15.0" fill="rgb(227,170,45)" rx="2" ry="2" />
<text  x="1157.62" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::begin (131,313,130 samples, 0.02%)</title><rect x="1104.1" y="453" width="0.2" height="15.0" fill="rgb(207,68,20)" rx="2" ry="2" />
<text  x="1107.07" y="463.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::WriteBuffered (848,484,840 samples, 0.13%)</title><rect x="572.1" y="341" width="1.5" height="15.0" fill="rgb(238,64,15)" rx="2" ry="2" />
<text  x="575.08" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;&gt;::_M_assign&lt;rocksdb::Status, unsigned int, unsigned long&gt; (1,414,141,400 samples, 0.22%)</title><rect x="473.2" y="725" width="2.6" height="15.0" fill="rgb(205,219,51)" rx="2" ry="2" />
<text  x="476.24" y="735.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (242,424,240 samples, 0.04%)</title><rect x="1119.9" y="453" width="0.5" height="15.0" fill="rgb(245,159,18)" rx="2" ry="2" />
<text  x="1122.92" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (191,919,190 samples, 0.03%)</title><rect x="669.1" y="373" width="0.3" height="15.0" fill="rgb(219,47,52)" rx="2" ry="2" />
<text  x="672.07" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_write (606,060,600 samples, 0.09%)</title><rect x="1026.6" y="325" width="1.1" height="15.0" fill="rgb(221,74,1)" rx="2" ry="2" />
<text  x="1029.60" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::CompactionOutputs::Output const*, std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt; &gt;::__normal_iterator (60,606,060 samples, 0.01%)</title><rect x="1106.0" y="421" width="0.1" height="15.0" fill="rgb(211,156,42)" rx="2" ry="2" />
<text  x="1108.97" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_mbegin (90,909,090 samples, 0.01%)</title><rect x="948.3" y="389" width="0.2" height="15.0" fill="rgb(247,82,45)" rx="2" ry="2" />
<text  x="951.32" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt;::end (101,010,100 samples, 0.02%)</title><rect x="1079.7" y="453" width="0.2" height="15.0" fill="rgb(232,164,29)" rx="2" ry="2" />
<text  x="1082.74" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (888,888,880 samples, 0.14%)</title><rect x="1060.7" y="421" width="1.6" height="15.0" fill="rgb(225,228,40)" rx="2" ry="2" />
<text  x="1063.66" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::FileMetaData* const*, std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt; &gt;::__normal_iterator (313,131,310 samples, 0.05%)</title><rect x="1091.2" y="421" width="0.5" height="15.0" fill="rgb(236,121,27)" rx="2" ry="2" />
<text  x="1094.16" y="431.5" ></text>
</g>
<g >
<title>rocksdb::ComputeBuiltinChecksum (181,818,180 samples, 0.03%)</title><rect x="826.6" y="213" width="0.3" height="15.0" fill="rgb(209,67,48)" rx="2" ry="2" />
<text  x="829.55" y="223.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (292,929,290 samples, 0.05%)</title><rect x="897.8" y="293" width="0.5" height="15.0" fill="rgb(233,49,17)" rx="2" ry="2" />
<text  x="900.79" y="303.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt; (35,363,636,010 samples, 5.53%)</title><rect x="71.4" y="597" width="65.3" height="15.0" fill="rgb(218,49,26)" rx="2" ry="2" />
<text  x="74.42" y="607.5" >rocksdb..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (141,414,140 samples, 0.02%)</title><rect x="741.6" y="421" width="0.2" height="15.0" fill="rgb(215,222,34)" rx="2" ry="2" />
<text  x="744.55" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (70,707,070 samples, 0.01%)</title><rect x="473.7" y="645" width="0.1" height="15.0" fill="rgb(211,95,0)" rx="2" ry="2" />
<text  x="476.70" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (70,707,070 samples, 0.01%)</title><rect x="605.2" y="293" width="0.1" height="15.0" fill="rgb(222,63,19)" rx="2" ry="2" />
<text  x="608.19" y="303.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (80,808,080 samples, 0.01%)</title><rect x="10.3" y="805" width="0.1" height="15.0" fill="rgb(221,227,50)" rx="2" ry="2" />
<text  x="13.28" y="815.5" ></text>
</g>
<g >
<title>file_write_and_wait_range (151,515,150 samples, 0.02%)</title><rect x="1145.9" y="245" width="0.3" height="15.0" fill="rgb(240,26,17)" rx="2" ry="2" />
<text  x="1148.92" y="255.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::IsDeleteRangeSentinelKey (646,464,640 samples, 0.10%)</title><rect x="666.2" y="421" width="1.2" height="15.0" fill="rgb(221,167,23)" rx="2" ry="2" />
<text  x="669.18" y="431.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey@plt (80,808,080 samples, 0.01%)</title><rect x="126.8" y="565" width="0.1" height="15.0" fill="rgb(217,56,49)" rx="2" ry="2" />
<text  x="129.77" y="575.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (90,909,090 samples, 0.01%)</title><rect x="1035.8" y="373" width="0.1" height="15.0" fill="rgb(206,207,33)" rx="2" ry="2" />
<text  x="1038.78" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::IntTblPropCollector*, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; (242,424,240 samples, 0.04%)</title><rect x="609.6" y="373" width="0.4" height="15.0" fill="rgb(249,55,12)" rx="2" ry="2" />
<text  x="612.59" y="383.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (60,606,060 samples, 0.01%)</title><rect x="44.9" y="229" width="0.1" height="15.0" fill="rgb(218,195,3)" rx="2" ry="2" />
<text  x="47.94" y="239.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (2,232,323,210 samples, 0.35%)</title><rect x="907.4" y="389" width="4.1" height="15.0" fill="rgb(254,49,6)" rx="2" ry="2" />
<text  x="910.41" y="399.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000000l&gt;, void&gt; (111,111,110 samples, 0.02%)</title><rect x="278.2" y="677" width="0.2" height="15.0" fill="rgb(231,18,0)" rx="2" ry="2" />
<text  x="281.22" y="687.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::WriterSyncClose (151,515,150 samples, 0.02%)</title><rect x="1145.9" y="373" width="0.3" height="15.0" fill="rgb(237,79,4)" rx="2" ry="2" />
<text  x="1148.92" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (101,010,100 samples, 0.02%)</title><rect x="152.9" y="709" width="0.2" height="15.0" fill="rgb(244,127,30)" rx="2" ry="2" />
<text  x="155.90" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (696,969,690 samples, 0.11%)</title><rect x="843.8" y="341" width="1.3" height="15.0" fill="rgb(221,142,43)" rx="2" ry="2" />
<text  x="846.79" y="351.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::IsDeleteRangeSentinelKey (434,343,430 samples, 0.07%)</title><rect x="956.2" y="453" width="0.8" height="15.0" fill="rgb(206,65,4)" rx="2" ry="2" />
<text  x="959.19" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (60,606,060 samples, 0.01%)</title><rect x="1069.7" y="453" width="0.1" height="15.0" fill="rgb(236,31,17)" rx="2" ry="2" />
<text  x="1072.69" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Block::NewDataIterator (242,424,240 samples, 0.04%)</title><rect x="861.2" y="309" width="0.5" height="15.0" fill="rgb(238,226,38)" rx="2" ry="2" />
<text  x="864.21" y="319.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw (474,747,470 samples, 0.07%)</title><rect x="44.2" y="629" width="0.8" height="15.0" fill="rgb(236,116,47)" rx="2" ry="2" />
<text  x="47.17" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Cleanable::Reset (252,525,250 samples, 0.04%)</title><rect x="831.9" y="277" width="0.4" height="15.0" fill="rgb(236,85,38)" rx="2" ry="2" />
<text  x="834.87" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::FileMetaData* const*, std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt; &gt;::base@plt (70,707,070 samples, 0.01%)</title><rect x="1092.1" y="421" width="0.2" height="15.0" fill="rgb(215,43,46)" rx="2" ry="2" />
<text  x="1095.13" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::IndexBuilder*, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt;::_M_head (90,909,090 samples, 0.01%)</title><rect x="1077.9" y="389" width="0.2" height="15.0" fill="rgb(212,75,50)" rx="2" ry="2" />
<text  x="1080.92" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::SuperVersion, std::default_delete&lt;rocksdb::SuperVersion&gt; &gt;::__uniq_ptr_impl (131,313,130 samples, 0.02%)</title><rect x="28.3" y="661" width="0.2" height="15.0" fill="rgb(207,111,4)" rx="2" ry="2" />
<text  x="31.28" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (60,606,060 samples, 0.01%)</title><rect x="1121.1" y="421" width="0.1" height="15.0" fill="rgb(208,212,32)" rx="2" ry="2" />
<text  x="1124.13" y="431.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (313,131,310 samples, 0.05%)</title><rect x="49.8" y="613" width="0.6" height="15.0" fill="rgb(222,30,49)" rx="2" ry="2" />
<text  x="52.80" y="623.5" ></text>
</g>
<g >
<title>rocksdb::IsValueType (90,909,090 samples, 0.01%)</title><rect x="600.2" y="437" width="0.2" height="15.0" fill="rgb(254,106,18)" rx="2" ry="2" />
<text  x="603.22" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::operator bool (202,020,200 samples, 0.03%)</title><rect x="1073.7" y="453" width="0.4" height="15.0" fill="rgb(209,75,12)" rx="2" ry="2" />
<text  x="1076.70" y="463.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;rocksdb::SpinMutex&gt;::~unique_lock (121,212,120 samples, 0.02%)</title><rect x="69.6" y="549" width="0.2" height="15.0" fill="rgb(254,49,16)" rx="2" ry="2" />
<text  x="72.61" y="559.5" ></text>
</g>
<g >
<title>rocksdb::CompressBlock (90,909,090 samples, 0.01%)</title><rect x="1022.7" y="389" width="0.2" height="15.0" fill="rgb(209,229,13)" rx="2" ry="2" />
<text  x="1025.70" y="399.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyData::internal_comparator (80,808,080 samples, 0.01%)</title><rect x="1085.3" y="453" width="0.1" height="15.0" fill="rgb(221,138,22)" rx="2" ry="2" />
<text  x="1088.28" y="463.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::lru_cache::LRUHandle*, 8ul&gt;::~autovector (70,707,070 samples, 0.01%)</title><rect x="830.9" y="229" width="0.1" height="15.0" fill="rgb(253,157,31)" rx="2" ry="2" />
<text  x="833.90" y="239.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (224,373,735,130 samples, 35.11%)</title><rect x="765.1" y="757" width="414.3" height="15.0" fill="rgb(231,15,26)" rx="2" ry="2" />
<text  x="768.11" y="767.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (131,313,130 samples, 0.02%)</title><rect x="909.5" y="309" width="0.3" height="15.0" fill="rgb(223,100,10)" rx="2" ry="2" />
<text  x="912.52" y="319.5" ></text>
</g>
<g >
<title>XXH3_accumulate_avx512 (414,141,410 samples, 0.06%)</title><rect x="1023.9" y="293" width="0.7" height="15.0" fill="rgb(206,76,52)" rx="2" ry="2" />
<text  x="1026.86" y="303.5" ></text>
</g>
<g >
<title>rocksdb::UncompressBlockData (383,838,380 samples, 0.06%)</title><rect x="828.7" y="229" width="0.7" height="15.0" fill="rgb(245,212,8)" rx="2" ry="2" />
<text  x="831.68" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::BlobGarbageMeter, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;::operator bool (1,606,060,590 samples, 0.25%)</title><rect x="1151.8" y="469" width="3.0" height="15.0" fill="rgb(231,95,44)" rx="2" ry="2" />
<text  x="1154.84" y="479.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (101,010,100 samples, 0.02%)</title><rect x="38.4" y="373" width="0.2" height="15.0" fill="rgb(213,8,12)" rx="2" ry="2" />
<text  x="41.37" y="383.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::status (4,121,212,080 samples, 0.64%)</title><rect x="852.1" y="421" width="7.6" height="15.0" fill="rgb(246,137,52)" rx="2" ry="2" />
<text  x="855.09" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="843.2" y="261" width="0.3" height="15.0" fill="rgb(248,116,28)" rx="2" ry="2" />
<text  x="846.19" y="271.5" ></text>
</g>
<g >
<title>jbd2_journal_try_to_free_buffers (70,707,070 samples, 0.01%)</title><rect x="754.6" y="229" width="0.1" height="15.0" fill="rgb(224,0,17)" rx="2" ry="2" />
<text  x="757.57" y="239.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::Sync (151,515,150 samples, 0.02%)</title><rect x="1145.9" y="357" width="0.3" height="15.0" fill="rgb(243,53,48)" rx="2" ry="2" />
<text  x="1148.92" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalKeyComparator, std::default_delete&lt;rocksdb::InternalKeyComparator&gt; &gt;::operator= (60,606,060 samples, 0.01%)</title><rect x="825.8" y="229" width="0.1" height="15.0" fill="rgb(248,191,11)" rx="2" ry="2" />
<text  x="828.79" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::Tracer, std::default_delete&lt;rocksdb::Tracer&gt; &gt;::get (181,818,180 samples, 0.03%)</title><rect x="459.8" y="709" width="0.3" height="15.0" fill="rgb(229,186,43)" rx="2" ry="2" />
<text  x="462.79" y="719.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (70,707,070 samples, 0.01%)</title><rect x="465.0" y="741" width="0.1" height="15.0" fill="rgb(210,58,27)" rx="2" ry="2" />
<text  x="467.96" y="751.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::back (80,808,080 samples, 0.01%)</title><rect x="586.3" y="373" width="0.1" height="15.0" fill="rgb(253,64,5)" rx="2" ry="2" />
<text  x="589.27" y="383.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="707.2" y="437" width="0.2" height="15.0" fill="rgb(226,199,25)" rx="2" ry="2" />
<text  x="710.20" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (222,222,220 samples, 0.03%)</title><rect x="881.7" y="293" width="0.4" height="15.0" fill="rgb(210,12,31)" rx="2" ry="2" />
<text  x="884.71" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::WriteBatch::ProtectionInfo*, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="471.5" y="661" width="0.2" height="15.0" fill="rgb(220,195,44)" rx="2" ry="2" />
<text  x="474.54" y="671.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (6,535,353,470 samples, 1.02%)</title><rect x="278.7" y="677" width="12.0" height="15.0" fill="rgb(208,220,40)" rx="2" ry="2" />
<text  x="281.65" y="687.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::WriteBlock (4,101,010,060 samples, 0.64%)</title><rect x="1022.6" y="437" width="7.5" height="15.0" fill="rgb(210,44,32)" rx="2" ry="2" />
<text  x="1025.56" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::rend (404,040,400 samples, 0.06%)</title><rect x="992.9" y="469" width="0.7" height="15.0" fill="rgb(234,84,30)" rx="2" ry="2" />
<text  x="995.90" y="479.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::value (141,414,140 samples, 0.02%)</title><rect x="751.9" y="469" width="0.3" height="15.0" fill="rgb(248,101,47)" rx="2" ry="2" />
<text  x="754.91" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (70,707,070 samples, 0.01%)</title><rect x="813.2" y="357" width="0.1" height="15.0" fill="rgb(253,6,42)" rx="2" ry="2" />
<text  x="816.18" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::FilterBlockBuilder*, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt; (454,545,450 samples, 0.07%)</title><rect x="1072.6" y="389" width="0.8" height="15.0" fill="rgb(219,149,23)" rx="2" ry="2" />
<text  x="1075.58" y="399.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (8,181,818,100 samples, 1.28%)</title><rect x="187.5" y="709" width="15.1" height="15.0" fill="rgb(232,173,14)" rx="2" ry="2" />
<text  x="190.48" y="719.5" ></text>
</g>
<g >
<title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (90,909,090 samples, 0.01%)</title><rect x="134.0" y="533" width="0.1" height="15.0" fill="rgb(214,90,27)" rx="2" ry="2" />
<text  x="136.97" y="543.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (1,020,202,010 samples, 0.16%)</title><rect x="1166.0" y="485" width="1.8" height="15.0" fill="rgb(236,177,2)" rx="2" ry="2" />
<text  x="1168.96" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt;::__normal_iterator@plt (90,909,090 samples, 0.01%)</title><rect x="602.2" y="421" width="0.2" height="15.0" fill="rgb(209,165,54)" rx="2" ry="2" />
<text  x="605.22" y="431.5" ></text>
</g>
<g >
<title>rocksdb::ComputeBuiltinChecksumWithLastByte (505,050,500 samples, 0.08%)</title><rect x="1023.8" y="389" width="0.9" height="15.0" fill="rgb(225,136,14)" rx="2" ry="2" />
<text  x="1026.77" y="399.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid (80,808,080 samples, 0.01%)</title><rect x="696.9" y="421" width="0.1" height="15.0" fill="rgb(247,175,4)" rx="2" ry="2" />
<text  x="699.88" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (222,222,220 samples, 0.03%)</title><rect x="469.7" y="709" width="0.5" height="15.0" fill="rgb(217,120,23)" rx="2" ry="2" />
<text  x="472.75" y="719.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (60,606,060 samples, 0.01%)</title><rect x="186.7" y="709" width="0.1" height="15.0" fill="rgb(222,3,12)" rx="2" ry="2" />
<text  x="189.68" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (131,313,130 samples, 0.02%)</title><rect x="797.8" y="389" width="0.2" height="15.0" fill="rgb(251,109,48)" rx="2" ry="2" />
<text  x="800.79" y="399.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count@plt (80,808,080 samples, 0.01%)</title><rect x="290.4" y="629" width="0.2" height="15.0" fill="rgb(251,160,36)" rx="2" ry="2" />
<text  x="293.42" y="639.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt; const, rocksdb::CompactionMergingIterator::HeapItem* const&gt;::iterator_impl@plt (151,515,150 samples, 0.02%)</title><rect x="813.9" y="389" width="0.3" height="15.0" fill="rgb(209,107,8)" rx="2" ry="2" />
<text  x="816.87" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (161,616,160 samples, 0.03%)</title><rect x="142.4" y="581" width="0.3" height="15.0" fill="rgb(217,200,36)" rx="2" ry="2" />
<text  x="145.40" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::SuperVersion*, std::allocator&lt;rocksdb::SuperVersion*&gt; &gt;::~vector (111,111,110 samples, 0.02%)</title><rect x="29.7" y="677" width="0.2" height="15.0" fill="rgb(251,60,49)" rx="2" ry="2" />
<text  x="32.72" y="687.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (104,343,433,300 samples, 16.33%)</title><rect x="562.0" y="821" width="192.7" height="15.0" fill="rgb(237,200,20)" rx="2" ry="2" />
<text  x="565.04" y="831.5" >std::thread::_State_impl&lt;..</text>
</g>
<g >
<title>rocksdb::DBImpl::BackgroundCallCompaction (224,373,735,130 samples, 35.11%)</title><rect x="765.1" y="565" width="414.3" height="15.0" fill="rgb(253,131,5)" rx="2" ry="2" />
<text  x="768.11" y="575.5" >rocksdb::DBImpl::BackgroundCallCompaction</text>
</g>
<g >
<title>do_syscall_64 (363,636,360 samples, 0.06%)</title><rect x="864.4" y="229" width="0.7" height="15.0" fill="rgb(230,224,39)" rx="2" ry="2" />
<text  x="867.38" y="239.5" ></text>
</g>
<g >
<title>std::operator&amp; (141,414,140 samples, 0.02%)</title><rect x="184.7" y="709" width="0.2" height="15.0" fill="rgb(224,216,41)" rx="2" ry="2" />
<text  x="187.68" y="719.5" ></text>
</g>
<g >
<title>ext4_evict_inode (242,424,240 samples, 0.04%)</title><rect x="754.3" y="357" width="0.4" height="15.0" fill="rgb(243,158,46)" rx="2" ry="2" />
<text  x="757.26" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (80,808,080 samples, 0.01%)</title><rect x="911.0" y="293" width="0.2" height="15.0" fill="rgb(227,172,4)" rx="2" ry="2" />
<text  x="914.01" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (80,808,080 samples, 0.01%)</title><rect x="33.4" y="629" width="0.1" height="15.0" fill="rgb(230,137,48)" rx="2" ry="2" />
<text  x="36.39" y="639.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (60,606,060 samples, 0.01%)</title><rect x="573.3" y="117" width="0.1" height="15.0" fill="rgb(253,215,34)" rx="2" ry="2" />
<text  x="576.25" y="127.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (636,363,630 samples, 0.10%)</title><rect x="1140.0" y="357" width="1.2" height="15.0" fill="rgb(232,134,13)" rx="2" ry="2" />
<text  x="1143.05" y="367.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::ReadBlockContents (1,787,878,770 samples, 0.28%)</title><rect x="862.4" y="293" width="3.3" height="15.0" fill="rgb(222,162,10)" rx="2" ry="2" />
<text  x="865.44" y="303.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (353,535,350 samples, 0.06%)</title><rect x="851.0" y="389" width="0.6" height="15.0" fill="rgb(208,185,41)" rx="2" ry="2" />
<text  x="853.95" y="399.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::NextEntryOffset@plt (101,010,100 samples, 0.02%)</title><rect x="834.7" y="309" width="0.2" height="15.0" fill="rgb(226,133,4)" rx="2" ry="2" />
<text  x="837.67" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (333,333,330 samples, 0.05%)</title><rect x="607.7" y="373" width="0.6" height="15.0" fill="rgb(239,93,45)" rx="2" ry="2" />
<text  x="610.72" y="383.5" ></text>
</g>
<g >
<title>rocksdb::EncodeVarint32 (565,656,560 samples, 0.09%)</title><rect x="1038.8" y="405" width="1.0" height="15.0" fill="rgb(221,127,0)" rx="2" ry="2" />
<text  x="1041.76" y="415.5" ></text>
</g>
<g >
<title>rocksdb::lru_cache::LRUHandleTable::FindPointer (60,606,060 samples, 0.01%)</title><rect x="869.3" y="197" width="0.1" height="15.0" fill="rgb(236,99,12)" rx="2" ry="2" />
<text  x="872.31" y="207.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="148.8" y="581" width="0.1" height="15.0" fill="rgb(253,47,53)" rx="2" ry="2" />
<text  x="151.78" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (242,424,240 samples, 0.04%)</title><rect x="904.9" y="325" width="0.5" height="15.0" fill="rgb(230,184,9)" rx="2" ry="2" />
<text  x="907.93" y="335.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (242,424,240 samples, 0.04%)</title><rect x="131.7" y="533" width="0.5" height="15.0" fill="rgb(216,15,21)" rx="2" ry="2" />
<text  x="134.73" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FSWritableFileTracingWrapper, std::default_delete&lt;rocksdb::FSWritableFileTracingWrapper&gt; &gt;::get (60,606,060 samples, 0.01%)</title><rect x="35.0" y="613" width="0.1" height="15.0" fill="rgb(245,144,4)" rx="2" ry="2" />
<text  x="37.98" y="623.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt; const, rocksdb::CompactionMergingIterator::HeapItem* const&gt;::iterator_impl (80,808,080 samples, 0.01%)</title><rect x="819.7" y="373" width="0.2" height="15.0" fill="rgb(249,132,41)" rx="2" ry="2" />
<text  x="822.73" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (141,414,140 samples, 0.02%)</title><rect x="849.1" y="357" width="0.2" height="15.0" fill="rgb(240,47,7)" rx="2" ry="2" />
<text  x="852.09" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (151,515,150 samples, 0.02%)</title><rect x="665.5" y="357" width="0.3" height="15.0" fill="rgb(249,204,45)" rx="2" ry="2" />
<text  x="668.47" y="367.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::SuperVersion*, 8ul&gt;::autovector (90,909,090 samples, 0.01%)</title><rect x="27.9" y="693" width="0.1" height="15.0" fill="rgb(227,20,33)" rx="2" ry="2" />
<text  x="30.87" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (585,858,580 samples, 0.09%)</title><rect x="846.6" y="309" width="1.1" height="15.0" fill="rgb(238,24,36)" rx="2" ry="2" />
<text  x="849.57" y="319.5" ></text>
</g>
<g >
<title>rocksdb::NotifyCollectTableCollectorsOnAdd (5,696,969,640 samples, 0.89%)</title><rect x="600.4" y="437" width="10.5" height="15.0" fill="rgb(218,87,31)" rx="2" ry="2" />
<text  x="603.39" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (60,606,060 samples, 0.01%)</title><rect x="50.9" y="693" width="0.1" height="15.0" fill="rgb(240,203,32)" rx="2" ry="2" />
<text  x="53.89" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::BlobGarbageMeter, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;::_M_ptr (151,515,150 samples, 0.02%)</title><rect x="1152.0" y="453" width="0.3" height="15.0" fill="rgb(212,227,25)" rx="2" ry="2" />
<text  x="1155.02" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_drop_node (434,343,430 samples, 0.07%)</title><rect x="56.3" y="645" width="0.8" height="15.0" fill="rgb(231,167,20)" rx="2" ry="2" />
<text  x="59.30" y="655.5" ></text>
</g>
<g >
<title>rocksdb::MemTableIterator::Valid (171,717,170 samples, 0.03%)</title><rect x="632.8" y="405" width="0.4" height="15.0" fill="rgb(230,185,52)" rx="2" ry="2" />
<text  x="635.85" y="415.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="290.6" y="661" width="0.1" height="15.0" fill="rgb(234,74,16)" rx="2" ry="2" />
<text  x="293.57" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_lower_bound (292,929,290 samples, 0.05%)</title><rect x="659.6" y="357" width="0.5" height="15.0" fill="rgb(240,27,9)" rx="2" ry="2" />
<text  x="662.56" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (181,818,180 samples, 0.03%)</title><rect x="1011.1" y="373" width="0.3" height="15.0" fill="rgb(224,13,45)" rx="2" ry="2" />
<text  x="1014.07" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (60,606,060 samples, 0.01%)</title><rect x="142.8" y="629" width="0.1" height="15.0" fill="rgb(244,47,25)" rx="2" ry="2" />
<text  x="145.79" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::CompactionOutputs::Output const*, std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt; &gt;::__normal_iterator (131,313,130 samples, 0.02%)</title><rect x="1106.3" y="421" width="0.3" height="15.0" fill="rgb(243,187,5)" rx="2" ry="2" />
<text  x="1109.34" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_addr (60,606,060 samples, 0.01%)</title><rect x="498.0" y="693" width="0.2" height="15.0" fill="rgb(241,170,42)" rx="2" ry="2" />
<text  x="501.04" y="703.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (232,323,230 samples, 0.04%)</title><rect x="754.3" y="341" width="0.4" height="15.0" fill="rgb(229,200,47)" rx="2" ry="2" />
<text  x="757.28" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (80,808,080 samples, 0.01%)</title><rect x="185.9" y="677" width="0.2" height="15.0" fill="rgb(213,222,13)" rx="2" ry="2" />
<text  x="188.93" y="687.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (282,828,280 samples, 0.04%)</title><rect x="811.1" y="373" width="0.6" height="15.0" fill="rgb(239,210,13)" rx="2" ry="2" />
<text  x="814.15" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (888,888,880 samples, 0.14%)</title><rect x="1142.6" y="469" width="1.6" height="15.0" fill="rgb(233,48,26)" rx="2" ry="2" />
<text  x="1145.57" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::insert&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (2,818,181,790 samples, 0.44%)</title><rect x="494.6" y="805" width="5.2" height="15.0" fill="rgb(228,176,2)" rx="2" ry="2" />
<text  x="497.58" y="815.5" ></text>
</g>
<g >
<title>__page_cache_alloc (111,111,110 samples, 0.02%)</title><rect x="1027.0" y="117" width="0.2" height="15.0" fill="rgb(238,5,28)" rx="2" ry="2" />
<text  x="1030.00" y="127.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey (80,808,080 samples, 0.01%)</title><rect x="783.3" y="389" width="0.2" height="15.0" fill="rgb(253,13,36)" rx="2" ry="2" />
<text  x="786.32" y="399.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (979,797,970 samples, 0.15%)</title><rect x="741.8" y="453" width="1.8" height="15.0" fill="rgb(237,194,22)" rx="2" ry="2" />
<text  x="744.82" y="463.5" ></text>
</g>
<g >
<title>rocksdb::VerifyBlockChecksum (272,727,270 samples, 0.04%)</title><rect x="863.0" y="261" width="0.5" height="15.0" fill="rgb(227,197,49)" rx="2" ry="2" />
<text  x="866.04" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (383,838,380 samples, 0.06%)</title><rect x="1061.6" y="357" width="0.7" height="15.0" fill="rgb(249,84,6)" rx="2" ry="2" />
<text  x="1064.56" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (404,040,400 samples, 0.06%)</title><rect x="1140.5" y="341" width="0.7" height="15.0" fill="rgb(253,12,53)" rx="2" ry="2" />
<text  x="1143.48" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (232,323,230 samples, 0.04%)</title><rect x="857.9" y="309" width="0.5" height="15.0" fill="rgb(207,53,8)" rx="2" ry="2" />
<text  x="860.93" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (101,010,100 samples, 0.02%)</title><rect x="147.7" y="629" width="0.2" height="15.0" fill="rgb(237,45,29)" rx="2" ry="2" />
<text  x="150.75" y="639.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::SeekToFirst (80,808,080 samples, 0.01%)</title><rect x="870.2" y="357" width="0.1" height="15.0" fill="rgb(235,188,47)" rx="2" ry="2" />
<text  x="873.16" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="845.2" y="277" width="0.1" height="15.0" fill="rgb(217,156,20)" rx="2" ry="2" />
<text  x="848.17" y="287.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatch::~WriteBatch (494,949,490 samples, 0.08%)</title><rect x="478.0" y="757" width="0.9" height="15.0" fill="rgb(248,3,13)" rx="2" ry="2" />
<text  x="481.03" y="767.5" ></text>
</g>
<g >
<title>std::map&lt;rocksdb::MemTable*, rocksdb::MemTablePostProcessInfo, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::begin (141,414,140 samples, 0.02%)</title><rect x="55.3" y="693" width="0.3" height="15.0" fill="rgb(211,139,14)" rx="2" ry="2" />
<text  x="58.34" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_fdatasync (151,515,150 samples, 0.02%)</title><rect x="1145.9" y="277" width="0.3" height="15.0" fill="rgb(229,56,17)" rx="2" ry="2" />
<text  x="1148.92" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::_M_ptr (101,010,100 samples, 0.02%)</title><rect x="614.5" y="405" width="0.2" height="15.0" fill="rgb(221,60,44)" rx="2" ry="2" />
<text  x="617.53" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (141,414,140 samples, 0.02%)</title><rect x="846.2" y="309" width="0.2" height="15.0" fill="rgb(249,161,48)" rx="2" ry="2" />
<text  x="849.18" y="319.5" ></text>
</g>
<g >
<title>rocksdb::FlushJob::WriteLevel0Table (103,959,594,920 samples, 16.27%)</title><rect x="562.3" y="485" width="192.0" height="15.0" fill="rgb(247,89,15)" rx="2" ry="2" />
<text  x="565.28" y="495.5" >rocksdb::FlushJob::WriteL..</text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::lower_bound (1,282,828,270 samples, 0.20%)</title><rect x="947.9" y="421" width="2.4" height="15.0" fill="rgb(232,0,36)" rx="2" ry="2" />
<text  x="950.89" y="431.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::reset_root_cmp_cache@plt (90,909,090 samples, 0.01%)</title><rect x="801.8" y="421" width="0.2" height="15.0" fill="rgb(234,199,45)" rx="2" ry="2" />
<text  x="804.80" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::FlushBlockPolicy, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt;::_M_ptr (939,393,930 samples, 0.15%)</title><rect x="617.5" y="405" width="1.7" height="15.0" fill="rgb(243,29,52)" rx="2" ry="2" />
<text  x="620.46" y="415.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::Clear (202,020,200 samples, 0.03%)</title><rect x="837.4" y="341" width="0.3" height="15.0" fill="rgb(215,131,24)" rx="2" ry="2" />
<text  x="840.35" y="351.5" ></text>
</g>
<g >
<title>rocksdb::MergeOutputIterator::Valid (2,060,606,040 samples, 0.32%)</title><rect x="700.8" y="437" width="3.8" height="15.0" fill="rgb(230,85,19)" rx="2" ry="2" />
<text  x="703.78" y="447.5" ></text>
</g>
<g >
<title>rocksdb::InternalStats::AddDBStats (101,010,100 samples, 0.02%)</title><rect x="47.8" y="725" width="0.2" height="15.0" fill="rgb(235,130,36)" rx="2" ry="2" />
<text  x="50.85" y="735.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (104,343,433,300 samples, 16.33%)</title><rect x="562.0" y="629" width="192.7" height="15.0" fill="rgb(251,180,33)" rx="2" ry="2" />
<text  x="565.04" y="639.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_node (90,909,090 samples, 0.01%)</title><rect x="495.6" y="741" width="0.2" height="15.0" fill="rgb(232,223,42)" rx="2" ry="2" />
<text  x="498.60" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (888,888,880 samples, 0.14%)</title><rect x="742.0" y="437" width="1.6" height="15.0" fill="rgb(249,218,41)" rx="2" ry="2" />
<text  x="744.98" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (404,040,400 samples, 0.06%)</title><rect x="742.9" y="389" width="0.7" height="15.0" fill="rgb(242,119,42)" rx="2" ry="2" />
<text  x="745.88" y="399.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyHandleImpl::GetID (70,707,070 samples, 0.01%)</title><rect x="465.7" y="709" width="0.2" height="15.0" fill="rgb(235,41,43)" rx="2" ry="2" />
<text  x="468.72" y="719.5" ></text>
</g>
<g >
<title>[[vdso]] (646,464,640 samples, 0.10%)</title><rect x="151.6" y="693" width="1.2" height="15.0" fill="rgb(233,174,50)" rx="2" ry="2" />
<text  x="154.63" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::operator bool (303,030,300 samples, 0.05%)</title><rect x="1083.9" y="437" width="0.6" height="15.0" fill="rgb(222,45,54)" rx="2" ry="2" />
<text  x="1086.92" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="894.4" y="357" width="0.2" height="15.0" fill="rgb(251,141,36)" rx="2" ry="2" />
<text  x="897.36" y="367.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (80,808,080 samples, 0.01%)</title><rect x="1027.4" y="101" width="0.2" height="15.0" fill="rgb(222,217,25)" rx="2" ry="2" />
<text  x="1030.42" y="111.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::IntTblPropCollector*, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::_M_head (232,323,230 samples, 0.04%)</title><rect x="1065.3" y="373" width="0.5" height="15.0" fill="rgb(225,67,31)" rx="2" ry="2" />
<text  x="1068.33" y="383.5" ></text>
</g>
<g >
<title>std::operator&amp; (1,313,131,300 samples, 0.21%)</title><rect x="292.8" y="693" width="2.4" height="15.0" fill="rgb(233,68,40)" rx="2" ry="2" />
<text  x="295.81" y="703.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (104,343,433,300 samples, 16.33%)</title><rect x="562.0" y="597" width="192.7" height="15.0" fill="rgb(243,182,50)" rx="2" ry="2" />
<text  x="565.04" y="607.5" >std::__invoke_impl&lt;void, ..</text>
</g>
<g >
<title>rocksdb::Status::operator= (232,323,230 samples, 0.04%)</title><rect x="753.0" y="469" width="0.4" height="15.0" fill="rgb(239,126,39)" rx="2" ry="2" />
<text  x="756.01" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_right (151,515,150 samples, 0.02%)</title><rect x="487.4" y="757" width="0.3" height="15.0" fill="rgb(215,190,40)" rx="2" ry="2" />
<text  x="490.41" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (60,606,060 samples, 0.01%)</title><rect x="63.7" y="581" width="0.1" height="15.0" fill="rgb(221,18,35)" rx="2" ry="2" />
<text  x="66.66" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="842.2" y="277" width="0.1" height="15.0" fill="rgb(249,60,47)" rx="2" ry="2" />
<text  x="845.17" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (828,282,820 samples, 0.13%)</title><rect x="572.1" y="293" width="1.5" height="15.0" fill="rgb(207,149,17)" rx="2" ry="2" />
<text  x="575.11" y="303.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::BlockBasedTablePropertiesCollector::InternalAdd (999,999,990 samples, 0.16%)</title><rect x="1060.6" y="437" width="1.8" height="15.0" fill="rgb(212,139,52)" rx="2" ry="2" />
<text  x="1063.59" y="447.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::InvokeFilterIfNeeded (212,121,210 samples, 0.03%)</title><rect x="642.8" y="421" width="0.4" height="15.0" fill="rgb(213,178,36)" rx="2" ry="2" />
<text  x="645.77" y="431.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; (242,424,240 samples, 0.04%)</title><rect x="165.8" y="629" width="0.5" height="15.0" fill="rgb(212,146,43)" rx="2" ry="2" />
<text  x="168.81" y="639.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::CurrentSizeEstimate (373,737,370 samples, 0.06%)</title><rect x="1045.3" y="453" width="0.7" height="15.0" fill="rgb(221,127,10)" rx="2" ry="2" />
<text  x="1048.31" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::CompactionOutputs::Output*, std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt; &gt;::__normal_iterator (202,020,200 samples, 0.03%)</title><rect x="1103.7" y="421" width="0.4" height="15.0" fill="rgb(228,220,32)" rx="2" ry="2" />
<text  x="1106.69" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (252,525,250 samples, 0.04%)</title><rect x="495.1" y="741" width="0.5" height="15.0" fill="rgb(207,8,39)" rx="2" ry="2" />
<text  x="498.14" y="751.5" ></text>
</g>
<g >
<title>rocksdb::RandomAccessFileReader::Read (484,848,480 samples, 0.08%)</title><rect x="827.5" y="245" width="0.9" height="15.0" fill="rgb(214,170,23)" rx="2" ry="2" />
<text  x="830.49" y="255.5" ></text>
</g>
<g >
<title>rocksdb::ExtractValueType (202,020,200 samples, 0.03%)</title><rect x="709.1" y="453" width="0.4" height="15.0" fill="rgb(244,59,24)" rx="2" ry="2" />
<text  x="712.14" y="463.5" ></text>
</g>
<g >
<title>ext4_bio_write_page (101,010,100 samples, 0.02%)</title><rect x="1146.0" y="133" width="0.1" height="15.0" fill="rgb(219,66,16)" rx="2" ry="2" />
<text  x="1148.96" y="143.5" ></text>
</g>
<g >
<title>rocksdb::GetVarint32Ptr (131,313,130 samples, 0.02%)</title><rect x="681.3" y="389" width="0.2" height="15.0" fill="rgb(228,76,38)" rx="2" ry="2" />
<text  x="684.27" y="399.5" ></text>
</g>
<g >
<title>rocksdb::Status::MarkChecked@plt (80,808,080 samples, 0.01%)</title><rect x="727.4" y="453" width="0.1" height="15.0" fill="rgb(206,180,42)" rx="2" ry="2" />
<text  x="730.38" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_Auto_node::_M_key (60,606,060 samples, 0.01%)</title><rect x="61.4" y="613" width="0.1" height="15.0" fill="rgb(206,23,21)" rx="2" ry="2" />
<text  x="64.39" y="623.5" ></text>
</g>
<g >
<title>rocksdb::UserComparatorWrapper::Compare (1,808,080,790 samples, 0.28%)</title><rect x="1116.6" y="437" width="3.3" height="15.0" fill="rgb(216,227,46)" rx="2" ry="2" />
<text  x="1119.58" y="447.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;@plt (101,010,100 samples, 0.02%)</title><rect x="452.3" y="709" width="0.2" height="15.0" fill="rgb(230,155,44)" rx="2" ry="2" />
<text  x="455.29" y="719.5" ></text>
</g>
<g >
<title>rocksdb::GetLengthPrefixedSlice@plt (60,606,060 samples, 0.01%)</title><rect x="89.0" y="533" width="0.1" height="15.0" fill="rgb(247,13,48)" rx="2" ry="2" />
<text  x="91.96" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::_Tuple_impl (60,606,060 samples, 0.01%)</title><rect x="477.8" y="677" width="0.2" height="15.0" fill="rgb(254,0,7)" rx="2" ry="2" />
<text  x="480.84" y="687.5" ></text>
</g>
<g >
<title>rocksdb::MergeOutputIterator::Valid (222,222,220 samples, 0.03%)</title><rect x="1005.2" y="501" width="0.4" height="15.0" fill="rgb(207,8,27)" rx="2" ry="2" />
<text  x="1008.19" y="511.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::IsParallelCompressionEnabled (131,313,130 samples, 0.02%)</title><rect x="575.4" y="437" width="0.2" height="15.0" fill="rgb(235,228,33)" rx="2" ry="2" />
<text  x="578.40" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, unsigned long&amp;&gt;::_M_assign&lt;unsigned long&gt; (121,212,120 samples, 0.02%)</title><rect x="474.6" y="693" width="0.3" height="15.0" fill="rgb(243,189,23)" rx="2" ry="2" />
<text  x="477.64" y="703.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (353,535,350 samples, 0.06%)</title><rect x="450.3" y="709" width="0.7" height="15.0" fill="rgb(231,57,37)" rx="2" ry="2" />
<text  x="453.33" y="719.5" ></text>
</g>
<g >
<title>ext4_sync_file (212,121,210 samples, 0.03%)</title><rect x="747.3" y="357" width="0.4" height="15.0" fill="rgb(242,14,19)" rx="2" ry="2" />
<text  x="750.26" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (121,212,120 samples, 0.02%)</title><rect x="911.3" y="357" width="0.2" height="15.0" fill="rgb(246,166,14)" rx="2" ry="2" />
<text  x="914.31" y="367.5" ></text>
</g>
<g >
<title>rocksdb::Status::MarkChecked (191,919,190 samples, 0.03%)</title><rect x="727.0" y="453" width="0.4" height="15.0" fill="rgb(250,145,27)" rx="2" ry="2" />
<text  x="730.02" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (252,525,250 samples, 0.04%)</title><rect x="580.1" y="389" width="0.5" height="15.0" fill="rgb(212,130,7)" rx="2" ry="2" />
<text  x="583.12" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (80,808,080 samples, 0.01%)</title><rect x="33.4" y="661" width="0.1" height="15.0" fill="rgb(222,206,24)" rx="2" ry="2" />
<text  x="36.39" y="671.5" ></text>
</g>
<g >
<title>XXH3_accumulate_avx512 (111,111,110 samples, 0.02%)</title><rect x="863.2" y="149" width="0.2" height="15.0" fill="rgb(214,1,30)" rx="2" ry="2" />
<text  x="866.19" y="159.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="857.5" y="245" width="0.2" height="15.0" fill="rgb(240,92,2)" rx="2" ry="2" />
<text  x="860.48" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt;::__normal_iterator (101,010,100 samples, 0.02%)</title><rect x="610.7" y="405" width="0.2" height="15.0" fill="rgb(205,176,38)" rx="2" ry="2" />
<text  x="613.73" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (434,343,430 samples, 0.07%)</title><rect x="954.7" y="453" width="0.8" height="15.0" fill="rgb(224,14,23)" rx="2" ry="2" />
<text  x="957.66" y="463.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid@plt (161,616,160 samples, 0.03%)</title><rect x="932.2" y="469" width="0.3" height="15.0" fill="rgb(238,218,13)" rx="2" ry="2" />
<text  x="935.18" y="479.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (70,707,070 samples, 0.01%)</title><rect x="630.1" y="389" width="0.2" height="15.0" fill="rgb(228,148,20)" rx="2" ry="2" />
<text  x="633.12" y="399.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::Invalidate (262,626,260 samples, 0.04%)</title><rect x="831.9" y="309" width="0.5" height="15.0" fill="rgb(254,54,52)" rx="2" ry="2" />
<text  x="834.87" y="319.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::key (909,090,900 samples, 0.14%)</title><rect x="781.6" y="373" width="1.7" height="15.0" fill="rgb(216,97,44)" rx="2" ry="2" />
<text  x="784.64" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::_M_ptr (707,070,700 samples, 0.11%)</title><rect x="1157.1" y="437" width="1.3" height="15.0" fill="rgb(226,166,35)" rx="2" ry="2" />
<text  x="1160.12" y="447.5" ></text>
</g>
<g >
<title>block_invalidatepage (131,313,130 samples, 0.02%)</title><rect x="754.5" y="277" width="0.2" height="15.0" fill="rgb(245,171,43)" rx="2" ry="2" />
<text  x="757.46" y="287.5" ></text>
</g>
<g >
<title>rocksdb::Random::OneIn (80,808,080 samples, 0.01%)</title><rect x="230.5" y="693" width="0.1" height="15.0" fill="rgb(212,148,5)" rx="2" ry="2" />
<text  x="233.45" y="703.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block_kData&gt; (70,707,070 samples, 0.01%)</title><rect x="829.8" y="261" width="0.2" height="15.0" fill="rgb(252,99,21)" rx="2" ry="2" />
<text  x="832.84" y="271.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (3,676,767,640 samples, 0.58%)</title><rect x="262.5" y="645" width="6.8" height="15.0" fill="rgb(213,47,54)" rx="2" ry="2" />
<text  x="265.46" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (60,606,060 samples, 0.01%)</title><rect x="850.8" y="373" width="0.1" height="15.0" fill="rgb(209,191,25)" rx="2" ry="2" />
<text  x="853.82" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (141,414,140 samples, 0.02%)</title><rect x="461.7" y="693" width="0.2" height="15.0" fill="rgb(229,154,11)" rx="2" ry="2" />
<text  x="464.67" y="703.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (101,010,100 samples, 0.02%)</title><rect x="289.9" y="629" width="0.2" height="15.0" fill="rgb(239,148,25)" rx="2" ry="2" />
<text  x="292.88" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_destroy_node (90,909,090 samples, 0.01%)</title><rect x="56.3" y="629" width="0.2" height="15.0" fill="rgb(220,199,29)" rx="2" ry="2" />
<text  x="59.30" y="639.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::key (60,606,060 samples, 0.01%)</title><rect x="877.8" y="389" width="0.1" height="15.0" fill="rgb(238,217,9)" rx="2" ry="2" />
<text  x="880.77" y="399.5" ></text>
</g>
<g >
<title>new_sync_write (606,060,600 samples, 0.09%)</title><rect x="1026.6" y="229" width="1.1" height="15.0" fill="rgb(241,112,42)" rx="2" ry="2" />
<text  x="1029.60" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::operator (141,414,140 samples, 0.02%)</title><rect x="903.2" y="373" width="0.2" height="15.0" fill="rgb(239,103,1)" rx="2" ry="2" />
<text  x="906.18" y="383.5" ></text>
</g>
<g >
<title>std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;::pair&lt;rocksdb::MemTable* const&amp;&gt; (202,020,200 samples, 0.03%)</title><rect x="62.3" y="517" width="0.4" height="15.0" fill="rgb(241,214,40)" rx="2" ry="2" />
<text  x="65.34" y="527.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::ShouldStopBefore (474,747,470 samples, 0.07%)</title><rect x="1160.1" y="485" width="0.9" height="15.0" fill="rgb(250,192,13)" rx="2" ry="2" />
<text  x="1163.08" y="495.5" ></text>
</g>
<g >
<title>rocksdb::PutVarint32Varint32Varint32 (151,515,150 samples, 0.02%)</title><rect x="1042.6" y="437" width="0.3" height="15.0" fill="rgb(234,175,44)" rx="2" ry="2" />
<text  x="1045.61" y="447.5" ></text>
</g>
<g >
<title>rocksdb::InternalKeyComparator::Compare (5,292,929,240 samples, 0.83%)</title><rect x="783.5" y="389" width="9.7" height="15.0" fill="rgb(218,80,9)" rx="2" ry="2" />
<text  x="786.47" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (90,909,090 samples, 0.01%)</title><rect x="811.5" y="357" width="0.2" height="15.0" fill="rgb(208,19,47)" rx="2" ry="2" />
<text  x="814.50" y="367.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::BGWorkCompaction (224,373,735,130 samples, 35.11%)</title><rect x="765.1" y="581" width="414.3" height="15.0" fill="rgb(232,158,22)" rx="2" ry="2" />
<text  x="768.11" y="591.5" >rocksdb::DBImpl::BGWorkCompaction</text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (323,232,320 samples, 0.05%)</title><rect x="690.6" y="389" width="0.6" height="15.0" fill="rgb(239,23,0)" rx="2" ry="2" />
<text  x="693.56" y="399.5" ></text>
</g>
<g >
<title>rocksdb::Block::Block (90,909,090 samples, 0.01%)</title><rect x="861.9" y="261" width="0.2" height="15.0" fill="rgb(217,162,16)" rx="2" ry="2" />
<text  x="864.92" y="271.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::SetValid (222,222,220 samples, 0.03%)</title><rect x="991.0" y="485" width="0.4" height="15.0" fill="rgb(227,129,41)" rx="2" ry="2" />
<text  x="993.98" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt;::__normal_iterator (292,929,290 samples, 0.05%)</title><rect x="1059.0" y="437" width="0.6" height="15.0" fill="rgb(235,119,45)" rx="2" ry="2" />
<text  x="1062.02" y="447.5" ></text>
</g>
<g >
<title>rocksdb::BlockCreateContext::Create (151,515,150 samples, 0.02%)</title><rect x="826.1" y="261" width="0.3" height="15.0" fill="rgb(229,158,28)" rx="2" ry="2" />
<text  x="829.09" y="271.5" ></text>
</g>
<g >
<title>rocksdb::Cleanable::DoCleanup (90,909,090 samples, 0.01%)</title><rect x="654.5" y="389" width="0.2" height="15.0" fill="rgb(215,229,53)" rx="2" ry="2" />
<text  x="657.48" y="399.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (939,393,930 samples, 0.15%)</title><rect x="879.0" y="373" width="1.7" height="15.0" fill="rgb(254,215,46)" rx="2" ry="2" />
<text  x="881.99" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::emplace_back&lt;unsigned int&gt; (181,818,180 samples, 0.03%)</title><rect x="1042.2" y="405" width="0.4" height="15.0" fill="rgb(222,35,29)" rx="2" ry="2" />
<text  x="1045.22" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::operator bool (242,424,240 samples, 0.04%)</title><rect x="975.7" y="469" width="0.4" height="15.0" fill="rgb(246,103,27)" rx="2" ry="2" />
<text  x="978.66" y="479.5" ></text>
</g>
<g >
<title>rocksdb::IsValueType (101,010,100 samples, 0.02%)</title><rect x="939.2" y="437" width="0.2" height="15.0" fill="rgb(226,120,12)" rx="2" ry="2" />
<text  x="942.23" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (353,535,350 samples, 0.06%)</title><rect x="1009.4" y="421" width="0.7" height="15.0" fill="rgb(212,227,29)" rx="2" ry="2" />
<text  x="1012.41" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::CompactionIterator*, false&gt;::_M_head (414,141,410 samples, 0.06%)</title><rect x="1173.5" y="421" width="0.7" height="15.0" fill="rgb(207,213,6)" rx="2" ry="2" />
<text  x="1176.46" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (868,686,860 samples, 0.14%)</title><rect x="853.0" y="341" width="1.6" height="15.0" fill="rgb(213,65,32)" rx="2" ry="2" />
<text  x="856.04" y="351.5" ></text>
</g>
<g >
<title>std::this_thread::yield (80,171,716,370 samples, 12.55%)</title><rect x="295.2" y="693" width="148.1" height="15.0" fill="rgb(237,217,8)" rx="2" ry="2" />
<text  x="298.24" y="703.5" >std::this_thread::..</text>
</g>
<g >
<title>XXH3_accumulate_512_avx512 (303,030,300 samples, 0.05%)</title><rect x="569.8" y="261" width="0.6" height="15.0" fill="rgb(225,218,47)" rx="2" ry="2" />
<text  x="572.82" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (202,020,200 samples, 0.03%)</title><rect x="1028.1" y="373" width="0.4" height="15.0" fill="rgb(212,229,43)" rx="2" ry="2" />
<text  x="1031.10" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (222,222,220 samples, 0.03%)</title><rect x="890.6" y="405" width="0.4" height="15.0" fill="rgb(222,29,3)" rx="2" ry="2" />
<text  x="893.55" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (777,777,770 samples, 0.12%)</title><rect x="900.0" y="341" width="1.5" height="15.0" fill="rgb(229,27,20)" rx="2" ry="2" />
<text  x="903.05" y="351.5" ></text>
</g>
<g >
<title>rocksdb::BlockContents::BlockContents (60,606,060 samples, 0.01%)</title><rect x="861.9" y="245" width="0.1" height="15.0" fill="rgb(236,166,4)" rx="2" ry="2" />
<text  x="864.92" y="255.5" ></text>
</g>
<g >
<title>snappy::internal::CompressFragment (2,959,595,930 samples, 0.46%)</title><rect x="1180.7" y="821" width="5.4" height="15.0" fill="rgb(222,166,10)" rx="2" ry="2" />
<text  x="1183.67" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::get (646,464,640 samples, 0.10%)</title><rect x="609.0" y="405" width="1.1" height="15.0" fill="rgb(236,92,30)" rx="2" ry="2" />
<text  x="611.95" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_put_node (151,515,150 samples, 0.02%)</title><rect x="56.6" y="629" width="0.3" height="15.0" fill="rgb(215,179,39)" rx="2" ry="2" />
<text  x="59.63" y="639.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::MemTableInserter::SeekToColumnFamily (90,909,090 samples, 0.01%)</title><rect x="59.9" y="645" width="0.1" height="15.0" fill="rgb(225,191,14)" rx="2" ry="2" />
<text  x="62.88" y="655.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::WriteContext::~WriteContext (1,212,121,200 samples, 0.19%)</title><rect x="29.0" y="725" width="2.2" height="15.0" fill="rgb(229,107,12)" rx="2" ry="2" />
<text  x="31.95" y="735.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count@plt (111,111,110 samples, 0.02%)</title><rect x="272.0" y="677" width="0.2" height="15.0" fill="rgb(252,227,37)" rx="2" ry="2" />
<text  x="274.98" y="687.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (90,909,090 samples, 0.01%)</title><rect x="819.9" y="373" width="0.2" height="15.0" fill="rgb(228,175,40)" rx="2" ry="2" />
<text  x="822.91" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (141,414,140 samples, 0.02%)</title><rect x="1061.2" y="389" width="0.3" height="15.0" fill="rgb(239,19,25)" rx="2" ry="2" />
<text  x="1064.22" y="399.5" ></text>
</g>
<g >
<title>rocksdb::GetLengthPrefixedSlice (323,232,320 samples, 0.05%)</title><rect x="146.1" y="661" width="0.6" height="15.0" fill="rgb(250,69,52)" rx="2" ry="2" />
<text  x="149.09" y="671.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_head (171,717,170 samples, 0.03%)</title><rect x="698.1" y="325" width="0.3" height="15.0" fill="rgb(210,101,14)" rx="2" ry="2" />
<text  x="701.06" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FSWritableFileTracingWrapper, std::default_delete&lt;rocksdb::FSWritableFileTracingWrapper&gt; &gt;::operator (70,707,070 samples, 0.01%)</title><rect x="35.0" y="629" width="0.1" height="15.0" fill="rgb(219,97,23)" rx="2" ry="2" />
<text  x="37.96" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (343,434,340 samples, 0.05%)</title><rect x="652.3" y="341" width="0.7" height="15.0" fill="rgb(246,140,7)" rx="2" ry="2" />
<text  x="655.32" y="351.5" ></text>
</g>
<g >
<title>TLS init function for rocksdb::perf_context (70,707,070 samples, 0.01%)</title><rect x="624.6" y="389" width="0.1" height="15.0" fill="rgb(206,146,31)" rx="2" ry="2" />
<text  x="627.57" y="399.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="166.6" y="677" width="0.3" height="15.0" fill="rgb(252,96,11)" rx="2" ry="2" />
<text  x="169.63" y="687.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (181,818,180 samples, 0.03%)</title><rect x="689.6" y="373" width="0.3" height="15.0" fill="rgb(237,158,12)" rx="2" ry="2" />
<text  x="692.55" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (777,777,770 samples, 0.12%)</title><rect x="904.6" y="357" width="1.5" height="15.0" fill="rgb(236,123,20)" rx="2" ry="2" />
<text  x="907.62" y="367.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::WriteBatch::ProtectionInfo*, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="478.7" y="693" width="0.2" height="15.0" fill="rgb(243,155,24)" rx="2" ry="2" />
<text  x="481.74" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (323,232,320 samples, 0.05%)</title><rect x="578.0" y="325" width="0.6" height="15.0" fill="rgb(247,117,36)" rx="2" ry="2" />
<text  x="580.97" y="335.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt;@plt (161,616,160 samples, 0.03%)</title><rect x="268.4" y="629" width="0.3" height="15.0" fill="rgb(212,60,36)" rx="2" ry="2" />
<text  x="271.39" y="639.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatchInternal::Append (525,252,520 samples, 0.08%)</title><rect x="31.5" y="693" width="1.0" height="15.0" fill="rgb(206,9,0)" rx="2" ry="2" />
<text  x="34.49" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (353,535,350 samples, 0.06%)</title><rect x="604.7" y="341" width="0.6" height="15.0" fill="rgb(247,207,50)" rx="2" ry="2" />
<text  x="607.68" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;::_Deque_iterator&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, void&gt; (111,111,110 samples, 0.02%)</title><rect x="993.0" y="453" width="0.2" height="15.0" fill="rgb(243,160,13)" rx="2" ry="2" />
<text  x="996.03" y="463.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::FindKeyForward (101,010,100 samples, 0.02%)</title><rect x="860.3" y="405" width="0.2" height="15.0" fill="rgb(216,89,42)" rx="2" ry="2" />
<text  x="863.32" y="415.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::top (3,424,242,390 samples, 0.54%)</title><rect x="810.4" y="421" width="6.4" height="15.0" fill="rgb(213,46,46)" rx="2" ry="2" />
<text  x="813.44" y="431.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyData::user_comparator (60,606,060 samples, 0.01%)</title><rect x="480.0" y="757" width="0.1" height="15.0" fill="rgb(241,173,4)" rx="2" ry="2" />
<text  x="482.97" y="767.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::CompactionIterator*, false&gt;::_M_head@plt (121,212,120 samples, 0.02%)</title><rect x="1174.2" y="421" width="0.2" height="15.0" fill="rgb(219,228,8)" rx="2" ry="2" />
<text  x="1177.22" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;bool*, rocksdb::Slice const&gt;::pair&lt;bool*, rocksdb::Slice const&amp;, true&gt; (222,222,220 samples, 0.03%)</title><rect x="1095.6" y="453" width="0.4" height="15.0" fill="rgb(235,180,35)" rx="2" ry="2" />
<text  x="1098.60" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (141,414,140 samples, 0.02%)</title><rect x="843.2" y="245" width="0.3" height="15.0" fill="rgb(230,118,10)" rx="2" ry="2" />
<text  x="846.25" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::end (272,727,270 samples, 0.04%)</title><rect x="1106.1" y="437" width="0.5" height="15.0" fill="rgb(230,175,47)" rx="2" ry="2" />
<text  x="1109.08" y="447.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::unordered_map (90,909,090 samples, 0.01%)</title><rect x="1025.8" y="341" width="0.1" height="15.0" fill="rgb(221,122,14)" rx="2" ry="2" />
<text  x="1028.76" y="351.5" ></text>
</g>
<g >
<title>__tls_get_addr (171,717,170 samples, 0.03%)</title><rect x="565.5" y="453" width="0.3" height="15.0" fill="rgb(218,194,49)" rx="2" ry="2" />
<text  x="568.53" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (222,222,220 samples, 0.03%)</title><rect x="798.9" y="389" width="0.4" height="15.0" fill="rgb(234,84,8)" rx="2" ry="2" />
<text  x="801.91" y="399.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="458.0" y="693" width="0.1" height="15.0" fill="rgb(240,64,51)" rx="2" ry="2" />
<text  x="460.96" y="703.5" ></text>
</g>
<g >
<title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Insert (505,050,500 samples, 0.08%)</title><rect x="867.4" y="309" width="0.9" height="15.0" fill="rgb(245,15,41)" rx="2" ry="2" />
<text  x="870.37" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (80,808,080 samples, 0.01%)</title><rect x="844.8" y="277" width="0.1" height="15.0" fill="rgb(213,58,30)" rx="2" ry="2" />
<text  x="847.80" y="287.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (70,707,070 samples, 0.01%)</title><rect x="875.5" y="325" width="0.2" height="15.0" fill="rgb(225,139,2)" rx="2" ry="2" />
<text  x="878.54" y="335.5" ></text>
</g>
<g >
<title>rocksdb::Compaction::output_level (292,929,290 samples, 0.05%)</title><rect x="1082.4" y="469" width="0.6" height="15.0" fill="rgb(240,3,42)" rx="2" ry="2" />
<text  x="1085.41" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (131,313,130 samples, 0.02%)</title><rect x="1189.0" y="837" width="0.3" height="15.0" fill="rgb(252,137,30)" rx="2" ry="2" />
<text  x="1192.01" y="847.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (161,616,160 samples, 0.03%)</title><rect x="954.4" y="437" width="0.3" height="15.0" fill="rgb(242,152,47)" rx="2" ry="2" />
<text  x="957.36" y="447.5" ></text>
</g>
<g >
<title>TLS init function for rocksdb::perf_context (101,010,100 samples, 0.02%)</title><rect x="106.4" y="485" width="0.1" height="15.0" fill="rgb(208,41,18)" rx="2" ry="2" />
<text  x="109.36" y="495.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="741.4" y="405" width="0.1" height="15.0" fill="rgb(237,52,7)" rx="2" ry="2" />
<text  x="744.39" y="415.5" ></text>
</g>
<g >
<title>truncate_inode_pages_final (80,808,080 samples, 0.01%)</title><rect x="1179.3" y="341" width="0.1" height="15.0" fill="rgb(228,205,29)" rx="2" ry="2" />
<text  x="1182.29" y="351.5" ></text>
</g>
<g >
<title>ksys_write (1,545,454,530 samples, 0.24%)</title><rect x="35.9" y="565" width="2.8" height="15.0" fill="rgb(238,160,37)" rx="2" ry="2" />
<text  x="38.87" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::FileChecksumGenerator, std::default_delete&lt;rocksdb::FileChecksumGenerator&gt; &gt;::_M_ptr (80,808,080 samples, 0.01%)</title><rect x="42.8" y="581" width="0.2" height="15.0" fill="rgb(227,53,5)" rx="2" ry="2" />
<text  x="45.85" y="591.5" ></text>
</g>
<g >
<title>std::this_thread::yield (6,787,878,720 samples, 1.06%)</title><rect x="169.4" y="693" width="12.5" height="15.0" fill="rgb(239,55,52)" rx="2" ry="2" />
<text  x="172.41" y="703.5" ></text>
</g>
<g >
<title>rocksdb::Status::MarkChecked (101,010,100 samples, 0.02%)</title><rect x="1062.4" y="437" width="0.2" height="15.0" fill="rgb(245,6,45)" rx="2" ry="2" />
<text  x="1065.43" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::CompactionOutputs::Output const*, std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt; &gt;::base@plt (70,707,070 samples, 0.01%)</title><rect x="1105.1" y="437" width="0.1" height="15.0" fill="rgb(239,60,28)" rx="2" ry="2" />
<text  x="1108.09" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (111,111,110 samples, 0.02%)</title><rect x="845.1" y="325" width="0.2" height="15.0" fill="rgb(217,111,21)" rx="2" ry="2" />
<text  x="848.11" y="335.5" ></text>
</g>
<g >
<title>__page_cache_alloc (70,707,070 samples, 0.01%)</title><rect x="36.8" y="421" width="0.2" height="15.0" fill="rgb(241,25,24)" rx="2" ry="2" />
<text  x="39.84" y="431.5" ></text>
</g>
<g >
<title>std::operator&amp; (282,828,280 samples, 0.04%)</title><rect x="453.0" y="709" width="0.6" height="15.0" fill="rgb(239,137,0)" rx="2" ry="2" />
<text  x="456.04" y="719.5" ></text>
</g>
<g >
<title>rocksdb::IsValueType (171,717,170 samples, 0.03%)</title><rect x="951.6" y="437" width="0.3" height="15.0" fill="rgb(249,188,8)" rx="2" ry="2" />
<text  x="954.58" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (60,606,060 samples, 0.01%)</title><rect x="855.3" y="325" width="0.1" height="15.0" fill="rgb(227,139,13)" rx="2" ry="2" />
<text  x="858.30" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (4,949,494,900 samples, 0.77%)</title><rect x="1133.4" y="453" width="9.2" height="15.0" fill="rgb(228,134,30)" rx="2" ry="2" />
<text  x="1136.43" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (222,222,220 samples, 0.03%)</title><rect x="473.6" y="693" width="0.5" height="15.0" fill="rgb(248,88,43)" rx="2" ry="2" />
<text  x="476.65" y="703.5" ></text>
</g>
<g >
<title>rocksdb::ExtractInternalKeyFooter (333,333,330 samples, 0.05%)</title><rect x="1047.9" y="437" width="0.6" height="15.0" fill="rgb(221,68,22)" rx="2" ry="2" />
<text  x="1050.90" y="447.5" ></text>
</g>
<g >
<title>XXH3_accumulate_512_avx512 (121,212,120 samples, 0.02%)</title><rect x="826.6" y="101" width="0.2" height="15.0" fill="rgb(235,83,16)" rx="2" ry="2" />
<text  x="829.57" y="111.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (424,242,420 samples, 0.07%)</title><rect x="44.3" y="565" width="0.7" height="15.0" fill="rgb(233,218,24)" rx="2" ry="2" />
<text  x="47.26" y="575.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (222,222,220 samples, 0.03%)</title><rect x="1070.8" y="453" width="0.4" height="15.0" fill="rgb(212,210,13)" rx="2" ry="2" />
<text  x="1073.81" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="909.2" y="277" width="0.1" height="15.0" fill="rgb(228,178,16)" rx="2" ry="2" />
<text  x="912.20" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::~_Rb_tree (757,575,750 samples, 0.12%)</title><rect x="56.1" y="677" width="1.4" height="15.0" fill="rgb(239,74,49)" rx="2" ry="2" />
<text  x="59.09" y="687.5" ></text>
</g>
<g >
<title>rocksdb::GetVarint32Ptr (575,757,570 samples, 0.09%)</title><rect x="127.5" y="549" width="1.1" height="15.0" fill="rgb(234,105,36)" rx="2" ry="2" />
<text  x="130.51" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (60,606,060 samples, 0.01%)</title><rect x="1124.7" y="453" width="0.1" height="15.0" fill="rgb(238,96,4)" rx="2" ry="2" />
<text  x="1127.73" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="885.4" y="341" width="0.2" height="15.0" fill="rgb(234,2,45)" rx="2" ry="2" />
<text  x="888.38" y="351.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::front (2,141,414,120 samples, 0.34%)</title><rect x="812.1" y="405" width="4.0" height="15.0" fill="rgb(213,223,42)" rx="2" ry="2" />
<text  x="815.12" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (60,606,060 samples, 0.01%)</title><rect x="726.5" y="453" width="0.1" height="15.0" fill="rgb(214,109,20)" rx="2" ry="2" />
<text  x="729.46" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (70,707,070 samples, 0.01%)</title><rect x="613.3" y="437" width="0.1" height="15.0" fill="rgb(218,160,2)" rx="2" ry="2" />
<text  x="616.28" y="447.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::WriteBuffered (616,161,610 samples, 0.10%)</title><rect x="1026.6" y="357" width="1.1" height="15.0" fill="rgb(245,110,29)" rx="2" ry="2" />
<text  x="1029.60" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (262,626,260 samples, 0.04%)</title><rect x="1110.5" y="389" width="0.5" height="15.0" fill="rgb(210,11,31)" rx="2" ry="2" />
<text  x="1113.54" y="399.5" ></text>
</g>
<g >
<title>alloc_pages (70,707,070 samples, 0.01%)</title><rect x="36.8" y="405" width="0.2" height="15.0" fill="rgb(251,208,7)" rx="2" ry="2" />
<text  x="39.84" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (70,707,070 samples, 0.01%)</title><rect x="956.8" y="405" width="0.1" height="15.0" fill="rgb(209,32,44)" rx="2" ry="2" />
<text  x="959.81" y="415.5" ></text>
</g>
<g >
<title>rocksdb::ExtractInternalKeyFooter (575,757,570 samples, 0.09%)</title><rect x="1046.4" y="453" width="1.1" height="15.0" fill="rgb(234,150,20)" rx="2" ry="2" />
<text  x="1049.39" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (131,313,130 samples, 0.02%)</title><rect x="612.8" y="437" width="0.2" height="15.0" fill="rgb(254,212,45)" rx="2" ry="2" />
<text  x="615.76" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (101,010,100 samples, 0.02%)</title><rect x="147.7" y="645" width="0.2" height="15.0" fill="rgb(228,33,49)" rx="2" ry="2" />
<text  x="150.75" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::FlushBlockPolicy, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt;::_M_ptr (909,090,900 samples, 0.14%)</title><rect x="1074.7" y="421" width="1.6" height="15.0" fill="rgb(223,158,21)" rx="2" ry="2" />
<text  x="1077.67" y="431.5" ></text>
</g>
<g >
<title>rocksdb::ShortenedIndexBuilder::AddIndexEntry (747,474,740 samples, 0.12%)</title><rect x="1067.6" y="453" width="1.4" height="15.0" fill="rgb(205,175,2)" rx="2" ry="2" />
<text  x="1070.58" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Slice::compare (424,242,420 samples, 0.07%)</title><rect x="135.1" y="517" width="0.8" height="15.0" fill="rgb(227,184,11)" rx="2" ry="2" />
<text  x="138.08" y="527.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Next (202,020,200 samples, 0.03%)</title><rect x="869.8" y="357" width="0.4" height="15.0" fill="rgb(252,206,26)" rx="2" ry="2" />
<text  x="872.79" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (272,727,270 samples, 0.04%)</title><rect x="952.6" y="373" width="0.5" height="15.0" fill="rgb(238,62,16)" rx="2" ry="2" />
<text  x="955.65" y="383.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (202,020,200 samples, 0.03%)</title><rect x="44.7" y="405" width="0.3" height="15.0" fill="rgb(242,61,17)" rx="2" ry="2" />
<text  x="47.68" y="415.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Iterator::key (121,212,120 samples, 0.02%)</title><rect x="670.5" y="373" width="0.2" height="15.0" fill="rgb(221,204,19)" rx="2" ry="2" />
<text  x="673.51" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (727,272,720 samples, 0.11%)</title><rect x="883.9" y="373" width="1.4" height="15.0" fill="rgb(209,99,35)" rx="2" ry="2" />
<text  x="886.91" y="383.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::get_offset (101,010,100 samples, 0.02%)</title><rect x="622.4" y="453" width="0.2" height="15.0" fill="rgb(253,17,13)" rx="2" ry="2" />
<text  x="625.44" y="463.5" ></text>
</g>
<g >
<title>rocksdb::lru_cache::LRUCacheShard::Release (90,909,090 samples, 0.01%)</title><rect x="832.0" y="197" width="0.2" height="15.0" fill="rgb(251,17,54)" rx="2" ry="2" />
<text  x="834.98" y="207.5" ></text>
</g>
<g >
<title>rocksdb::PosixWritableFile::Append (838,383,830 samples, 0.13%)</title><rect x="572.1" y="325" width="1.5" height="15.0" fill="rgb(215,38,54)" rx="2" ry="2" />
<text  x="575.10" y="335.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Add (33,232,322,900 samples, 5.20%)</title><rect x="1018.6" y="469" width="61.3" height="15.0" fill="rgb(227,198,11)" rx="2" ry="2" />
<text  x="1021.56" y="479.5" >rocksd..</text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status (1,868,686,850 samples, 0.29%)</title><rect x="895.9" y="373" width="3.5" height="15.0" fill="rgb(248,2,54)" rx="2" ry="2" />
<text  x="898.90" y="383.5" ></text>
</g>
<g >
<title>rocksdb::SuperVersionContext::~SuperVersionContext (434,343,430 samples, 0.07%)</title><rect x="29.5" y="709" width="0.8" height="15.0" fill="rgb(244,148,1)" rx="2" ry="2" />
<text  x="32.53" y="719.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (232,323,230 samples, 0.04%)</title><rect x="844.4" y="277" width="0.4" height="15.0" fill="rgb(232,158,46)" rx="2" ry="2" />
<text  x="847.37" y="287.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (262,626,260 samples, 0.04%)</title><rect x="143.1" y="645" width="0.5" height="15.0" fill="rgb(214,195,21)" rx="2" ry="2" />
<text  x="146.10" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::push_back (202,020,200 samples, 0.03%)</title><rect x="586.0" y="405" width="0.4" height="15.0" fill="rgb(232,71,35)" rx="2" ry="2" />
<text  x="589.05" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Comparator::timestamp_size (70,707,070 samples, 0.01%)</title><rect x="465.3" y="725" width="0.2" height="15.0" fill="rgb(210,83,53)" rx="2" ry="2" />
<text  x="468.33" y="735.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (70,707,070 samples, 0.01%)</title><rect x="827.8" y="85" width="0.1" height="15.0" fill="rgb(223,67,28)" rx="2" ry="2" />
<text  x="830.77" y="95.5" ></text>
</g>
<g >
<title>rocksdb::MergeOutputIterator::Valid@plt (90,909,090 samples, 0.01%)</title><rect x="1005.6" y="501" width="0.2" height="15.0" fill="rgb(222,66,34)" rx="2" ry="2" />
<text  x="1008.60" y="511.5" ></text>
</g>
<g >
<title>__schedule (3,626,262,590 samples, 0.57%)</title><rect x="173.2" y="581" width="6.7" height="15.0" fill="rgb(219,47,28)" rx="2" ry="2" />
<text  x="176.23" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (515,151,510 samples, 0.08%)</title><rect x="688.9" y="421" width="1.0" height="15.0" fill="rgb(212,56,40)" rx="2" ry="2" />
<text  x="691.94" y="431.5" ></text>
</g>
<g >
<title>[[vdso]] (121,212,120 samples, 0.02%)</title><rect x="187.0" y="709" width="0.2" height="15.0" fill="rgb(235,206,39)" rx="2" ry="2" />
<text  x="189.99" y="719.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::DefaultColumnFamily (60,606,060 samples, 0.01%)</title><rect x="481.7" y="805" width="0.2" height="15.0" fill="rgb(217,184,8)" rx="2" ry="2" />
<text  x="484.74" y="815.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (565,656,560 samples, 0.09%)</title><rect x="742.6" y="421" width="1.0" height="15.0" fill="rgb(239,71,13)" rx="2" ry="2" />
<text  x="745.58" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (101,010,100 samples, 0.02%)</title><rect x="884.9" y="309" width="0.2" height="15.0" fill="rgb(242,133,46)" rx="2" ry="2" />
<text  x="887.92" y="319.5" ></text>
</g>
<g >
<title>rocksdb::IsValueType (404,040,400 samples, 0.06%)</title><rect x="939.4" y="453" width="0.8" height="15.0" fill="rgb(239,62,33)" rx="2" ry="2" />
<text  x="942.42" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (90,909,090 samples, 0.01%)</title><rect x="148.5" y="597" width="0.2" height="15.0" fill="rgb(220,35,41)" rx="2" ry="2" />
<text  x="151.50" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_mbegin (232,323,230 samples, 0.04%)</title><rect x="949.0" y="405" width="0.4" height="15.0" fill="rgb(224,173,5)" rx="2" ry="2" />
<text  x="951.99" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="898.2" y="229" width="0.1" height="15.0" fill="rgb(253,133,34)" rx="2" ry="2" />
<text  x="901.18" y="239.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (1,828,282,810 samples, 0.29%)</title><rect x="1009.0" y="469" width="3.4" height="15.0" fill="rgb(226,193,6)" rx="2" ry="2" />
<text  x="1012.03" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__mod&lt;unsigned long, 4294967296ul, 1ul, 0ul&gt; (232,323,230 samples, 0.04%)</title><rect x="499.8" y="789" width="0.4" height="15.0" fill="rgb(236,113,12)" rx="2" ry="2" />
<text  x="502.80" y="799.5" ></text>
</g>
<g >
<title>alloc_pages (171,717,170 samples, 0.03%)</title><rect x="572.7" y="85" width="0.4" height="15.0" fill="rgb(212,210,50)" rx="2" ry="2" />
<text  x="575.75" y="95.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (131,313,130 samples, 0.02%)</title><rect x="144.8" y="661" width="0.3" height="15.0" fill="rgb(251,167,26)" rx="2" ry="2" />
<text  x="147.82" y="671.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (373,737,370 samples, 0.06%)</title><rect x="44.4" y="549" width="0.6" height="15.0" fill="rgb(246,31,29)" rx="2" ry="2" />
<text  x="47.36" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (111,111,110 samples, 0.02%)</title><rect x="851.4" y="357" width="0.2" height="15.0" fill="rgb(230,84,42)" rx="2" ry="2" />
<text  x="854.40" y="367.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::MemTableInserter::get_post_process_info (3,585,858,550 samples, 0.56%)</title><rect x="60.0" y="645" width="6.7" height="15.0" fill="rgb(208,166,42)" rx="2" ry="2" />
<text  x="63.04" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (343,434,340 samples, 0.05%)</title><rect x="960.0" y="437" width="0.6" height="15.0" fill="rgb(249,7,14)" rx="2" ry="2" />
<text  x="962.99" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (60,606,060 samples, 0.01%)</title><rect x="46.2" y="645" width="0.1" height="15.0" fill="rgb(207,137,41)" rx="2" ry="2" />
<text  x="49.17" y="655.5" ></text>
</g>
<g >
<title>std::move&lt;rocksdb::Status::Code&amp;&gt;@plt (60,606,060 samples, 0.01%)</title><rect x="1147.8" y="469" width="0.1" height="15.0" fill="rgb(225,127,45)" rx="2" ry="2" />
<text  x="1150.77" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_head (171,717,170 samples, 0.03%)</title><rect x="891.9" y="341" width="0.3" height="15.0" fill="rgb(249,198,10)" rx="2" ry="2" />
<text  x="894.89" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (141,414,140 samples, 0.02%)</title><rect x="856.5" y="293" width="0.3" height="15.0" fill="rgb(246,127,54)" rx="2" ry="2" />
<text  x="859.55" y="303.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt; const, rocksdb::CompactionMergingIterator::HeapItem* const&gt;::iterator_impl (282,828,280 samples, 0.04%)</title><rect x="813.3" y="389" width="0.6" height="15.0" fill="rgb(219,121,27)" rx="2" ry="2" />
<text  x="816.35" y="399.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::IOStatus (80,808,080 samples, 0.01%)</title><rect x="47.5" y="725" width="0.1" height="15.0" fill="rgb(222,88,46)" rx="2" ry="2" />
<text  x="50.45" y="735.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch@plt (333,333,330 samples, 0.05%)</title><rect x="292.2" y="693" width="0.6" height="15.0" fill="rgb(223,39,50)" rx="2" ry="2" />
<text  x="295.19" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (101,010,100 samples, 0.02%)</title><rect x="905.5" y="309" width="0.2" height="15.0" fill="rgb(214,70,17)" rx="2" ry="2" />
<text  x="908.53" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;&gt;::_Tuple_impl (151,515,150 samples, 0.02%)</title><rect x="472.8" y="709" width="0.3" height="15.0" fill="rgb(238,198,24)" rx="2" ry="2" />
<text  x="475.85" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (181,818,180 samples, 0.03%)</title><rect x="461.6" y="725" width="0.4" height="15.0" fill="rgb(237,49,19)" rx="2" ry="2" />
<text  x="464.62" y="735.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::FindBlockForward (5,212,121,160 samples, 0.82%)</title><rect x="860.9" y="373" width="9.6" height="15.0" fill="rgb(240,185,43)" rx="2" ry="2" />
<text  x="863.89" y="383.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::WriteImpl (236,474,745,110 samples, 37.01%)</title><rect x="24.1" y="741" width="436.6" height="15.0" fill="rgb(232,193,26)" rx="2" ry="2" />
<text  x="27.06" y="751.5" >rocksdb::DBImpl::WriteImpl</text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (161,616,160 samples, 0.03%)</title><rect x="810.1" y="405" width="0.3" height="15.0" fill="rgb(208,13,17)" rx="2" ry="2" />
<text  x="813.10" y="415.5" ></text>
</g>
<g >
<title>rocksdb::IndexBlockIter::NextImpl (90,909,090 samples, 0.01%)</title><rect x="832.4" y="309" width="0.1" height="15.0" fill="rgb(240,107,36)" rx="2" ry="2" />
<text  x="835.36" y="319.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (80,808,080 samples, 0.01%)</title><rect x="1110.7" y="341" width="0.2" height="15.0" fill="rgb(217,16,22)" rx="2" ry="2" />
<text  x="1113.73" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (353,535,350 samples, 0.06%)</title><rect x="49.7" y="645" width="0.7" height="15.0" fill="rgb(229,111,31)" rx="2" ry="2" />
<text  x="52.73" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::IndexBuilder, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt;::_M_ptr (727,272,720 samples, 0.11%)</title><rect x="1077.3" y="421" width="1.4" height="15.0" fill="rgb(239,68,52)" rx="2" ry="2" />
<text  x="1080.32" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (90,909,090 samples, 0.01%)</title><rect x="46.1" y="677" width="0.2" height="15.0" fill="rgb(212,30,23)" rx="2" ry="2" />
<text  x="49.13" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (494,949,490 samples, 0.08%)</title><rect x="1121.3" y="421" width="0.9" height="15.0" fill="rgb(212,23,42)" rx="2" ry="2" />
<text  x="1124.27" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (80,808,080 samples, 0.01%)</title><rect x="848.6" y="325" width="0.2" height="15.0" fill="rgb(218,16,50)" rx="2" ry="2" />
<text  x="851.60" y="335.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (353,535,350 samples, 0.06%)</title><rect x="1162.3" y="485" width="0.7" height="15.0" fill="rgb(253,88,8)" rx="2" ry="2" />
<text  x="1165.34" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::BlobGarbageMeter, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;::get (1,313,131,300 samples, 0.21%)</title><rect x="1152.4" y="453" width="2.4" height="15.0" fill="rgb(215,195,32)" rx="2" ry="2" />
<text  x="1155.38" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (191,919,190 samples, 0.03%)</title><rect x="886.9" y="357" width="0.3" height="15.0" fill="rgb(208,176,20)" rx="2" ry="2" />
<text  x="889.88" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (868,686,860 samples, 0.14%)</title><rect x="887.2" y="373" width="1.6" height="15.0" fill="rgb(245,97,43)" rx="2" ry="2" />
<text  x="890.23" y="383.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::key (101,010,100 samples, 0.02%)</title><rect x="961.3" y="421" width="0.2" height="15.0" fill="rgb(207,125,52)" rx="2" ry="2" />
<text  x="964.28" y="431.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (1,212,121,200 samples, 0.19%)</title><rect x="973.4" y="469" width="2.3" height="15.0" fill="rgb(226,37,53)" rx="2" ry="2" />
<text  x="976.42" y="479.5" ></text>
</g>
<g >
<title>rocksdb::operator== (191,919,190 samples, 0.03%)</title><rect x="691.2" y="421" width="0.3" height="15.0" fill="rgb(251,20,41)" rx="2" ry="2" />
<text  x="694.17" y="431.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::KeyComparator::operator (15,656,565,500 samples, 2.45%)</title><rect x="89.4" y="533" width="28.9" height="15.0" fill="rgb(217,63,27)" rx="2" ry="2" />
<text  x="92.39" y="543.5" >ro..</text>
</g>
<g >
<title>std::_Rb_tree_decrement (111,111,110 samples, 0.02%)</title><rect x="496.4" y="741" width="0.2" height="15.0" fill="rgb(251,16,52)" rx="2" ry="2" />
<text  x="499.44" y="751.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (60,606,060 samples, 0.01%)</title><rect x="874.1" y="309" width="0.1" height="15.0" fill="rgb(207,130,15)" rx="2" ry="2" />
<text  x="877.14" y="319.5" ></text>
</g>
<g >
<title>rocksdb::IndexBlockIter::NextImpl (181,818,180 samples, 0.03%)</title><rect x="869.8" y="341" width="0.3" height="15.0" fill="rgb(230,142,40)" rx="2" ry="2" />
<text  x="872.81" y="351.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::begin (111,111,110 samples, 0.02%)</title><rect x="819.7" y="389" width="0.2" height="15.0" fill="rgb(238,102,30)" rx="2" ry="2" />
<text  x="822.67" y="399.5" ></text>
</g>
<g >
<title>new_sync_read (262,626,260 samples, 0.04%)</title><rect x="864.5" y="181" width="0.4" height="15.0" fill="rgb(247,224,13)" rx="2" ry="2" />
<text  x="867.46" y="191.5" ></text>
</g>
<g >
<title>iput (242,424,240 samples, 0.04%)</title><rect x="754.3" y="389" width="0.4" height="15.0" fill="rgb(250,131,45)" rx="2" ry="2" />
<text  x="757.26" y="399.5" ></text>
</g>
<g >
<title>std::tuple&lt;rocksdb::SuperVersion*, std::default_delete&lt;rocksdb::SuperVersion&gt; &gt;::tuple&lt;true, true&gt;@plt (70,707,070 samples, 0.01%)</title><rect x="28.6" y="661" width="0.1" height="15.0" fill="rgb(215,70,15)" rx="2" ry="2" />
<text  x="31.56" y="671.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (131,313,130 samples, 0.02%)</title><rect x="1116.0" y="421" width="0.2" height="15.0" fill="rgb(242,63,37)" rx="2" ry="2" />
<text  x="1119.01" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Compaction::SupportsPerKeyPlacement (282,828,280 samples, 0.04%)</title><rect x="978.0" y="469" width="0.5" height="15.0" fill="rgb(212,125,26)" rx="2" ry="2" />
<text  x="980.99" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (818,181,810 samples, 0.13%)</title><rect x="1142.7" y="453" width="1.5" height="15.0" fill="rgb(238,49,15)" rx="2" ry="2" />
<text  x="1145.70" y="463.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::NextFromInput (32,141,413,820 samples, 5.03%)</title><rect x="917.1" y="485" width="59.3" height="15.0" fill="rgb(210,50,26)" rx="2" ry="2" />
<text  x="920.08" y="495.5" >rocksd..</text>
</g>
<g >
<title>get_page_from_freelist (101,010,100 samples, 0.02%)</title><rect x="1027.0" y="69" width="0.2" height="15.0" fill="rgb(238,91,32)" rx="2" ry="2" />
<text  x="1030.01" y="79.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;::_Rb_tree_iterator (181,818,180 samples, 0.03%)</title><rect x="948.7" y="389" width="0.3" height="15.0" fill="rgb(254,220,6)" rx="2" ry="2" />
<text  x="951.65" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::BlobGarbageMeter*, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt; (626,262,620 samples, 0.10%)</title><rect x="1153.1" y="421" width="1.2" height="15.0" fill="rgb(243,50,11)" rx="2" ry="2" />
<text  x="1156.12" y="431.5" ></text>
</g>
<g >
<title>__memset_evex_unaligned_erms (60,606,060 samples, 0.01%)</title><rect x="577.7" y="357" width="0.1" height="15.0" fill="rgb(228,208,30)" rx="2" ry="2" />
<text  x="580.73" y="367.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::Invalidate (393,939,390 samples, 0.06%)</title><rect x="869.0" y="341" width="0.7" height="15.0" fill="rgb(217,21,20)" rx="2" ry="2" />
<text  x="872.01" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt;::__normal_iterator (90,909,090 samples, 0.01%)</title><rect x="1067.4" y="421" width="0.2" height="15.0" fill="rgb(247,180,12)" rx="2" ry="2" />
<text  x="1070.42" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (131,313,130 samples, 0.02%)</title><rect x="884.1" y="325" width="0.3" height="15.0" fill="rgb(250,105,3)" rx="2" ry="2" />
<text  x="887.12" y="335.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (737,373,730 samples, 0.12%)</title><rect x="983.9" y="453" width="1.4" height="15.0" fill="rgb(241,84,0)" rx="2" ry="2" />
<text  x="986.93" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (161,616,160 samples, 0.03%)</title><rect x="858.4" y="341" width="0.3" height="15.0" fill="rgb(218,198,27)" rx="2" ry="2" />
<text  x="861.41" y="351.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::BackgroundFlush (104,090,908,050 samples, 16.29%)</title><rect x="562.0" y="549" width="192.3" height="15.0" fill="rgb(242,135,17)" rx="2" ry="2" />
<text  x="565.04" y="559.5" >rocksdb::DBImpl::Backgrou..</text>
</g>
<g >
<title>rocksdb::Status::OK (191,919,190 samples, 0.03%)</title><rect x="606.0" y="421" width="0.3" height="15.0" fill="rgb(233,118,30)" rx="2" ry="2" />
<text  x="608.95" y="431.5" ></text>
</g>
<g >
<title>std::tuple&lt;rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;&gt;::operator=&lt;rocksdb::Status, unsigned int, unsigned long&gt; (1,747,474,730 samples, 0.27%)</title><rect x="473.1" y="741" width="3.3" height="15.0" fill="rgb(217,220,16)" rx="2" ry="2" />
<text  x="476.13" y="751.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (454,545,450 samples, 0.07%)</title><rect x="1157.6" y="421" width="0.8" height="15.0" fill="rgb(229,198,52)" rx="2" ry="2" />
<text  x="1160.58" y="431.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::AllocateNode (1,282,828,270 samples, 0.20%)</title><rect x="68.3" y="597" width="2.3" height="15.0" fill="rgb(240,147,39)" rx="2" ry="2" />
<text  x="71.27" y="607.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (70,707,070 samples, 0.01%)</title><rect x="1026.0" y="357" width="0.1" height="15.0" fill="rgb(238,112,14)" rx="2" ry="2" />
<text  x="1029.01" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (262,626,260 samples, 0.04%)</title><rect x="841.4" y="341" width="0.5" height="15.0" fill="rgb(237,109,1)" rx="2" ry="2" />
<text  x="844.42" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (90,909,090 samples, 0.01%)</title><rect x="652.0" y="373" width="0.2" height="15.0" fill="rgb(237,200,35)" rx="2" ry="2" />
<text  x="655.00" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (171,717,170 samples, 0.03%)</title><rect x="855.9" y="293" width="0.3" height="15.0" fill="rgb(215,155,41)" rx="2" ry="2" />
<text  x="858.93" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (636,363,630 samples, 0.10%)</title><rect x="900.3" y="309" width="1.1" height="15.0" fill="rgb(243,194,33)" rx="2" ry="2" />
<text  x="903.25" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (191,919,190 samples, 0.03%)</title><rect x="809.4" y="373" width="0.4" height="15.0" fill="rgb(234,152,23)" rx="2" ry="2" />
<text  x="812.43" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (535,353,530 samples, 0.08%)</title><rect x="662.6" y="389" width="1.0" height="15.0" fill="rgb(216,203,4)" rx="2" ry="2" />
<text  x="665.62" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (80,808,080 samples, 0.01%)</title><rect x="31.7" y="613" width="0.2" height="15.0" fill="rgb(254,76,22)" rx="2" ry="2" />
<text  x="34.71" y="623.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::value (60,606,060 samples, 0.01%)</title><rect x="966.2" y="405" width="0.1" height="15.0" fill="rgb(230,37,17)" rx="2" ry="2" />
<text  x="969.15" y="415.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (242,424,240 samples, 0.04%)</title><rect x="1011.9" y="389" width="0.4" height="15.0" fill="rgb(251,145,22)" rx="2" ry="2" />
<text  x="1014.87" y="399.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (191,919,190 samples, 0.03%)</title><rect x="1146.2" y="469" width="0.4" height="15.0" fill="rgb(230,136,48)" rx="2" ry="2" />
<text  x="1149.20" y="479.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (171,717,170 samples, 0.03%)</title><rect x="819.1" y="389" width="0.3" height="15.0" fill="rgb(248,21,31)" rx="2" ry="2" />
<text  x="822.07" y="399.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt;@plt (60,606,060 samples, 0.01%)</title><rect x="451.9" y="709" width="0.1" height="15.0" fill="rgb(210,89,21)" rx="2" ry="2" />
<text  x="454.90" y="719.5" ></text>
</g>
<g >
<title>std::this_thread::yield@plt (141,414,140 samples, 0.02%)</title><rect x="454.5" y="709" width="0.3" height="15.0" fill="rgb(240,192,48)" rx="2" ry="2" />
<text  x="457.51" y="719.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (224,373,735,130 samples, 35.11%)</title><rect x="765.1" y="805" width="414.3" height="15.0" fill="rgb(246,52,11)" rx="2" ry="2" />
<text  x="768.11" y="815.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>pagecache_get_page (161,616,160 samples, 0.03%)</title><rect x="1027.0" y="133" width="0.3" height="15.0" fill="rgb(228,13,47)" rx="2" ry="2" />
<text  x="1030.00" y="143.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block_kData&gt; (2,505,050,480 samples, 0.39%)</title><rect x="826.0" y="293" width="4.7" height="15.0" fill="rgb(215,208,50)" rx="2" ry="2" />
<text  x="829.03" y="303.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Next (202,020,200 samples, 0.03%)</title><rect x="765.5" y="517" width="0.3" height="15.0" fill="rgb(228,127,6)" rx="2" ry="2" />
<text  x="768.47" y="527.5" ></text>
</g>
<g >
<title>rocksdb::NotifyCollectTableCollectorsOnAdd (5,575,757,520 samples, 0.87%)</title><rect x="1057.3" y="453" width="10.3" height="15.0" fill="rgb(253,115,52)" rx="2" ry="2" />
<text  x="1060.29" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (141,414,140 samples, 0.02%)</title><rect x="711.3" y="341" width="0.2" height="15.0" fill="rgb(223,166,17)" rx="2" ry="2" />
<text  x="714.26" y="351.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::key (121,212,120 samples, 0.02%)</title><rect x="1014.5" y="485" width="0.2" height="15.0" fill="rgb(242,12,49)" rx="2" ry="2" />
<text  x="1017.50" y="495.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (171,717,170 samples, 0.03%)</title><rect x="740.2" y="309" width="0.4" height="15.0" fill="rgb(218,205,2)" rx="2" ry="2" />
<text  x="743.25" y="319.5" ></text>
</g>
<g >
<title>ROCKSDB_XXH3_64bits (252,525,250 samples, 0.04%)</title><rect x="863.0" y="229" width="0.5" height="15.0" fill="rgb(233,43,19)" rx="2" ry="2" />
<text  x="866.04" y="239.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (242,424,240 samples, 0.04%)</title><rect x="913.4" y="405" width="0.5" height="15.0" fill="rgb(219,113,14)" rx="2" ry="2" />
<text  x="916.44" y="415.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::SetKeyImpl (141,414,140 samples, 0.02%)</title><rect x="648.9" y="405" width="0.2" height="15.0" fill="rgb(245,181,54)" rx="2" ry="2" />
<text  x="651.85" y="415.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::MemTableInserter::PostProcess (1,313,131,300 samples, 0.21%)</title><rect x="53.3" y="709" width="2.4" height="15.0" fill="rgb(239,14,22)" rx="2" ry="2" />
<text  x="56.31" y="719.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (363,636,360 samples, 0.06%)</title><rect x="974.4" y="405" width="0.6" height="15.0" fill="rgb(223,228,15)" rx="2" ry="2" />
<text  x="977.36" y="415.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyHandleInternal::~ColumnFamilyHandleInternal (80,808,080 samples, 0.01%)</title><rect x="26.0" y="709" width="0.2" height="15.0" fill="rgb(247,164,21)" rx="2" ry="2" />
<text  x="29.02" y="719.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::_M_ptr (131,313,130 samples, 0.02%)</title><rect x="471.4" y="677" width="0.3" height="15.0" fill="rgb(226,107,40)" rx="2" ry="2" />
<text  x="474.43" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (171,717,170 samples, 0.03%)</title><rect x="1142.2" y="437" width="0.3" height="15.0" fill="rgb(217,142,51)" rx="2" ry="2" />
<text  x="1145.23" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (121,212,120 samples, 0.02%)</title><rect x="910.2" y="261" width="0.2" height="15.0" fill="rgb(223,5,35)" rx="2" ry="2" />
<text  x="913.19" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="903.3" y="325" width="0.1" height="15.0" fill="rgb(210,125,14)" rx="2" ry="2" />
<text  x="906.29" y="335.5" ></text>
</g>
<g >
<title>rocksdb::InternalKeyComparator::Compare (2,424,242,400 samples, 0.38%)</title><rect x="1115.4" y="453" width="4.5" height="15.0" fill="rgb(221,153,51)" rx="2" ry="2" />
<text  x="1118.45" y="463.5" ></text>
</g>
<g >
<title>__fdget_pos (60,606,060 samples, 0.01%)</title><rect x="35.9" y="549" width="0.1" height="15.0" fill="rgb(219,81,46)" rx="2" ry="2" />
<text  x="38.87" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1,020,202,010 samples, 0.16%)</title><rect x="495.0" y="773" width="1.9" height="15.0" fill="rgb(213,19,16)" rx="2" ry="2" />
<text  x="497.99" y="783.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (111,111,110 samples, 0.02%)</title><rect x="733.1" y="405" width="0.2" height="15.0" fill="rgb(223,216,3)" rx="2" ry="2" />
<text  x="736.07" y="415.5" ></text>
</g>
<g >
<title>ksys_write (606,060,600 samples, 0.09%)</title><rect x="1026.6" y="261" width="1.1" height="15.0" fill="rgb(230,161,5)" rx="2" ry="2" />
<text  x="1029.60" y="271.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::LaunchParallelMemTableWriters (212,121,210 samples, 0.03%)</title><rect x="454.8" y="725" width="0.4" height="15.0" fill="rgb(248,146,18)" rx="2" ry="2" />
<text  x="457.77" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5,484,848,430 samples, 0.86%)</title><rect x="171.8" y="661" width="10.1" height="15.0" fill="rgb(216,173,16)" rx="2" ry="2" />
<text  x="174.81" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (60,606,060 samples, 0.01%)</title><rect x="800.5" y="373" width="0.1" height="15.0" fill="rgb(249,176,34)" rx="2" ry="2" />
<text  x="803.52" y="383.5" ></text>
</g>
<g >
<title>get_page_from_freelist (121,212,120 samples, 0.02%)</title><rect x="559.7" y="677" width="0.3" height="15.0" fill="rgb(252,96,17)" rx="2" ry="2" />
<text  x="562.75" y="687.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::value (1,020,202,010 samples, 0.16%)</title><rect x="963.5" y="421" width="1.9" height="15.0" fill="rgb(252,91,53)" rx="2" ry="2" />
<text  x="966.48" y="431.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_context (545,454,540 samples, 0.09%)</title><rect x="717.6" y="405" width="1.0" height="15.0" fill="rgb(243,123,39)" rx="2" ry="2" />
<text  x="720.60" y="415.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::UpdateFilesToCutForTTLStates (404,040,400 samples, 0.06%)</title><rect x="1099.8" y="469" width="0.7" height="15.0" fill="rgb(215,98,15)" rx="2" ry="2" />
<text  x="1102.76" y="479.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::IndexBuilder*, false&gt;::_M_head (202,020,200 samples, 0.03%)</title><rect x="1078.2" y="373" width="0.4" height="15.0" fill="rgb(228,117,45)" rx="2" ry="2" />
<text  x="1081.18" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (70,707,070 samples, 0.01%)</title><rect x="462.0" y="741" width="0.1" height="15.0" fill="rgb(219,20,22)" rx="2" ry="2" />
<text  x="464.97" y="751.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::FlushMemTableToOutputFile (104,090,908,050 samples, 16.29%)</title><rect x="562.0" y="517" width="192.3" height="15.0" fill="rgb(248,80,19)" rx="2" ry="2" />
<text  x="565.04" y="527.5" >rocksdb::DBImpl::FlushMem..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (224,373,735,130 samples, 35.11%)</title><rect x="765.1" y="693" width="414.3" height="15.0" fill="rgb(229,125,41)" rx="2" ry="2" />
<text  x="768.11" y="703.5" >std::_Function_handler&lt;void </text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (151,515,150 samples, 0.02%)</title><rect x="909.1" y="293" width="0.2" height="15.0" fill="rgb(228,157,22)" rx="2" ry="2" />
<text  x="912.05" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (494,949,490 samples, 0.08%)</title><rect x="1010.5" y="421" width="0.9" height="15.0" fill="rgb(237,22,43)" rx="2" ry="2" />
<text  x="1013.49" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::rend (161,616,160 samples, 0.03%)</title><rect x="706.8" y="437" width="0.3" height="15.0" fill="rgb(229,201,7)" rx="2" ry="2" />
<text  x="709.79" y="447.5" ></text>
</g>
<g >
<title>[remote_flush_test_server] (80,808,080 samples, 0.01%)</title><rect x="107.8" y="485" width="0.2" height="15.0" fill="rgb(223,180,5)" rx="2" ry="2" />
<text  x="110.83" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (606,060,600 samples, 0.09%)</title><rect x="604.3" y="373" width="1.2" height="15.0" fill="rgb(216,128,54)" rx="2" ry="2" />
<text  x="607.35" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FSWritableFileTracingWrapper, std::default_delete&lt;rocksdb::FSWritableFileTracingWrapper&gt; &gt;::operator (70,707,070 samples, 0.01%)</title><rect x="1025.5" y="357" width="0.1" height="15.0" fill="rgb(250,116,37)" rx="2" ry="2" />
<text  x="1028.50" y="367.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;25ul&gt; (1,404,040,390 samples, 0.22%)</title><rect x="630.3" y="389" width="2.5" height="15.0" fill="rgb(207,108,20)" rx="2" ry="2" />
<text  x="633.25" y="399.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (60,606,060 samples, 0.01%)</title><rect x="147.6" y="677" width="0.1" height="15.0" fill="rgb(223,116,22)" rx="2" ry="2" />
<text  x="150.56" y="687.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (90,909,090 samples, 0.01%)</title><rect x="203.8" y="677" width="0.1" height="15.0" fill="rgb(205,182,3)" rx="2" ry="2" />
<text  x="206.78" y="687.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (90,909,090 samples, 0.01%)</title><rect x="900.6" y="261" width="0.2" height="15.0" fill="rgb(244,174,13)" rx="2" ry="2" />
<text  x="903.59" y="271.5" ></text>
</g>
<g >
<title>rocksdb::LocalSavePoint::LocalSavePoint (212,121,210 samples, 0.03%)</title><rect x="469.3" y="725" width="0.4" height="15.0" fill="rgb(254,23,43)" rx="2" ry="2" />
<text  x="472.30" y="735.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::Valid (494,949,490 samples, 0.08%)</title><rect x="666.5" y="405" width="0.9" height="15.0" fill="rgb(238,149,54)" rx="2" ry="2" />
<text  x="669.46" y="415.5" ></text>
</g>
<g >
<title>rocksdb::MergeHelper::keys[abi:cxx11] (131,313,130 samples, 0.02%)</title><rect x="992.0" y="485" width="0.2" height="15.0" fill="rgb(208,44,52)" rx="2" ry="2" />
<text  x="994.97" y="495.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey (70,707,070 samples, 0.01%)</title><rect x="126.6" y="565" width="0.2" height="15.0" fill="rgb(231,24,39)" rx="2" ry="2" />
<text  x="129.63" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::operator bool (393,939,390 samples, 0.06%)</title><rect x="1149.9" y="453" width="0.8" height="15.0" fill="rgb(228,202,46)" rx="2" ry="2" />
<text  x="1152.93" y="463.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::Append (1,969,696,950 samples, 0.31%)</title><rect x="570.6" y="373" width="3.6" height="15.0" fill="rgb(220,95,9)" rx="2" ry="2" />
<text  x="573.57" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (161,616,160 samples, 0.03%)</title><rect x="900.8" y="293" width="0.3" height="15.0" fill="rgb(221,153,52)" rx="2" ry="2" />
<text  x="903.83" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (60,606,060 samples, 0.01%)</title><rect x="484.7" y="773" width="0.1" height="15.0" fill="rgb(226,37,4)" rx="2" ry="2" />
<text  x="487.69" y="783.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (202,020,200 samples, 0.03%)</title><rect x="723.1" y="437" width="0.4" height="15.0" fill="rgb(225,55,29)" rx="2" ry="2" />
<text  x="726.14" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::_M_ptr (121,212,120 samples, 0.02%)</title><rect x="478.6" y="725" width="0.3" height="15.0" fill="rgb(235,181,15)" rx="2" ry="2" />
<text  x="481.65" y="735.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::FlushBlockPolicy*, false&gt;::_M_head (161,616,160 samples, 0.03%)</title><rect x="618.7" y="357" width="0.3" height="15.0" fill="rgb(220,205,28)" rx="2" ry="2" />
<text  x="621.71" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FileChecksumGenerator, std::default_delete&lt;rocksdb::FileChecksumGenerator&gt; &gt;::get (80,808,080 samples, 0.01%)</title><rect x="42.8" y="597" width="0.2" height="15.0" fill="rgb(220,172,50)" rx="2" ry="2" />
<text  x="45.85" y="607.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::status (202,020,200 samples, 0.03%)</title><rect x="807.9" y="437" width="0.4" height="15.0" fill="rgb(225,200,3)" rx="2" ry="2" />
<text  x="810.88" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_ptr (101,010,100 samples, 0.02%)</title><rect x="912.4" y="373" width="0.2" height="15.0" fill="rgb(234,77,43)" rx="2" ry="2" />
<text  x="915.43" y="383.5" ></text>
</g>
<g >
<title>std::random_device::_M_init (5,777,777,720 samples, 0.90%)</title><rect x="11.1" y="821" width="10.6" height="15.0" fill="rgb(251,179,13)" rx="2" ry="2" />
<text  x="14.06" y="831.5" ></text>
</g>
<g >
<title>rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;::IsDeleteRangeSentinelKey (141,414,140 samples, 0.02%)</title><rect x="821.1" y="421" width="0.3" height="15.0" fill="rgb(243,75,41)" rx="2" ry="2" />
<text  x="824.15" y="431.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::front (292,929,290 samples, 0.05%)</title><rect x="913.9" y="437" width="0.5" height="15.0" fill="rgb(224,155,18)" rx="2" ry="2" />
<text  x="916.89" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (141,414,140 samples, 0.02%)</title><rect x="117.7" y="517" width="0.3" height="15.0" fill="rgb(241,127,48)" rx="2" ry="2" />
<text  x="120.70" y="527.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (232,323,230 samples, 0.04%)</title><rect x="451.5" y="709" width="0.4" height="15.0" fill="rgb(212,133,31)" rx="2" ry="2" />
<text  x="454.47" y="719.5" ></text>
</g>
<g >
<title>std::tie&lt;rocksdb::Status, unsigned int, unsigned long&gt; (232,323,230 samples, 0.04%)</title><rect x="472.7" y="741" width="0.4" height="15.0" fill="rgb(212,223,5)" rx="2" ry="2" />
<text  x="475.70" y="751.5" ></text>
</g>
<g >
<title>jbd2__journal_start (80,808,080 samples, 0.01%)</title><rect x="37.4" y="389" width="0.1" height="15.0" fill="rgb(251,132,1)" rx="2" ry="2" />
<text  x="40.38" y="399.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::EstimatedFileSize (595,959,590 samples, 0.09%)</title><rect x="1079.9" y="469" width="1.1" height="15.0" fill="rgb(227,216,19)" rx="2" ry="2" />
<text  x="1082.93" y="479.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (70,707,070 samples, 0.01%)</title><rect x="562.1" y="293" width="0.1" height="15.0" fill="rgb(245,75,25)" rx="2" ry="2" />
<text  x="565.12" y="303.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (111,111,110 samples, 0.02%)</title><rect x="37.5" y="405" width="0.2" height="15.0" fill="rgb(228,98,4)" rx="2" ry="2" />
<text  x="40.53" y="415.5" ></text>
</g>
<g >
<title>[unknown] (70,707,070 samples, 0.01%)</title><rect x="10.5" y="805" width="0.2" height="15.0" fill="rgb(224,39,28)" rx="2" ry="2" />
<text  x="13.52" y="815.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (60,606,060 samples, 0.01%)</title><rect x="898.6" y="261" width="0.1" height="15.0" fill="rgb(240,37,27)" rx="2" ry="2" />
<text  x="901.63" y="271.5" ></text>
</g>
<g >
<title>rocksdb::ExtractValueType (80,808,080 samples, 0.01%)</title><rect x="1108.6" y="469" width="0.1" height="15.0" fill="rgb(233,114,36)" rx="2" ry="2" />
<text  x="1111.60" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Block::NewDataIterator (212,121,210 samples, 0.03%)</title><rect x="825.6" y="277" width="0.4" height="15.0" fill="rgb(206,8,16)" rx="2" ry="2" />
<text  x="828.60" y="287.5" ></text>
</g>
<g >
<title>ext4_da_write_end (151,515,150 samples, 0.02%)</title><rect x="1027.3" y="165" width="0.3" height="15.0" fill="rgb(243,120,24)" rx="2" ry="2" />
<text  x="1030.29" y="175.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (90,909,090 samples, 0.01%)</title><rect x="142.4" y="565" width="0.2" height="15.0" fill="rgb(205,98,0)" rx="2" ry="2" />
<text  x="145.43" y="575.5" ></text>
</g>
<g >
<title>TLS init function for rocksdb::iostats_context (80,808,080 samples, 0.01%)</title><rect x="564.6" y="437" width="0.1" height="15.0" fill="rgb(233,221,40)" rx="2" ry="2" />
<text  x="567.58" y="447.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::SyncInternal (212,121,210 samples, 0.03%)</title><rect x="747.3" y="437" width="0.4" height="15.0" fill="rgb(246,159,16)" rx="2" ry="2" />
<text  x="750.26" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (303,030,300 samples, 0.05%)</title><rect x="854.0" y="293" width="0.6" height="15.0" fill="rgb(233,122,7)" rx="2" ry="2" />
<text  x="857.03" y="303.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::GetInstance (60,606,060 samples, 0.01%)</title><rect x="51.2" y="725" width="0.1" height="15.0" fill="rgb(231,148,47)" rx="2" ry="2" />
<text  x="54.18" y="735.5" ></text>
</g>
<g >
<title>rocksdb::OutputValidator::Add (111,111,110 samples, 0.02%)</title><rect x="752.7" y="469" width="0.2" height="15.0" fill="rgb(226,64,33)" rx="2" ry="2" />
<text  x="755.73" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::IndexBuilder*, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt;::_M_head (90,909,090 samples, 0.01%)</title><rect x="620.7" y="357" width="0.2" height="15.0" fill="rgb(249,193,54)" rx="2" ry="2" />
<text  x="623.74" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (80,808,080 samples, 0.01%)</title><rect x="1070.7" y="453" width="0.1" height="15.0" fill="rgb(237,202,14)" rx="2" ry="2" />
<text  x="1073.66" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt;::operator* (80,808,080 samples, 0.01%)</title><rect x="1021.2" y="453" width="0.1" height="15.0" fill="rgb(205,195,49)" rx="2" ry="2" />
<text  x="1024.18" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (434,343,430 samples, 0.07%)</title><rect x="1143.4" y="437" width="0.8" height="15.0" fill="rgb(234,105,18)" rx="2" ry="2" />
<text  x="1146.41" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::ColumnFamilySet, std::default_delete&lt;rocksdb::ColumnFamilySet&gt; &gt;::_M_ptr (141,414,140 samples, 0.02%)</title><rect x="51.7" y="693" width="0.3" height="15.0" fill="rgb(240,103,16)" rx="2" ry="2" />
<text  x="54.74" y="703.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (111,111,110 samples, 0.02%)</title><rect x="712.3" y="437" width="0.2" height="15.0" fill="rgb(249,61,3)" rx="2" ry="2" />
<text  x="715.27" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (80,808,080 samples, 0.01%)</title><rect x="1179.3" y="453" width="0.1" height="15.0" fill="rgb(239,51,39)" rx="2" ry="2" />
<text  x="1182.29" y="463.5" ></text>
</g>
<g >
<title>rocksdb::ShortenedIndexBuilder::AddIndexEntry (525,252,520 samples, 0.08%)</title><rect x="610.9" y="437" width="1.0" height="15.0" fill="rgb(210,97,45)" rx="2" ry="2" />
<text  x="613.91" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt;::end (80,808,080 samples, 0.01%)</title><rect x="1093.4" y="437" width="0.2" height="15.0" fill="rgb(226,181,21)" rx="2" ry="2" />
<text  x="1096.44" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (343,434,340 samples, 0.05%)</title><rect x="131.1" y="533" width="0.6" height="15.0" fill="rgb(237,177,23)" rx="2" ry="2" />
<text  x="134.09" y="543.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (224,464,644,220 samples, 35.13%)</title><rect x="764.9" y="837" width="414.5" height="15.0" fill="rgb(253,104,44)" rx="2" ry="2" />
<text  x="767.94" y="847.5" >[libstdc++.so.6.0.30]</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::IntTblPropCollector*, false&gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="609.8" y="341" width="0.2" height="15.0" fill="rgb(228,184,7)" rx="2" ry="2" />
<text  x="612.85" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (141,414,140 samples, 0.02%)</title><rect x="901.9" y="277" width="0.2" height="15.0" fill="rgb(242,53,1)" rx="2" ry="2" />
<text  x="904.85" y="287.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (222,222,220 samples, 0.03%)</title><rect x="44.6" y="421" width="0.4" height="15.0" fill="rgb(216,59,22)" rx="2" ry="2" />
<text  x="47.64" y="431.5" ></text>
</g>
<g >
<title>__libc_pread (292,929,290 samples, 0.05%)</title><rect x="827.5" y="229" width="0.6" height="15.0" fill="rgb(238,75,52)" rx="2" ry="2" />
<text  x="830.54" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (60,606,060 samples, 0.01%)</title><rect x="571.5" y="325" width="0.1" height="15.0" fill="rgb(228,23,25)" rx="2" ry="2" />
<text  x="574.46" y="335.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::ParseNextKey&lt;rocksdb::DecodeEntry&gt; (1,181,818,170 samples, 0.18%)</title><rect x="834.9" y="309" width="2.1" height="15.0" fill="rgb(241,57,38)" rx="2" ry="2" />
<text  x="837.85" y="319.5" ></text>
</g>
<g >
<title>rocksdb::GetColumnFamilyID (272,727,270 samples, 0.04%)</title><rect x="465.5" y="725" width="0.5" height="15.0" fill="rgb(209,101,45)" rx="2" ry="2" />
<text  x="468.46" y="735.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (838,383,830 samples, 0.13%)</title><rect x="1166.0" y="469" width="1.6" height="15.0" fill="rgb(227,37,8)" rx="2" ry="2" />
<text  x="1169.01" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::SstPartitioner, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::_M_ptr (1,272,727,260 samples, 0.20%)</title><rect x="1097.1" y="421" width="2.3" height="15.0" fill="rgb(241,37,23)" rx="2" ry="2" />
<text  x="1100.05" y="431.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (343,434,340 samples, 0.05%)</title><rect x="815.3" y="373" width="0.6" height="15.0" fill="rgb(238,8,36)" rx="2" ry="2" />
<text  x="818.27" y="383.5" ></text>
</g>
<g >
<title>__gthread_yield (696,969,690 samples, 0.11%)</title><rect x="295.8" y="677" width="1.3" height="15.0" fill="rgb(235,29,52)" rx="2" ry="2" />
<text  x="298.78" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (303,030,300 samples, 0.05%)</title><rect x="662.9" y="325" width="0.6" height="15.0" fill="rgb(217,166,50)" rx="2" ry="2" />
<text  x="665.92" y="335.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::BlobGarbageMeter*, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;::_M_head (212,121,210 samples, 0.03%)</title><rect x="1153.1" y="405" width="0.4" height="15.0" fill="rgb(242,195,38)" rx="2" ry="2" />
<text  x="1156.14" y="415.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::EstimateSizeAfterKV (141,414,140 samples, 0.02%)</title><rect x="593.1" y="421" width="0.2" height="15.0" fill="rgb(222,51,25)" rx="2" ry="2" />
<text  x="596.06" y="431.5" ></text>
</g>
<g >
<title>rocksdb::FileMetaData::UpdateBoundaries (1,919,191,900 samples, 0.30%)</title><rect x="1108.7" y="469" width="3.6" height="15.0" fill="rgb(233,132,54)" rx="2" ry="2" />
<text  x="1111.75" y="479.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::Key (90,909,090 samples, 0.01%)</title><rect x="670.7" y="373" width="0.2" height="15.0" fill="rgb(221,43,36)" rx="2" ry="2" />
<text  x="673.73" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (282,828,280 samples, 0.04%)</title><rect x="665.2" y="405" width="0.6" height="15.0" fill="rgb(245,59,31)" rx="2" ry="2" />
<text  x="668.23" y="415.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (161,616,160 samples, 0.03%)</title><rect x="572.4" y="133" width="0.3" height="15.0" fill="rgb(239,72,21)" rx="2" ry="2" />
<text  x="575.41" y="143.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::NextFromInput (252,525,250 samples, 0.04%)</title><rect x="707.6" y="453" width="0.4" height="15.0" fill="rgb(234,22,44)" rx="2" ry="2" />
<text  x="710.57" y="463.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::ParseNextDataKey (1,585,858,570 samples, 0.25%)</title><rect x="834.3" y="325" width="2.9" height="15.0" fill="rgb(253,173,4)" rx="2" ry="2" />
<text  x="837.26" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::operator (171,717,170 samples, 0.03%)</title><rect x="1079.1" y="453" width="0.3" height="15.0" fill="rgb(244,74,36)" rx="2" ry="2" />
<text  x="1082.09" y="463.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*&gt;::load (1,222,222,210 samples, 0.19%)</title><rect x="626.1" y="341" width="2.3" height="15.0" fill="rgb(222,5,49)" rx="2" ry="2" />
<text  x="629.11" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (282,828,280 samples, 0.04%)</title><rect x="1121.6" y="357" width="0.5" height="15.0" fill="rgb(231,187,12)" rx="2" ry="2" />
<text  x="1124.62" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::ColumnFamilySet, std::default_delete&lt;rocksdb::ColumnFamilySet&gt; &gt;::get (151,515,150 samples, 0.02%)</title><rect x="51.7" y="709" width="0.3" height="15.0" fill="rgb(220,153,34)" rx="2" ry="2" />
<text  x="54.73" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IndexBuilder, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt;::operator (868,686,860 samples, 0.14%)</title><rect x="619.4" y="437" width="1.6" height="15.0" fill="rgb(254,130,43)" rx="2" ry="2" />
<text  x="622.42" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::WriteBatch::ProtectionInfo*, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::_Tuple_impl (70,707,070 samples, 0.01%)</title><rect x="477.7" y="677" width="0.1" height="15.0" fill="rgb(222,3,24)" rx="2" ry="2" />
<text  x="480.71" y="687.5" ></text>
</g>
<g >
<title>XXH3_accumulate_avx512 (343,434,340 samples, 0.05%)</title><rect x="569.7" y="277" width="0.7" height="15.0" fill="rgb(216,87,5)" rx="2" ry="2" />
<text  x="572.75" y="287.5" ></text>
</g>
<g >
<title>rocksdb::MemTableIterator::Next (4,838,383,790 samples, 0.76%)</title><rect x="623.9" y="405" width="8.9" height="15.0" fill="rgb(207,50,50)" rx="2" ry="2" />
<text  x="626.91" y="415.5" ></text>
</g>
<g >
<title>std::tuple&lt;rocksdb::Status, unsigned int, unsigned long&gt;::tuple&lt;rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;, true, true&gt; (1,181,818,170 samples, 0.18%)</title><rect x="466.6" y="709" width="2.2" height="15.0" fill="rgb(216,187,20)" rx="2" ry="2" />
<text  x="469.58" y="719.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="1158.4" y="437" width="0.2" height="15.0" fill="rgb(240,111,40)" rx="2" ry="2" />
<text  x="1161.42" y="447.5" ></text>
</g>
<g >
<title>_int_free (90,909,090 samples, 0.01%)</title><rect x="1180.4" y="821" width="0.2" height="15.0" fill="rgb(246,108,14)" rx="2" ry="2" />
<text  x="1183.43" y="831.5" ></text>
</g>
<g >
<title>do_syscall_64 (80,808,080 samples, 0.01%)</title><rect x="1179.3" y="437" width="0.1" height="15.0" fill="rgb(211,31,22)" rx="2" ry="2" />
<text  x="1182.29" y="447.5" ></text>
</g>
<g >
<title>rocksdb::DB::Put (248,525,250,040 samples, 38.89%)</title><rect x="22.8" y="805" width="458.9" height="15.0" fill="rgb(231,177,35)" rx="2" ry="2" />
<text  x="25.81" y="815.5" >rocksdb::DB::Put</text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (1,545,454,530 samples, 0.24%)</title><rect x="691.8" y="421" width="2.9" height="15.0" fill="rgb(240,46,49)" rx="2" ry="2" />
<text  x="694.81" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (80,808,080 samples, 0.01%)</title><rect x="844.6" y="261" width="0.2" height="15.0" fill="rgb(206,113,11)" rx="2" ry="2" />
<text  x="847.65" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (101,010,100 samples, 0.02%)</title><rect x="1111.3" y="453" width="0.2" height="15.0" fill="rgb(241,23,40)" rx="2" ry="2" />
<text  x="1114.34" y="463.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::AdvanceInputIter (6,131,313,070 samples, 0.96%)</title><rect x="623.1" y="437" width="11.3" height="15.0" fill="rgb(238,200,53)" rx="2" ry="2" />
<text  x="626.07" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="903.0" y="309" width="0.1" height="15.0" fill="rgb(232,11,44)" rx="2" ry="2" />
<text  x="906.03" y="319.5" ></text>
</g>
<g >
<title>rocksdb::Cleanable::DoCleanup (141,414,140 samples, 0.02%)</title><rect x="943.1" y="437" width="0.2" height="15.0" fill="rgb(224,167,5)" rx="2" ry="2" />
<text  x="946.06" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_end (60,606,060 samples, 0.01%)</title><rect x="659.4" y="357" width="0.2" height="15.0" fill="rgb(239,186,5)" rx="2" ry="2" />
<text  x="662.45" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::CompactionIterator*, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::_M_head (222,222,220 samples, 0.03%)</title><rect x="1174.4" y="421" width="0.5" height="15.0" fill="rgb(252,159,9)" rx="2" ry="2" />
<text  x="1177.44" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (393,939,390 samples, 0.06%)</title><rect x="952.5" y="405" width="0.7" height="15.0" fill="rgb(240,73,38)" rx="2" ry="2" />
<text  x="955.50" y="415.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_level (90,909,090 samples, 0.01%)</title><rect x="789.3" y="357" width="0.2" height="15.0" fill="rgb(211,170,42)" rx="2" ry="2" />
<text  x="792.29" y="367.5" ></text>
</g>
<g >
<title>rocksdb::CoreLocalArray&lt;rocksdb::ConcurrentArena::Shard&gt;::AccessAtCore (181,818,180 samples, 0.03%)</title><rect x="68.6" y="549" width="0.4" height="15.0" fill="rgb(235,229,27)" rx="2" ry="2" />
<text  x="71.64" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (1,010,101,000 samples, 0.16%)</title><rect x="841.9" y="341" width="1.9" height="15.0" fill="rgb(219,172,46)" rx="2" ry="2" />
<text  x="844.92" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::CompactionOutputs::Output*, std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt; &gt;::operator- (434,343,430 samples, 0.07%)</title><rect x="1102.5" y="437" width="0.8" height="15.0" fill="rgb(234,118,46)" rx="2" ry="2" />
<text  x="1105.50" y="447.5" ></text>
</g>
<g >
<title>rocksdb::BlockHandle::DecodeFrom (60,606,060 samples, 0.01%)</title><rect x="869.9" y="277" width="0.1" height="15.0" fill="rgb(219,195,53)" rx="2" ry="2" />
<text  x="872.92" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound (1,505,050,490 samples, 0.24%)</title><rect x="497.0" y="773" width="2.8" height="15.0" fill="rgb(232,154,33)" rx="2" ry="2" />
<text  x="499.98" y="783.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (121,212,120 samples, 0.02%)</title><rect x="721.0" y="437" width="0.3" height="15.0" fill="rgb(235,223,19)" rx="2" ry="2" />
<text  x="724.04" y="447.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::SkipListRep::InsertKeyConcurrently (36,060,605,700 samples, 5.64%)</title><rect x="71.3" y="629" width="66.5" height="15.0" fill="rgb(235,201,5)" rx="2" ry="2" />
<text  x="74.26" y="639.5" >rocksdb..</text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (111,111,110 samples, 0.02%)</title><rect x="899.1" y="341" width="0.2" height="15.0" fill="rgb(225,190,28)" rx="2" ry="2" />
<text  x="902.06" y="351.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt;@plt (222,222,220 samples, 0.03%)</title><rect x="241.5" y="677" width="0.4" height="15.0" fill="rgb(241,21,34)" rx="2" ry="2" />
<text  x="244.50" y="687.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::top (1,343,434,330 samples, 0.21%)</title><rect x="818.7" y="421" width="2.4" height="15.0" fill="rgb(225,10,24)" rx="2" ry="2" />
<text  x="821.66" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (919,191,910 samples, 0.14%)</title><rect x="721.3" y="421" width="1.7" height="15.0" fill="rgb(241,161,42)" rx="2" ry="2" />
<text  x="724.34" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (353,535,350 samples, 0.06%)</title><rect x="49.7" y="629" width="0.7" height="15.0" fill="rgb(243,177,28)" rx="2" ry="2" />
<text  x="52.73" y="639.5" ></text>
</g>
<g >
<title>rocksdb::MergeHelper::keys[abi:cxx11] (60,606,060 samples, 0.01%)</title><rect x="992.5" y="469" width="0.1" height="15.0" fill="rgb(223,179,42)" rx="2" ry="2" />
<text  x="995.49" y="479.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::DynamicBloom*, std::default_delete&lt;rocksdb::DynamicBloom&gt; &gt; (151,515,150 samples, 0.02%)</title><rect x="141.0" y="565" width="0.3" height="15.0" fill="rgb(209,86,41)" rx="2" ry="2" />
<text  x="143.98" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (393,939,390 samples, 0.06%)</title><rect x="148.4" y="645" width="0.8" height="15.0" fill="rgb(235,161,28)" rx="2" ry="2" />
<text  x="151.44" y="655.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;rocksdb::Slice, std::_Optional_base&lt;rocksdb::Slice, true, true&gt; &gt;::_M_is_engaged (141,414,140 samples, 0.02%)</title><rect x="1168.5" y="485" width="0.3" height="15.0" fill="rgb(252,183,11)" rx="2" ry="2" />
<text  x="1171.51" y="495.5" ></text>
</g>
<g >
<title>rocksdb::VarintLength (242,424,240 samples, 0.04%)</title><rect x="1053.0" y="421" width="0.4" height="15.0" fill="rgb(232,71,16)" rx="2" ry="2" />
<text  x="1056.00" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (626,262,620 samples, 0.10%)</title><rect x="710.4" y="437" width="1.2" height="15.0" fill="rgb(216,26,30)" rx="2" ry="2" />
<text  x="713.44" y="447.5" ></text>
</g>
<g >
<title>do_sched_yield (49,606,060,110 samples, 7.76%)</title><rect x="329.5" y="613" width="91.6" height="15.0" fill="rgb(237,117,10)" rx="2" ry="2" />
<text  x="332.46" y="623.5" >do_sched_y..</text>
</g>
<g >
<title>__tls_get_addr (90,909,090 samples, 0.01%)</title><rect x="624.9" y="373" width="0.2" height="15.0" fill="rgb(209,20,23)" rx="2" ry="2" />
<text  x="627.88" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (131,313,130 samples, 0.02%)</title><rect x="845.5" y="357" width="0.2" height="15.0" fill="rgb(209,110,51)" rx="2" ry="2" />
<text  x="848.51" y="367.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="1011.3" y="357" width="0.1" height="15.0" fill="rgb(205,146,52)" rx="2" ry="2" />
<text  x="1014.25" y="367.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::operator[] (181,818,180 samples, 0.03%)</title><rect x="804.9" y="389" width="0.3" height="15.0" fill="rgb(249,63,42)" rx="2" ry="2" />
<text  x="807.90" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::BlobGarbageMeter, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;::operator bool (80,808,080 samples, 0.01%)</title><rect x="1163.8" y="485" width="0.1" height="15.0" fill="rgb(210,172,17)" rx="2" ry="2" />
<text  x="1166.79" y="495.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::SstPartitioner*, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt; (222,222,220 samples, 0.03%)</title><rect x="1156.1" y="405" width="0.4" height="15.0" fill="rgb(210,96,25)" rx="2" ry="2" />
<text  x="1159.05" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (60,606,060 samples, 0.01%)</title><rect x="484.6" y="789" width="0.1" height="15.0" fill="rgb(228,140,53)" rx="2" ry="2" />
<text  x="487.58" y="799.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000000l&gt;, void&gt; (505,050,500 samples, 0.08%)</title><rect x="165.5" y="661" width="0.9" height="15.0" fill="rgb(251,205,1)" rx="2" ry="2" />
<text  x="168.45" y="671.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter (18,414,141,230 samples, 2.88%)</title><rect x="151.3" y="725" width="34.1" height="15.0" fill="rgb(231,153,5)" rx="2" ry="2" />
<text  x="154.35" y="735.5" >ro..</text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FlushBlockPolicy, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt;::get (1,060,606,050 samples, 0.17%)</title><rect x="1074.6" y="437" width="2.0" height="15.0" fill="rgb(209,139,54)" rx="2" ry="2" />
<text  x="1077.62" y="447.5" ></text>
</g>
<g >
<title>__tls_get_addr (90,909,090 samples, 0.01%)</title><rect x="745.2" y="421" width="0.1" height="15.0" fill="rgb(230,92,34)" rx="2" ry="2" />
<text  x="748.15" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (121,212,120 samples, 0.02%)</title><rect x="908.3" y="341" width="0.2" height="15.0" fill="rgb(224,146,47)" rx="2" ry="2" />
<text  x="911.25" y="351.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="901.3" y="245" width="0.1" height="15.0" fill="rgb(252,103,25)" rx="2" ry="2" />
<text  x="904.30" y="255.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (363,636,360 samples, 0.06%)</title><rect x="1118.6" y="405" width="0.7" height="15.0" fill="rgb(209,196,34)" rx="2" ry="2" />
<text  x="1121.60" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (191,919,190 samples, 0.03%)</title><rect x="896.4" y="325" width="0.4" height="15.0" fill="rgb(249,104,10)" rx="2" ry="2" />
<text  x="899.41" y="335.5" ></text>
</g>
<g >
<title>rocksdb::SubcompactionState::Current (101,010,100 samples, 0.02%)</title><rect x="1163.6" y="485" width="0.2" height="15.0" fill="rgb(224,41,52)" rx="2" ry="2" />
<text  x="1166.59" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (707,070,700 samples, 0.11%)</title><rect x="904.7" y="341" width="1.3" height="15.0" fill="rgb(246,68,29)" rx="2" ry="2" />
<text  x="907.73" y="351.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (222,222,220 samples, 0.03%)</title><rect x="664.8" y="389" width="0.4" height="15.0" fill="rgb(246,93,29)" rx="2" ry="2" />
<text  x="667.82" y="399.5" ></text>
</g>
<g >
<title>pagecache_get_page (212,121,210 samples, 0.03%)</title><rect x="36.8" y="437" width="0.4" height="15.0" fill="rgb(247,136,7)" rx="2" ry="2" />
<text  x="39.79" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (90,909,090 samples, 0.01%)</title><rect x="897.2" y="245" width="0.2" height="15.0" fill="rgb(248,128,45)" rx="2" ry="2" />
<text  x="900.21" y="255.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="904.4" y="293" width="0.2" height="15.0" fill="rgb(244,124,4)" rx="2" ry="2" />
<text  x="907.43" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (202,020,200 samples, 0.03%)</title><rect x="912.0" y="389" width="0.3" height="15.0" fill="rgb(209,81,27)" rx="2" ry="2" />
<text  x="914.96" y="399.5" ></text>
</g>
<g >
<title>std::move&lt;rocksdb::CompactionMergingIterator::HeapItem*&amp;&gt; (131,313,130 samples, 0.02%)</title><rect x="806.5" y="421" width="0.2" height="15.0" fill="rgb(240,77,46)" rx="2" ry="2" />
<text  x="809.47" y="431.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (101,010,100 samples, 0.02%)</title><rect x="560.1" y="837" width="0.2" height="15.0" fill="rgb(233,17,37)" rx="2" ry="2" />
<text  x="563.14" y="847.5" ></text>
</g>
<g >
<title>do_writepages (181,818,180 samples, 0.03%)</title><rect x="747.3" y="309" width="0.4" height="15.0" fill="rgb(217,101,6)" rx="2" ry="2" />
<text  x="750.32" y="319.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::BlockFetcher (121,212,120 samples, 0.02%)</title><rect x="862.2" y="293" width="0.2" height="15.0" fill="rgb(232,118,15)" rx="2" ry="2" />
<text  x="865.22" y="303.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="846.1" y="341" width="0.3" height="15.0" fill="rgb(236,61,52)" rx="2" ry="2" />
<text  x="849.12" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (626,262,620 samples, 0.10%)</title><rect x="987.6" y="421" width="1.1" height="15.0" fill="rgb(250,45,31)" rx="2" ry="2" />
<text  x="990.56" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, false&gt;::_M_head (151,515,150 samples, 0.02%)</title><rect x="974.6" y="373" width="0.3" height="15.0" fill="rgb(232,50,17)" rx="2" ry="2" />
<text  x="977.64" y="383.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;25ul&gt; (222,222,220 samples, 0.03%)</title><rect x="633.7" y="405" width="0.5" height="15.0" fill="rgb(254,175,6)" rx="2" ry="2" />
<text  x="636.74" y="415.5" ></text>
</g>
<g >
<title>rocksdb::InternalKey::size (90,909,090 samples, 0.01%)</title><rect x="713.1" y="453" width="0.2" height="15.0" fill="rgb(205,173,11)" rx="2" ry="2" />
<text  x="716.11" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (353,535,350 samples, 0.06%)</title><rect x="1128.2" y="453" width="0.6" height="15.0" fill="rgb(248,17,4)" rx="2" ry="2" />
<text  x="1131.19" y="463.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_level (60,606,060 samples, 0.01%)</title><rect x="718.6" y="405" width="0.1" height="15.0" fill="rgb(231,139,6)" rx="2" ry="2" />
<text  x="721.61" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FlushBlockPolicy, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt;::operator (1,313,131,300 samples, 0.21%)</title><rect x="1074.1" y="453" width="2.5" height="15.0" fill="rgb(214,212,50)" rx="2" ry="2" />
<text  x="1077.15" y="463.5" ></text>
</g>
<g >
<title>rocksdb::PlaceholderCacheInterface&lt; (303,030,300 samples, 0.05%)</title><rect x="830.8" y="293" width="0.5" height="15.0" fill="rgb(231,164,30)" rx="2" ry="2" />
<text  x="833.75" y="303.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::SkipListRep::Iterator::key (101,010,100 samples, 0.02%)</title><rect x="669.8" y="405" width="0.2" height="15.0" fill="rgb(238,96,48)" rx="2" ry="2" />
<text  x="672.82" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (414,141,410 samples, 0.06%)</title><rect x="1121.4" y="389" width="0.8" height="15.0" fill="rgb(230,95,7)" rx="2" ry="2" />
<text  x="1124.40" y="399.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::NextFromInput (32,171,716,850 samples, 5.03%)</title><rect x="635.6" y="437" width="59.4" height="15.0" fill="rgb(242,168,18)" rx="2" ry="2" />
<text  x="638.57" y="447.5" >rocksd..</text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::SuperVersionContext::WriteStallNotification, 8ul&gt;::end (80,808,080 samples, 0.01%)</title><rect x="29.2" y="693" width="0.2" height="15.0" fill="rgb(237,76,42)" rx="2" ry="2" />
<text  x="32.21" y="703.5" ></text>
</g>
<g >
<title>rocksdb::Slice::compare (1,535,353,520 samples, 0.24%)</title><rect x="114.4" y="469" width="2.8" height="15.0" fill="rgb(241,148,54)" rx="2" ry="2" />
<text  x="117.38" y="479.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::IsDeleteRangeSentinelKey (111,111,110 samples, 0.02%)</title><rect x="1083.0" y="469" width="0.2" height="15.0" fill="rgb(209,41,33)" rx="2" ry="2" />
<text  x="1086.01" y="479.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::DefinitelyInSnapshot (141,414,140 samples, 0.02%)</title><rect x="978.9" y="469" width="0.3" height="15.0" fill="rgb(209,216,48)" rx="2" ry="2" />
<text  x="981.95" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IndexBuilder, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt;::operator (252,525,250 samples, 0.04%)</title><rect x="750.6" y="453" width="0.5" height="15.0" fill="rgb(234,40,40)" rx="2" ry="2" />
<text  x="753.60" y="463.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (171,717,170 samples, 0.03%)</title><rect x="827.7" y="133" width="0.3" height="15.0" fill="rgb(237,26,2)" rx="2" ry="2" />
<text  x="830.65" y="143.5" ></text>
</g>
<g >
<title>ksys_write (818,181,810 samples, 0.13%)</title><rect x="572.1" y="245" width="1.5" height="15.0" fill="rgb(224,182,37)" rx="2" ry="2" />
<text  x="575.11" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (161,616,160 samples, 0.03%)</title><rect x="497.9" y="709" width="0.3" height="15.0" fill="rgb(224,131,29)" rx="2" ry="2" />
<text  x="500.86" y="719.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (757,575,750 samples, 0.12%)</title><rect x="927.1" y="453" width="1.4" height="15.0" fill="rgb(210,213,45)" rx="2" ry="2" />
<text  x="930.11" y="463.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (191,919,190 samples, 0.03%)</title><rect x="613.6" y="437" width="0.3" height="15.0" fill="rgb(235,175,36)" rx="2" ry="2" />
<text  x="616.56" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (353,535,350 samples, 0.06%)</title><rect x="785.2" y="357" width="0.7" height="15.0" fill="rgb(229,72,32)" rx="2" ry="2" />
<text  x="788.24" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;rocksdb::MemTable*, rocksdb::MemTablePostProcessInfo, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::~map (848,484,840 samples, 0.13%)</title><rect x="55.9" y="693" width="1.6" height="15.0" fill="rgb(233,187,53)" rx="2" ry="2" />
<text  x="58.92" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;rocksdb::MemTable* const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,050,505,040 samples, 0.16%)</title><rect x="61.6" y="597" width="2.0" height="15.0" fill="rgb(220,44,6)" rx="2" ry="2" />
<text  x="64.61" y="607.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (104,343,433,300 samples, 16.33%)</title><rect x="562.0" y="693" width="192.7" height="15.0" fill="rgb(213,146,41)" rx="2" ry="2" />
<text  x="565.04" y="703.5" >std::_Function_handler&lt;vo..</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="887.1" y="293" width="0.1" height="15.0" fill="rgb(229,182,49)" rx="2" ry="2" />
<text  x="890.10" y="303.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::ParseNextDataKey (90,909,090 samples, 0.01%)</title><rect x="837.2" y="341" width="0.2" height="15.0" fill="rgb(236,19,14)" rx="2" ry="2" />
<text  x="840.19" y="351.5" ></text>
</g>
<g >
<title>rocksdb::InternalKeyComparator::CompareKeySeq (171,717,170 samples, 0.03%)</title><rect x="89.1" y="533" width="0.3" height="15.0" fill="rgb(224,179,15)" rx="2" ry="2" />
<text  x="92.07" y="543.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (232,323,230 samples, 0.04%)</title><rect x="166.5" y="693" width="0.4" height="15.0" fill="rgb(209,121,47)" rx="2" ry="2" />
<text  x="169.51" y="703.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::value (242,424,240 samples, 0.04%)</title><rect x="1014.9" y="485" width="0.5" height="15.0" fill="rgb(208,44,7)" rx="2" ry="2" />
<text  x="1017.93" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::SstPartitioner*, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="1099.3" y="373" width="0.1" height="15.0" fill="rgb(215,192,46)" rx="2" ry="2" />
<text  x="1102.27" y="383.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ikey@plt (70,707,070 samples, 0.01%)</title><rect x="751.8" y="469" width="0.1" height="15.0" fill="rgb(232,50,51)" rx="2" ry="2" />
<text  x="754.78" y="479.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::status (70,707,070 samples, 0.01%)</title><rect x="915.1" y="453" width="0.1" height="15.0" fill="rgb(247,35,18)" rx="2" ry="2" />
<text  x="918.08" y="463.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey (1,242,424,230 samples, 0.19%)</title><rect x="784.4" y="373" width="2.3" height="15.0" fill="rgb(248,129,51)" rx="2" ry="2" />
<text  x="787.36" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Status::IsManualCompactionPaused (202,020,200 samples, 0.03%)</title><rect x="1175.2" y="517" width="0.4" height="15.0" fill="rgb(220,206,36)" rx="2" ry="2" />
<text  x="1178.23" y="527.5" ></text>
</g>
<g >
<title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Insert (282,828,280 samples, 0.04%)</title><rect x="830.8" y="277" width="0.5" height="15.0" fill="rgb(253,164,6)" rx="2" ry="2" />
<text  x="833.77" y="287.5" ></text>
</g>
<g >
<title>@plt (171,717,170 samples, 0.03%)</title><rect x="1179.0" y="501" width="0.3" height="15.0" fill="rgb(210,138,4)" rx="2" ry="2" />
<text  x="1181.98" y="511.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::empty (444,444,440 samples, 0.07%)</title><rect x="799.9" y="421" width="0.8" height="15.0" fill="rgb(248,80,53)" rx="2" ry="2" />
<text  x="802.88" y="431.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid (323,232,320 samples, 0.05%)</title><rect x="930.8" y="453" width="0.6" height="15.0" fill="rgb(239,196,11)" rx="2" ry="2" />
<text  x="933.77" y="463.5" ></text>
</g>
<g >
<title>std::move&lt;rocksdb::CompactionMergingIterator::HeapItem*&amp;&gt; (101,010,100 samples, 0.02%)</title><rect x="799.4" y="405" width="0.2" height="15.0" fill="rgb(218,147,18)" rx="2" ry="2" />
<text  x="802.43" y="415.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (515,151,510 samples, 0.08%)</title><rect x="1087.7" y="357" width="0.9" height="15.0" fill="rgb(246,59,22)" rx="2" ry="2" />
<text  x="1090.65" y="367.5" ></text>
</g>
<g >
<title>rocksdb::FlushScheduler::Empty (212,121,210 samples, 0.03%)</title><rect x="26.3" y="709" width="0.4" height="15.0" fill="rgb(253,189,39)" rx="2" ry="2" />
<text  x="29.32" y="719.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::SkipListRep::Iterator::key (313,131,310 samples, 0.05%)</title><rect x="670.3" y="389" width="0.6" height="15.0" fill="rgb(243,139,14)" rx="2" ry="2" />
<text  x="673.34" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (90,909,090 samples, 0.01%)</title><rect x="148.5" y="613" width="0.2" height="15.0" fill="rgb(237,203,23)" rx="2" ry="2" />
<text  x="151.50" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (464,646,460 samples, 0.07%)</title><rect x="913.0" y="437" width="0.9" height="15.0" fill="rgb(234,226,47)" rx="2" ry="2" />
<text  x="916.03" y="447.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::StashHeight (141,414,140 samples, 0.02%)</title><rect x="70.4" y="581" width="0.2" height="15.0" fill="rgb(226,161,34)" rx="2" ry="2" />
<text  x="73.38" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (121,212,120 samples, 0.02%)</title><rect x="890.7" y="373" width="0.3" height="15.0" fill="rgb(209,47,38)" rx="2" ry="2" />
<text  x="893.74" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (101,010,100 samples, 0.02%)</title><rect x="820.8" y="357" width="0.2" height="15.0" fill="rgb(234,204,53)" rx="2" ry="2" />
<text  x="823.77" y="367.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::IntTblPropCollector*, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="609.1" y="373" width="0.2" height="15.0" fill="rgb(220,129,46)" rx="2" ry="2" />
<text  x="612.14" y="383.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (292,929,290 samples, 0.05%)</title><rect x="44.5" y="485" width="0.5" height="15.0" fill="rgb(211,10,51)" rx="2" ry="2" />
<text  x="47.51" y="495.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyData::mem (90,909,090 samples, 0.01%)</title><rect x="66.9" y="645" width="0.2" height="15.0" fill="rgb(237,184,41)" rx="2" ry="2" />
<text  x="69.91" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (191,919,190 samples, 0.03%)</title><rect x="890.6" y="389" width="0.4" height="15.0" fill="rgb(240,110,39)" rx="2" ry="2" />
<text  x="893.61" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::SstPartitioner*, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt; (323,232,320 samples, 0.05%)</title><rect x="1155.9" y="421" width="0.6" height="15.0" fill="rgb(242,86,14)" rx="2" ry="2" />
<text  x="1158.87" y="431.5" ></text>
</g>
<g >
<title>rocksdb::DecodeFixed32 (181,818,180 samples, 0.03%)</title><rect x="52.4" y="709" width="0.3" height="15.0" fill="rgb(243,189,35)" rx="2" ry="2" />
<text  x="55.40" y="719.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::~IOOptions (80,808,080 samples, 0.01%)</title><rect x="1026.0" y="373" width="0.1" height="15.0" fill="rgb(238,119,3)" rx="2" ry="2" />
<text  x="1028.99" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="689.8" y="341" width="0.1" height="15.0" fill="rgb(236,194,27)" rx="2" ry="2" />
<text  x="692.76" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (101,010,100 samples, 0.02%)</title><rect x="50.4" y="661" width="0.2" height="15.0" fill="rgb(208,45,52)" rx="2" ry="2" />
<text  x="53.40" y="671.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (393,939,390 samples, 0.06%)</title><rect x="690.4" y="405" width="0.8" height="15.0" fill="rgb(234,167,31)" rx="2" ry="2" />
<text  x="693.45" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (191,919,190 samples, 0.03%)</title><rect x="855.9" y="309" width="0.3" height="15.0" fill="rgb(231,49,1)" rx="2" ry="2" />
<text  x="858.89" y="319.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (161,616,160 samples, 0.03%)</title><rect x="925.2" y="437" width="0.3" height="15.0" fill="rgb(213,29,3)" rx="2" ry="2" />
<text  x="928.21" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (141,414,140 samples, 0.02%)</title><rect x="145.3" y="629" width="0.3" height="15.0" fill="rgb(222,199,15)" rx="2" ry="2" />
<text  x="148.32" y="639.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatch::~WriteBatch (60,606,060 samples, 0.01%)</title><rect x="481.6" y="773" width="0.1" height="15.0" fill="rgb(216,111,34)" rx="2" ry="2" />
<text  x="484.56" y="783.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned char&gt;::operator unsigned char (151,515,150 samples, 0.02%)</title><rect x="458.7" y="725" width="0.3" height="15.0" fill="rgb(209,17,52)" rx="2" ry="2" />
<text  x="461.71" y="735.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::duration&lt;unsigned long, void&gt;@plt (272,727,270 samples, 0.04%)</title><rect x="449.8" y="709" width="0.5" height="15.0" fill="rgb(248,59,6)" rx="2" ry="2" />
<text  x="452.83" y="719.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::current_output (171,717,170 samples, 0.03%)</title><rect x="1161.0" y="485" width="0.3" height="15.0" fill="rgb(251,63,4)" rx="2" ry="2" />
<text  x="1163.98" y="495.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::Sync (222,222,220 samples, 0.03%)</title><rect x="747.2" y="453" width="0.5" height="15.0" fill="rgb(242,89,40)" rx="2" ry="2" />
<text  x="750.24" y="463.5" ></text>
</g>
<g >
<title>rocksdb::FSWritableFilePtr::operator (90,909,090 samples, 0.01%)</title><rect x="34.9" y="645" width="0.2" height="15.0" fill="rgb(249,13,50)" rx="2" ry="2" />
<text  x="37.92" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (606,060,600 samples, 0.09%)</title><rect x="1026.6" y="309" width="1.1" height="15.0" fill="rgb(226,122,17)" rx="2" ry="2" />
<text  x="1029.60" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::_M_ptr (252,525,250 samples, 0.04%)</title><rect x="1170.3" y="469" width="0.5" height="15.0" fill="rgb(223,10,41)" rx="2" ry="2" />
<text  x="1173.32" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (595,959,590 samples, 0.09%)</title><rect x="1032.9" y="405" width="1.1" height="15.0" fill="rgb(235,143,12)" rx="2" ry="2" />
<text  x="1035.89" y="415.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::CompactionIterator*, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="1170.7" y="437" width="0.1" height="15.0" fill="rgb(208,7,11)" rx="2" ry="2" />
<text  x="1173.66" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (80,808,080 samples, 0.01%)</title><rect x="898.8" y="261" width="0.1" height="15.0" fill="rgb(254,25,39)" rx="2" ry="2" />
<text  x="901.76" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt;::begin (444,444,440 samples, 0.07%)</title><rect x="1066.5" y="437" width="0.8" height="15.0" fill="rgb(240,27,40)" rx="2" ry="2" />
<text  x="1069.50" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (171,717,170 samples, 0.03%)</title><rect x="905.4" y="325" width="0.3" height="15.0" fill="rgb(228,190,25)" rx="2" ry="2" />
<text  x="908.40" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (101,010,100 samples, 0.02%)</title><rect x="46.1" y="693" width="0.2" height="15.0" fill="rgb(211,216,6)" rx="2" ry="2" />
<text  x="49.13" y="703.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000000l&gt;, void&gt;@plt (121,212,120 samples, 0.02%)</title><rect x="278.4" y="677" width="0.3" height="15.0" fill="rgb(216,49,21)" rx="2" ry="2" />
<text  x="281.43" y="687.5" ></text>
</g>
<g >
<title>do_writepages (141,414,140 samples, 0.02%)</title><rect x="1145.9" y="213" width="0.3" height="15.0" fill="rgb(232,190,0)" rx="2" ry="2" />
<text  x="1148.94" y="223.5" ></text>
</g>
<g >
<title>XXH3_accumulate_512_avx512 (373,737,370 samples, 0.06%)</title><rect x="1023.9" y="277" width="0.7" height="15.0" fill="rgb(254,2,35)" rx="2" ry="2" />
<text  x="1026.94" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;rocksdb::Slice, std::_Optional_base&lt;rocksdb::Slice, true, true&gt; &gt;::_M_is_engaged (141,414,140 samples, 0.02%)</title><rect x="1167.9" y="501" width="0.2" height="15.0" fill="rgb(247,57,50)" rx="2" ry="2" />
<text  x="1170.86" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (60,606,060 samples, 0.01%)</title><rect x="653.5" y="389" width="0.1" height="15.0" fill="rgb(246,141,13)" rx="2" ry="2" />
<text  x="656.50" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (1,717,171,700 samples, 0.27%)</title><rect x="1009.2" y="453" width="3.1" height="15.0" fill="rgb(212,11,37)" rx="2" ry="2" />
<text  x="1012.16" y="463.5" ></text>
</g>
<g >
<title>rocksdb::ThreadPoolImpl::Impl::BGThread (104,343,433,300 samples, 16.33%)</title><rect x="562.0" y="725" width="192.7" height="15.0" fill="rgb(233,85,21)" rx="2" ry="2" />
<text  x="565.04" y="735.5" >rocksdb::ThreadPoolImpl::..</text>
</g>
<g >
<title>rocksdb::Status::Status (1,030,303,020 samples, 0.16%)</title><rect x="603.6" y="389" width="1.9" height="15.0" fill="rgb(215,200,46)" rx="2" ry="2" />
<text  x="606.56" y="399.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (151,515,150 samples, 0.02%)</title><rect x="103.7" y="501" width="0.3" height="15.0" fill="rgb(205,6,41)" rx="2" ry="2" />
<text  x="106.73" y="511.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (111,111,110 samples, 0.02%)</title><rect x="573.4" y="117" width="0.2" height="15.0" fill="rgb(246,85,19)" rx="2" ry="2" />
<text  x="576.36" y="127.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (70,707,070 samples, 0.01%)</title><rect x="584.0" y="405" width="0.1" height="15.0" fill="rgb(241,77,38)" rx="2" ry="2" />
<text  x="586.96" y="415.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="883.2" y="277" width="0.2" height="15.0" fill="rgb(219,59,54)" rx="2" ry="2" />
<text  x="886.24" y="287.5" ></text>
</g>
<g >
<title>rocksdb::IsValueType (80,808,080 samples, 0.01%)</title><rect x="662.3" y="389" width="0.2" height="15.0" fill="rgb(251,129,2)" rx="2" ry="2" />
<text  x="665.32" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (222,222,220 samples, 0.03%)</title><rect x="888.0" y="309" width="0.4" height="15.0" fill="rgb(219,198,33)" rx="2" ry="2" />
<text  x="890.96" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::SstPartitioner, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::_M_ptr (272,727,270 samples, 0.04%)</title><rect x="1096.5" y="437" width="0.5" height="15.0" fill="rgb(252,49,3)" rx="2" ry="2" />
<text  x="1099.46" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt;::operator++ (70,707,070 samples, 0.01%)</title><rect x="1059.9" y="437" width="0.1" height="15.0" fill="rgb(254,77,40)" rx="2" ry="2" />
<text  x="1062.90" y="447.5" ></text>
</g>
<g >
<title>rocksdb::UncompressData (171,717,170 samples, 0.03%)</title><rect x="829.0" y="213" width="0.4" height="15.0" fill="rgb(220,49,24)" rx="2" ry="2" />
<text  x="832.04" y="223.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::BlobGarbageMeter*, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt; (191,919,190 samples, 0.03%)</title><rect x="1152.7" y="421" width="0.3" height="15.0" fill="rgb(225,69,9)" rx="2" ry="2" />
<text  x="1155.66" y="431.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::FindNextVisibleKey (2,474,747,450 samples, 0.39%)</title><rect x="817.3" y="437" width="4.6" height="15.0" fill="rgb(227,5,35)" rx="2" ry="2" />
<text  x="820.34" y="447.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::Write (238,202,017,820 samples, 37.28%)</title><rect x="23.8" y="757" width="439.8" height="15.0" fill="rgb(218,128,47)" rx="2" ry="2" />
<text  x="26.78" y="767.5" >rocksdb::DBImpl::Write</text>
</g>
<g >
<title>rocksdb::DeleteScheduler::DeleteFile (242,424,240 samples, 0.04%)</title><rect x="754.3" y="485" width="0.4" height="15.0" fill="rgb(212,69,45)" rx="2" ry="2" />
<text  x="757.26" y="495.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (292,929,290 samples, 0.05%)</title><rect x="104.2" y="501" width="0.5" height="15.0" fill="rgb(218,181,9)" rx="2" ry="2" />
<text  x="107.20" y="511.5" ></text>
</g>
<g >
<title>__fget_light (60,606,060 samples, 0.01%)</title><rect x="35.9" y="533" width="0.1" height="15.0" fill="rgb(245,141,3)" rx="2" ry="2" />
<text  x="38.87" y="543.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::NextEntryOffset (181,818,180 samples, 0.03%)</title><rect x="835.5" y="293" width="0.4" height="15.0" fill="rgb(214,152,11)" rx="2" ry="2" />
<text  x="838.54" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (111,111,110 samples, 0.02%)</title><rect x="840.2" y="309" width="0.2" height="15.0" fill="rgb(252,145,26)" rx="2" ry="2" />
<text  x="843.21" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::operator bool (909,090,900 samples, 0.14%)</title><rect x="614.4" y="421" width="1.7" height="15.0" fill="rgb(253,55,40)" rx="2" ry="2" />
<text  x="617.42" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (90,909,090 samples, 0.01%)</title><rect x="953.5" y="437" width="0.2" height="15.0" fill="rgb(208,0,31)" rx="2" ry="2" />
<text  x="956.52" y="447.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt; (636,363,630 samples, 0.10%)</title><rect x="994.4" y="453" width="1.1" height="15.0" fill="rgb(231,71,25)" rx="2" ry="2" />
<text  x="997.37" y="463.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::IOStatus (171,717,170 samples, 0.03%)</title><rect x="42.1" y="645" width="0.3" height="15.0" fill="rgb(207,200,0)" rx="2" ry="2" />
<text  x="45.10" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Slice::compare (404,040,400 samples, 0.06%)</title><rect x="719.6" y="389" width="0.7" height="15.0" fill="rgb(247,191,9)" rx="2" ry="2" />
<text  x="722.60" y="399.5" ></text>
</g>
<g >
<title>__tls_get_addr (151,515,150 samples, 0.02%)</title><rect x="625.1" y="389" width="0.3" height="15.0" fill="rgb(227,108,11)" rx="2" ry="2" />
<text  x="628.13" y="399.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;25ul&gt;@plt (131,313,130 samples, 0.02%)</title><rect x="634.2" y="405" width="0.2" height="15.0" fill="rgb(213,158,50)" rx="2" ry="2" />
<text  x="637.15" y="415.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="840.8" y="261" width="0.2" height="15.0" fill="rgb(248,191,29)" rx="2" ry="2" />
<text  x="843.77" y="271.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (60,606,060 samples, 0.01%)</title><rect x="145.6" y="661" width="0.1" height="15.0" fill="rgb(212,46,3)" rx="2" ry="2" />
<text  x="148.60" y="671.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_context (141,414,140 samples, 0.02%)</title><rect x="25.0" y="725" width="0.3" height="15.0" fill="rgb(225,145,45)" rx="2" ry="2" />
<text  x="28.02" y="735.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::Writer::CallbackFailed (111,111,110 samples, 0.02%)</title><rect x="455.6" y="725" width="0.3" height="15.0" fill="rgb(237,123,20)" rx="2" ry="2" />
<text  x="458.65" y="735.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (60,606,060 samples, 0.01%)</title><rect x="952.9" y="325" width="0.1" height="15.0" fill="rgb(223,3,26)" rx="2" ry="2" />
<text  x="955.91" y="335.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid (646,464,640 samples, 0.10%)</title><rect x="989.5" y="485" width="1.2" height="15.0" fill="rgb(237,153,36)" rx="2" ry="2" />
<text  x="992.52" y="495.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (636,363,630 samples, 0.10%)</title><rect x="466.8" y="661" width="1.2" height="15.0" fill="rgb(248,213,31)" rx="2" ry="2" />
<text  x="469.82" y="671.5" ></text>
</g>
<g >
<title>std::operator&amp; (121,212,120 samples, 0.02%)</title><rect x="124.6" y="533" width="0.2" height="15.0" fill="rgb(240,3,0)" rx="2" ry="2" />
<text  x="127.60" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (282,828,280 samples, 0.04%)</title><rect x="496.3" y="757" width="0.5" height="15.0" fill="rgb(207,88,46)" rx="2" ry="2" />
<text  x="499.27" y="767.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (272,727,270 samples, 0.04%)</title><rect x="36.7" y="469" width="0.5" height="15.0" fill="rgb(217,187,6)" rx="2" ry="2" />
<text  x="39.67" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (1,060,606,050 samples, 0.17%)</title><rect x="908.6" y="357" width="2.0" height="15.0" fill="rgb(237,90,29)" rx="2" ry="2" />
<text  x="911.61" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="904.3" y="309" width="0.3" height="15.0" fill="rgb(232,186,36)" rx="2" ry="2" />
<text  x="907.34" y="319.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::Add (161,616,160 samples, 0.03%)</title><rect x="1067.7" y="437" width="0.3" height="15.0" fill="rgb(219,49,37)" rx="2" ry="2" />
<text  x="1070.68" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;rocksdb::SavePoints, std::default_delete&lt;rocksdb::SavePoints&gt;, true, true&gt;::__uniq_ptr_data (232,323,230 samples, 0.04%)</title><rect x="477.1" y="725" width="0.4" height="15.0" fill="rgb(205,13,12)" rx="2" ry="2" />
<text  x="480.12" y="735.5" ></text>
</g>
<g >
<title>create_empty_buffers (60,606,060 samples, 0.01%)</title><rect x="572.5" y="117" width="0.1" height="15.0" fill="rgb(216,211,0)" rx="2" ry="2" />
<text  x="575.45" y="127.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (292,929,290 samples, 0.05%)</title><rect x="235.4" y="693" width="0.6" height="15.0" fill="rgb(225,52,5)" rx="2" ry="2" />
<text  x="238.44" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (80,808,080 samples, 0.01%)</title><rect x="33.4" y="645" width="0.1" height="15.0" fill="rgb(245,193,7)" rx="2" ry="2" />
<text  x="36.39" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::CompressionDict, std::default_delete&lt;rocksdb::CompressionDict&gt; &gt;::_M_ptr (90,909,090 samples, 0.01%)</title><rect x="1023.1" y="341" width="0.2" height="15.0" fill="rgb(247,146,31)" rx="2" ry="2" />
<text  x="1026.10" y="351.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::FindKeyForward (4,232,323,190 samples, 0.66%)</title><rect x="825.2" y="357" width="7.8" height="15.0" fill="rgb(228,66,3)" rx="2" ry="2" />
<text  x="828.21" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_mbegin (121,212,120 samples, 0.02%)</title><rect x="659.2" y="341" width="0.2" height="15.0" fill="rgb(241,151,18)" rx="2" ry="2" />
<text  x="662.22" y="351.5" ></text>
</g>
<g >
<title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Release (232,323,230 samples, 0.04%)</title><rect x="869.2" y="261" width="0.4" height="15.0" fill="rgb(234,213,50)" rx="2" ry="2" />
<text  x="872.18" y="271.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::TableBuilder*, false&gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="1158.3" y="373" width="0.1" height="15.0" fill="rgb(250,194,49)" rx="2" ry="2" />
<text  x="1161.31" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (60,606,060 samples, 0.01%)</title><rect x="717.1" y="405" width="0.2" height="15.0" fill="rgb(243,216,3)" rx="2" ry="2" />
<text  x="720.14" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (202,020,200 samples, 0.03%)</title><rect x="842.6" y="277" width="0.4" height="15.0" fill="rgb(233,214,31)" rx="2" ry="2" />
<text  x="845.60" y="287.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Bind&lt;void  (224,373,735,130 samples, 35.11%)</title><rect x="765.1" y="661" width="414.3" height="15.0" fill="rgb(251,118,6)" rx="2" ry="2" />
<text  x="768.11" y="671.5" >std::__invoke_impl&lt;void, std::_Bind&lt;void </text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Valid (191,919,190 samples, 0.03%)</title><rect x="964.2" y="389" width="0.3" height="15.0" fill="rgb(232,212,54)" rx="2" ry="2" />
<text  x="967.15" y="399.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::WriteContext::WriteContext (595,959,590 samples, 0.09%)</title><rect x="27.9" y="725" width="1.1" height="15.0" fill="rgb(251,196,12)" rx="2" ry="2" />
<text  x="30.85" y="735.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::SetKeyImpl (202,020,200 samples, 0.03%)</title><rect x="937.3" y="453" width="0.3" height="15.0" fill="rgb(225,43,11)" rx="2" ry="2" />
<text  x="940.28" y="463.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::HeapItem::key (202,020,200 samples, 0.03%)</title><rect x="793.6" y="405" width="0.3" height="15.0" fill="rgb(220,112,37)" rx="2" ry="2" />
<text  x="796.58" y="415.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyData::IsDropped (434,343,430 samples, 0.07%)</title><rect x="770.4" y="501" width="0.8" height="15.0" fill="rgb(232,196,48)" rx="2" ry="2" />
<text  x="773.35" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;::_M_const_cast (70,707,070 samples, 0.01%)</title><rect x="65.0" y="597" width="0.1" height="15.0" fill="rgb(234,61,2)" rx="2" ry="2" />
<text  x="67.99" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (202,020,200 samples, 0.03%)</title><rect x="785.9" y="357" width="0.4" height="15.0" fill="rgb(243,133,18)" rx="2" ry="2" />
<text  x="788.89" y="367.5" ></text>
</g>
<g >
<title>rocksdb::MergeOutputIterator::Valid (242,424,240 samples, 0.04%)</title><rect x="713.8" y="453" width="0.5" height="15.0" fill="rgb(226,1,21)" rx="2" ry="2" />
<text  x="716.82" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="856.0" y="277" width="0.2" height="15.0" fill="rgb(234,31,5)" rx="2" ry="2" />
<text  x="859.01" y="287.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::begin@plt (121,212,120 samples, 0.02%)</title><rect x="802.7" y="421" width="0.2" height="15.0" fill="rgb(253,73,47)" rx="2" ry="2" />
<text  x="805.66" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (60,606,060 samples, 0.01%)</title><rect x="461.2" y="741" width="0.2" height="15.0" fill="rgb(227,125,2)" rx="2" ry="2" />
<text  x="464.24" y="751.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_context (212,121,210 samples, 0.03%)</title><rect x="624.7" y="389" width="0.4" height="15.0" fill="rgb(232,71,32)" rx="2" ry="2" />
<text  x="627.70" y="399.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::Add (131,313,130 samples, 0.02%)</title><rect x="611.0" y="421" width="0.2" height="15.0" fill="rgb(215,211,9)" rx="2" ry="2" />
<text  x="613.99" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (104,424,241,380 samples, 16.34%)</title><rect x="561.9" y="837" width="192.8" height="15.0" fill="rgb(220,115,12)" rx="2" ry="2" />
<text  x="564.89" y="847.5" >[libstdc++.so.6.0.30]</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt; &gt;::allocate (60,606,060 samples, 0.01%)</title><rect x="63.3" y="565" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="66.27" y="575.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::empty (252,525,250 samples, 0.04%)</title><rect x="818.9" y="405" width="0.5" height="15.0" fill="rgb(239,41,29)" rx="2" ry="2" />
<text  x="821.93" y="415.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::NextAndGetResult (60,606,060 samples, 0.01%)</title><rect x="824.0" y="405" width="0.1" height="15.0" fill="rgb(216,78,25)" rx="2" ry="2" />
<text  x="827.02" y="415.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::RandomHeight (111,111,110 samples, 0.02%)</title><rect x="70.8" y="597" width="0.2" height="15.0" fill="rgb(220,222,44)" rx="2" ry="2" />
<text  x="73.77" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::FSWritableFileTracingWrapper, std::default_delete&lt;rocksdb::FSWritableFileTracingWrapper&gt; &gt;::_M_ptr (60,606,060 samples, 0.01%)</title><rect x="41.3" y="597" width="0.1" height="15.0" fill="rgb(243,119,6)" rx="2" ry="2" />
<text  x="44.30" y="607.5" ></text>
</g>
<g >
<title>rocksdb::ConcurrentArena::AllocateImpl&lt;rocksdb::ConcurrentArena::Allocate (787,878,780 samples, 0.12%)</title><rect x="68.5" y="565" width="1.4" height="15.0" fill="rgb(253,8,48)" rx="2" ry="2" />
<text  x="71.46" y="575.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (111,111,110 samples, 0.02%)</title><rect x="1025.1" y="373" width="0.2" height="15.0" fill="rgb(205,75,2)" rx="2" ry="2" />
<text  x="1028.13" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_end (323,232,320 samples, 0.05%)</title><rect x="946.8" y="421" width="0.5" height="15.0" fill="rgb(214,159,30)" rx="2" ry="2" />
<text  x="949.75" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_begin (212,121,210 samples, 0.03%)</title><rect x="948.1" y="405" width="0.4" height="15.0" fill="rgb(240,38,36)" rx="2" ry="2" />
<text  x="951.09" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Slice::compare (313,131,310 samples, 0.05%)</title><rect x="599.6" y="389" width="0.6" height="15.0" fill="rgb(228,33,30)" rx="2" ry="2" />
<text  x="602.61" y="399.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (575,757,570 samples, 0.09%)</title><rect x="710.5" y="421" width="1.1" height="15.0" fill="rgb(208,42,49)" rx="2" ry="2" />
<text  x="713.52" y="431.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (313,131,310 samples, 0.05%)</title><rect x="1034.0" y="405" width="0.6" height="15.0" fill="rgb(229,184,37)" rx="2" ry="2" />
<text  x="1036.99" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (1,030,303,020 samples, 0.16%)</title><rect x="482.4" y="805" width="1.9" height="15.0" fill="rgb(234,198,16)" rx="2" ry="2" />
<text  x="485.41" y="815.5" ></text>
</g>
<g >
<title>schedule (42,626,262,200 samples, 6.67%)</title><rect x="342.4" y="597" width="78.7" height="15.0" fill="rgb(250,117,13)" rx="2" ry="2" />
<text  x="345.35" y="607.5" >schedule</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::IndexBuilder, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt;::_M_ptr (656,565,650 samples, 0.10%)</title><rect x="619.7" y="405" width="1.2" height="15.0" fill="rgb(218,72,48)" rx="2" ry="2" />
<text  x="622.70" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (161,616,160 samples, 0.03%)</title><rect x="886.9" y="341" width="0.3" height="15.0" fill="rgb(244,118,35)" rx="2" ry="2" />
<text  x="889.93" y="351.5" ></text>
</g>
<g >
<title>rocksdb::Slice::compare (727,272,720 samples, 0.11%)</title><rect x="791.7" y="341" width="1.4" height="15.0" fill="rgb(237,163,54)" rx="2" ry="2" />
<text  x="794.73" y="351.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (191,919,190 samples, 0.03%)</title><rect x="873.5" y="325" width="0.4" height="15.0" fill="rgb(216,60,42)" rx="2" ry="2" />
<text  x="876.54" y="335.5" ></text>
</g>
<g >
<title>memcmp@plt (70,707,070 samples, 0.01%)</title><rect x="114.2" y="469" width="0.2" height="15.0" fill="rgb(220,181,40)" rx="2" ry="2" />
<text  x="117.25" y="479.5" ></text>
</g>
<g >
<title>rocksdb::DecodeFixed64 (111,111,110 samples, 0.02%)</title><rect x="646.3" y="421" width="0.2" height="15.0" fill="rgb(242,109,30)" rx="2" ry="2" />
<text  x="649.33" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (232,323,230 samples, 0.04%)</title><rect x="485.2" y="773" width="0.4" height="15.0" fill="rgb(229,156,31)" rx="2" ry="2" />
<text  x="488.16" y="783.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (60,606,060 samples, 0.01%)</title><rect x="466.7" y="677" width="0.1" height="15.0" fill="rgb(228,97,3)" rx="2" ry="2" />
<text  x="469.69" y="687.5" ></text>
</g>
<g >
<title>rocksdb::Cleanable::DoCleanup (242,424,240 samples, 0.04%)</title><rect x="831.9" y="261" width="0.4" height="15.0" fill="rgb(246,30,18)" rx="2" ry="2" />
<text  x="834.89" y="271.5" ></text>
</g>
<g >
<title>rocksdb::ForceReleaseCachedEntry (242,424,240 samples, 0.04%)</title><rect x="869.2" y="277" width="0.4" height="15.0" fill="rgb(223,143,36)" rx="2" ry="2" />
<text  x="872.16" y="287.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (262,626,260 samples, 0.04%)</title><rect x="607.9" y="357" width="0.4" height="15.0" fill="rgb(214,81,15)" rx="2" ry="2" />
<text  x="610.85" y="367.5" ></text>
</g>
<g >
<title>rocksdb::Block_kData::Block (121,212,120 samples, 0.02%)</title><rect x="826.1" y="245" width="0.2" height="15.0" fill="rgb(240,27,43)" rx="2" ry="2" />
<text  x="829.09" y="255.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (60,606,060 samples, 0.01%)</title><rect x="937.6" y="453" width="0.2" height="15.0" fill="rgb(241,0,11)" rx="2" ry="2" />
<text  x="940.65" y="463.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt;@plt (70,707,070 samples, 0.01%)</title><rect x="653.3" y="341" width="0.1" height="15.0" fill="rgb(248,4,43)" rx="2" ry="2" />
<text  x="656.27" y="351.5" ></text>
</g>
<g >
<title>XXH3_hashLong_internal_loop (151,515,150 samples, 0.02%)</title><rect x="826.6" y="133" width="0.2" height="15.0" fill="rgb(238,180,18)" rx="2" ry="2" />
<text  x="829.55" y="143.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (696,969,690 samples, 0.11%)</title><rect x="151.5" y="709" width="1.3" height="15.0" fill="rgb(244,110,53)" rx="2" ry="2" />
<text  x="154.54" y="719.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="897.5" y="261" width="0.3" height="15.0" fill="rgb(208,73,3)" rx="2" ry="2" />
<text  x="900.47" y="271.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (70,707,070 samples, 0.01%)</title><rect x="573.4" y="85" width="0.2" height="15.0" fill="rgb(231,21,43)" rx="2" ry="2" />
<text  x="576.44" y="95.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::get (80,808,080 samples, 0.01%)</title><rect x="32.2" y="645" width="0.1" height="15.0" fill="rgb(205,64,22)" rx="2" ry="2" />
<text  x="35.16" y="655.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::NextFromInput@plt (151,515,150 samples, 0.02%)</title><rect x="1003.5" y="501" width="0.3" height="15.0" fill="rgb(221,191,21)" rx="2" ry="2" />
<text  x="1006.53" y="511.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::AddWithLastKeyImpl (191,919,190 samples, 0.03%)</title><rect x="588.8" y="437" width="0.3" height="15.0" fill="rgb(215,196,36)" rx="2" ry="2" />
<text  x="591.79" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (60,606,060 samples, 0.01%)</title><rect x="142.8" y="613" width="0.1" height="15.0" fill="rgb(236,62,36)" rx="2" ry="2" />
<text  x="145.79" y="623.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::RealCompaction::SupportsPerKeyPlacement (373,737,370 samples, 0.06%)</title><rect x="988.7" y="485" width="0.7" height="15.0" fill="rgb(231,205,10)" rx="2" ry="2" />
<text  x="991.72" y="495.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (727,272,720 samples, 0.11%)</title><rect x="49.3" y="725" width="1.3" height="15.0" fill="rgb(233,18,3)" rx="2" ry="2" />
<text  x="52.28" y="735.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (282,828,280 samples, 0.04%)</title><rect x="606.8" y="405" width="0.5" height="15.0" fill="rgb(254,42,25)" rx="2" ry="2" />
<text  x="609.81" y="415.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned long, rocksdb::RangeDelAggregator::StripeRep, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::lower_bound (2,333,333,310 samples, 0.37%)</title><rect x="656.8" y="389" width="4.3" height="15.0" fill="rgb(230,198,21)" rx="2" ry="2" />
<text  x="659.80" y="399.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::FilterBlockBuilder*, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt; (343,434,340 samples, 0.05%)</title><rect x="1072.8" y="373" width="0.6" height="15.0" fill="rgb(213,103,36)" rx="2" ry="2" />
<text  x="1075.79" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::FilterBlockBuilder*, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="615.9" y="341" width="0.2" height="15.0" fill="rgb(230,197,17)" rx="2" ry="2" />
<text  x="618.95" y="351.5" ></text>
</g>
<g >
<title>rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper (224,373,735,130 samples, 35.11%)</title><rect x="765.1" y="741" width="414.3" height="15.0" fill="rgb(211,210,31)" rx="2" ry="2" />
<text  x="768.11" y="751.5" >rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="842.8" y="245" width="0.2" height="15.0" fill="rgb(215,166,12)" rx="2" ry="2" />
<text  x="845.78" y="255.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::SyncClosedLogs (131,313,130 samples, 0.02%)</title><rect x="562.0" y="501" width="0.3" height="15.0" fill="rgb(243,44,22)" rx="2" ry="2" />
<text  x="565.04" y="511.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::front (858,585,850 samples, 0.13%)</title><rect x="819.5" y="405" width="1.6" height="15.0" fill="rgb(245,60,41)" rx="2" ry="2" />
<text  x="822.50" y="415.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::MemTableInserter::MemTableInserter (141,414,140 samples, 0.02%)</title><rect x="53.1" y="709" width="0.2" height="15.0" fill="rgb(251,112,45)" rx="2" ry="2" />
<text  x="56.05" y="719.5" ></text>
</g>
<g >
<title>rocksdb::Slice::difference_offset (838,383,830 samples, 0.13%)</title><rect x="1040.0" y="421" width="1.5" height="15.0" fill="rgb(215,77,54)" rx="2" ry="2" />
<text  x="1042.98" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (383,838,380 samples, 0.06%)</title><rect x="49.7" y="661" width="0.7" height="15.0" fill="rgb(235,218,17)" rx="2" ry="2" />
<text  x="52.69" y="671.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Next (7,222,222,150 samples, 1.13%)</title><rect x="825.0" y="373" width="13.3" height="15.0" fill="rgb(254,193,12)" rx="2" ry="2" />
<text  x="828.01" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (111,111,110 samples, 0.02%)</title><rect x="955.3" y="373" width="0.2" height="15.0" fill="rgb(249,41,32)" rx="2" ry="2" />
<text  x="958.26" y="383.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (232,323,230 samples, 0.04%)</title><rect x="984.9" y="437" width="0.4" height="15.0" fill="rgb(248,99,51)" rx="2" ry="2" />
<text  x="987.86" y="447.5" ></text>
</g>
<g >
<title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Release (222,222,220 samples, 0.03%)</title><rect x="869.2" y="245" width="0.4" height="15.0" fill="rgb(222,224,34)" rx="2" ry="2" />
<text  x="872.19" y="255.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (262,626,260 samples, 0.04%)</title><rect x="612.2" y="437" width="0.5" height="15.0" fill="rgb(252,180,49)" rx="2" ry="2" />
<text  x="615.20" y="447.5" ></text>
</g>
<g >
<title>rocksdb::VarintLength (242,424,240 samples, 0.04%)</title><rect x="596.1" y="389" width="0.4" height="15.0" fill="rgb(226,68,42)" rx="2" ry="2" />
<text  x="599.10" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::SuperVersionContext::WriteStallNotification, std::allocator&lt;rocksdb::SuperVersionContext::WriteStallNotification&gt; &gt;::vector (70,707,070 samples, 0.01%)</title><rect x="28.1" y="677" width="0.1" height="15.0" fill="rgb(210,187,21)" rx="2" ry="2" />
<text  x="31.11" y="687.5" ></text>
</g>
<g >
<title>std::optional&lt;rocksdb::Slice&gt;::has_value (202,020,200 samples, 0.03%)</title><rect x="1168.4" y="501" width="0.4" height="15.0" fill="rgb(227,224,41)" rx="2" ry="2" />
<text  x="1171.40" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (131,313,130 samples, 0.02%)</title><rect x="852.8" y="325" width="0.2" height="15.0" fill="rgb(249,178,37)" rx="2" ry="2" />
<text  x="855.80" y="335.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="846.9" y="245" width="0.1" height="15.0" fill="rgb(206,183,12)" rx="2" ry="2" />
<text  x="849.89" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SstPartitioner, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::operator bool (646,464,640 samples, 0.10%)</title><rect x="1155.3" y="469" width="1.2" height="15.0" fill="rgb(247,221,20)" rx="2" ry="2" />
<text  x="1158.27" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (212,121,210 samples, 0.03%)</title><rect x="1088.6" y="389" width="0.4" height="15.0" fill="rgb(208,12,50)" rx="2" ry="2" />
<text  x="1091.60" y="399.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (575,757,570 samples, 0.09%)</title><rect x="643.2" y="405" width="1.0" height="15.0" fill="rgb(250,7,24)" rx="2" ry="2" />
<text  x="646.18" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (191,919,190 samples, 0.03%)</title><rect x="1110.6" y="357" width="0.4" height="15.0" fill="rgb(237,132,44)" rx="2" ry="2" />
<text  x="1113.61" y="367.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;@plt (262,626,260 samples, 0.04%)</title><rect x="451.0" y="709" width="0.5" height="15.0" fill="rgb(242,1,15)" rx="2" ry="2" />
<text  x="453.98" y="719.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::empty (101,010,100 samples, 0.02%)</title><rect x="590.1" y="437" width="0.2" height="15.0" fill="rgb(217,111,17)" rx="2" ry="2" />
<text  x="593.10" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (595,959,590 samples, 0.09%)</title><rect x="940.9" y="389" width="1.1" height="15.0" fill="rgb(250,27,0)" rx="2" ry="2" />
<text  x="943.91" y="399.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (454,545,450 samples, 0.07%)</title><rect x="929.4" y="453" width="0.8" height="15.0" fill="rgb(239,128,43)" rx="2" ry="2" />
<text  x="932.37" y="463.5" ></text>
</g>
<g >
<title>ext4_sync_file (131,313,130 samples, 0.02%)</title><rect x="562.0" y="389" width="0.3" height="15.0" fill="rgb(240,116,9)" rx="2" ry="2" />
<text  x="565.04" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="1035.8" y="357" width="0.1" height="15.0" fill="rgb(228,171,52)" rx="2" ry="2" />
<text  x="1038.84" y="367.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::FilterBlockBuilder*, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt; (191,919,190 samples, 0.03%)</title><rect x="615.7" y="357" width="0.4" height="15.0" fill="rgb(240,59,31)" rx="2" ry="2" />
<text  x="618.71" y="367.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::status (2,141,414,120 samples, 0.34%)</title><rect x="886.3" y="405" width="4.0" height="15.0" fill="rgb(229,220,24)" rx="2" ry="2" />
<text  x="889.34" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (80,808,080 samples, 0.01%)</title><rect x="1122.0" y="341" width="0.1" height="15.0" fill="rgb(245,194,15)" rx="2" ry="2" />
<text  x="1124.99" y="351.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (60,606,060 samples, 0.01%)</title><rect x="970.6" y="453" width="0.1" height="15.0" fill="rgb(240,160,48)" rx="2" ry="2" />
<text  x="973.61" y="463.5" ></text>
</g>
<g >
<title>[[vdso]] (7,696,969,620 samples, 1.20%)</title><rect x="188.4" y="693" width="14.2" height="15.0" fill="rgb(212,24,40)" rx="2" ry="2" />
<text  x="191.37" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::operator bool (60,606,060 samples, 0.01%)</title><rect x="32.3" y="661" width="0.1" height="15.0" fill="rgb(222,70,31)" rx="2" ry="2" />
<text  x="35.31" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (70,707,070 samples, 0.01%)</title><rect x="899.1" y="325" width="0.2" height="15.0" fill="rgb(246,57,22)" rx="2" ry="2" />
<text  x="902.13" y="335.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (70,707,070 samples, 0.01%)</title><rect x="10.5" y="821" width="0.2" height="15.0" fill="rgb(227,142,22)" rx="2" ry="2" />
<text  x="13.52" y="831.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (696,969,690 samples, 0.11%)</title><rect x="856.5" y="309" width="1.2" height="15.0" fill="rgb(211,153,33)" rx="2" ry="2" />
<text  x="859.45" y="319.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::BlobGarbageMeter*, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt; (262,626,260 samples, 0.04%)</title><rect x="1153.8" y="405" width="0.5" height="15.0" fill="rgb(245,49,48)" rx="2" ry="2" />
<text  x="1156.80" y="415.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower (555,555,550 samples, 0.09%)</title><rect x="185.6" y="725" width="1.1" height="15.0" fill="rgb(225,212,0)" rx="2" ry="2" />
<text  x="188.63" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_insert_unique_pos (60,606,060 samples, 0.01%)</title><rect x="64.8" y="597" width="0.1" height="15.0" fill="rgb(210,65,10)" rx="2" ry="2" />
<text  x="67.78" y="607.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::PreprocessWrite (909,090,900 samples, 0.14%)</title><rect x="26.2" y="725" width="1.7" height="15.0" fill="rgb(223,187,27)" rx="2" ry="2" />
<text  x="29.17" y="735.5" ></text>
</g>
<g >
<title>rocksdb::Status::IsTryAgain (60,606,060 samples, 0.01%)</title><rect x="58.2" y="693" width="0.1" height="15.0" fill="rgb(237,197,14)" rx="2" ry="2" />
<text  x="61.22" y="703.5" ></text>
</g>
<g >
<title>rocksdb::log::Writer::AddRecord (6,939,393,870 samples, 1.09%)</title><rect x="33.1" y="693" width="12.8" height="15.0" fill="rgb(226,138,14)" rx="2" ry="2" />
<text  x="36.13" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_S_key (60,606,060 samples, 0.01%)</title><rect x="63.9" y="581" width="0.1" height="15.0" fill="rgb(243,108,52)" rx="2" ry="2" />
<text  x="66.85" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (80,808,080 samples, 0.01%)</title><rect x="1120.4" y="453" width="0.1" height="15.0" fill="rgb(221,107,16)" rx="2" ry="2" />
<text  x="1123.39" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (424,242,420 samples, 0.07%)</title><rect x="148.4" y="661" width="0.8" height="15.0" fill="rgb(211,139,24)" rx="2" ry="2" />
<text  x="151.42" y="671.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (393,939,390 samples, 0.06%)</title><rect x="718.8" y="389" width="0.8" height="15.0" fill="rgb(247,35,32)" rx="2" ry="2" />
<text  x="721.84" y="399.5" ></text>
</g>
<g >
<title>remote_flush_te (298,868,683,880 samples, 46.77%)</title><rect x="10.0" y="853" width="551.9" height="15.0" fill="rgb(233,91,44)" rx="2" ry="2" />
<text  x="13.00" y="863.5" >remote_flush_te</text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (171,717,170 samples, 0.03%)</title><rect x="1165.6" y="485" width="0.3" height="15.0" fill="rgb(211,23,31)" rx="2" ry="2" />
<text  x="1168.62" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (141,414,140 samples, 0.02%)</title><rect x="846.8" y="277" width="0.2" height="15.0" fill="rgb(214,225,50)" rx="2" ry="2" />
<text  x="849.77" y="287.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (434,343,430 samples, 0.07%)</title><rect x="142.1" y="645" width="0.8" height="15.0" fill="rgb(236,56,23)" rx="2" ry="2" />
<text  x="145.10" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (171,717,170 samples, 0.03%)</title><rect x="1033.6" y="309" width="0.3" height="15.0" fill="rgb(216,87,12)" rx="2" ry="2" />
<text  x="1036.62" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_write (1,585,858,570 samples, 0.25%)</title><rect x="35.8" y="581" width="2.9" height="15.0" fill="rgb(242,219,48)" rx="2" ry="2" />
<text  x="38.80" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (70,707,070 samples, 0.01%)</title><rect x="649.1" y="405" width="0.2" height="15.0" fill="rgb(236,6,50)" rx="2" ry="2" />
<text  x="652.13" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (242,424,240 samples, 0.04%)</title><rect x="580.1" y="373" width="0.5" height="15.0" fill="rgb(209,214,38)" rx="2" ry="2" />
<text  x="583.13" y="383.5" ></text>
</g>
<g >
<title>rocksdb::CompactionRangeDelAggregator::ShouldDelete (3,313,131,280 samples, 0.52%)</title><rect x="944.3" y="453" width="6.1" height="15.0" fill="rgb(228,112,23)" rx="2" ry="2" />
<text  x="947.27" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (121,212,120 samples, 0.02%)</title><rect x="147.7" y="661" width="0.3" height="15.0" fill="rgb(219,187,44)" rx="2" ry="2" />
<text  x="150.73" y="671.5" ></text>
</g>
<g >
<title>generic_write_end (757,575,750 samples, 0.12%)</title><rect x="37.2" y="453" width="1.4" height="15.0" fill="rgb(212,196,33)" rx="2" ry="2" />
<text  x="40.18" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_ptr (343,434,340 samples, 0.05%)</title><rect x="849.9" y="341" width="0.7" height="15.0" fill="rgb(231,2,18)" rx="2" ry="2" />
<text  x="852.94" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char [], rocksdb::CustomDeleter&gt;::unique_ptr&lt;rocksdb::CustomDeleter, void&gt; (60,606,060 samples, 0.01%)</title><rect x="861.8" y="277" width="0.1" height="15.0" fill="rgb(242,91,16)" rx="2" ry="2" />
<text  x="864.79" y="287.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::CompactionHeapItemComparator::operator (7,616,161,540 samples, 1.19%)</title><rect x="779.5" y="405" width="14.1" height="15.0" fill="rgb(252,78,51)" rx="2" ry="2" />
<text  x="782.51" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (161,616,160 samples, 0.03%)</title><rect x="185.8" y="693" width="0.3" height="15.0" fill="rgb(206,55,18)" rx="2" ry="2" />
<text  x="188.84" y="703.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (60,606,060 samples, 0.01%)</title><rect x="1128.5" y="373" width="0.1" height="15.0" fill="rgb(221,150,43)" rx="2" ry="2" />
<text  x="1131.50" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (282,828,280 samples, 0.04%)</title><rect x="1062.8" y="437" width="0.5" height="15.0" fill="rgb(230,93,22)" rx="2" ry="2" />
<text  x="1065.79" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt; &gt;::allocate (80,808,080 samples, 0.01%)</title><rect x="63.1" y="549" width="0.1" height="15.0" fill="rgb(239,19,27)" rx="2" ry="2" />
<text  x="66.09" y="559.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Add (30,575,757,270 samples, 4.78%)</title><rect x="565.9" y="453" width="56.5" height="15.0" fill="rgb(220,99,9)" rx="2" ry="2" />
<text  x="568.90" y="463.5" >rocks..</text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Flush (3,404,040,370 samples, 0.53%)</title><rect x="569.1" y="437" width="6.3" height="15.0" fill="rgb(247,70,0)" rx="2" ry="2" />
<text  x="572.11" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (60,606,060 samples, 0.01%)</title><rect x="842.2" y="261" width="0.1" height="15.0" fill="rgb(253,211,19)" rx="2" ry="2" />
<text  x="845.20" y="271.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="693.2" y="357" width="0.2" height="15.0" fill="rgb(243,188,36)" rx="2" ry="2" />
<text  x="696.19" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::begin (212,121,210 samples, 0.03%)</title><rect x="1105.7" y="437" width="0.4" height="15.0" fill="rgb(236,210,11)" rx="2" ry="2" />
<text  x="1108.69" y="447.5" ></text>
</g>
<g >
<title>rocksdb::ParsedInternalKey::ParsedInternalKey (222,222,220 samples, 0.03%)</title><rect x="663.6" y="405" width="0.5" height="15.0" fill="rgb(218,153,15)" rx="2" ry="2" />
<text  x="666.64" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (212,121,210 samples, 0.03%)</title><rect x="856.8" y="293" width="0.4" height="15.0" fill="rgb(213,63,27)" rx="2" ry="2" />
<text  x="859.83" y="303.5" ></text>
</g>
<g >
<title>rocksdb::FileMetaData::UpdateBoundaries (282,828,280 samples, 0.04%)</title><rect x="752.2" y="469" width="0.5" height="15.0" fill="rgb(242,184,50)" rx="2" ry="2" />
<text  x="755.17" y="479.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count (191,919,190 samples, 0.03%)</title><rect x="167.8" y="613" width="0.4" height="15.0" fill="rgb(237,91,23)" rx="2" ry="2" />
<text  x="170.82" y="623.5" ></text>
</g>
<g >
<title>try_to_release_page (80,808,080 samples, 0.01%)</title><rect x="754.6" y="261" width="0.1" height="15.0" fill="rgb(234,76,34)" rx="2" ry="2" />
<text  x="757.56" y="271.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatch::GetProtectionBytesPerKey (70,707,070 samples, 0.01%)</title><rect x="458.0" y="709" width="0.1" height="15.0" fill="rgb(244,127,14)" rx="2" ry="2" />
<text  x="460.96" y="719.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (434,343,430 samples, 0.07%)</title><rect x="22.0" y="805" width="0.8" height="15.0" fill="rgb(227,221,24)" rx="2" ry="2" />
<text  x="25.01" y="815.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::WriteThread::Writer*&gt;::compare_exchange_weak (343,434,340 samples, 0.05%)</title><rect x="443.7" y="677" width="0.6" height="15.0" fill="rgb(212,43,37)" rx="2" ry="2" />
<text  x="446.69" y="687.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Next (90,909,090 samples, 0.01%)</title><rect x="859.7" y="421" width="0.2" height="15.0" fill="rgb(237,162,2)" rx="2" ry="2" />
<text  x="862.70" y="431.5" ></text>
</g>
<g >
<title>std::move&lt;rocksdb::Status::Code&amp;&gt; (232,323,230 samples, 0.04%)</title><rect x="1147.3" y="469" width="0.5" height="15.0" fill="rgb(218,64,38)" rx="2" ry="2" />
<text  x="1150.34" y="479.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (191,919,190 samples, 0.03%)</title><rect x="268.0" y="629" width="0.4" height="15.0" fill="rgb(206,170,47)" rx="2" ry="2" />
<text  x="271.04" y="639.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (181,818,180 samples, 0.03%)</title><rect x="44.7" y="357" width="0.3" height="15.0" fill="rgb(251,40,8)" rx="2" ry="2" />
<text  x="47.71" y="367.5" ></text>
</g>
<g >
<title>rocksdb::UserComparatorWrapper::Compare (1,252,525,240 samples, 0.20%)</title><rect x="1054.9" y="437" width="2.3" height="15.0" fill="rgb(238,115,46)" rx="2" ry="2" />
<text  x="1057.86" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (373,737,370 samples, 0.06%)</title><rect x="1012.5" y="501" width="0.7" height="15.0" fill="rgb(209,31,35)" rx="2" ry="2" />
<text  x="1015.48" y="511.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (282,828,280 samples, 0.04%)</title><rect x="901.7" y="293" width="0.5" height="15.0" fill="rgb(224,71,7)" rx="2" ry="2" />
<text  x="904.69" y="303.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::SetValid (60,606,060 samples, 0.01%)</title><rect x="932.5" y="469" width="0.1" height="15.0" fill="rgb(222,149,35)" rx="2" ry="2" />
<text  x="935.48" y="479.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*&gt;::compare_exchange_strong (1,636,363,620 samples, 0.26%)</title><rect x="73.6" y="565" width="3.1" height="15.0" fill="rgb(253,117,49)" rx="2" ry="2" />
<text  x="76.64" y="575.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (565,656,560 samples, 0.09%)</title><rect x="148.2" y="677" width="1.0" height="15.0" fill="rgb(251,191,21)" rx="2" ry="2" />
<text  x="151.16" y="687.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::PrepareOutput (6,656,565,590 samples, 1.04%)</title><rect x="976.4" y="485" width="12.3" height="15.0" fill="rgb(253,212,22)" rx="2" ry="2" />
<text  x="979.43" y="495.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey (555,555,550 samples, 0.09%)</title><rect x="597.5" y="421" width="1.1" height="15.0" fill="rgb(230,129,15)" rx="2" ry="2" />
<text  x="600.54" y="431.5" ></text>
</g>
<g >
<title>rocksdb::lru_cache::LRUCacheShard::Insert (464,646,460 samples, 0.07%)</title><rect x="867.4" y="293" width="0.9" height="15.0" fill="rgb(250,85,41)" rx="2" ry="2" />
<text  x="870.44" y="303.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (797,979,790 samples, 0.12%)</title><rect x="290.7" y="693" width="1.5" height="15.0" fill="rgb(213,114,20)" rx="2" ry="2" />
<text  x="293.72" y="703.5" ></text>
</g>
<g >
<title>rocksdb::CompactionJob::ProcessKeyValueCompaction (221,202,017,990 samples, 34.62%)</title><rect x="766.7" y="517" width="408.5" height="15.0" fill="rgb(205,118,37)" rx="2" ry="2" />
<text  x="769.74" y="527.5" >rocksdb::CompactionJob::ProcessKeyValueCompaction</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::_M_head (181,818,180 samples, 0.03%)</title><rect x="1158.1" y="389" width="0.3" height="15.0" fill="rgb(208,72,16)" rx="2" ry="2" />
<text  x="1161.09" y="399.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::InitDataBlock (3,454,545,420 samples, 0.54%)</title><rect x="825.5" y="325" width="6.3" height="15.0" fill="rgb(239,173,28)" rx="2" ry="2" />
<text  x="828.45" y="335.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;long&gt;::operator (4,181,818,140 samples, 0.65%)</title><rect x="543.6" y="805" width="7.7" height="15.0" fill="rgb(207,57,15)" rx="2" ry="2" />
<text  x="546.58" y="815.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::get (868,686,860 samples, 0.14%)</title><rect x="974.1" y="437" width="1.6" height="15.0" fill="rgb(233,57,7)" rx="2" ry="2" />
<text  x="977.06" y="447.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::UpdateKey (545,454,540 samples, 0.09%)</title><rect x="870.8" y="373" width="1.0" height="15.0" fill="rgb(243,178,26)" rx="2" ry="2" />
<text  x="873.76" y="383.5" ></text>
</g>
<g >
<title>rocksdb::BuildTable (102,222,221,200 samples, 16.00%)</title><rect x="562.3" y="469" width="188.8" height="15.0" fill="rgb(241,8,8)" rx="2" ry="2" />
<text  x="565.30" y="479.5" >rocksdb::BuildTable</text>
</g>
<g >
<title>rocksdb::ParsedInternalKey::ParsedInternalKey (60,606,060 samples, 0.01%)</title><rect x="942.2" y="469" width="0.1" height="15.0" fill="rgb(226,101,38)" rx="2" ry="2" />
<text  x="945.16" y="479.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::FlushMemTablesToOutputFiles (104,090,908,050 samples, 16.29%)</title><rect x="562.0" y="533" width="192.3" height="15.0" fill="rgb(210,29,8)" rx="2" ry="2" />
<text  x="565.04" y="543.5" >rocksdb::DBImpl::FlushMem..</text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (141,414,140 samples, 0.02%)</title><rect x="899.7" y="325" width="0.3" height="15.0" fill="rgb(234,8,20)" rx="2" ry="2" />
<text  x="902.75" y="335.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, unsigned int, false&gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="474.4" y="693" width="0.2" height="15.0" fill="rgb(229,109,52)" rx="2" ry="2" />
<text  x="477.43" y="703.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::NextEntryOffset (222,222,220 samples, 0.03%)</title><rect x="873.9" y="325" width="0.4" height="15.0" fill="rgb(240,168,48)" rx="2" ry="2" />
<text  x="876.93" y="335.5" ></text>
</g>
<g >
<title>rocksdb::EncodeFixed64 (161,616,160 samples, 0.03%)</title><rect x="982.6" y="453" width="0.3" height="15.0" fill="rgb(237,77,4)" rx="2" ry="2" />
<text  x="985.64" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (1,171,717,160 samples, 0.18%)</title><rect x="881.3" y="341" width="2.2" height="15.0" fill="rgb(244,143,13)" rx="2" ry="2" />
<text  x="884.32" y="351.5" ></text>
</g>
<g >
<title>ext4_da_write_end (191,919,190 samples, 0.03%)</title><rect x="573.3" y="149" width="0.3" height="15.0" fill="rgb(253,74,32)" rx="2" ry="2" />
<text  x="576.25" y="159.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::_M_ptr (575,757,570 samples, 0.09%)</title><rect x="609.0" y="389" width="1.0" height="15.0" fill="rgb(218,169,20)" rx="2" ry="2" />
<text  x="611.97" y="399.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned long, rocksdb::RangeDelAggregator::StripeRep, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::lower_bound (222,222,220 samples, 0.03%)</title><rect x="955.5" y="453" width="0.4" height="15.0" fill="rgb(245,113,51)" rx="2" ry="2" />
<text  x="958.54" y="463.5" ></text>
</g>
<g >
<title>rocksdb::InternalKey::size (80,808,080 samples, 0.01%)</title><rect x="1113.1" y="469" width="0.1" height="15.0" fill="rgb(246,17,43)" rx="2" ry="2" />
<text  x="1116.10" y="479.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::operator= (111,111,110 samples, 0.02%)</title><rect x="42.2" y="629" width="0.2" height="15.0" fill="rgb(244,34,27)" rx="2" ry="2" />
<text  x="45.21" y="639.5" ></text>
</g>
<g >
<title>get_page_from_freelist (70,707,070 samples, 0.01%)</title><rect x="36.8" y="373" width="0.2" height="15.0" fill="rgb(231,55,12)" rx="2" ry="2" />
<text  x="39.84" y="383.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Next (151,515,150 samples, 0.02%)</title><rect x="877.9" y="405" width="0.3" height="15.0" fill="rgb(209,13,46)" rx="2" ry="2" />
<text  x="880.89" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (666,666,660 samples, 0.10%)</title><rect x="940.8" y="421" width="1.3" height="15.0" fill="rgb(225,103,34)" rx="2" ry="2" />
<text  x="943.82" y="431.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (224,373,735,130 samples, 35.11%)</title><rect x="765.1" y="773" width="414.3" height="15.0" fill="rgb(248,23,29)" rx="2" ry="2" />
<text  x="768.11" y="783.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>rocksdb::Slice::compare (232,323,230 samples, 0.04%)</title><rect x="1119.3" y="405" width="0.4" height="15.0" fill="rgb(214,201,5)" rx="2" ry="2" />
<text  x="1122.27" y="415.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::IsDeleteRangeSentinelKey (60,606,060 samples, 0.01%)</title><rect x="705.3" y="437" width="0.1" height="15.0" fill="rgb(234,221,31)" rx="2" ry="2" />
<text  x="708.31" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (131,313,130 samples, 0.02%)</title><rect x="897.5" y="229" width="0.3" height="15.0" fill="rgb(208,66,45)" rx="2" ry="2" />
<text  x="900.55" y="239.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_ptr (60,606,060 samples, 0.01%)</title><rect x="891.5" y="389" width="0.1" height="15.0" fill="rgb(216,204,50)" rx="2" ry="2" />
<text  x="894.48" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (70,707,070 samples, 0.01%)</title><rect x="882.1" y="325" width="0.2" height="15.0" fill="rgb(237,149,34)" rx="2" ry="2" />
<text  x="885.12" y="335.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (60,606,060 samples, 0.01%)</title><rect x="802.9" y="421" width="0.1" height="15.0" fill="rgb(215,228,43)" rx="2" ry="2" />
<text  x="805.88" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Mod&lt;unsigned long, 4294967296ul, 1ul, 0ul, true, true&gt;::__calc (5,535,353,480 samples, 0.87%)</title><rect x="519.5" y="757" width="10.2" height="15.0" fill="rgb(230,5,31)" rx="2" ry="2" />
<text  x="522.50" y="767.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::get (868,686,860 samples, 0.14%)</title><rect x="1156.9" y="453" width="1.7" height="15.0" fill="rgb(206,213,51)" rx="2" ry="2" />
<text  x="1159.95" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (303,030,300 samples, 0.05%)</title><rect x="64.2" y="597" width="0.6" height="15.0" fill="rgb(221,194,5)" rx="2" ry="2" />
<text  x="67.22" y="607.5" ></text>
</g>
<g >
<title>rocksdb::ExtractInternalKeyFooter (151,515,150 samples, 0.02%)</title><rect x="590.3" y="437" width="0.3" height="15.0" fill="rgb(216,220,9)" rx="2" ry="2" />
<text  x="593.28" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (80,808,080 samples, 0.01%)</title><rect x="1070.5" y="453" width="0.2" height="15.0" fill="rgb(254,33,14)" rx="2" ry="2" />
<text  x="1073.51" y="463.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (101,010,100 samples, 0.02%)</title><rect x="722.6" y="325" width="0.2" height="15.0" fill="rgb(226,179,26)" rx="2" ry="2" />
<text  x="725.58" y="335.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (121,212,120 samples, 0.02%)</title><rect x="1144.0" y="373" width="0.2" height="15.0" fill="rgb(237,147,9)" rx="2" ry="2" />
<text  x="1146.98" y="383.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (202,020,200 samples, 0.03%)</title><rect x="864.5" y="117" width="0.4" height="15.0" fill="rgb(250,101,51)" rx="2" ry="2" />
<text  x="867.49" y="127.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::CurrentSizeEstimate (202,020,200 samples, 0.03%)</title><rect x="1051.9" y="405" width="0.4" height="15.0" fill="rgb(250,58,11)" rx="2" ry="2" />
<text  x="1054.93" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FlushBlockPolicy, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt;::get (232,323,230 samples, 0.04%)</title><rect x="616.5" y="437" width="0.4" height="15.0" fill="rgb(217,140,13)" rx="2" ry="2" />
<text  x="619.51" y="447.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid (343,434,340 samples, 0.05%)</title><rect x="980.9" y="469" width="0.7" height="15.0" fill="rgb(246,79,21)" rx="2" ry="2" />
<text  x="983.92" y="479.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (171,717,170 samples, 0.03%)</title><rect x="854.9" y="293" width="0.3" height="15.0" fill="rgb(221,218,36)" rx="2" ry="2" />
<text  x="857.87" y="303.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Valid (181,818,180 samples, 0.03%)</title><rect x="961.5" y="437" width="0.3" height="15.0" fill="rgb(231,89,43)" rx="2" ry="2" />
<text  x="964.47" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::BlobGarbageMeter, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;::_M_ptr (969,696,960 samples, 0.15%)</title><rect x="1152.5" y="437" width="1.8" height="15.0" fill="rgb(227,28,7)" rx="2" ry="2" />
<text  x="1155.49" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FSWritableFileTracingWrapper, std::default_delete&lt;rocksdb::FSWritableFileTracingWrapper&gt; &gt;::get (70,707,070 samples, 0.01%)</title><rect x="1025.5" y="341" width="0.1" height="15.0" fill="rgb(253,168,48)" rx="2" ry="2" />
<text  x="1028.50" y="351.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::GetInstance (70,707,070 samples, 0.01%)</title><rect x="630.0" y="389" width="0.1" height="15.0" fill="rgb(208,119,38)" rx="2" ry="2" />
<text  x="632.99" y="399.5" ></text>
</g>
<g >
<title>rocksdb::ParsedInternalKey::ParsedInternalKey (212,121,210 samples, 0.03%)</title><rect x="953.3" y="453" width="0.4" height="15.0" fill="rgb(249,165,1)" rx="2" ry="2" />
<text  x="956.30" y="463.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::replace_top (474,747,470 samples, 0.07%)</title><rect x="772.7" y="453" width="0.9" height="15.0" fill="rgb(223,154,39)" rx="2" ry="2" />
<text  x="775.72" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (656,565,650 samples, 0.10%)</title><rect x="1010.2" y="437" width="1.2" height="15.0" fill="rgb(246,142,17)" rx="2" ry="2" />
<text  x="1013.21" y="447.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (131,313,130 samples, 0.02%)</title><rect x="1112.1" y="453" width="0.2" height="15.0" fill="rgb(245,205,36)" rx="2" ry="2" />
<text  x="1115.05" y="463.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::FileSize (383,838,380 samples, 0.06%)</title><rect x="1080.2" y="453" width="0.7" height="15.0" fill="rgb(224,120,46)" rx="2" ry="2" />
<text  x="1083.17" y="463.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_level (121,212,120 samples, 0.02%)</title><rect x="95.4" y="501" width="0.3" height="15.0" fill="rgb(221,54,10)" rx="2" ry="2" />
<text  x="98.43" y="511.5" ></text>
</g>
<g >
<title>[unknown] (80,808,080 samples, 0.01%)</title><rect x="754.7" y="821" width="0.2" height="15.0" fill="rgb(232,23,13)" rx="2" ry="2" />
<text  x="757.74" y="831.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (393,939,390 samples, 0.06%)</title><rect x="1033.3" y="373" width="0.7" height="15.0" fill="rgb(222,20,48)" rx="2" ry="2" />
<text  x="1036.26" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="969.5" y="405" width="0.2" height="15.0" fill="rgb(240,112,37)" rx="2" ry="2" />
<text  x="972.53" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;::_Deque_iterator&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, void&gt; (151,515,150 samples, 0.02%)</title><rect x="992.6" y="469" width="0.3" height="15.0" fill="rgb(221,94,50)" rx="2" ry="2" />
<text  x="995.60" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (60,606,060 samples, 0.01%)</title><rect x="479.2" y="757" width="0.2" height="15.0" fill="rgb(248,74,31)" rx="2" ry="2" />
<text  x="482.24" y="767.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (60,606,060 samples, 0.01%)</title><rect x="573.4" y="69" width="0.2" height="15.0" fill="rgb(250,221,3)" rx="2" ry="2" />
<text  x="576.44" y="79.5" ></text>
</g>
<g >
<title>filemap_fdatawrite_wbc (181,818,180 samples, 0.03%)</title><rect x="747.3" y="325" width="0.4" height="15.0" fill="rgb(229,120,46)" rx="2" ry="2" />
<text  x="750.32" y="335.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatchInternal::GetColumnFamilyIdAndTimestampSize (1,969,696,950 samples, 0.31%)</title><rect x="465.2" y="741" width="3.6" height="15.0" fill="rgb(244,173,39)" rx="2" ry="2" />
<text  x="468.20" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::DynamicBloom, std::default_delete&lt;rocksdb::DynamicBloom&gt; &gt;::operator bool (525,252,520 samples, 0.08%)</title><rect x="140.4" y="629" width="0.9" height="15.0" fill="rgb(226,3,29)" rx="2" ry="2" />
<text  x="143.36" y="639.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::Writer::FinalStatus (838,383,830 samples, 0.13%)</title><rect x="456.0" y="725" width="1.5" height="15.0" fill="rgb(226,0,1)" rx="2" ry="2" />
<text  x="458.98" y="735.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::FileChecksumGenerator, std::default_delete&lt;rocksdb::FileChecksumGenerator&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="42.8" y="629" width="0.2" height="15.0" fill="rgb(234,120,47)" rx="2" ry="2" />
<text  x="45.75" y="639.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="850.2" y="309" width="0.2" height="15.0" fill="rgb(218,49,20)" rx="2" ry="2" />
<text  x="853.22" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (121,212,120 samples, 0.02%)</title><rect x="663.2" y="293" width="0.2" height="15.0" fill="rgb(254,185,34)" rx="2" ry="2" />
<text  x="666.21" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IndexBuilder, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt;::get (737,373,730 samples, 0.12%)</title><rect x="619.7" y="421" width="1.3" height="15.0" fill="rgb(229,207,18)" rx="2" ry="2" />
<text  x="622.66" y="431.5" ></text>
</g>
<g >
<title>std::operator| (60,606,060 samples, 0.01%)</title><rect x="444.3" y="677" width="0.2" height="15.0" fill="rgb(244,89,35)" rx="2" ry="2" />
<text  x="447.34" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (4,696,969,650 samples, 0.74%)</title><rect x="732.9" y="421" width="8.7" height="15.0" fill="rgb(227,146,4)" rx="2" ry="2" />
<text  x="735.88" y="431.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatch::Clear (181,818,180 samples, 0.03%)</title><rect x="46.6" y="709" width="0.3" height="15.0" fill="rgb(216,9,45)" rx="2" ry="2" />
<text  x="49.58" y="719.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (212,121,210 samples, 0.03%)</title><rect x="741.0" y="405" width="0.4" height="15.0" fill="rgb(207,107,31)" rx="2" ry="2" />
<text  x="743.98" y="415.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (121,212,120 samples, 0.02%)</title><rect x="880.1" y="277" width="0.3" height="15.0" fill="rgb(231,223,15)" rx="2" ry="2" />
<text  x="883.14" y="287.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (60,606,060 samples, 0.01%)</title><rect x="953.9" y="453" width="0.1" height="15.0" fill="rgb(252,186,25)" rx="2" ry="2" />
<text  x="956.93" y="463.5" ></text>
</g>
<g >
<title>rocksdb::DB::Put (247,171,714,700 samples, 38.68%)</title><rect x="23.4" y="773" width="456.4" height="15.0" fill="rgb(245,176,28)" rx="2" ry="2" />
<text  x="26.37" y="783.5" >rocksdb::DB::Put</text>
</g>
<g >
<title>std::function&lt;void  (224,373,735,130 samples, 35.11%)</title><rect x="765.1" y="709" width="414.3" height="15.0" fill="rgb(213,138,15)" rx="2" ry="2" />
<text  x="768.11" y="719.5" >std::function&lt;void </text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (212,121,210 samples, 0.03%)</title><rect x="892.2" y="341" width="0.4" height="15.0" fill="rgb(220,212,0)" rx="2" ry="2" />
<text  x="895.21" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size@plt (60,606,060 samples, 0.01%)</title><rect x="1124.8" y="453" width="0.2" height="15.0" fill="rgb(217,197,11)" rx="2" ry="2" />
<text  x="1127.85" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="883.3" y="261" width="0.1" height="15.0" fill="rgb(234,159,52)" rx="2" ry="2" />
<text  x="886.30" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (232,323,230 samples, 0.04%)</title><rect x="854.2" y="277" width="0.4" height="15.0" fill="rgb(242,4,32)" rx="2" ry="2" />
<text  x="857.16" y="287.5" ></text>
</g>
<g >
<title>rocksdb::InternalKeyComparator::Compare (232,323,230 samples, 0.04%)</title><rect x="794.0" y="405" width="0.4" height="15.0" fill="rgb(246,83,29)" rx="2" ry="2" />
<text  x="797.01" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (70,707,070 samples, 0.01%)</title><rect x="485.7" y="773" width="0.1" height="15.0" fill="rgb(230,133,37)" rx="2" ry="2" />
<text  x="488.66" y="783.5" ></text>
</g>
<g >
<title>rocksdb::SuperVersionContext::SuperVersionContext (484,848,480 samples, 0.08%)</title><rect x="27.9" y="709" width="0.9" height="15.0" fill="rgb(218,32,49)" rx="2" ry="2" />
<text  x="30.87" y="719.5" ></text>
</g>
<g >
<title>XXH3_hashLong_64b_default (222,222,220 samples, 0.03%)</title><rect x="863.1" y="197" width="0.4" height="15.0" fill="rgb(219,180,24)" rx="2" ry="2" />
<text  x="866.08" y="207.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (818,181,810 samples, 0.13%)</title><rect x="572.1" y="197" width="1.5" height="15.0" fill="rgb(210,19,9)" rx="2" ry="2" />
<text  x="575.11" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FlushBlockPolicy, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt;::get (1,111,111,100 samples, 0.17%)</title><rect x="617.3" y="421" width="2.0" height="15.0" fill="rgb(236,89,38)" rx="2" ry="2" />
<text  x="620.29" y="431.5" ></text>
</g>
<g >
<title>rocksdb::VarintLength (131,313,130 samples, 0.02%)</title><rect x="1052.6" y="405" width="0.2" height="15.0" fill="rgb(240,147,17)" rx="2" ry="2" />
<text  x="1055.61" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (101,010,100 samples, 0.02%)</title><rect x="42.2" y="597" width="0.2" height="15.0" fill="rgb(234,143,46)" rx="2" ry="2" />
<text  x="45.23" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (60,606,060 samples, 0.01%)</title><rect x="836.9" y="293" width="0.1" height="15.0" fill="rgb(252,65,26)" rx="2" ry="2" />
<text  x="839.87" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::operator bool (60,606,060 samples, 0.01%)</title><rect x="698.4" y="421" width="0.1" height="15.0" fill="rgb(221,140,26)" rx="2" ry="2" />
<text  x="701.43" y="431.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::ProcessTrailerIfPresent (343,434,340 samples, 0.05%)</title><rect x="862.9" y="277" width="0.7" height="15.0" fill="rgb(214,20,47)" rx="2" ry="2" />
<text  x="865.95" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::SavePoints, std::default_delete&lt;rocksdb::SavePoints&gt; &gt;::__uniq_ptr_impl (202,020,200 samples, 0.03%)</title><rect x="477.1" y="709" width="0.4" height="15.0" fill="rgb(250,14,33)" rx="2" ry="2" />
<text  x="480.14" y="719.5" ></text>
</g>
<g >
<title>fdatasync (131,313,130 samples, 0.02%)</title><rect x="562.0" y="453" width="0.3" height="15.0" fill="rgb(215,158,1)" rx="2" ry="2" />
<text  x="565.04" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_begin (161,616,160 samples, 0.03%)</title><rect x="659.1" y="357" width="0.3" height="15.0" fill="rgb(239,86,31)" rx="2" ry="2" />
<text  x="662.15" y="367.5" ></text>
</g>
<g >
<title>TLS init function for rocksdb::perf_context (151,515,150 samples, 0.02%)</title><rect x="788.0" y="341" width="0.3" height="15.0" fill="rgb(222,40,21)" rx="2" ry="2" />
<text  x="791.04" y="351.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (90,909,090 samples, 0.01%)</title><rect x="1093.6" y="453" width="0.2" height="15.0" fill="rgb(214,74,53)" rx="2" ry="2" />
<text  x="1096.58" y="463.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::NextAndGetResult (212,121,210 samples, 0.03%)</title><rect x="892.8" y="421" width="0.4" height="15.0" fill="rgb(248,128,34)" rx="2" ry="2" />
<text  x="895.81" y="431.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (343,434,340 samples, 0.05%)</title><rect x="800.0" y="405" width="0.6" height="15.0" fill="rgb(246,193,5)" rx="2" ry="2" />
<text  x="803.01" y="415.5" ></text>
</g>
<g >
<title>__tls_get_addr (393,939,390 samples, 0.06%)</title><rect x="717.8" y="389" width="0.7" height="15.0" fill="rgb(240,189,50)" rx="2" ry="2" />
<text  x="720.79" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (121,212,120 samples, 0.02%)</title><rect x="467.0" y="613" width="0.3" height="15.0" fill="rgb(213,177,10)" rx="2" ry="2" />
<text  x="470.04" y="623.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (696,969,690 samples, 0.11%)</title><rect x="798.0" y="405" width="1.3" height="15.0" fill="rgb(213,220,20)" rx="2" ry="2" />
<text  x="801.03" y="415.5" ></text>
</g>
<g >
<title>rocksdb::PutLengthPrefixedSlice (191,919,190 samples, 0.03%)</title><rect x="470.2" y="725" width="0.4" height="15.0" fill="rgb(227,101,9)" rx="2" ry="2" />
<text  x="473.20" y="735.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::empty (232,323,230 samples, 0.04%)</title><rect x="775.6" y="437" width="0.5" height="15.0" fill="rgb(244,119,33)" rx="2" ry="2" />
<text  x="778.63" y="447.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (131,313,130 samples, 0.02%)</title><rect x="747.3" y="277" width="0.3" height="15.0" fill="rgb(233,149,2)" rx="2" ry="2" />
<text  x="750.32" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (222,222,220 samples, 0.03%)</title><rect x="748.4" y="453" width="0.4" height="15.0" fill="rgb(230,45,34)" rx="2" ry="2" />
<text  x="751.40" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (70,707,070 samples, 0.01%)</title><rect x="139.5" y="581" width="0.1" height="15.0" fill="rgb(209,213,39)" rx="2" ry="2" />
<text  x="142.50" y="591.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (202,020,200 samples, 0.03%)</title><rect x="848.0" y="293" width="0.4" height="15.0" fill="rgb(206,97,10)" rx="2" ry="2" />
<text  x="851.04" y="303.5" ></text>
</g>
<g >
<title>rocksdb::MergeOutputIterator::Valid (2,040,404,020 samples, 0.32%)</title><rect x="992.2" y="485" width="3.8" height="15.0" fill="rgb(234,59,9)" rx="2" ry="2" />
<text  x="995.21" y="495.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (141,414,140 samples, 0.02%)</title><rect x="1041.5" y="421" width="0.3" height="15.0" fill="rgb(231,90,3)" rx="2" ry="2" />
<text  x="1044.53" y="431.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (555,555,550 samples, 0.09%)</title><rect x="280.9" y="661" width="1.1" height="15.0" fill="rgb(206,167,39)" rx="2" ry="2" />
<text  x="283.93" y="671.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::end (131,313,130 samples, 0.02%)</title><rect x="944.6" y="437" width="0.2" height="15.0" fill="rgb(235,33,14)" rx="2" ry="2" />
<text  x="947.61" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (828,282,820 samples, 0.13%)</title><rect x="572.1" y="277" width="1.5" height="15.0" fill="rgb(239,204,13)" rx="2" ry="2" />
<text  x="575.11" y="287.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (404,040,400 samples, 0.06%)</title><rect x="1083.7" y="453" width="0.8" height="15.0" fill="rgb(233,118,25)" rx="2" ry="2" />
<text  x="1086.74" y="463.5" ></text>
</g>
<g >
<title>rocksdb::IndexValue::EncodeTo (90,909,090 samples, 0.01%)</title><rect x="1068.1" y="437" width="0.2" height="15.0" fill="rgb(216,62,31)" rx="2" ry="2" />
<text  x="1071.09" y="447.5" ></text>
</g>
<g >
<title>rocksdb::VerifyBlockChecksum (191,919,190 samples, 0.03%)</title><rect x="826.5" y="229" width="0.4" height="15.0" fill="rgb(234,151,8)" rx="2" ry="2" />
<text  x="829.54" y="239.5" ></text>
</g>
<g >
<title>filemap_read (242,424,240 samples, 0.04%)</title><rect x="864.5" y="133" width="0.4" height="15.0" fill="rgb(248,109,10)" rx="2" ry="2" />
<text  x="867.49" y="143.5" ></text>
</g>
<g >
<title>rocksdb::CompactionRangeDelAggregator::ShouldDelete (70,707,070 samples, 0.01%)</title><rect x="932.8" y="469" width="0.2" height="15.0" fill="rgb(220,3,46)" rx="2" ry="2" />
<text  x="935.84" y="479.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="148.9" y="565" width="0.2" height="15.0" fill="rgb(213,201,30)" rx="2" ry="2" />
<text  x="151.94" y="575.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (141,414,140 samples, 0.02%)</title><rect x="1162.0" y="485" width="0.3" height="15.0" fill="rgb(245,80,38)" rx="2" ry="2" />
<text  x="1165.04" y="495.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (70,707,070 samples, 0.01%)</title><rect x="1116.3" y="421" width="0.2" height="15.0" fill="rgb(208,17,0)" rx="2" ry="2" />
<text  x="1119.32" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (959,595,950 samples, 0.15%)</title><rect x="908.7" y="341" width="1.8" height="15.0" fill="rgb(241,180,18)" rx="2" ry="2" />
<text  x="911.72" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (121,212,120 samples, 0.02%)</title><rect x="469.8" y="645" width="0.2" height="15.0" fill="rgb(217,123,47)" rx="2" ry="2" />
<text  x="472.80" y="655.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Valid (646,464,640 samples, 0.10%)</title><rect x="959.4" y="453" width="1.2" height="15.0" fill="rgb(248,125,20)" rx="2" ry="2" />
<text  x="962.44" y="463.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="1142.0" y="421" width="0.2" height="15.0" fill="rgb(217,203,11)" rx="2" ry="2" />
<text  x="1145.01" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (121,212,120 samples, 0.02%)</title><rect x="855.0" y="277" width="0.2" height="15.0" fill="rgb(217,132,0)" rx="2" ry="2" />
<text  x="857.96" y="287.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::NextAndGetResult (171,717,170 samples, 0.03%)</title><rect x="807.6" y="437" width="0.3" height="15.0" fill="rgb(243,26,38)" rx="2" ry="2" />
<text  x="810.57" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (202,020,200 samples, 0.03%)</title><rect x="469.8" y="661" width="0.4" height="15.0" fill="rgb(240,42,34)" rx="2" ry="2" />
<text  x="472.79" y="671.5" ></text>
</g>
<g >
<title>XXH3_hashLong_64b_default (464,646,460 samples, 0.07%)</title><rect x="1023.8" y="341" width="0.9" height="15.0" fill="rgb(214,70,10)" rx="2" ry="2" />
<text  x="1026.84" y="351.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (474,747,470 samples, 0.07%)</title><rect x="1127.1" y="469" width="0.9" height="15.0" fill="rgb(232,112,39)" rx="2" ry="2" />
<text  x="1130.08" y="479.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (70,707,070 samples, 0.01%)</title><rect x="10.5" y="789" width="0.2" height="15.0" fill="rgb(222,64,6)" rx="2" ry="2" />
<text  x="13.52" y="799.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::KeyCommitted (80,808,080 samples, 0.01%)</title><rect x="644.5" y="421" width="0.2" height="15.0" fill="rgb(242,100,52)" rx="2" ry="2" />
<text  x="647.54" y="431.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::IndexBuilder*, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt; (313,131,310 samples, 0.05%)</title><rect x="1078.1" y="389" width="0.6" height="15.0" fill="rgb(244,178,14)" rx="2" ry="2" />
<text  x="1081.08" y="399.5" ></text>
</g>
<g >
<title>rocksdb::MemTableIterator::key (6,656,565,590 samples, 1.04%)</title><rect x="670.1" y="405" width="12.3" height="15.0" fill="rgb(251,136,43)" rx="2" ry="2" />
<text  x="673.12" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (858,585,850 samples, 0.13%)</title><rect x="896.8" y="341" width="1.6" height="15.0" fill="rgb(209,190,40)" rx="2" ry="2" />
<text  x="899.78" y="351.5" ></text>
</g>
<g >
<title>std::operator== (161,616,160 samples, 0.03%)</title><rect x="701.9" y="405" width="0.3" height="15.0" fill="rgb(247,21,46)" rx="2" ry="2" />
<text  x="704.88" y="415.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (3,393,939,360 samples, 0.53%)</title><rect x="284.3" y="645" width="6.3" height="15.0" fill="rgb(221,187,29)" rx="2" ry="2" />
<text  x="287.30" y="655.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="847.2" y="245" width="0.1" height="15.0" fill="rgb(221,13,45)" rx="2" ry="2" />
<text  x="850.17" y="255.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, false&gt;::_M_head (101,010,100 samples, 0.02%)</title><rect x="988.5" y="373" width="0.2" height="15.0" fill="rgb(246,107,10)" rx="2" ry="2" />
<text  x="991.53" y="383.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::NextEntryOffset (141,414,140 samples, 0.02%)</title><rect x="834.4" y="309" width="0.3" height="15.0" fill="rgb(211,38,50)" rx="2" ry="2" />
<text  x="837.41" y="319.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (1,010,101,000 samples, 0.16%)</title><rect x="789.7" y="341" width="1.8" height="15.0" fill="rgb(249,61,7)" rx="2" ry="2" />
<text  x="792.66" y="351.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;, rocksdb::CompactionMergingIterator::HeapItem*&gt;::iterator_impl (131,313,130 samples, 0.02%)</title><rect x="804.3" y="405" width="0.3" height="15.0" fill="rgb(229,99,37)" rx="2" ry="2" />
<text  x="807.32" y="415.5" ></text>
</g>
<g >
<title>rocksdb::SpinMutex::try_lock (161,616,160 samples, 0.03%)</title><rect x="69.0" y="549" width="0.3" height="15.0" fill="rgb(233,39,7)" rx="2" ry="2" />
<text  x="72.00" y="559.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt; const, rocksdb::CompactionMergingIterator::HeapItem* const&gt;::operator* (464,646,460 samples, 0.07%)</title><rect x="820.1" y="389" width="0.9" height="15.0" fill="rgb(212,132,17)" rx="2" ry="2" />
<text  x="823.12" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (353,535,350 samples, 0.06%)</title><rect x="941.2" y="357" width="0.6" height="15.0" fill="rgb(233,170,42)" rx="2" ry="2" />
<text  x="944.19" y="367.5" ></text>
</g>
<g >
<title>TLS init function for rocksdb::perf_context (60,606,060 samples, 0.01%)</title><rect x="624.8" y="373" width="0.1" height="15.0" fill="rgb(226,63,28)" rx="2" ry="2" />
<text  x="627.77" y="383.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::WriteBlock (3,222,222,190 samples, 0.50%)</title><rect x="569.1" y="405" width="6.0" height="15.0" fill="rgb(239,122,48)" rx="2" ry="2" />
<text  x="572.11" y="415.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (212,121,210 samples, 0.03%)</title><rect x="1044.5" y="437" width="0.3" height="15.0" fill="rgb(219,78,19)" rx="2" ry="2" />
<text  x="1047.45" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="850.4" y="309" width="0.2" height="15.0" fill="rgb(232,44,39)" rx="2" ry="2" />
<text  x="853.37" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (262,626,260 samples, 0.04%)</title><rect x="883.0" y="325" width="0.4" height="15.0" fill="rgb(254,101,46)" rx="2" ry="2" />
<text  x="885.96" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (90,909,090 samples, 0.01%)</title><rect x="456.4" y="661" width="0.1" height="15.0" fill="rgb(221,29,18)" rx="2" ry="2" />
<text  x="459.38" y="671.5" ></text>
</g>
<g >
<title>mpage_submit_page (121,212,120 samples, 0.02%)</title><rect x="1146.0" y="149" width="0.2" height="15.0" fill="rgb(221,158,7)" rx="2" ry="2" />
<text  x="1148.96" y="159.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (757,575,750 samples, 0.12%)</title><rect x="697.0" y="421" width="1.4" height="15.0" fill="rgb(244,113,7)" rx="2" ry="2" />
<text  x="700.03" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (90,909,090 samples, 0.01%)</title><rect x="149.2" y="677" width="0.2" height="15.0" fill="rgb(246,2,27)" rx="2" ry="2" />
<text  x="152.20" y="687.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (161,616,160 samples, 0.03%)</title><rect x="456.2" y="693" width="0.3" height="15.0" fill="rgb(239,27,49)" rx="2" ry="2" />
<text  x="459.24" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (292,929,290 samples, 0.05%)</title><rect x="1128.2" y="421" width="0.6" height="15.0" fill="rgb(246,102,2)" rx="2" ry="2" />
<text  x="1131.22" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::operator* (303,030,300 samples, 0.05%)</title><rect x="1170.2" y="501" width="0.6" height="15.0" fill="rgb(238,54,31)" rx="2" ry="2" />
<text  x="1173.23" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (191,919,190 samples, 0.03%)</title><rect x="608.0" y="341" width="0.3" height="15.0" fill="rgb(240,61,28)" rx="2" ry="2" />
<text  x="610.98" y="351.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::BlockBasedTablePropertiesCollector::InternalAdd (1,333,333,320 samples, 0.21%)</title><rect x="603.2" y="421" width="2.5" height="15.0" fill="rgb(249,216,33)" rx="2" ry="2" />
<text  x="606.25" y="431.5" ></text>
</g>
<g >
<title>XXH3_hashLong_64b_default (383,838,380 samples, 0.06%)</title><rect x="569.7" y="325" width="0.8" height="15.0" fill="rgb(239,87,49)" rx="2" ry="2" />
<text  x="572.75" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;::_Deque_iterator (111,111,110 samples, 0.02%)</title><rect x="701.5" y="389" width="0.2" height="15.0" fill="rgb(252,205,6)" rx="2" ry="2" />
<text  x="704.49" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_Rb_tree (222,222,220 samples, 0.03%)</title><rect x="60.2" y="597" width="0.4" height="15.0" fill="rgb(219,228,9)" rx="2" ry="2" />
<text  x="63.23" y="607.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (696,969,690 samples, 0.11%)</title><rect x="724.5" y="421" width="1.3" height="15.0" fill="rgb(225,18,16)" rx="2" ry="2" />
<text  x="727.51" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="890.8" y="357" width="0.2" height="15.0" fill="rgb(206,94,24)" rx="2" ry="2" />
<text  x="893.76" y="367.5" ></text>
</g>
<g >
<title>std::operator&amp; (80,808,080 samples, 0.01%)</title><rect x="616.1" y="437" width="0.1" height="15.0" fill="rgb(228,131,5)" rx="2" ry="2" />
<text  x="619.10" y="447.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::ParseNextKey&lt;rocksdb::DecodeEntry&gt; (121,212,120 samples, 0.02%)</title><rect x="834.0" y="325" width="0.3" height="15.0" fill="rgb(206,1,46)" rx="2" ry="2" />
<text  x="837.03" y="335.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (121,212,120 samples, 0.02%)</title><rect x="846.8" y="261" width="0.2" height="15.0" fill="rgb(214,31,33)" rx="2" ry="2" />
<text  x="849.81" y="271.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (323,232,320 samples, 0.05%)</title><rect x="1056.1" y="405" width="0.6" height="15.0" fill="rgb(248,63,7)" rx="2" ry="2" />
<text  x="1059.15" y="415.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (80,808,080 samples, 0.01%)</title><rect x="573.1" y="85" width="0.1" height="15.0" fill="rgb(254,56,26)" rx="2" ry="2" />
<text  x="576.07" y="95.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (424,242,420 samples, 0.07%)</title><rect x="901.5" y="341" width="0.8" height="15.0" fill="rgb(240,107,0)" rx="2" ry="2" />
<text  x="904.48" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt; &gt;::deallocate (141,414,140 samples, 0.02%)</title><rect x="56.7" y="613" width="0.2" height="15.0" fill="rgb(242,32,27)" rx="2" ry="2" />
<text  x="59.65" y="623.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::Add (39,949,494,550 samples, 6.25%)</title><rect x="67.6" y="645" width="73.7" height="15.0" fill="rgb(217,226,12)" rx="2" ry="2" />
<text  x="70.56" y="655.5" >rocksdb:..</text>
</g>
<g >
<title>rocksdb::GetLengthPrefixedSlice (1,727,272,710 samples, 0.27%)</title><rect x="90.5" y="517" width="3.2" height="15.0" fill="rgb(241,75,42)" rx="2" ry="2" />
<text  x="93.50" y="527.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::Tracer*, std::default_delete&lt;rocksdb::Tracer&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="459.9" y="677" width="0.2" height="15.0" fill="rgb(239,127,33)" rx="2" ry="2" />
<text  x="462.90" y="687.5" ></text>
</g>
<g >
<title>ext4_releasepage (70,707,070 samples, 0.01%)</title><rect x="754.6" y="245" width="0.1" height="15.0" fill="rgb(211,73,5)" rx="2" ry="2" />
<text  x="757.57" y="255.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="859.3" y="325" width="0.2" height="15.0" fill="rgb(254,213,15)" rx="2" ry="2" />
<text  x="862.35" y="335.5" ></text>
</g>
<g >
<title>__tls_get_addr (535,353,530 samples, 0.08%)</title><rect x="1117.3" y="405" width="0.9" height="15.0" fill="rgb(235,166,22)" rx="2" ry="2" />
<text  x="1120.25" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::VersionSet, std::default_delete&lt;rocksdb::VersionSet&gt; &gt;::_M_ptr (141,414,140 samples, 0.02%)</title><rect x="460.4" y="693" width="0.3" height="15.0" fill="rgb(254,76,32)" rx="2" ry="2" />
<text  x="463.42" y="703.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (545,454,540 samples, 0.09%)</title><rect x="259.3" y="661" width="1.0" height="15.0" fill="rgb(248,107,33)" rx="2" ry="2" />
<text  x="262.27" y="671.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (222,222,220 samples, 0.03%)</title><rect x="469.7" y="693" width="0.5" height="15.0" fill="rgb(221,88,4)" rx="2" ry="2" />
<text  x="472.75" y="703.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (171,717,170 samples, 0.03%)</title><rect x="893.3" y="421" width="0.4" height="15.0" fill="rgb(213,3,14)" rx="2" ry="2" />
<text  x="896.35" y="431.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::get_left (323,232,320 samples, 0.05%)</title><rect x="800.7" y="421" width="0.6" height="15.0" fill="rgb(218,181,10)" rx="2" ry="2" />
<text  x="803.70" y="431.5" ></text>
</g>
<g >
<title>std::operator&amp; (292,929,290 samples, 0.05%)</title><rect x="628.4" y="341" width="0.5" height="15.0" fill="rgb(233,150,25)" rx="2" ry="2" />
<text  x="631.37" y="351.5" ></text>
</g>
<g >
<title>fdatasync (151,515,150 samples, 0.02%)</title><rect x="1145.9" y="325" width="0.3" height="15.0" fill="rgb(208,81,20)" rx="2" ry="2" />
<text  x="1148.92" y="335.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (292,929,290 samples, 0.05%)</title><rect x="578.0" y="309" width="0.6" height="15.0" fill="rgb(206,74,52)" rx="2" ry="2" />
<text  x="581.03" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::rend@plt (60,606,060 samples, 0.01%)</title><rect x="707.1" y="437" width="0.1" height="15.0" fill="rgb(224,34,1)" rx="2" ry="2" />
<text  x="710.08" y="447.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (90,909,090 samples, 0.01%)</title><rect x="203.8" y="661" width="0.1" height="15.0" fill="rgb(232,187,20)" rx="2" ry="2" />
<text  x="206.78" y="671.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (60,606,060 samples, 0.01%)</title><rect x="203.3" y="693" width="0.1" height="15.0" fill="rgb(249,150,21)" rx="2" ry="2" />
<text  x="206.28" y="703.5" ></text>
</g>
<g >
<title>rocksdb::CompactionJob::ProcessKeyValueCompaction (161,616,160 samples, 0.03%)</title><rect x="1145.9" y="405" width="0.3" height="15.0" fill="rgb(246,14,53)" rx="2" ry="2" />
<text  x="1148.91" y="415.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (60,606,060 samples, 0.01%)</title><rect x="1027.4" y="85" width="0.2" height="15.0" fill="rgb(231,150,7)" rx="2" ry="2" />
<text  x="1030.44" y="95.5" ></text>
</g>
<g >
<title>ext4_bio_write_page (70,707,070 samples, 0.01%)</title><rect x="747.4" y="229" width="0.1" height="15.0" fill="rgb(228,95,34)" rx="2" ry="2" />
<text  x="750.37" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (90,909,090 samples, 0.01%)</title><rect x="543.1" y="773" width="0.2" height="15.0" fill="rgb(221,61,28)" rx="2" ry="2" />
<text  x="546.15" y="783.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (656,565,650 samples, 0.10%)</title><rect x="846.5" y="325" width="1.2" height="15.0" fill="rgb(237,194,21)" rx="2" ry="2" />
<text  x="849.48" y="335.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (131,313,130 samples, 0.02%)</title><rect x="1125.4" y="469" width="0.3" height="15.0" fill="rgb(216,205,41)" rx="2" ry="2" />
<text  x="1128.42" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::get (595,959,590 samples, 0.09%)</title><rect x="891.6" y="389" width="1.1" height="15.0" fill="rgb(213,7,2)" rx="2" ry="2" />
<text  x="894.60" y="399.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt;@plt (80,808,080 samples, 0.01%)</title><rect x="236.0" y="693" width="0.1" height="15.0" fill="rgb(233,96,6)" rx="2" ry="2" />
<text  x="238.98" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (272,727,270 samples, 0.04%)</title><rect x="665.2" y="389" width="0.6" height="15.0" fill="rgb(214,98,9)" rx="2" ry="2" />
<text  x="668.25" y="399.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (80,808,080 samples, 0.01%)</title><rect x="647.6" y="389" width="0.2" height="15.0" fill="rgb(248,5,9)" rx="2" ry="2" />
<text  x="650.62" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (60,606,060 samples, 0.01%)</title><rect x="473.8" y="645" width="0.1" height="15.0" fill="rgb(247,215,49)" rx="2" ry="2" />
<text  x="476.83" y="655.5" ></text>
</g>
<g >
<title>__tls_get_addr (70,707,070 samples, 0.01%)</title><rect x="133.8" y="517" width="0.1" height="15.0" fill="rgb(227,97,35)" rx="2" ry="2" />
<text  x="136.78" y="527.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::crc32c_3way (70,707,070 samples, 0.01%)</title><rect x="45.3" y="629" width="0.1" height="15.0" fill="rgb(225,26,24)" rx="2" ry="2" />
<text  x="48.25" y="639.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::AddWithLastKey (232,323,230 samples, 0.04%)</title><rect x="1081.3" y="469" width="0.5" height="15.0" fill="rgb(225,175,21)" rx="2" ry="2" />
<text  x="1084.35" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (343,434,340 samples, 0.05%)</title><rect x="1012.5" y="485" width="0.7" height="15.0" fill="rgb(241,154,3)" rx="2" ry="2" />
<text  x="1015.54" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (404,040,400 samples, 0.06%)</title><rect x="797.0" y="373" width="0.8" height="15.0" fill="rgb(214,211,44)" rx="2" ry="2" />
<text  x="800.05" y="383.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatch::Iterate (49,909,090,410 samples, 7.81%)</title><rect x="57.9" y="709" width="92.2" height="15.0" fill="rgb(234,24,27)" rx="2" ry="2" />
<text  x="60.92" y="719.5" >rocksdb::Wr..</text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (272,727,270 samples, 0.04%)</title><rect x="604.8" y="325" width="0.5" height="15.0" fill="rgb(220,125,34)" rx="2" ry="2" />
<text  x="607.83" y="335.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (202,020,200 samples, 0.03%)</title><rect x="880.1" y="293" width="0.4" height="15.0" fill="rgb(232,123,38)" rx="2" ry="2" />
<text  x="883.09" y="303.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::Key@plt (60,606,060 samples, 0.01%)</title><rect x="125.7" y="565" width="0.2" height="15.0" fill="rgb(243,55,19)" rx="2" ry="2" />
<text  x="128.74" y="575.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::NextImpl (151,515,150 samples, 0.02%)</title><rect x="876.9" y="389" width="0.3" height="15.0" fill="rgb(213,198,14)" rx="2" ry="2" />
<text  x="879.90" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size@plt (70,707,070 samples, 0.01%)</title><rect x="726.0" y="437" width="0.2" height="15.0" fill="rgb(226,123,44)" rx="2" ry="2" />
<text  x="729.04" y="447.5" ></text>
</g>
<g >
<title>rocksdb::DecodeFixed64 (121,212,120 samples, 0.02%)</title><rect x="951.1" y="437" width="0.2" height="15.0" fill="rgb(217,216,1)" rx="2" ry="2" />
<text  x="954.08" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="909.6" y="293" width="0.2" height="15.0" fill="rgb(220,124,37)" rx="2" ry="2" />
<text  x="912.56" y="303.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::FilterBlockBuilder*, false&gt;::_M_head (242,424,240 samples, 0.04%)</title><rect x="1072.9" y="357" width="0.5" height="15.0" fill="rgb(212,30,26)" rx="2" ry="2" />
<text  x="1075.94" y="367.5" ></text>
</g>
<g >
<title>rocksdb::ShortenedIndexBuilder::OnKeyAdded (101,010,100 samples, 0.02%)</title><rect x="1069.0" y="453" width="0.2" height="15.0" fill="rgb(218,14,41)" rx="2" ry="2" />
<text  x="1072.00" y="463.5" ></text>
</g>
<g >
<title>__memset_evex_unaligned_erms (121,212,120 samples, 0.02%)</title><rect x="878.7" y="373" width="0.3" height="15.0" fill="rgb(229,20,30)" rx="2" ry="2" />
<text  x="881.74" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::IndexBuilder*, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt; (242,424,240 samples, 0.04%)</title><rect x="619.8" y="389" width="0.4" height="15.0" fill="rgb(236,9,16)" rx="2" ry="2" />
<text  x="622.77" y="399.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (505,050,500 samples, 0.08%)</title><rect x="599.3" y="405" width="0.9" height="15.0" fill="rgb(236,85,50)" rx="2" ry="2" />
<text  x="602.25" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (202,020,200 samples, 0.03%)</title><rect x="50.6" y="725" width="0.4" height="15.0" fill="rgb(233,29,3)" rx="2" ry="2" />
<text  x="53.63" y="735.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (444,444,440 samples, 0.07%)</title><rect x="1149.8" y="469" width="0.9" height="15.0" fill="rgb(217,146,34)" rx="2" ry="2" />
<text  x="1152.84" y="479.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (90,909,090 samples, 0.01%)</title><rect x="164.4" y="661" width="0.2" height="15.0" fill="rgb(205,147,37)" rx="2" ry="2" />
<text  x="167.41" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (242,424,240 samples, 0.04%)</title><rect x="689.4" y="389" width="0.5" height="15.0" fill="rgb(224,126,49)" rx="2" ry="2" />
<text  x="692.44" y="399.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Next (131,313,130 samples, 0.02%)</title><rect x="832.4" y="325" width="0.2" height="15.0" fill="rgb(208,24,27)" rx="2" ry="2" />
<text  x="835.36" y="335.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000000l&gt;, void&gt; (191,919,190 samples, 0.03%)</title><rect x="256.5" y="677" width="0.4" height="15.0" fill="rgb(246,156,15)" rx="2" ry="2" />
<text  x="259.53" y="687.5" ></text>
</g>
<g >
<title>std::operator&amp; (101,010,100 samples, 0.02%)</title><rect x="576.1" y="421" width="0.1" height="15.0" fill="rgb(216,60,26)" rx="2" ry="2" />
<text  x="579.05" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (191,919,190 samples, 0.03%)</title><rect x="587.8" y="421" width="0.4" height="15.0" fill="rgb(231,11,19)" rx="2" ry="2" />
<text  x="590.84" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="892.5" y="325" width="0.1" height="15.0" fill="rgb(247,192,1)" rx="2" ry="2" />
<text  x="895.47" y="335.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (90,909,090 samples, 0.01%)</title><rect x="820.3" y="357" width="0.2" height="15.0" fill="rgb(240,164,33)" rx="2" ry="2" />
<text  x="823.34" y="367.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (1,535,353,520 samples, 0.24%)</title><rect x="845.9" y="357" width="2.9" height="15.0" fill="rgb(246,184,7)" rx="2" ry="2" />
<text  x="848.92" y="367.5" ></text>
</g>
<g >
<title>rocksdb::MemTableIterator::Valid (313,131,310 samples, 0.05%)</title><rect x="666.7" y="389" width="0.6" height="15.0" fill="rgb(252,91,14)" rx="2" ry="2" />
<text  x="669.74" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (242,424,240 samples, 0.04%)</title><rect x="896.9" y="293" width="0.5" height="15.0" fill="rgb(214,64,24)" rx="2" ry="2" />
<text  x="899.93" y="303.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::EnlargeBufferIfNeeded (343,434,340 samples, 0.05%)</title><rect x="935.1" y="437" width="0.7" height="15.0" fill="rgb(214,105,20)" rx="2" ry="2" />
<text  x="938.13" y="447.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (626,262,620 samples, 0.10%)</title><rect x="167.1" y="677" width="1.1" height="15.0" fill="rgb(232,71,7)" rx="2" ry="2" />
<text  x="170.07" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (101,010,100 samples, 0.02%)</title><rect x="480.5" y="725" width="0.2" height="15.0" fill="rgb(241,190,26)" rx="2" ry="2" />
<text  x="483.53" y="735.5" ></text>
</g>
<g >
<title>ext4_da_write_end (767,676,760 samples, 0.12%)</title><rect x="37.2" y="469" width="1.4" height="15.0" fill="rgb(213,132,18)" rx="2" ry="2" />
<text  x="40.18" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_head (171,717,170 samples, 0.03%)</title><rect x="986.5" y="373" width="0.4" height="15.0" fill="rgb(214,204,30)" rx="2" ry="2" />
<text  x="989.54" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (292,929,290 samples, 0.05%)</title><rect x="93.2" y="501" width="0.5" height="15.0" fill="rgb(210,103,39)" rx="2" ry="2" />
<text  x="96.15" y="511.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::key (141,414,140 samples, 0.02%)</title><rect x="793.2" y="389" width="0.3" height="15.0" fill="rgb(212,157,11)" rx="2" ry="2" />
<text  x="796.24" y="399.5" ></text>
</g>
<g >
<title>std::operator&amp; (70,707,070 samples, 0.01%)</title><rect x="644.1" y="389" width="0.1" height="15.0" fill="rgb(221,182,47)" rx="2" ry="2" />
<text  x="647.11" y="399.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (434,343,430 samples, 0.07%)</title><rect x="631.7" y="341" width="0.8" height="15.0" fill="rgb(244,172,12)" rx="2" ry="2" />
<text  x="634.71" y="351.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::NextImpl (171,717,170 samples, 0.03%)</title><rect x="838.0" y="357" width="0.3" height="15.0" fill="rgb(212,205,29)" rx="2" ry="2" />
<text  x="841.03" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::push_back (80,808,080 samples, 0.01%)</title><rect x="1067.8" y="405" width="0.1" height="15.0" fill="rgb(247,44,40)" rx="2" ry="2" />
<text  x="1070.79" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt; (292,929,290 samples, 0.05%)</title><rect x="1021.4" y="453" width="0.5" height="15.0" fill="rgb(228,12,20)" rx="2" ry="2" />
<text  x="1024.38" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (111,111,110 samples, 0.02%)</title><rect x="855.2" y="341" width="0.2" height="15.0" fill="rgb(243,34,37)" rx="2" ry="2" />
<text  x="858.20" y="351.5" ></text>
</g>
<g >
<title>rocksdb::DecodeFixed64 (60,606,060 samples, 0.01%)</title><rect x="661.9" y="389" width="0.1" height="15.0" fill="rgb(232,108,36)" rx="2" ry="2" />
<text  x="664.93" y="399.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_context (707,070,700 samples, 0.11%)</title><rect x="788.0" y="357" width="1.3" height="15.0" fill="rgb(254,193,12)" rx="2" ry="2" />
<text  x="790.98" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;rocksdb::DBImpl::LogWriterNumber, std::allocator&lt;rocksdb::DBImpl::LogWriterNumber&gt; &gt;::back (60,606,060 samples, 0.01%)</title><rect x="27.7" y="709" width="0.1" height="15.0" fill="rgb(205,74,7)" rx="2" ry="2" />
<text  x="30.72" y="719.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::IOOptions (70,707,070 samples, 0.01%)</title><rect x="35.1" y="629" width="0.2" height="15.0" fill="rgb(217,186,16)" rx="2" ry="2" />
<text  x="38.13" y="639.5" ></text>
</g>
<g >
<title>std::operator!=&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt; (929,292,920 samples, 0.15%)</title><rect x="701.7" y="421" width="1.7" height="15.0" fill="rgb(226,51,34)" rx="2" ry="2" />
<text  x="704.69" y="431.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::BatchPostProcess (909,090,900 samples, 0.14%)</title><rect x="53.3" y="693" width="1.7" height="15.0" fill="rgb(236,99,15)" rx="2" ry="2" />
<text  x="56.35" y="703.5" ></text>
</g>
<g >
<title>XXH3_hashLong_64b_internal (454,545,450 samples, 0.07%)</title><rect x="1023.8" y="325" width="0.9" height="15.0" fill="rgb(218,36,13)" rx="2" ry="2" />
<text  x="1026.84" y="335.5" ></text>
</g>
<g >
<title>std::map&lt;rocksdb::MemTable*, rocksdb::MemTablePostProcessInfo, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::map (282,828,280 samples, 0.04%)</title><rect x="60.2" y="613" width="0.6" height="15.0" fill="rgb(214,50,45)" rx="2" ry="2" />
<text  x="63.23" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (111,111,110 samples, 0.02%)</title><rect x="143.3" y="597" width="0.2" height="15.0" fill="rgb(238,34,8)" rx="2" ry="2" />
<text  x="146.33" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SstPartitioner, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::operator bool (1,757,575,740 samples, 0.28%)</title><rect x="1096.4" y="453" width="3.2" height="15.0" fill="rgb(231,200,5)" rx="2" ry="2" />
<text  x="1099.38" y="463.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::Clear (80,808,080 samples, 0.01%)</title><rect x="871.3" y="357" width="0.1" height="15.0" fill="rgb(212,183,28)" rx="2" ry="2" />
<text  x="874.28" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (797,979,790 samples, 0.12%)</title><rect x="739.1" y="357" width="1.5" height="15.0" fill="rgb(247,215,38)" rx="2" ry="2" />
<text  x="742.09" y="367.5" ></text>
</g>
<g >
<title>rocksdb::Status::MarkChecked (80,808,080 samples, 0.01%)</title><rect x="1006.4" y="501" width="0.2" height="15.0" fill="rgb(239,192,4)" rx="2" ry="2" />
<text  x="1009.40" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt;::base (181,818,180 samples, 0.03%)</title><rect x="602.4" y="421" width="0.3" height="15.0" fill="rgb(221,92,43)" rx="2" ry="2" />
<text  x="605.39" y="431.5" ></text>
</g>
<g >
<title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (181,818,180 samples, 0.03%)</title><rect x="108.0" y="485" width="0.3" height="15.0" fill="rgb(229,66,15)" rx="2" ry="2" />
<text  x="110.98" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void  (104,343,433,300 samples, 16.33%)</title><rect x="562.0" y="709" width="192.7" height="15.0" fill="rgb(236,3,1)" rx="2" ry="2" />
<text  x="565.04" y="719.5" >std::function&lt;void </text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (404,040,400 samples, 0.06%)</title><rect x="884.4" y="325" width="0.7" height="15.0" fill="rgb(238,196,30)" rx="2" ry="2" />
<text  x="887.36" y="335.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::operator[] (161,616,160 samples, 0.03%)</title><rect x="806.0" y="421" width="0.3" height="15.0" fill="rgb(227,8,11)" rx="2" ry="2" />
<text  x="809.02" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (555,555,550 samples, 0.09%)</title><rect x="1087.6" y="373" width="1.0" height="15.0" fill="rgb(219,223,31)" rx="2" ry="2" />
<text  x="1090.58" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (212,121,210 samples, 0.03%)</title><rect x="1143.8" y="389" width="0.4" height="15.0" fill="rgb(227,73,31)" rx="2" ry="2" />
<text  x="1146.82" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="912.5" y="357" width="0.1" height="15.0" fill="rgb(234,105,13)" rx="2" ry="2" />
<text  x="915.49" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (181,818,180 samples, 0.03%)</title><rect x="461.6" y="709" width="0.4" height="15.0" fill="rgb(218,200,4)" rx="2" ry="2" />
<text  x="464.62" y="719.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt; (282,828,280 samples, 0.04%)</title><rect x="861.2" y="325" width="0.5" height="15.0" fill="rgb(241,95,51)" rx="2" ry="2" />
<text  x="864.21" y="335.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (585,858,580 samples, 0.09%)</title><rect x="1110.1" y="453" width="1.1" height="15.0" fill="rgb(232,145,14)" rx="2" ry="2" />
<text  x="1113.11" y="463.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (60,606,060 samples, 0.01%)</title><rect x="44.9" y="245" width="0.1" height="15.0" fill="rgb(205,187,19)" rx="2" ry="2" />
<text  x="47.94" y="255.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::begin (101,010,100 samples, 0.02%)</title><rect x="811.7" y="405" width="0.2" height="15.0" fill="rgb(209,111,47)" rx="2" ry="2" />
<text  x="814.73" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (202,020,200 samples, 0.03%)</title><rect x="912.0" y="405" width="0.3" height="15.0" fill="rgb(241,226,38)" rx="2" ry="2" />
<text  x="914.96" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::get (262,626,260 samples, 0.04%)</title><rect x="891.0" y="405" width="0.4" height="15.0" fill="rgb(224,213,39)" rx="2" ry="2" />
<text  x="893.96" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (60,606,060 samples, 0.01%)</title><rect x="148.0" y="661" width="0.2" height="15.0" fill="rgb(237,225,36)" rx="2" ry="2" />
<text  x="151.05" y="671.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid@plt (90,909,090 samples, 0.01%)</title><rect x="990.7" y="485" width="0.2" height="15.0" fill="rgb(218,62,8)" rx="2" ry="2" />
<text  x="993.72" y="495.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::lru_cache::LRUHandle*, 8ul&gt;::~autovector (90,909,090 samples, 0.01%)</title><rect x="867.8" y="261" width="0.1" height="15.0" fill="rgb(236,141,20)" rx="2" ry="2" />
<text  x="870.76" y="271.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Iterator::Valid (111,111,110 samples, 0.02%)</title><rect x="625.6" y="357" width="0.2" height="15.0" fill="rgb(245,206,50)" rx="2" ry="2" />
<text  x="628.55" y="367.5" ></text>
</g>
<g >
<title>rocksdb::MemTableIterator::Valid (151,515,150 samples, 0.02%)</title><rect x="686.8" y="389" width="0.3" height="15.0" fill="rgb(208,89,45)" rx="2" ry="2" />
<text  x="689.85" y="399.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count@plt (202,020,200 samples, 0.03%)</title><rect x="277.9" y="677" width="0.3" height="15.0" fill="rgb(210,188,48)" rx="2" ry="2" />
<text  x="280.85" y="687.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;45ul&gt; (1,080,808,070 samples, 0.17%)</title><rect x="983.3" y="469" width="2.0" height="15.0" fill="rgb(239,9,3)" rx="2" ry="2" />
<text  x="986.29" y="479.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::IntTblPropCollector*, false&gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="1065.9" y="357" width="0.1" height="15.0" fill="rgb(251,167,4)" rx="2" ry="2" />
<text  x="1068.90" y="367.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;char const []&gt;, true&gt;::_M_head (101,010,100 samples, 0.02%)</title><rect x="735.7" y="325" width="0.2" height="15.0" fill="rgb(229,96,32)" rx="2" ry="2" />
<text  x="738.68" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (272,727,270 samples, 0.04%)</title><rect x="857.2" y="293" width="0.5" height="15.0" fill="rgb(227,42,29)" rx="2" ry="2" />
<text  x="860.22" y="303.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (151,515,150 samples, 0.02%)</title><rect x="822.2" y="421" width="0.3" height="15.0" fill="rgb(236,167,31)" rx="2" ry="2" />
<text  x="825.19" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::CompactionIterator*, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt; (151,515,150 samples, 0.02%)</title><rect x="1174.9" y="469" width="0.2" height="15.0" fill="rgb(249,96,7)" rx="2" ry="2" />
<text  x="1177.85" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt; (303,030,300 samples, 0.05%)</title><rect x="1060.0" y="437" width="0.6" height="15.0" fill="rgb(243,117,28)" rx="2" ry="2" />
<text  x="1063.03" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (171,717,170 samples, 0.03%)</title><rect x="849.0" y="373" width="0.3" height="15.0" fill="rgb(246,14,5)" rx="2" ry="2" />
<text  x="852.03" y="383.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="495.2" y="693" width="0.3" height="15.0" fill="rgb(243,45,52)" rx="2" ry="2" />
<text  x="498.25" y="703.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Next (125,363,635,110 samples, 19.62%)</title><rect x="771.2" y="501" width="231.5" height="15.0" fill="rgb(215,204,51)" rx="2" ry="2" />
<text  x="774.19" y="511.5" >rocksdb::CompactionIterator::N..</text>
</g>
<g >
<title>rocksdb::Slice::compare (60,606,060 samples, 0.01%)</title><rect x="720.3" y="405" width="0.2" height="15.0" fill="rgb(226,118,5)" rx="2" ry="2" />
<text  x="723.35" y="415.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (222,222,220 samples, 0.03%)</title><rect x="1140.8" y="325" width="0.4" height="15.0" fill="rgb(230,173,43)" rx="2" ry="2" />
<text  x="1143.81" y="335.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (80,808,080 samples, 0.01%)</title><rect x="572.6" y="117" width="0.1" height="15.0" fill="rgb(237,99,43)" rx="2" ry="2" />
<text  x="575.56" y="127.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::reset_root_cmp_cache (70,707,070 samples, 0.01%)</title><rect x="779.4" y="405" width="0.1" height="15.0" fill="rgb(218,8,42)" rx="2" ry="2" />
<text  x="782.38" y="415.5" ></text>
</g>
<g >
<title>std::map&lt;rocksdb::MemTable*, rocksdb::MemTablePostProcessInfo, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::operator[] (2,898,989,870 samples, 0.45%)</title><rect x="61.2" y="629" width="5.4" height="15.0" fill="rgb(208,55,39)" rx="2" ry="2" />
<text  x="64.24" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (131,313,130 samples, 0.02%)</title><rect x="711.8" y="437" width="0.3" height="15.0" fill="rgb(206,24,50)" rx="2" ry="2" />
<text  x="714.82" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Status::MustCheck (212,121,210 samples, 0.03%)</title><rect x="1126.4" y="469" width="0.4" height="15.0" fill="rgb(240,17,15)" rx="2" ry="2" />
<text  x="1129.38" y="479.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000000l&gt;, void&gt; (4,858,585,810 samples, 0.76%)</title><rect x="260.3" y="661" width="9.0" height="15.0" fill="rgb(227,42,50)" rx="2" ry="2" />
<text  x="263.28" y="671.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::KeyComparator::operator (5,454,545,400 samples, 0.85%)</title><rect x="126.2" y="581" width="10.0" height="15.0" fill="rgb(225,170,17)" rx="2" ry="2" />
<text  x="129.17" y="591.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (202,020,200 samples, 0.03%)</title><rect x="262.1" y="645" width="0.4" height="15.0" fill="rgb(208,133,30)" rx="2" ry="2" />
<text  x="265.09" y="655.5" ></text>
</g>
<g >
<title>rocksdb::PackSequenceAndType (70,707,070 samples, 0.01%)</title><rect x="138.9" y="629" width="0.1" height="15.0" fill="rgb(208,111,0)" rx="2" ry="2" />
<text  x="141.91" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (656,565,650 samples, 0.10%)</title><rect x="721.8" y="405" width="1.2" height="15.0" fill="rgb(215,220,30)" rx="2" ry="2" />
<text  x="724.82" y="415.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::mersenne_twister_engine (23,111,110,880 samples, 3.62%)</title><rect x="499.8" y="805" width="42.7" height="15.0" fill="rgb(227,174,23)" rx="2" ry="2" />
<text  x="502.78" y="815.5" >std:..</text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status (1,626,262,610 samples, 0.25%)</title><rect x="852.5" y="373" width="3.0" height="15.0" fill="rgb(246,2,32)" rx="2" ry="2" />
<text  x="855.52" y="383.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::ShouldNotifyListeners (70,707,070 samples, 0.01%)</title><rect x="39.1" y="645" width="0.1" height="15.0" fill="rgb(216,174,1)" rx="2" ry="2" />
<text  x="42.12" y="655.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (62,393,938,770 samples, 9.76%)</title><rect x="328.1" y="661" width="115.2" height="15.0" fill="rgb(232,89,17)" rx="2" ry="2" />
<text  x="331.06" y="671.5" >entry_SYSCALL_..</text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (303,030,300 samples, 0.05%)</title><rect x="1063.5" y="421" width="0.5" height="15.0" fill="rgb(217,79,46)" rx="2" ry="2" />
<text  x="1066.46" y="431.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (141,414,140 samples, 0.02%)</title><rect x="819.1" y="373" width="0.3" height="15.0" fill="rgb(225,110,2)" rx="2" ry="2" />
<text  x="822.13" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt;::end@plt (60,606,060 samples, 0.01%)</title><rect x="622.3" y="437" width="0.1" height="15.0" fill="rgb(219,83,30)" rx="2" ry="2" />
<text  x="625.25" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="879.8" y="309" width="0.1" height="15.0" fill="rgb(235,15,36)" rx="2" ry="2" />
<text  x="882.79" y="319.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; (2,333,333,310 samples, 0.37%)</title><rect x="263.7" y="629" width="4.3" height="15.0" fill="rgb(237,125,1)" rx="2" ry="2" />
<text  x="266.73" y="639.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (2,999,999,970 samples, 0.47%)</title><rect x="108.7" y="469" width="5.5" height="15.0" fill="rgb(230,41,16)" rx="2" ry="2" />
<text  x="111.71" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (131,313,130 samples, 0.02%)</title><rect x="562.0" y="437" width="0.3" height="15.0" fill="rgb(250,150,49)" rx="2" ry="2" />
<text  x="565.04" y="447.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::~BlockFetcher (70,707,070 samples, 0.01%)</title><rect x="865.7" y="293" width="0.2" height="15.0" fill="rgb(218,147,2)" rx="2" ry="2" />
<text  x="868.74" y="303.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (1,242,424,230 samples, 0.19%)</title><rect x="251.6" y="677" width="2.2" height="15.0" fill="rgb(244,109,52)" rx="2" ry="2" />
<text  x="254.55" y="687.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::AddWithLastKeyImpl (2,808,080,780 samples, 0.44%)</title><rect x="581.2" y="421" width="5.2" height="15.0" fill="rgb(224,175,2)" rx="2" ry="2" />
<text  x="584.24" y="431.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (313,131,310 samples, 0.05%)</title><rect x="923.9" y="453" width="0.6" height="15.0" fill="rgb(232,140,15)" rx="2" ry="2" />
<text  x="926.88" y="463.5" ></text>
</g>
<g >
<title>rocksdb::IndexBlockIter::ParseNextIndexKey (90,909,090 samples, 0.01%)</title><rect x="832.4" y="293" width="0.1" height="15.0" fill="rgb(240,227,31)" rx="2" ry="2" />
<text  x="835.36" y="303.5" ></text>
</g>
<g >
<title>ext4_invalidatepage (131,313,130 samples, 0.02%)</title><rect x="754.5" y="293" width="0.2" height="15.0" fill="rgb(241,50,14)" rx="2" ry="2" />
<text  x="757.46" y="303.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (60,606,060 samples, 0.01%)</title><rect x="466.0" y="725" width="0.1" height="15.0" fill="rgb(247,135,9)" rx="2" ry="2" />
<text  x="468.96" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (333,333,330 samples, 0.05%)</title><rect x="1110.5" y="405" width="0.6" height="15.0" fill="rgb(214,51,1)" rx="2" ry="2" />
<text  x="1113.48" y="415.5" ></text>
</g>
<g >
<title>operator new (60,606,060 samples, 0.01%)</title><rect x="485.0" y="773" width="0.1" height="15.0" fill="rgb(212,165,22)" rx="2" ry="2" />
<text  x="487.97" y="783.5" ></text>
</g>
<g >
<title>std::operator&amp; (80,808,080 samples, 0.01%)</title><rect x="928.4" y="437" width="0.1" height="15.0" fill="rgb(242,63,18)" rx="2" ry="2" />
<text  x="931.36" y="447.5" ></text>
</g>
<g >
<title>rocksdb::ShortenedIndexBuilder::FindShortestInternalKeySeparator (252,525,250 samples, 0.04%)</title><rect x="1068.3" y="437" width="0.5" height="15.0" fill="rgb(229,115,48)" rx="2" ry="2" />
<text  x="1071.35" y="447.5" ></text>
</g>
<g >
<title>std::operator!=&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt; (141,414,140 samples, 0.02%)</title><rect x="1001.4" y="485" width="0.3" height="15.0" fill="rgb(210,79,3)" rx="2" ry="2" />
<text  x="1004.42" y="495.5" ></text>
</g>
<g >
<title>__schedule (111,111,110 samples, 0.02%)</title><rect x="342.1" y="597" width="0.2" height="15.0" fill="rgb(217,222,0)" rx="2" ry="2" />
<text  x="345.13" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Slice::compare (202,020,200 samples, 0.03%)</title><rect x="1056.8" y="405" width="0.3" height="15.0" fill="rgb(231,212,29)" rx="2" ry="2" />
<text  x="1059.76" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (3,161,616,130 samples, 0.49%)</title><rect x="839.5" y="357" width="5.8" height="15.0" fill="rgb(247,192,52)" rx="2" ry="2" />
<text  x="842.48" y="367.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (11,353,535,240 samples, 1.78%)</title><rect x="421.8" y="629" width="21.0" height="15.0" fill="rgb(228,158,25)" rx="2" ry="2" />
<text  x="424.85" y="639.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::MemTableInserter::~MemTableInserter (939,393,930 samples, 0.15%)</title><rect x="55.8" y="709" width="1.7" height="15.0" fill="rgb(227,172,27)" rx="2" ry="2" />
<text  x="58.75" y="719.5" ></text>
</g>
<g >
<title>rocksdb::IsValueType (80,808,080 samples, 0.01%)</title><rect x="951.4" y="421" width="0.2" height="15.0" fill="rgb(216,162,26)" rx="2" ry="2" />
<text  x="954.43" y="431.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::PrepareOutput (1,929,292,910 samples, 0.30%)</title><rect x="695.0" y="437" width="3.5" height="15.0" fill="rgb(214,91,15)" rx="2" ry="2" />
<text  x="697.98" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="898.1" y="261" width="0.2" height="15.0" fill="rgb(234,47,43)" rx="2" ry="2" />
<text  x="901.09" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::WriteBatch::ProtectionInfo*, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="478.7" y="709" width="0.2" height="15.0" fill="rgb(235,28,24)" rx="2" ry="2" />
<text  x="481.72" y="719.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (60,606,060 samples, 0.01%)</title><rect x="937.1" y="421" width="0.1" height="15.0" fill="rgb(220,53,31)" rx="2" ry="2" />
<text  x="940.07" y="431.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::BGWorkFlush (104,343,433,300 samples, 16.33%)</title><rect x="562.0" y="581" width="192.7" height="15.0" fill="rgb(238,6,46)" rx="2" ry="2" />
<text  x="565.04" y="591.5" >rocksdb::DBImpl::BGWorkFl..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::FilterBlockBuilder*, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::_M_head (101,010,100 samples, 0.02%)</title><rect x="1072.6" y="373" width="0.2" height="15.0" fill="rgb(205,169,0)" rx="2" ry="2" />
<text  x="1075.58" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="882.0" y="277" width="0.1" height="15.0" fill="rgb(220,65,14)" rx="2" ry="2" />
<text  x="884.97" y="287.5" ></text>
</g>
<g >
<title>rocksdb::CompressData (90,909,090 samples, 0.01%)</title><rect x="569.2" y="357" width="0.2" height="15.0" fill="rgb(251,162,0)" rx="2" ry="2" />
<text  x="572.24" y="367.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::Valid (414,141,410 samples, 0.06%)</title><rect x="957.2" y="453" width="0.8" height="15.0" fill="rgb(239,157,36)" rx="2" ry="2" />
<text  x="960.20" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::FlushBlockPolicy*, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt; (282,828,280 samples, 0.04%)</title><rect x="618.7" y="373" width="0.5" height="15.0" fill="rgb(246,186,41)" rx="2" ry="2" />
<text  x="621.67" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="689.7" y="357" width="0.2" height="15.0" fill="rgb(242,164,52)" rx="2" ry="2" />
<text  x="692.66" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="883.2" y="293" width="0.2" height="15.0" fill="rgb(245,7,42)" rx="2" ry="2" />
<text  x="886.18" y="303.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockHashIndexBuilder::Valid (70,707,070 samples, 0.01%)</title><rect x="593.4" y="421" width="0.1" height="15.0" fill="rgb(241,178,23)" rx="2" ry="2" />
<text  x="596.36" y="431.5" ></text>
</g>
<g >
<title>rocksdb::ComputeBuiltinChecksumWithLastByte (393,939,390 samples, 0.06%)</title><rect x="569.7" y="373" width="0.8" height="15.0" fill="rgb(223,223,45)" rx="2" ry="2" />
<text  x="572.73" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (919,191,910 samples, 0.14%)</title><rect x="738.9" y="373" width="1.7" height="15.0" fill="rgb(221,168,48)" rx="2" ry="2" />
<text  x="741.87" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (252,525,250 samples, 0.04%)</title><rect x="1010.9" y="389" width="0.5" height="15.0" fill="rgb(223,77,51)" rx="2" ry="2" />
<text  x="1013.94" y="399.5" ></text>
</g>
<g >
<title>exc_page_fault (70,707,070 samples, 0.01%)</title><rect x="70.5" y="549" width="0.1" height="15.0" fill="rgb(253,122,13)" rx="2" ry="2" />
<text  x="73.51" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::lower_bound (252,525,250 samples, 0.04%)</title><rect x="944.9" y="437" width="0.4" height="15.0" fill="rgb(250,70,20)" rx="2" ry="2" />
<text  x="947.87" y="447.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_context (656,565,650 samples, 0.10%)</title><rect x="106.5" y="485" width="1.3" height="15.0" fill="rgb(213,182,45)" rx="2" ry="2" />
<text  x="109.55" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;rocksdb::SuperVersionContext::WriteStallNotification, std::allocator&lt;rocksdb::SuperVersionContext::WriteStallNotification&gt; &gt;::~_Vector_base (80,808,080 samples, 0.01%)</title><rect x="30.1" y="661" width="0.1" height="15.0" fill="rgb(210,32,25)" rx="2" ry="2" />
<text  x="33.09" y="671.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindSpliceForLevel&lt;true&gt; (60,606,060 samples, 0.01%)</title><rect x="73.4" y="581" width="0.1" height="15.0" fill="rgb(240,224,5)" rx="2" ry="2" />
<text  x="76.42" y="591.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (767,676,760 samples, 0.12%)</title><rect x="737.0" y="357" width="1.4" height="15.0" fill="rgb(246,124,29)" rx="2" ry="2" />
<text  x="739.97" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::FlushBlockPolicy*, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="1076.3" y="421" width="0.2" height="15.0" fill="rgb(244,229,4)" rx="2" ry="2" />
<text  x="1079.35" y="431.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (171,717,170 samples, 0.03%)</title><rect x="44.7" y="341" width="0.3" height="15.0" fill="rgb(223,185,4)" rx="2" ry="2" />
<text  x="47.73" y="351.5" ></text>
</g>
<g >
<title>rocksdb::InternalKey::DecodeFrom (232,323,230 samples, 0.04%)</title><rect x="1109.5" y="453" width="0.4" height="15.0" fill="rgb(226,41,14)" rx="2" ry="2" />
<text  x="1112.46" y="463.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatch::Count (141,414,140 samples, 0.02%)</title><rect x="469.4" y="709" width="0.2" height="15.0" fill="rgb(243,20,21)" rx="2" ry="2" />
<text  x="472.38" y="719.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt; (414,141,410 samples, 0.06%)</title><rect x="702.2" y="405" width="0.7" height="15.0" fill="rgb(233,75,28)" rx="2" ry="2" />
<text  x="705.18" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (4,949,494,900 samples, 0.77%)</title><rect x="732.7" y="437" width="9.1" height="15.0" fill="rgb(219,42,2)" rx="2" ry="2" />
<text  x="735.68" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::unique_ptr&lt;std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt;, void&gt; (222,222,220 samples, 0.03%)</title><rect x="477.6" y="741" width="0.4" height="15.0" fill="rgb(227,39,11)" rx="2" ry="2" />
<text  x="480.62" y="751.5" ></text>
</g>
<g >
<title>rocksdb::PutVarint32Varint32Varint32 (939,393,930 samples, 0.15%)</title><rect x="1038.1" y="421" width="1.7" height="15.0" fill="rgb(231,195,49)" rx="2" ry="2" />
<text  x="1041.07" y="431.5" ></text>
</g>
<g >
<title>ext4_writepages (90,909,090 samples, 0.01%)</title><rect x="562.1" y="325" width="0.2" height="15.0" fill="rgb(229,136,49)" rx="2" ry="2" />
<text  x="565.12" y="335.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="856.0" y="261" width="0.2" height="15.0" fill="rgb(226,46,23)" rx="2" ry="2" />
<text  x="859.04" y="271.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (111,111,110 samples, 0.02%)</title><rect x="572.2" y="149" width="0.2" height="15.0" fill="rgb(245,12,9)" rx="2" ry="2" />
<text  x="575.21" y="159.5" ></text>
</g>
<g >
<title>rocksdb::NotifyCollectTableCollectorsOnAdd (212,121,210 samples, 0.03%)</title><rect x="714.3" y="453" width="0.4" height="15.0" fill="rgb(241,229,0)" rx="2" ry="2" />
<text  x="717.32" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (202,020,200 samples, 0.03%)</title><rect x="1007.2" y="485" width="0.4" height="15.0" fill="rgb(252,212,52)" rx="2" ry="2" />
<text  x="1010.24" y="495.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::IndexBuilder*, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt; (222,222,220 samples, 0.03%)</title><rect x="1077.4" y="405" width="0.4" height="15.0" fill="rgb(243,125,4)" rx="2" ry="2" />
<text  x="1080.41" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (101,010,100 samples, 0.02%)</title><rect x="726.6" y="453" width="0.2" height="15.0" fill="rgb(249,143,51)" rx="2" ry="2" />
<text  x="729.58" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;rocksdb::SuperVersion, std::default_delete&lt;rocksdb::SuperVersion&gt;, true, true&gt;::__uniq_ptr_impl (222,222,220 samples, 0.03%)</title><rect x="28.3" y="677" width="0.4" height="15.0" fill="rgb(215,111,15)" rx="2" ry="2" />
<text  x="31.28" y="687.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block_kData&gt; (181,818,180 samples, 0.03%)</title><rect x="829.8" y="277" width="0.3" height="15.0" fill="rgb(205,194,28)" rx="2" ry="2" />
<text  x="832.80" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="856.6" y="277" width="0.2" height="15.0" fill="rgb(246,97,51)" rx="2" ry="2" />
<text  x="859.58" y="287.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (616,161,610 samples, 0.10%)</title><rect x="940.9" y="405" width="1.2" height="15.0" fill="rgb(225,164,12)" rx="2" ry="2" />
<text  x="943.91" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (303,030,300 samples, 0.05%)</title><rect x="952.6" y="389" width="0.6" height="15.0" fill="rgb(246,90,31)" rx="2" ry="2" />
<text  x="955.63" y="399.5" ></text>
</g>
<g >
<title>rocksdb::InternalKeyComparator::Compare (181,818,180 samples, 0.03%)</title><rect x="1113.2" y="469" width="0.4" height="15.0" fill="rgb(248,89,17)" rx="2" ry="2" />
<text  x="1116.24" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (343,434,340 samples, 0.05%)</title><rect x="901.6" y="325" width="0.6" height="15.0" fill="rgb(240,86,30)" rx="2" ry="2" />
<text  x="904.61" y="335.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt;@plt (90,909,090 samples, 0.01%)</title><rect x="290.1" y="629" width="0.1" height="15.0" fill="rgb(228,67,31)" rx="2" ry="2" />
<text  x="293.07" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (555,555,550 samples, 0.09%)</title><rect x="884.1" y="341" width="1.0" height="15.0" fill="rgb(230,189,50)" rx="2" ry="2" />
<text  x="887.08" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (363,636,360 samples, 0.06%)</title><rect x="747.7" y="453" width="0.6" height="15.0" fill="rgb(227,151,8)" rx="2" ry="2" />
<text  x="750.65" y="463.5" ></text>
</g>
<g >
<title>generic_file_read_iter (161,616,160 samples, 0.03%)</title><rect x="827.7" y="117" width="0.3" height="15.0" fill="rgb(254,198,35)" rx="2" ry="2" />
<text  x="830.67" y="127.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (8,191,919,110 samples, 1.28%)</title><rect x="254.4" y="693" width="15.1" height="15.0" fill="rgb(223,130,42)" rx="2" ry="2" />
<text  x="257.40" y="703.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (202,020,200 samples, 0.03%)</title><rect x="1012.8" y="453" width="0.4" height="15.0" fill="rgb(246,109,47)" rx="2" ry="2" />
<text  x="1015.80" y="463.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::compare_exchange_weak (80,808,080 samples, 0.01%)</title><rect x="69.0" y="533" width="0.2" height="15.0" fill="rgb(246,16,33)" rx="2" ry="2" />
<text  x="72.02" y="543.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::EstimateSizeAfterKV@plt (60,606,060 samples, 0.01%)</title><rect x="1050.0" y="437" width="0.2" height="15.0" fill="rgb(222,220,19)" rx="2" ry="2" />
<text  x="1053.05" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Status::PermitUncheckedError (90,909,090 samples, 0.01%)</title><rect x="48.7" y="725" width="0.2" height="15.0" fill="rgb(229,42,54)" rx="2" ry="2" />
<text  x="51.69" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::get (2,080,808,060 samples, 0.33%)</title><rect x="1171.4" y="485" width="3.8" height="15.0" fill="rgb(230,127,37)" rx="2" ry="2" />
<text  x="1174.37" y="495.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (171,717,170 samples, 0.03%)</title><rect x="1009.7" y="389" width="0.4" height="15.0" fill="rgb(247,26,45)" rx="2" ry="2" />
<text  x="1012.74" y="399.5" ></text>
</g>
<g >
<title>rocksdb::FlushBlockBySizePolicy::BlockAlmostFull (1,919,191,900 samples, 0.30%)</title><rect x="593.5" y="421" width="3.5" height="15.0" fill="rgb(240,37,39)" rx="2" ry="2" />
<text  x="596.49" y="431.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count@plt (212,121,210 samples, 0.03%)</title><rect x="240.6" y="677" width="0.4" height="15.0" fill="rgb(219,157,21)" rx="2" ry="2" />
<text  x="243.58" y="687.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (121,212,120 samples, 0.02%)</title><rect x="1146.0" y="165" width="0.2" height="15.0" fill="rgb(211,21,23)" rx="2" ry="2" />
<text  x="1148.96" y="175.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::BackgroundCompaction (224,292,927,050 samples, 35.10%)</title><rect x="765.1" y="549" width="414.2" height="15.0" fill="rgb(209,45,19)" rx="2" ry="2" />
<text  x="768.11" y="559.5" >rocksdb::DBImpl::BackgroundCompaction</text>
</g>
<g >
<title>truncate_inode_pages_range (232,323,230 samples, 0.04%)</title><rect x="754.3" y="325" width="0.4" height="15.0" fill="rgb(213,45,33)" rx="2" ry="2" />
<text  x="757.28" y="335.5" ></text>
</g>
<g >
<title>rocksdb::VarintLength (181,818,180 samples, 0.03%)</title><rect x="596.6" y="405" width="0.4" height="15.0" fill="rgb(234,130,19)" rx="2" ry="2" />
<text  x="599.62" y="415.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::RecomputeSpliceLevels (60,606,060 samples, 0.01%)</title><rect x="137.1" y="597" width="0.1" height="15.0" fill="rgb(252,91,43)" rx="2" ry="2" />
<text  x="140.14" y="607.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (141,414,140 samples, 0.02%)</title><rect x="882.7" y="277" width="0.2" height="15.0" fill="rgb(250,89,34)" rx="2" ry="2" />
<text  x="885.68" y="287.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (222,222,220 samples, 0.03%)</title><rect x="906.3" y="325" width="0.4" height="15.0" fill="rgb(221,160,16)" rx="2" ry="2" />
<text  x="909.31" y="335.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (181,818,180 samples, 0.03%)</title><rect x="667.0" y="373" width="0.3" height="15.0" fill="rgb(207,51,54)" rx="2" ry="2" />
<text  x="669.98" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (414,141,410 samples, 0.06%)</title><rect x="101.2" y="485" width="0.8" height="15.0" fill="rgb(222,166,29)" rx="2" ry="2" />
<text  x="104.19" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (505,050,500 samples, 0.08%)</title><rect x="607.4" y="405" width="0.9" height="15.0" fill="rgb(247,174,50)" rx="2" ry="2" />
<text  x="610.41" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (181,818,180 samples, 0.03%)</title><rect x="885.9" y="389" width="0.4" height="15.0" fill="rgb(211,101,14)" rx="2" ry="2" />
<text  x="888.93" y="399.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey (414,141,410 samples, 0.06%)</title><rect x="1115.7" y="437" width="0.8" height="15.0" fill="rgb(220,154,42)" rx="2" ry="2" />
<text  x="1118.69" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::FlushBlockPolicy*, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt; (191,919,190 samples, 0.03%)</title><rect x="1074.7" y="405" width="0.3" height="15.0" fill="rgb(217,198,38)" rx="2" ry="2" />
<text  x="1077.69" y="415.5" ></text>
</g>
<g >
<title>std::move&lt;rocksdb::Status::SubCode&amp;&gt; (121,212,120 samples, 0.02%)</title><rect x="732.4" y="437" width="0.2" height="15.0" fill="rgb(206,199,22)" rx="2" ry="2" />
<text  x="735.41" y="447.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (242,424,240 samples, 0.04%)</title><rect x="1128.3" y="405" width="0.5" height="15.0" fill="rgb(214,94,27)" rx="2" ry="2" />
<text  x="1131.32" y="415.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;@plt (121,212,120 samples, 0.02%)</title><rect x="283.7" y="645" width="0.2" height="15.0" fill="rgb(214,43,11)" rx="2" ry="2" />
<text  x="286.71" y="655.5" ></text>
</g>
<g >
<title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (70,707,070 samples, 0.01%)</title><rect x="1115.6" y="437" width="0.1" height="15.0" fill="rgb(211,19,32)" rx="2" ry="2" />
<text  x="1118.56" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,434,343,380 samples, 0.85%)</title><rect x="171.9" y="645" width="10.0" height="15.0" fill="rgb(235,26,12)" rx="2" ry="2" />
<text  x="174.89" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (1,454,545,440 samples, 0.23%)</title><rect x="881.2" y="357" width="2.7" height="15.0" fill="rgb(211,110,43)" rx="2" ry="2" />
<text  x="884.19" y="367.5" ></text>
</g>
<g >
<title>rocksdb::Cleanable::DoCleanup (333,333,330 samples, 0.05%)</title><rect x="869.0" y="293" width="0.6" height="15.0" fill="rgb(245,134,7)" rx="2" ry="2" />
<text  x="872.01" y="303.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned long, rocksdb::RangeDelAggregator::StripeRep, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::end (212,121,210 samples, 0.03%)</title><rect x="656.4" y="389" width="0.4" height="15.0" fill="rgb(232,119,54)" rx="2" ry="2" />
<text  x="659.41" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_Auto_node::_M_key (202,020,200 samples, 0.03%)</title><rect x="63.8" y="597" width="0.4" height="15.0" fill="rgb(217,180,12)" rx="2" ry="2" />
<text  x="66.81" y="607.5" ></text>
</g>
<g >
<title>__GI___libc_write (1,696,969,680 samples, 0.27%)</title><rect x="35.6" y="629" width="3.2" height="15.0" fill="rgb(230,20,20)" rx="2" ry="2" />
<text  x="38.63" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (131,313,130 samples, 0.02%)</title><rect x="853.8" y="277" width="0.2" height="15.0" fill="rgb(235,85,18)" rx="2" ry="2" />
<text  x="856.77" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Mod&lt;unsigned long, 624ul, 1ul, 0ul, true, true&gt;::__calc (616,161,610 samples, 0.10%)</title><rect x="515.6" y="773" width="1.1" height="15.0" fill="rgb(236,197,53)" rx="2" ry="2" />
<text  x="518.56" y="783.5" ></text>
</g>
<g >
<title>__strlen_evex (80,808,080 samples, 0.01%)</title><rect x="543.0" y="773" width="0.1" height="15.0" fill="rgb(245,58,1)" rx="2" ry="2" />
<text  x="546.00" y="783.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::WriteBlock (3,797,979,760 samples, 0.59%)</title><rect x="1022.6" y="421" width="7.0" height="15.0" fill="rgb(212,60,15)" rx="2" ry="2" />
<text  x="1025.59" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::get (171,717,170 samples, 0.03%)</title><rect x="614.1" y="421" width="0.3" height="15.0" fill="rgb(244,9,2)" rx="2" ry="2" />
<text  x="617.10" y="431.5" ></text>
</g>
<g >
<title>rocksdb::PutVarint32Varint32Varint32 (656,565,650 samples, 0.10%)</title><rect x="582.7" y="405" width="1.3" height="15.0" fill="rgb(227,117,41)" rx="2" ry="2" />
<text  x="585.75" y="415.5" ></text>
</g>
<g >
<title>all (639,010,094,620 samples, 100%)</title><rect x="10.0" y="869" width="1180.0" height="15.0" fill="rgb(206,161,33)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::status (4,151,515,110 samples, 0.65%)</title><rect x="895.8" y="389" width="7.6" height="15.0" fill="rgb(239,64,12)" rx="2" ry="2" />
<text  x="898.77" y="399.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (2,636,363,610 samples, 0.41%)</title><rect x="1007.6" y="501" width="4.9" height="15.0" fill="rgb(222,132,26)" rx="2" ry="2" />
<text  x="1010.61" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned long, rocksdb::RangeDelAggregator::StripeRep, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::lower_bound (151,515,150 samples, 0.02%)</title><rect x="665.8" y="405" width="0.3" height="15.0" fill="rgb(241,100,53)" rx="2" ry="2" />
<text  x="668.81" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt;::end (171,717,170 samples, 0.03%)</title><rect x="621.9" y="437" width="0.4" height="15.0" fill="rgb(234,189,1)" rx="2" ry="2" />
<text  x="624.94" y="447.5" ></text>
</g>
<g >
<title>rocksdb::GetVarint32Ptr (1,565,656,550 samples, 0.25%)</title><rect x="683.7" y="373" width="2.9" height="15.0" fill="rgb(212,158,18)" rx="2" ry="2" />
<text  x="686.69" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="885.5" y="309" width="0.1" height="15.0" fill="rgb(217,177,15)" rx="2" ry="2" />
<text  x="888.46" y="319.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::NextEntryOffset@plt (131,313,130 samples, 0.02%)</title><rect x="872.6" y="341" width="0.3" height="15.0" fill="rgb(218,90,33)" rx="2" ry="2" />
<text  x="875.63" y="351.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::ResetDataIter (434,343,430 samples, 0.07%)</title><rect x="869.0" y="357" width="0.8" height="15.0" fill="rgb(235,2,39)" rx="2" ry="2" />
<text  x="871.99" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_ptr (404,040,400 samples, 0.06%)</title><rect x="697.6" y="373" width="0.8" height="15.0" fill="rgb(242,207,12)" rx="2" ry="2" />
<text  x="700.63" y="383.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (101,010,100 samples, 0.02%)</title><rect x="38.4" y="357" width="0.2" height="15.0" fill="rgb(224,33,0)" rx="2" ry="2" />
<text  x="41.37" y="367.5" ></text>
</g>
<g >
<title>memcmp@plt (111,111,110 samples, 0.02%)</title><rect x="791.5" y="341" width="0.2" height="15.0" fill="rgb(232,98,28)" rx="2" ry="2" />
<text  x="794.52" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (3,909,090,870 samples, 0.61%)</title><rect x="733.4" y="405" width="7.2" height="15.0" fill="rgb(237,14,16)" rx="2" ry="2" />
<text  x="736.37" y="415.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::InvokeFilterIfNeeded (191,919,190 samples, 0.03%)</title><rect x="916.1" y="485" width="0.4" height="15.0" fill="rgb(207,141,45)" rx="2" ry="2" />
<text  x="919.14" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (313,131,310 samples, 0.05%)</title><rect x="697.8" y="357" width="0.6" height="15.0" fill="rgb(234,41,47)" rx="2" ry="2" />
<text  x="700.80" y="367.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (70,707,070 samples, 0.01%)</title><rect x="70.5" y="565" width="0.1" height="15.0" fill="rgb(249,71,16)" rx="2" ry="2" />
<text  x="73.51" y="575.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently (35,939,393,580 samples, 5.62%)</title><rect x="71.4" y="613" width="66.4" height="15.0" fill="rgb(245,212,33)" rx="2" ry="2" />
<text  x="74.40" y="623.5" >rocksdb..</text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::get (292,929,290 samples, 0.05%)</title><rect x="1150.1" y="437" width="0.6" height="15.0" fill="rgb(219,151,12)" rx="2" ry="2" />
<text  x="1153.12" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (222,222,220 samples, 0.03%)</title><rect x="456.6" y="693" width="0.4" height="15.0" fill="rgb(232,32,26)" rx="2" ry="2" />
<text  x="459.56" y="703.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (202,020,200 samples, 0.03%)</title><rect x="963.0" y="421" width="0.3" height="15.0" fill="rgb(205,156,41)" rx="2" ry="2" />
<text  x="965.96" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::SstPartitioner*, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::_M_head (131,313,130 samples, 0.02%)</title><rect x="1156.2" y="389" width="0.3" height="15.0" fill="rgb(243,118,20)" rx="2" ry="2" />
<text  x="1159.22" y="399.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (111,111,110 samples, 0.02%)</title><rect x="754.9" y="821" width="0.2" height="15.0" fill="rgb(223,82,43)" rx="2" ry="2" />
<text  x="757.89" y="831.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (424,242,420 samples, 0.07%)</title><rect x="44.3" y="581" width="0.7" height="15.0" fill="rgb(248,190,16)" rx="2" ry="2" />
<text  x="47.26" y="591.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::WriteBlock (3,363,636,330 samples, 0.53%)</title><rect x="569.1" y="421" width="6.2" height="15.0" fill="rgb(227,132,25)" rx="2" ry="2" />
<text  x="572.11" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (80,808,080 samples, 0.01%)</title><rect x="598.0" y="405" width="0.1" height="15.0" fill="rgb(248,224,42)" rx="2" ry="2" />
<text  x="600.99" y="415.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (60,606,060 samples, 0.01%)</title><rect x="142.5" y="533" width="0.1" height="15.0" fill="rgb(253,121,22)" rx="2" ry="2" />
<text  x="145.49" y="543.5" ></text>
</g>
<g >
<title>rocksdb::MemTableIterator::value (2,555,555,530 samples, 0.40%)</title><rect x="682.6" y="405" width="4.8" height="15.0" fill="rgb(210,61,28)" rx="2" ry="2" />
<text  x="685.63" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (252,525,250 samples, 0.04%)</title><rect x="711.1" y="389" width="0.4" height="15.0" fill="rgb(251,28,49)" rx="2" ry="2" />
<text  x="714.08" y="399.5" ></text>
</g>
<g >
<title>do_anonymous_page (262,626,260 samples, 0.04%)</title><rect x="559.6" y="725" width="0.4" height="15.0" fill="rgb(238,192,27)" rx="2" ry="2" />
<text  x="562.56" y="735.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (242,424,240 samples, 0.04%)</title><rect x="850.1" y="325" width="0.5" height="15.0" fill="rgb(250,204,29)" rx="2" ry="2" />
<text  x="853.13" y="335.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (161,616,160 samples, 0.03%)</title><rect x="1027.0" y="149" width="0.3" height="15.0" fill="rgb(249,82,25)" rx="2" ry="2" />
<text  x="1030.00" y="159.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::IntTblPropCollector*, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="1065.1" y="389" width="0.2" height="15.0" fill="rgb(238,70,18)" rx="2" ry="2" />
<text  x="1068.14" y="399.5" ></text>
</g>
<g >
<title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Release (191,919,190 samples, 0.03%)</title><rect x="832.0" y="229" width="0.3" height="15.0" fill="rgb(246,123,44)" rx="2" ry="2" />
<text  x="834.96" y="239.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (323,232,320 samples, 0.05%)</title><rect x="724.7" y="389" width="0.6" height="15.0" fill="rgb(212,208,49)" rx="2" ry="2" />
<text  x="727.69" y="399.5" ></text>
</g>
<g >
<title>rocksdb::EncodeVarint32 (494,949,490 samples, 0.08%)</title><rect x="583.0" y="389" width="1.0" height="15.0" fill="rgb(252,218,30)" rx="2" ry="2" />
<text  x="586.04" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (393,939,390 samples, 0.06%)</title><rect x="739.8" y="325" width="0.8" height="15.0" fill="rgb(215,97,44)" rx="2" ry="2" />
<text  x="742.84" y="335.5" ></text>
</g>
<g >
<title>rocksdb::CompactionJob::FinishCompactionOutputFile (161,616,160 samples, 0.03%)</title><rect x="1145.9" y="389" width="0.3" height="15.0" fill="rgb(205,43,29)" rx="2" ry="2" />
<text  x="1148.91" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, unsigned int&amp;, unsigned long&amp;&gt;::_Tuple_impl (101,010,100 samples, 0.02%)</title><rect x="472.9" y="693" width="0.2" height="15.0" fill="rgb(241,32,20)" rx="2" ry="2" />
<text  x="475.88" y="703.5" ></text>
</g>
<g >
<title>XXH3_hashLong_64b_default (171,717,170 samples, 0.03%)</title><rect x="826.6" y="165" width="0.3" height="15.0" fill="rgb(219,37,10)" rx="2" ry="2" />
<text  x="829.55" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (818,181,810 samples, 0.13%)</title><rect x="879.2" y="357" width="1.5" height="15.0" fill="rgb(229,125,45)" rx="2" ry="2" />
<text  x="882.21" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;::_Rb_tree_iterator (444,444,440 samples, 0.07%)</title><rect x="949.4" y="405" width="0.8" height="15.0" fill="rgb(218,219,43)" rx="2" ry="2" />
<text  x="952.42" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (191,919,190 samples, 0.03%)</title><rect x="495.2" y="725" width="0.3" height="15.0" fill="rgb(239,31,14)" rx="2" ry="2" />
<text  x="498.17" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (202,020,200 samples, 0.03%)</title><rect x="894.2" y="389" width="0.4" height="15.0" fill="rgb(208,160,23)" rx="2" ry="2" />
<text  x="897.19" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt;::begin (212,121,210 samples, 0.03%)</title><rect x="1092.7" y="421" width="0.4" height="15.0" fill="rgb(225,167,5)" rx="2" ry="2" />
<text  x="1095.69" y="431.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (404,040,400 samples, 0.06%)</title><rect x="559.4" y="821" width="0.7" height="15.0" fill="rgb(254,116,4)" rx="2" ry="2" />
<text  x="562.39" y="831.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (80,808,080 samples, 0.01%)</title><rect x="1179.3" y="421" width="0.1" height="15.0" fill="rgb(235,41,3)" rx="2" ry="2" />
<text  x="1182.29" y="431.5" ></text>
</g>
<g >
<title>rocksdb::SubcompactionState::AddToOutput@plt (80,808,080 samples, 0.01%)</title><rect x="1176.3" y="517" width="0.2" height="15.0" fill="rgb(216,8,28)" rx="2" ry="2" />
<text  x="1179.33" y="527.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (131,313,130 samples, 0.02%)</title><rect x="960.4" y="421" width="0.2" height="15.0" fill="rgb(222,120,3)" rx="2" ry="2" />
<text  x="963.39" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::operator (131,313,130 samples, 0.02%)</title><rect x="1156.6" y="469" width="0.3" height="15.0" fill="rgb(213,192,10)" rx="2" ry="2" />
<text  x="1159.63" y="479.5" ></text>
</g>
<g >
<title>new_sync_write (818,181,810 samples, 0.13%)</title><rect x="572.1" y="213" width="1.5" height="15.0" fill="rgb(250,203,5)" rx="2" ry="2" />
<text  x="575.11" y="223.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (242,424,240 samples, 0.04%)</title><rect x="44.6" y="437" width="0.4" height="15.0" fill="rgb(233,7,33)" rx="2" ry="2" />
<text  x="47.60" y="447.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::replace_top (16,636,363,470 samples, 2.60%)</title><rect x="776.4" y="437" width="30.7" height="15.0" fill="rgb(226,23,23)" rx="2" ry="2" />
<text  x="779.40" y="447.5" >ro..</text>
</g>
<g >
<title>rocksdb::DecodeFixed64 (131,313,130 samples, 0.02%)</title><rect x="591.1" y="405" width="0.2" height="15.0" fill="rgb(233,153,40)" rx="2" ry="2" />
<text  x="594.10" y="415.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::allocate (60,606,060 samples, 0.01%)</title><rect x="63.0" y="549" width="0.1" height="15.0" fill="rgb(211,46,1)" rx="2" ry="2" />
<text  x="65.97" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::DynamicBloom, std::default_delete&lt;rocksdb::DynamicBloom&gt; &gt;::get (454,545,450 samples, 0.07%)</title><rect x="140.5" y="613" width="0.8" height="15.0" fill="rgb(207,202,49)" rx="2" ry="2" />
<text  x="143.49" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::end@plt (90,909,090 samples, 0.01%)</title><rect x="1108.4" y="453" width="0.2" height="15.0" fill="rgb(228,55,38)" rx="2" ry="2" />
<text  x="1111.43" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (131,313,130 samples, 0.02%)</title><rect x="905.1" y="293" width="0.3" height="15.0" fill="rgb(219,130,49)" rx="2" ry="2" />
<text  x="908.14" y="303.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::AddWithLastKey (4,434,343,390 samples, 0.69%)</title><rect x="580.6" y="437" width="8.2" height="15.0" fill="rgb(219,226,31)" rx="2" ry="2" />
<text  x="583.60" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="847.5" y="229" width="0.2" height="15.0" fill="rgb(246,229,15)" rx="2" ry="2" />
<text  x="850.54" y="239.5" ></text>
</g>
<g >
<title>rocksdb::IsValueType (101,010,100 samples, 0.02%)</title><rect x="650.6" y="389" width="0.2" height="15.0" fill="rgb(222,54,25)" rx="2" ry="2" />
<text  x="653.62" y="399.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="905.6" y="277" width="0.1" height="15.0" fill="rgb(220,182,42)" rx="2" ry="2" />
<text  x="908.60" y="287.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (202,020,200 samples, 0.03%)</title><rect x="283.9" y="645" width="0.4" height="15.0" fill="rgb(240,203,29)" rx="2" ry="2" />
<text  x="286.93" y="655.5" ></text>
</g>
<g >
<title>handle_pte_fault (272,727,270 samples, 0.04%)</title><rect x="559.5" y="741" width="0.5" height="15.0" fill="rgb(212,47,7)" rx="2" ry="2" />
<text  x="562.54" y="751.5" ></text>
</g>
<g >
<title>__x64_sys_fdatasync (131,313,130 samples, 0.02%)</title><rect x="562.0" y="405" width="0.3" height="15.0" fill="rgb(208,100,18)" rx="2" ry="2" />
<text  x="565.04" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::operator bool@plt (171,717,170 samples, 0.03%)</title><rect x="976.1" y="469" width="0.3" height="15.0" fill="rgb(251,96,17)" rx="2" ry="2" />
<text  x="979.11" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (616,161,610 samples, 0.10%)</title><rect x="577.6" y="373" width="1.1" height="15.0" fill="rgb(242,78,0)" rx="2" ry="2" />
<text  x="580.56" y="383.5" ></text>
</g>
<g >
<title>rocksdb::PlaceholderCacheInterface&lt; (505,050,500 samples, 0.08%)</title><rect x="867.4" y="325" width="0.9" height="15.0" fill="rgb(242,89,16)" rx="2" ry="2" />
<text  x="870.37" y="335.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (626,262,620 samples, 0.10%)</title><rect x="447.6" y="709" width="1.2" height="15.0" fill="rgb(211,13,50)" rx="2" ry="2" />
<text  x="450.63" y="719.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::CurrentForward (4,919,191,870 samples, 0.77%)</title><rect x="808.3" y="437" width="9.0" height="15.0" fill="rgb(234,223,44)" rx="2" ry="2" />
<text  x="811.26" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::get (868,686,860 samples, 0.14%)</title><rect x="1064.9" y="421" width="1.6" height="15.0" fill="rgb(206,19,17)" rx="2" ry="2" />
<text  x="1067.90" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (131,313,130 samples, 0.02%)</title><rect x="579.8" y="405" width="0.2" height="15.0" fill="rgb(250,16,47)" rx="2" ry="2" />
<text  x="582.76" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt;::base (161,616,160 samples, 0.03%)</title><rect x="1059.6" y="437" width="0.3" height="15.0" fill="rgb(218,45,51)" rx="2" ry="2" />
<text  x="1062.58" y="447.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (1,898,989,880 samples, 0.30%)</title><rect x="789.6" y="357" width="3.5" height="15.0" fill="rgb(227,151,18)" rx="2" ry="2" />
<text  x="792.57" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (333,333,330 samples, 0.05%)</title><rect x="906.2" y="357" width="0.6" height="15.0" fill="rgb(236,210,33)" rx="2" ry="2" />
<text  x="909.16" y="367.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::SuperVersionContext::WriteStallNotification, 8ul&gt;::~autovector (161,616,160 samples, 0.03%)</title><rect x="29.9" y="693" width="0.3" height="15.0" fill="rgb(206,92,10)" rx="2" ry="2" />
<text  x="32.94" y="703.5" ></text>
</g>
<g >
<title>rocksdb::FlushJob::Run (103,959,594,920 samples, 16.27%)</title><rect x="562.3" y="501" width="192.0" height="15.0" fill="rgb(206,112,30)" rx="2" ry="2" />
<text  x="565.28" y="511.5" >rocksdb::FlushJob::Run</text>
</g>
<g >
<title>std::operator&amp; (70,707,070 samples, 0.01%)</title><rect x="1167.3" y="453" width="0.2" height="15.0" fill="rgb(232,112,42)" rx="2" ry="2" />
<text  x="1170.34" y="463.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (70,707,070 samples, 0.01%)</title><rect x="1034.7" y="421" width="0.1" height="15.0" fill="rgb(239,136,51)" rx="2" ry="2" />
<text  x="1037.70" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__mod&lt;unsigned long, 624ul, 1ul, 0ul&gt; (6,898,989,830 samples, 1.08%)</title><rect x="529.7" y="773" width="12.8" height="15.0" fill="rgb(219,150,29)" rx="2" ry="2" />
<text  x="532.72" y="783.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (70,707,070 samples, 0.01%)</title><rect x="457.0" y="645" width="0.2" height="15.0" fill="rgb(245,11,45)" rx="2" ry="2" />
<text  x="460.05" y="655.5" ></text>
</g>
<g >
<title>fault_in_iov_iter_readable (80,808,080 samples, 0.01%)</title><rect x="1027.6" y="165" width="0.1" height="15.0" fill="rgb(247,199,8)" rx="2" ry="2" />
<text  x="1030.57" y="175.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::ShouldFlushNow (232,323,230 samples, 0.04%)</title><rect x="54.5" y="661" width="0.5" height="15.0" fill="rgb(241,189,47)" rx="2" ry="2" />
<text  x="57.52" y="671.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::FindNextVisibleKey (141,414,140 samples, 0.02%)</title><rect x="773.7" y="453" width="0.3" height="15.0" fill="rgb(244,122,37)" rx="2" ry="2" />
<text  x="776.71" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (292,929,290 samples, 0.05%)</title><rect x="1143.7" y="405" width="0.5" height="15.0" fill="rgb(205,79,34)" rx="2" ry="2" />
<text  x="1146.67" y="415.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (90,909,090 samples, 0.01%)</title><rect x="850.0" y="325" width="0.1" height="15.0" fill="rgb(222,23,48)" rx="2" ry="2" />
<text  x="852.96" y="335.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::CompactionIterator*, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt; (282,828,280 samples, 0.04%)</title><rect x="1171.8" y="453" width="0.6" height="15.0" fill="rgb(220,57,35)" rx="2" ry="2" />
<text  x="1174.83" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (191,919,190 samples, 0.03%)</title><rect x="1111.5" y="453" width="0.4" height="15.0" fill="rgb(253,107,22)" rx="2" ry="2" />
<text  x="1114.53" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (121,212,120 samples, 0.02%)</title><rect x="663.8" y="389" width="0.3" height="15.0" fill="rgb(226,69,32)" rx="2" ry="2" />
<text  x="666.83" y="399.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (212,121,210 samples, 0.03%)</title><rect x="896.4" y="341" width="0.4" height="15.0" fill="rgb(245,208,52)" rx="2" ry="2" />
<text  x="899.37" y="351.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (70,707,070 samples, 0.01%)</title><rect x="591.4" y="405" width="0.1" height="15.0" fill="rgb(229,77,23)" rx="2" ry="2" />
<text  x="594.40" y="415.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (3,303,030,270 samples, 0.52%)</title><rect x="825.5" y="309" width="6.1" height="15.0" fill="rgb(242,13,20)" rx="2" ry="2" />
<text  x="828.45" y="319.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (252,525,250 samples, 0.04%)</title><rect x="663.0" y="309" width="0.5" height="15.0" fill="rgb(217,177,30)" rx="2" ry="2" />
<text  x="666.01" y="319.5" ></text>
</g>
<g >
<title>std::forward&lt;std::piecewise_construct_t const&amp;&gt; (70,707,070 samples, 0.01%)</title><rect x="65.6" y="613" width="0.1" height="15.0" fill="rgb(249,11,22)" rx="2" ry="2" />
<text  x="68.60" y="623.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::CASNext (1,686,868,670 samples, 0.26%)</title><rect x="73.5" y="581" width="3.2" height="15.0" fill="rgb(228,164,49)" rx="2" ry="2" />
<text  x="76.55" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (101,010,100 samples, 0.02%)</title><rect x="41.9" y="613" width="0.2" height="15.0" fill="rgb(212,184,34)" rx="2" ry="2" />
<text  x="44.90" y="623.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::IOStatus (60,606,060 samples, 0.01%)</title><rect x="42.1" y="613" width="0.1" height="15.0" fill="rgb(254,138,40)" rx="2" ry="2" />
<text  x="45.10" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt;::begin (161,616,160 samples, 0.03%)</title><rect x="1079.4" y="453" width="0.3" height="15.0" fill="rgb(205,125,44)" rx="2" ry="2" />
<text  x="1082.41" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="903.0" y="325" width="0.1" height="15.0" fill="rgb(223,149,32)" rx="2" ry="2" />
<text  x="905.99" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,636,363,620 samples, 0.26%)</title><rect x="35.7" y="613" width="3.1" height="15.0" fill="rgb(216,117,27)" rx="2" ry="2" />
<text  x="38.74" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (141,414,140 samples, 0.02%)</title><rect x="574.5" y="389" width="0.3" height="15.0" fill="rgb(230,190,25)" rx="2" ry="2" />
<text  x="577.54" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::rend (343,434,340 samples, 0.05%)</title><rect x="701.1" y="421" width="0.6" height="15.0" fill="rgb(205,107,3)" rx="2" ry="2" />
<text  x="704.06" y="431.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (646,464,640 samples, 0.10%)</title><rect x="1118.5" y="421" width="1.2" height="15.0" fill="rgb(225,213,23)" rx="2" ry="2" />
<text  x="1121.50" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, unsigned long&amp;&gt;::_M_assign&lt;unsigned long&gt; (80,808,080 samples, 0.01%)</title><rect x="475.5" y="709" width="0.2" height="15.0" fill="rgb(251,153,29)" rx="2" ry="2" />
<text  x="478.51" y="719.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (484,848,480 samples, 0.08%)</title><rect x="893.7" y="421" width="0.9" height="15.0" fill="rgb(205,74,17)" rx="2" ry="2" />
<text  x="896.67" y="431.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::use_direct_io (80,808,080 samples, 0.01%)</title><rect x="43.1" y="645" width="0.2" height="15.0" fill="rgb(232,41,32)" rx="2" ry="2" />
<text  x="46.15" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (363,636,360 samples, 0.06%)</title><rect x="737.7" y="325" width="0.7" height="15.0" fill="rgb(209,79,23)" rx="2" ry="2" />
<text  x="740.71" y="335.5" ></text>
</g>
<g >
<title>rocksdb::FileMetaData::UpdateBoundaries (232,323,230 samples, 0.04%)</title><rect x="1161.3" y="485" width="0.5" height="15.0" fill="rgb(239,212,30)" rx="2" ry="2" />
<text  x="1164.33" y="495.5" ></text>
</g>
<g >
<title>__test_set_page_writeback (70,707,070 samples, 0.01%)</title><rect x="1146.0" y="117" width="0.1" height="15.0" fill="rgb(232,40,6)" rx="2" ry="2" />
<text  x="1149.02" y="127.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator-- (60,606,060 samples, 0.01%)</title><rect x="459.1" y="725" width="0.1" height="15.0" fill="rgb(222,107,9)" rx="2" ry="2" />
<text  x="462.10" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (292,929,290 samples, 0.05%)</title><rect x="843.0" y="293" width="0.5" height="15.0" fill="rgb(215,107,50)" rx="2" ry="2" />
<text  x="845.99" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::operator (676,767,670 samples, 0.11%)</title><rect x="891.4" y="405" width="1.3" height="15.0" fill="rgb(235,1,38)" rx="2" ry="2" />
<text  x="894.45" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (434,343,430 samples, 0.07%)</title><rect x="1006.8" y="501" width="0.8" height="15.0" fill="rgb(215,65,46)" rx="2" ry="2" />
<text  x="1009.81" y="511.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (484,848,480 samples, 0.08%)</title><rect x="274.2" y="661" width="0.9" height="15.0" fill="rgb(216,31,46)" rx="2" ry="2" />
<text  x="277.18" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (121,212,120 samples, 0.02%)</title><rect x="885.4" y="357" width="0.2" height="15.0" fill="rgb(228,149,16)" rx="2" ry="2" />
<text  x="888.37" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, unsigned int&amp;, unsigned long&amp;&gt;::_M_assign&lt;unsigned int, unsigned long&gt; (515,151,510 samples, 0.08%)</title><rect x="474.3" y="709" width="0.9" height="15.0" fill="rgb(205,156,34)" rx="2" ry="2" />
<text  x="477.26" y="719.5" ></text>
</g>
<g >
<title>rocksdb::Compaction::output_level (80,808,080 samples, 0.01%)</title><rect x="1086.1" y="453" width="0.2" height="15.0" fill="rgb(223,123,42)" rx="2" ry="2" />
<text  x="1089.11" y="463.5" ></text>
</g>
<g >
<title>TLS init function for rocksdb::perf_context (191,919,190 samples, 0.03%)</title><rect x="106.9" y="469" width="0.3" height="15.0" fill="rgb(212,107,43)" rx="2" ry="2" />
<text  x="109.88" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_insert_unique_pos (191,919,190 samples, 0.03%)</title><rect x="64.3" y="581" width="0.3" height="15.0" fill="rgb(248,225,13)" rx="2" ry="2" />
<text  x="67.28" y="591.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::operator= (60,606,060 samples, 0.01%)</title><rect x="1026.2" y="357" width="0.1" height="15.0" fill="rgb(237,137,6)" rx="2" ry="2" />
<text  x="1029.21" y="367.5" ></text>
</g>
<g >
<title>rocksdb::FSWritableFilePtr::operator (80,808,080 samples, 0.01%)</title><rect x="43.1" y="629" width="0.2" height="15.0" fill="rgb(234,153,35)" rx="2" ry="2" />
<text  x="46.15" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (383,838,380 samples, 0.06%)</title><rect x="882.3" y="325" width="0.7" height="15.0" fill="rgb(237,4,39)" rx="2" ry="2" />
<text  x="885.25" y="335.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::ok (2,353,535,330 samples, 0.37%)</title><rect x="576.2" y="437" width="4.4" height="15.0" fill="rgb(250,195,15)" rx="2" ry="2" />
<text  x="579.24" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (202,020,200 samples, 0.03%)</title><rect x="729.2" y="437" width="0.3" height="15.0" fill="rgb(254,49,22)" rx="2" ry="2" />
<text  x="732.17" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (80,808,080 samples, 0.01%)</title><rect x="457.3" y="709" width="0.1" height="15.0" fill="rgb(221,163,10)" rx="2" ry="2" />
<text  x="460.29" y="719.5" ></text>
</g>
<g >
<title>vfs_write (1,434,343,420 samples, 0.22%)</title><rect x="36.1" y="549" width="2.6" height="15.0" fill="rgb(251,113,13)" rx="2" ry="2" />
<text  x="39.08" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (171,717,170 samples, 0.03%)</title><rect x="809.8" y="389" width="0.3" height="15.0" fill="rgb(244,33,44)" rx="2" ry="2" />
<text  x="812.79" y="399.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ExtractLargeValueIfNeeded (60,606,060 samples, 0.01%)</title><rect x="979.2" y="469" width="0.1" height="15.0" fill="rgb(244,125,45)" rx="2" ry="2" />
<text  x="982.21" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::operator (323,232,320 samples, 0.05%)</title><rect x="621.0" y="437" width="0.6" height="15.0" fill="rgb(229,110,49)" rx="2" ry="2" />
<text  x="624.02" y="447.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="1013.1" y="405" width="0.1" height="15.0" fill="rgb(215,207,42)" rx="2" ry="2" />
<text  x="1016.06" y="415.5" ></text>
</g>
<g >
<title>do_sched_yield (282,828,280 samples, 0.04%)</title><rect x="421.3" y="629" width="0.5" height="15.0" fill="rgb(211,152,8)" rx="2" ry="2" />
<text  x="424.33" y="639.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::CompactionOutputs::Output const*, std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt; &gt;::__normal_iterator (222,222,220 samples, 0.03%)</title><rect x="1104.6" y="437" width="0.5" height="15.0" fill="rgb(238,137,15)" rx="2" ry="2" />
<text  x="1107.65" y="447.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::IsKeyPinned (70,707,070 samples, 0.01%)</title><rect x="875.3" y="309" width="0.1" height="15.0" fill="rgb(222,82,17)" rx="2" ry="2" />
<text  x="878.29" y="319.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::FilterBlockBuilder*, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="1072.0" y="389" width="0.2" height="15.0" fill="rgb(219,210,35)" rx="2" ry="2" />
<text  x="1075.00" y="399.5" ></text>
</g>
<g >
<title>rocksdb::Random::OneIn (70,707,070 samples, 0.01%)</title><rect x="161.8" y="693" width="0.2" height="15.0" fill="rgb(210,203,0)" rx="2" ry="2" />
<text  x="164.83" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (151,515,150 samples, 0.02%)</title><rect x="846.2" y="325" width="0.2" height="15.0" fill="rgb(248,185,48)" rx="2" ry="2" />
<text  x="849.16" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::operator (545,454,540 samples, 0.09%)</title><rect x="1001.7" y="485" width="1.0" height="15.0" fill="rgb(242,19,26)" rx="2" ry="2" />
<text  x="1004.68" y="495.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::value (727,272,720 samples, 0.11%)</title><rect x="964.0" y="405" width="1.4" height="15.0" fill="rgb(241,165,20)" rx="2" ry="2" />
<text  x="967.02" y="415.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock (383,838,380 samples, 0.06%)</title><rect x="1022.6" y="405" width="0.7" height="15.0" fill="rgb(238,167,1)" rx="2" ry="2" />
<text  x="1025.59" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (959,595,950 samples, 0.15%)</title><rect x="102.0" y="485" width="1.7" height="15.0" fill="rgb(224,115,53)" rx="2" ry="2" />
<text  x="104.96" y="495.5" ></text>
</g>
<g >
<title>_int_free (151,515,150 samples, 0.02%)</title><rect x="10.7" y="821" width="0.3" height="15.0" fill="rgb(222,103,3)" rx="2" ry="2" />
<text  x="13.71" y="831.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (222,222,220 samples, 0.03%)</title><rect x="888.4" y="325" width="0.4" height="15.0" fill="rgb(214,126,4)" rx="2" ry="2" />
<text  x="891.39" y="335.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status (4,262,626,220 samples, 0.67%)</title><rect x="878.5" y="405" width="7.8" height="15.0" fill="rgb(243,205,48)" rx="2" ry="2" />
<text  x="881.46" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (272,727,270 samples, 0.04%)</title><rect x="882.4" y="309" width="0.5" height="15.0" fill="rgb(252,128,1)" rx="2" ry="2" />
<text  x="885.44" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;::_Deque_iterator (393,939,390 samples, 0.06%)</title><rect x="994.8" y="421" width="0.7" height="15.0" fill="rgb(232,92,39)" rx="2" ry="2" />
<text  x="997.82" y="431.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (90,909,090 samples, 0.01%)</title><rect x="1063.9" y="373" width="0.1" height="15.0" fill="rgb(237,190,49)" rx="2" ry="2" />
<text  x="1066.85" y="383.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ExtractLargeValueIfNeeded (343,434,340 samples, 0.05%)</title><rect x="915.3" y="485" width="0.7" height="15.0" fill="rgb(249,2,8)" rx="2" ry="2" />
<text  x="918.34" y="495.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid (262,626,260 samples, 0.04%)</title><rect x="708.4" y="453" width="0.4" height="15.0" fill="rgb(224,198,50)" rx="2" ry="2" />
<text  x="711.35" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (434,343,430 samples, 0.07%)</title><rect x="1133.9" y="421" width="0.8" height="15.0" fill="rgb(211,120,38)" rx="2" ry="2" />
<text  x="1136.89" y="431.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (60,606,060 samples, 0.01%)</title><rect x="805.1" y="373" width="0.1" height="15.0" fill="rgb(249,91,48)" rx="2" ry="2" />
<text  x="808.09" y="383.5" ></text>
</g>
<g >
<title>rocksdb::EncodeVarint32 (60,606,060 samples, 0.01%)</title><rect x="470.2" y="709" width="0.1" height="15.0" fill="rgb(235,27,42)" rx="2" ry="2" />
<text  x="473.23" y="719.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Invalidate (373,737,370 samples, 0.06%)</title><rect x="869.0" y="325" width="0.7" height="15.0" fill="rgb(236,179,16)" rx="2" ry="2" />
<text  x="872.01" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SstPartitioner, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::get (202,020,200 samples, 0.03%)</title><rect x="1096.0" y="453" width="0.4" height="15.0" fill="rgb(230,57,8)" rx="2" ry="2" />
<text  x="1099.01" y="463.5" ></text>
</g>
<g >
<title>alloc_pages_vma (151,515,150 samples, 0.02%)</title><rect x="559.7" y="709" width="0.3" height="15.0" fill="rgb(243,204,23)" rx="2" ry="2" />
<text  x="562.71" y="719.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (848,484,840 samples, 0.13%)</title><rect x="718.8" y="405" width="1.5" height="15.0" fill="rgb(241,113,32)" rx="2" ry="2" />
<text  x="721.78" y="415.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::Crc32cCombine (565,656,560 samples, 0.09%)</title><rect x="44.1" y="661" width="1.0" height="15.0" fill="rgb(219,168,1)" rx="2" ry="2" />
<text  x="47.06" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (101,010,100 samples, 0.02%)</title><rect x="903.0" y="341" width="0.1" height="15.0" fill="rgb(210,47,32)" rx="2" ry="2" />
<text  x="905.96" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::~unique_ptr (161,616,160 samples, 0.03%)</title><rect x="478.6" y="741" width="0.3" height="15.0" fill="rgb(223,13,32)" rx="2" ry="2" />
<text  x="481.65" y="751.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (161,616,160 samples, 0.03%)</title><rect x="898.6" y="277" width="0.3" height="15.0" fill="rgb(234,72,18)" rx="2" ry="2" />
<text  x="901.61" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (141,414,140 samples, 0.02%)</title><rect x="848.5" y="341" width="0.3" height="15.0" fill="rgb(221,169,52)" rx="2" ry="2" />
<text  x="851.49" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (181,818,180 samples, 0.03%)</title><rect x="911.2" y="373" width="0.3" height="15.0" fill="rgb(251,37,44)" rx="2" ry="2" />
<text  x="914.20" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Block::ApproximateMemoryUsage (60,606,060 samples, 0.01%)</title><rect x="825.5" y="293" width="0.1" height="15.0" fill="rgb(254,22,39)" rx="2" ry="2" />
<text  x="828.47" y="303.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt; const, rocksdb::CompactionMergingIterator::HeapItem* const&gt;::iterator_impl (70,707,070 samples, 0.01%)</title><rect x="812.6" y="373" width="0.1" height="15.0" fill="rgb(249,97,38)" rx="2" ry="2" />
<text  x="815.60" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (131,313,130 samples, 0.02%)</title><rect x="856.9" y="277" width="0.3" height="15.0" fill="rgb(219,178,51)" rx="2" ry="2" />
<text  x="859.94" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (141,414,140 samples, 0.02%)</title><rect x="907.1" y="341" width="0.2" height="15.0" fill="rgb(232,92,21)" rx="2" ry="2" />
<text  x="910.06" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (111,111,110 samples, 0.02%)</title><rect x="912.1" y="373" width="0.2" height="15.0" fill="rgb(206,168,34)" rx="2" ry="2" />
<text  x="915.11" y="383.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count@plt (161,616,160 samples, 0.03%)</title><rect x="256.2" y="677" width="0.3" height="15.0" fill="rgb(223,104,33)" rx="2" ry="2" />
<text  x="259.23" y="687.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::IndexBuilder*, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt; (373,737,370 samples, 0.06%)</title><rect x="620.2" y="389" width="0.7" height="15.0" fill="rgb(246,103,36)" rx="2" ry="2" />
<text  x="623.22" y="399.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, std::_Bind&lt;void  (104,343,433,300 samples, 16.33%)</title><rect x="562.0" y="677" width="192.7" height="15.0" fill="rgb(212,95,53)" rx="2" ry="2" />
<text  x="565.04" y="687.5" >std::__invoke_r&lt;void, std..</text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::key (646,464,640 samples, 0.10%)</title><rect x="960.7" y="469" width="1.2" height="15.0" fill="rgb(240,118,37)" rx="2" ry="2" />
<text  x="963.67" y="479.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::GetInstance (60,606,060 samples, 0.01%)</title><rect x="1164.8" y="501" width="0.1" height="15.0" fill="rgb(233,215,19)" rx="2" ry="2" />
<text  x="1167.82" y="511.5" ></text>
</g>
<g >
<title>rocksdb::ExtractValueType (575,757,570 samples, 0.09%)</title><rect x="590.6" y="437" width="1.1" height="15.0" fill="rgb(240,197,45)" rx="2" ry="2" />
<text  x="593.64" y="447.5" ></text>
</g>
<g >
<title>rocksdb::FileMetaData::UpdateBoundaries (1,606,060,590 samples, 0.25%)</title><rect x="709.5" y="453" width="3.0" height="15.0" fill="rgb(225,113,34)" rx="2" ry="2" />
<text  x="712.51" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (121,212,120 samples, 0.02%)</title><rect x="597.8" y="405" width="0.2" height="15.0" fill="rgb(234,209,7)" rx="2" ry="2" />
<text  x="600.76" y="415.5" ></text>
</g>
<g >
<title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (60,606,060 samples, 0.01%)</title><rect x="597.4" y="421" width="0.1" height="15.0" fill="rgb(206,151,35)" rx="2" ry="2" />
<text  x="600.41" y="431.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="851.5" y="325" width="0.1" height="15.0" fill="rgb(232,133,49)" rx="2" ry="2" />
<text  x="854.47" y="335.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::Valid (121,212,120 samples, 0.02%)</title><rect x="963.7" y="405" width="0.2" height="15.0" fill="rgb(209,150,45)" rx="2" ry="2" />
<text  x="966.69" y="415.5" ></text>
</g>
<g >
<title>__memset_evex_unaligned_erms (80,808,080 samples, 0.01%)</title><rect x="839.7" y="341" width="0.2" height="15.0" fill="rgb(230,130,11)" rx="2" ry="2" />
<text  x="842.74" y="351.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (535,353,530 samples, 0.08%)</title><rect x="734.9" y="357" width="1.0" height="15.0" fill="rgb(221,44,3)" rx="2" ry="2" />
<text  x="737.88" y="367.5" ></text>
</g>
<g >
<title>rocksdb::IsExtendedValueType (272,727,270 samples, 0.04%)</title><rect x="650.3" y="405" width="0.5" height="15.0" fill="rgb(232,24,38)" rx="2" ry="2" />
<text  x="653.31" y="415.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::get_offset (323,232,320 samples, 0.05%)</title><rect x="575.6" y="437" width="0.6" height="15.0" fill="rgb(216,148,15)" rx="2" ry="2" />
<text  x="578.64" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (101,010,100 samples, 0.02%)</title><rect x="850.7" y="389" width="0.2" height="15.0" fill="rgb(221,10,43)" rx="2" ry="2" />
<text  x="853.75" y="399.5" ></text>
</g>
<g >
<title>XXH3_hashLong_internal_loop (424,242,420 samples, 0.07%)</title><rect x="1023.8" y="309" width="0.8" height="15.0" fill="rgb(253,225,47)" rx="2" ry="2" />
<text  x="1026.84" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (232,323,230 samples, 0.04%)</title><rect x="1124.3" y="453" width="0.4" height="15.0" fill="rgb(216,110,36)" rx="2" ry="2" />
<text  x="1127.31" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::Tracer, std::default_delete&lt;rocksdb::Tracer&gt; &gt;::_M_ptr (181,818,180 samples, 0.03%)</title><rect x="459.8" y="693" width="0.3" height="15.0" fill="rgb(208,142,51)" rx="2" ry="2" />
<text  x="462.79" y="703.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::reset_root_cmp_cache (131,313,130 samples, 0.02%)</title><rect x="801.6" y="421" width="0.2" height="15.0" fill="rgb(241,194,12)" rx="2" ry="2" />
<text  x="804.56" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (171,717,170 samples, 0.03%)</title><rect x="1145.1" y="469" width="0.3" height="15.0" fill="rgb(223,171,20)" rx="2" ry="2" />
<text  x="1148.08" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (101,010,100 samples, 0.02%)</title><rect x="148.7" y="613" width="0.2" height="15.0" fill="rgb(214,188,30)" rx="2" ry="2" />
<text  x="151.70" y="623.5" ></text>
</g>
<g >
<title>std::mutex::lock (60,606,060 samples, 0.01%)</title><rect x="26.5" y="677" width="0.1" height="15.0" fill="rgb(212,189,40)" rx="2" ry="2" />
<text  x="29.45" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::DynamicBloom, std::default_delete&lt;rocksdb::DynamicBloom&gt; &gt;::_M_ptr (60,606,060 samples, 0.01%)</title><rect x="140.4" y="613" width="0.1" height="15.0" fill="rgb(246,78,10)" rx="2" ry="2" />
<text  x="143.36" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (2,080,808,060 samples, 0.33%)</title><rect x="886.4" y="389" width="3.8" height="15.0" fill="rgb(239,109,3)" rx="2" ry="2" />
<text  x="889.35" y="399.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::status (4,949,494,900 samples, 0.77%)</title><rect x="903.5" y="421" width="9.2" height="15.0" fill="rgb(225,89,13)" rx="2" ry="2" />
<text  x="906.51" y="431.5" ></text>
</g>
<g >
<title>rocksdb::UserComparatorWrapper::Compare (7,020,201,950 samples, 1.10%)</title><rect x="104.7" y="501" width="13.0" height="15.0" fill="rgb(227,168,41)" rx="2" ry="2" />
<text  x="107.74" y="511.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (808,080,800 samples, 0.13%)</title><rect x="1060.8" y="405" width="1.5" height="15.0" fill="rgb(236,46,11)" rx="2" ry="2" />
<text  x="1063.79" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::_M_ptr (60,606,060 samples, 0.01%)</title><rect x="150.9" y="693" width="0.1" height="15.0" fill="rgb(220,106,20)" rx="2" ry="2" />
<text  x="153.90" y="703.5" ></text>
</g>
<g >
<title>rocksdb::lru_cache::LRUHandleTable::Remove (60,606,060 samples, 0.01%)</title><rect x="869.3" y="213" width="0.1" height="15.0" fill="rgb(209,77,29)" rx="2" ry="2" />
<text  x="872.31" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (191,919,190 samples, 0.03%)</title><rect x="43.4" y="645" width="0.3" height="15.0" fill="rgb(249,156,23)" rx="2" ry="2" />
<text  x="46.35" y="655.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;29ul&gt; (212,121,210 samples, 0.03%)</title><rect x="706.3" y="437" width="0.4" height="15.0" fill="rgb(210,53,54)" rx="2" ry="2" />
<text  x="709.26" y="447.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::GetInstance (80,808,080 samples, 0.01%)</title><rect x="633.6" y="405" width="0.1" height="15.0" fill="rgb(229,217,24)" rx="2" ry="2" />
<text  x="636.59" y="415.5" ></text>
</g>
<g >
<title>rocksdb::RangeDelAggregator::ShouldDelete (323,232,320 samples, 0.05%)</title><rect x="996.7" y="485" width="0.6" height="15.0" fill="rgb(215,17,24)" rx="2" ry="2" />
<text  x="999.72" y="495.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (131,313,130 samples, 0.02%)</title><rect x="940.3" y="453" width="0.2" height="15.0" fill="rgb(223,26,51)" rx="2" ry="2" />
<text  x="943.28" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::FileMetaData* const*, std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt; &gt;::__normal_iterator (222,222,220 samples, 0.03%)</title><rect x="1090.1" y="405" width="0.4" height="15.0" fill="rgb(222,144,17)" rx="2" ry="2" />
<text  x="1093.06" y="415.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid (151,515,150 samples, 0.02%)</title><rect x="990.4" y="469" width="0.3" height="15.0" fill="rgb(221,11,11)" rx="2" ry="2" />
<text  x="993.44" y="479.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyMemTablesImpl::~ColumnFamilyMemTablesImpl (151,515,150 samples, 0.02%)</title><rect x="25.9" y="725" width="0.3" height="15.0" fill="rgb(220,9,27)" rx="2" ry="2" />
<text  x="28.89" y="735.5" ></text>
</g>
<g >
<title>rocksdb::SubcompactionState::AddToOutput (303,030,300 samples, 0.05%)</title><rect x="1175.8" y="517" width="0.5" height="15.0" fill="rgb(246,123,5)" rx="2" ry="2" />
<text  x="1178.77" y="527.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (80,808,080 samples, 0.01%)</title><rect x="682.2" y="357" width="0.2" height="15.0" fill="rgb(249,112,27)" rx="2" ry="2" />
<text  x="685.22" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (222,222,220 samples, 0.03%)</title><rect x="889.8" y="373" width="0.4" height="15.0" fill="rgb(233,208,31)" rx="2" ry="2" />
<text  x="892.79" y="383.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::status (4,272,727,230 samples, 0.67%)</title><rect x="895.6" y="405" width="7.9" height="15.0" fill="rgb(236,90,38)" rx="2" ry="2" />
<text  x="898.62" y="415.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (454,545,450 samples, 0.07%)</title><rect x="1123.4" y="421" width="0.9" height="15.0" fill="rgb(225,143,8)" rx="2" ry="2" />
<text  x="1126.45" y="431.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (565,656,560 samples, 0.09%)</title><rect x="1166.3" y="453" width="1.0" height="15.0" fill="rgb(210,137,15)" rx="2" ry="2" />
<text  x="1169.29" y="463.5" ></text>
</g>
<g >
<title>__gthread_yield (555,555,550 samples, 0.09%)</title><rect x="229.3" y="693" width="1.0" height="15.0" fill="rgb(226,217,4)" rx="2" ry="2" />
<text  x="232.28" y="703.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (323,232,320 samples, 0.05%)</title><rect x="1011.7" y="405" width="0.6" height="15.0" fill="rgb(252,54,25)" rx="2" ry="2" />
<text  x="1014.72" y="415.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (90,909,090 samples, 0.01%)</title><rect x="1061.9" y="309" width="0.2" height="15.0" fill="rgb(253,7,12)" rx="2" ry="2" />
<text  x="1064.91" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (62,050,504,430 samples, 9.71%)</title><rect x="328.5" y="645" width="114.5" height="15.0" fill="rgb(236,179,9)" rx="2" ry="2" />
<text  x="331.46" y="655.5" >do_syscall_64</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (90,909,090 samples, 0.01%)</title><rect x="909.6" y="277" width="0.2" height="15.0" fill="rgb(237,134,11)" rx="2" ry="2" />
<text  x="912.60" y="287.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockHashIndexBuilder::Valid (323,232,320 samples, 0.05%)</title><rect x="1050.3" y="437" width="0.6" height="15.0" fill="rgb(242,84,44)" rx="2" ry="2" />
<text  x="1053.35" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::SstPartitioner*, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt; (202,020,200 samples, 0.03%)</title><rect x="1097.2" y="405" width="0.3" height="15.0" fill="rgb(243,220,10)" rx="2" ry="2" />
<text  x="1100.17" y="415.5" ></text>
</g>
<g >
<title>XXH3_64bits_internal (171,717,170 samples, 0.03%)</title><rect x="826.6" y="181" width="0.3" height="15.0" fill="rgb(246,133,20)" rx="2" ry="2" />
<text  x="829.55" y="191.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey (373,737,370 samples, 0.06%)</title><rect x="1054.1" y="437" width="0.7" height="15.0" fill="rgb(227,95,52)" rx="2" ry="2" />
<text  x="1057.06" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::lru_cache::LRUHandle*, std::allocator&lt;rocksdb::lru_cache::LRUHandle*&gt; &gt;::~vector (60,606,060 samples, 0.01%)</title><rect x="867.8" y="245" width="0.1" height="15.0" fill="rgb(220,174,42)" rx="2" ry="2" />
<text  x="870.81" y="255.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::IsDeleteRangeSentinelKey (999,999,990 samples, 0.16%)</title><rect x="956.1" y="469" width="1.9" height="15.0" fill="rgb(229,172,52)" rx="2" ry="2" />
<text  x="959.12" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::BlobGarbageMeter*, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;::_M_head@plt (141,414,140 samples, 0.02%)</title><rect x="1153.5" y="405" width="0.3" height="15.0" fill="rgb(250,62,54)" rx="2" ry="2" />
<text  x="1156.53" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::get (989,898,980 samples, 0.15%)</title><rect x="692.8" y="389" width="1.9" height="15.0" fill="rgb(218,228,33)" rx="2" ry="2" />
<text  x="695.83" y="399.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::SkipListRep::Iterator::Valid (101,010,100 samples, 0.02%)</title><rect x="623.7" y="405" width="0.2" height="15.0" fill="rgb(244,163,50)" rx="2" ry="2" />
<text  x="626.73" y="415.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (3,585,858,550 samples, 0.56%)</title><rect x="487.8" y="757" width="6.6" height="15.0" fill="rgb(238,122,4)" rx="2" ry="2" />
<text  x="490.77" y="767.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::UpdateOldestKeyTime (424,242,420 samples, 0.07%)</title><rect x="138.1" y="629" width="0.8" height="15.0" fill="rgb(210,23,53)" rx="2" ry="2" />
<text  x="141.12" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (90,909,090 samples, 0.01%)</title><rect x="31.7" y="629" width="0.2" height="15.0" fill="rgb(224,116,38)" rx="2" ry="2" />
<text  x="34.71" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (151,515,150 samples, 0.02%)</title><rect x="904.3" y="325" width="0.3" height="15.0" fill="rgb(236,133,6)" rx="2" ry="2" />
<text  x="907.28" y="335.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count (80,808,080 samples, 0.01%)</title><rect x="166.1" y="613" width="0.2" height="15.0" fill="rgb(231,17,32)" rx="2" ry="2" />
<text  x="169.10" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::end (414,141,410 samples, 0.06%)</title><rect x="1103.3" y="437" width="0.8" height="15.0" fill="rgb(248,45,30)" rx="2" ry="2" />
<text  x="1106.30" y="447.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::status (121,212,120 samples, 0.02%)</title><rect x="775.2" y="437" width="0.3" height="15.0" fill="rgb(219,143,27)" rx="2" ry="2" />
<text  x="778.24" y="447.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::GetStatus (303,030,300 samples, 0.05%)</title><rect x="576.4" y="421" width="0.6" height="15.0" fill="rgb(209,142,4)" rx="2" ry="2" />
<text  x="579.42" y="431.5" ></text>
</g>
<g >
<title>rocksdb::ConcurrentArena::Allocate (1,080,808,070 samples, 0.17%)</title><rect x="68.3" y="581" width="2.0" height="15.0" fill="rgb(245,4,5)" rx="2" ry="2" />
<text  x="71.33" y="591.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (80,808,080 samples, 0.01%)</title><rect x="858.2" y="261" width="0.1" height="15.0" fill="rgb(223,10,4)" rx="2" ry="2" />
<text  x="861.17" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="1063.8" y="389" width="0.2" height="15.0" fill="rgb(211,167,23)" rx="2" ry="2" />
<text  x="1066.80" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (888,888,880 samples, 0.14%)</title><rect x="1135.2" y="405" width="1.6" height="15.0" fill="rgb(242,169,8)" rx="2" ry="2" />
<text  x="1138.18" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::SstPartitioner*, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::_M_head (232,323,230 samples, 0.04%)</title><rect x="1097.7" y="389" width="0.4" height="15.0" fill="rgb(219,27,46)" rx="2" ry="2" />
<text  x="1100.69" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (111,111,110 samples, 0.02%)</title><rect x="842.1" y="293" width="0.2" height="15.0" fill="rgb(245,118,47)" rx="2" ry="2" />
<text  x="845.11" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::operator (545,454,540 samples, 0.09%)</title><rect x="1177.9" y="517" width="1.0" height="15.0" fill="rgb(227,178,46)" rx="2" ry="2" />
<text  x="1180.88" y="527.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;34ul&gt; (323,232,320 samples, 0.05%)</title><rect x="203.1" y="709" width="0.6" height="15.0" fill="rgb(220,219,23)" rx="2" ry="2" />
<text  x="206.15" y="719.5" ></text>
</g>
<g >
<title>rocksdb:high (109,939,392,840 samples, 17.20%)</title><rect x="561.9" y="853" width="203.0" height="15.0" fill="rgb(217,198,37)" rx="2" ry="2" />
<text  x="564.89" y="863.5" >rocksdb:high</text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::Next@plt (111,111,110 samples, 0.02%)</title><rect x="125.9" y="565" width="0.2" height="15.0" fill="rgb(227,34,29)" rx="2" ry="2" />
<text  x="128.93" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (121,212,120 samples, 0.02%)</title><rect x="799.7" y="405" width="0.2" height="15.0" fill="rgb(217,89,6)" rx="2" ry="2" />
<text  x="802.66" y="415.5" ></text>
</g>
<g >
<title>vfs_write (606,060,600 samples, 0.09%)</title><rect x="1026.6" y="245" width="1.1" height="15.0" fill="rgb(206,77,53)" rx="2" ry="2" />
<text  x="1029.60" y="255.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::AwaitState (15,626,262,470 samples, 2.45%)</title><rect x="153.1" y="709" width="28.8" height="15.0" fill="rgb(220,13,22)" rx="2" ry="2" />
<text  x="156.08" y="719.5" >ro..</text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt; (1,252,525,240 samples, 0.20%)</title><rect x="1071.3" y="453" width="2.3" height="15.0" fill="rgb(242,131,12)" rx="2" ry="2" />
<text  x="1074.29" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (222,222,220 samples, 0.03%)</title><rect x="882.5" y="293" width="0.4" height="15.0" fill="rgb(229,31,17)" rx="2" ry="2" />
<text  x="885.53" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (303,030,300 samples, 0.05%)</title><rect x="909.9" y="309" width="0.5" height="15.0" fill="rgb(252,189,51)" rx="2" ry="2" />
<text  x="912.86" y="319.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (151,515,150 samples, 0.02%)</title><rect x="203.4" y="661" width="0.3" height="15.0" fill="rgb(221,180,51)" rx="2" ry="2" />
<text  x="206.43" y="671.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (171,717,170 samples, 0.03%)</title><rect x="805.2" y="389" width="0.4" height="15.0" fill="rgb(214,59,42)" rx="2" ry="2" />
<text  x="808.23" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::SuperVersion*, std::allocator&lt;rocksdb::SuperVersion*&gt; &gt;::vector (90,909,090 samples, 0.01%)</title><rect x="27.9" y="677" width="0.1" height="15.0" fill="rgb(231,222,43)" rx="2" ry="2" />
<text  x="30.87" y="687.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (484,848,480 samples, 0.08%)</title><rect x="662.7" y="373" width="0.9" height="15.0" fill="rgb(235,63,12)" rx="2" ry="2" />
<text  x="665.67" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="900.6" y="245" width="0.2" height="15.0" fill="rgb(230,110,2)" rx="2" ry="2" />
<text  x="903.64" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (282,828,280 samples, 0.04%)</title><rect x="906.8" y="373" width="0.5" height="15.0" fill="rgb(229,78,38)" rx="2" ry="2" />
<text  x="909.80" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt;::empty (535,353,530 samples, 0.08%)</title><rect x="1089.6" y="437" width="1.0" height="15.0" fill="rgb(208,219,25)" rx="2" ry="2" />
<text  x="1092.63" y="447.5" ></text>
</g>
<g >
<title>rocksdb::CompressBlock (111,111,110 samples, 0.02%)</title><rect x="569.2" y="373" width="0.2" height="15.0" fill="rgb(225,169,48)" rx="2" ry="2" />
<text  x="572.24" y="383.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::GetInstance (191,919,190 samples, 0.03%)</title><rect x="1176.5" y="517" width="0.3" height="15.0" fill="rgb(218,129,8)" rx="2" ry="2" />
<text  x="1179.48" y="527.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, false&gt;::_M_head (111,111,110 samples, 0.02%)</title><rect x="986.6" y="357" width="0.3" height="15.0" fill="rgb(237,181,49)" rx="2" ry="2" />
<text  x="989.65" y="367.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (191,919,190 samples, 0.03%)</title><rect x="858.0" y="293" width="0.4" height="15.0" fill="rgb(235,2,20)" rx="2" ry="2" />
<text  x="861.00" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::get@plt (70,707,070 samples, 0.01%)</title><rect x="987.0" y="469" width="0.1" height="15.0" fill="rgb(234,175,40)" rx="2" ry="2" />
<text  x="989.97" y="479.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (444,444,440 samples, 0.07%)</title><rect x="844.1" y="293" width="0.8" height="15.0" fill="rgb(231,153,31)" rx="2" ry="2" />
<text  x="847.13" y="303.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (171,717,170 samples, 0.03%)</title><rect x="558.2" y="837" width="0.4" height="15.0" fill="rgb(244,216,25)" rx="2" ry="2" />
<text  x="561.24" y="847.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (171,717,170 samples, 0.03%)</title><rect x="595.8" y="389" width="0.3" height="15.0" fill="rgb(241,198,48)" rx="2" ry="2" />
<text  x="598.78" y="399.5" ></text>
</g>
<g >
<title>rocksdb::MemTableRep::KeyComparator::decode_key (60,606,060 samples, 0.01%)</title><rect x="137.6" y="597" width="0.2" height="15.0" fill="rgb(237,96,4)" rx="2" ry="2" />
<text  x="140.64" y="607.5" ></text>
</g>
<g >
<title>std::operator&amp; (60,606,060 samples, 0.01%)</title><rect x="632.4" y="325" width="0.1" height="15.0" fill="rgb(253,159,23)" rx="2" ry="2" />
<text  x="635.40" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::operator (262,626,260 samples, 0.04%)</title><rect x="894.6" y="421" width="0.5" height="15.0" fill="rgb(235,156,8)" rx="2" ry="2" />
<text  x="897.58" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (151,515,150 samples, 0.02%)</title><rect x="879.2" y="341" width="0.3" height="15.0" fill="rgb(233,196,3)" rx="2" ry="2" />
<text  x="882.23" y="351.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Next (80,808,080 samples, 0.01%)</title><rect x="751.1" y="469" width="0.1" height="15.0" fill="rgb(247,124,53)" rx="2" ry="2" />
<text  x="754.07" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (60,606,060 samples, 0.01%)</title><rect x="836.8" y="293" width="0.1" height="15.0" fill="rgb(252,134,21)" rx="2" ry="2" />
<text  x="839.76" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::operator (60,606,060 samples, 0.01%)</title><rect x="987.1" y="469" width="0.1" height="15.0" fill="rgb(225,72,10)" rx="2" ry="2" />
<text  x="990.10" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (191,919,190 samples, 0.03%)</title><rect x="907.0" y="357" width="0.3" height="15.0" fill="rgb(218,97,46)" rx="2" ry="2" />
<text  x="909.97" y="367.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::NextAndGetResult (14,949,494,800 samples, 2.34%)</title><rect x="824.2" y="405" width="27.6" height="15.0" fill="rgb(227,88,52)" rx="2" ry="2" />
<text  x="827.19" y="415.5" >r..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::CompactionIterator*, false&gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="1174.7" y="405" width="0.2" height="15.0" fill="rgb(211,102,2)" rx="2" ry="2" />
<text  x="1177.74" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::FileMetaData* const*, std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt; &gt;::__normal_iterator (171,717,170 samples, 0.03%)</title><rect x="1092.8" y="405" width="0.3" height="15.0" fill="rgb(226,131,13)" rx="2" ry="2" />
<text  x="1095.76" y="415.5" ></text>
</g>
<g >
<title>[unknown] (3,636,363,600 samples, 0.57%)</title><rect x="1179.4" y="837" width="6.8" height="15.0" fill="rgb(228,136,8)" rx="2" ry="2" />
<text  x="1182.44" y="847.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (161,616,160 samples, 0.03%)</title><rect x="853.7" y="293" width="0.3" height="15.0" fill="rgb(253,13,47)" rx="2" ry="2" />
<text  x="856.73" y="303.5" ></text>
</g>
<g >
<title>new_sync_write (1,353,535,340 samples, 0.21%)</title><rect x="36.2" y="533" width="2.5" height="15.0" fill="rgb(250,77,26)" rx="2" ry="2" />
<text  x="39.19" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::operator bool (1,060,606,050 samples, 0.17%)</title><rect x="692.7" y="405" width="2.0" height="15.0" fill="rgb(227,128,24)" rx="2" ry="2" />
<text  x="695.70" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (202,020,200 samples, 0.03%)</title><rect x="897.0" y="277" width="0.4" height="15.0" fill="rgb(254,64,19)" rx="2" ry="2" />
<text  x="900.01" y="287.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::AddToOutput (101,010,100 samples, 0.02%)</title><rect x="1005.0" y="501" width="0.2" height="15.0" fill="rgb(213,49,28)" rx="2" ry="2" />
<text  x="1007.98" y="511.5" ></text>
</g>
<g >
<title>rocksdb::ParseInternalKey (1,525,252,510 samples, 0.24%)</title><rect x="950.5" y="453" width="2.8" height="15.0" fill="rgb(209,222,29)" rx="2" ry="2" />
<text  x="953.48" y="463.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (181,818,180 samples, 0.03%)</title><rect x="1001.0" y="485" width="0.4" height="15.0" fill="rgb(217,60,30)" rx="2" ry="2" />
<text  x="1004.05" y="495.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Next (45,888,888,430 samples, 7.18%)</title><rect x="622.8" y="453" width="84.8" height="15.0" fill="rgb(218,192,27)" rx="2" ry="2" />
<text  x="625.83" y="463.5" >rocksdb::..</text>
</g>
<g >
<title>rocksdb::Cleanable::DoCleanup (111,111,110 samples, 0.02%)</title><rect x="654.1" y="405" width="0.3" height="15.0" fill="rgb(239,136,34)" rx="2" ry="2" />
<text  x="657.15" y="415.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::FindKeyForward (5,313,131,260 samples, 0.83%)</title><rect x="860.8" y="389" width="9.8" height="15.0" fill="rgb(208,109,26)" rx="2" ry="2" />
<text  x="863.78" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_fdatasync (212,121,210 samples, 0.03%)</title><rect x="747.3" y="373" width="0.4" height="15.0" fill="rgb(221,199,6)" rx="2" ry="2" />
<text  x="750.26" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (104,343,433,300 samples, 16.33%)</title><rect x="562.0" y="757" width="192.7" height="15.0" fill="rgb(227,2,39)" rx="2" ry="2" />
<text  x="565.04" y="767.5" >std::__invoke_impl&lt;void, ..</text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (101,010,100 samples, 0.02%)</title><rect x="203.8" y="693" width="0.1" height="15.0" fill="rgb(248,136,40)" rx="2" ry="2" />
<text  x="206.76" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::_M_ptr (828,282,820 samples, 0.13%)</title><rect x="1071.9" y="405" width="1.5" height="15.0" fill="rgb(250,128,31)" rx="2" ry="2" />
<text  x="1074.89" y="415.5" ></text>
</g>
<g >
<title>rocksdb::UncompressSerializedBlock (474,747,470 samples, 0.07%)</title><rect x="828.6" y="245" width="0.8" height="15.0" fill="rgb(238,46,3)" rx="2" ry="2" />
<text  x="831.57" y="255.5" ></text>
</g>
<g >
<title>rocksdb::InstrumentedMutex::Lock (151,515,150 samples, 0.02%)</title><rect x="26.8" y="693" width="0.3" height="15.0" fill="rgb(236,24,21)" rx="2" ry="2" />
<text  x="29.79" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (565,656,560 samples, 0.09%)</title><rect x="843.9" y="309" width="1.0" height="15.0" fill="rgb(222,150,0)" rx="2" ry="2" />
<text  x="846.90" y="319.5" ></text>
</g>
<g >
<title>std::operator!=&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt; (1,141,414,130 samples, 0.18%)</title><rect x="993.6" y="469" width="2.2" height="15.0" fill="rgb(244,27,27)" rx="2" ry="2" />
<text  x="996.64" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (383,838,380 samples, 0.06%)</title><rect x="604.7" y="357" width="0.7" height="15.0" fill="rgb(226,53,23)" rx="2" ry="2" />
<text  x="607.66" y="367.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="847.5" y="245" width="0.2" height="15.0" fill="rgb(244,207,2)" rx="2" ry="2" />
<text  x="850.54" y="255.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::IndexBuilder*, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt; (444,444,440 samples, 0.07%)</title><rect x="1077.8" y="405" width="0.9" height="15.0" fill="rgb(209,165,50)" rx="2" ry="2" />
<text  x="1080.84" y="415.5" ></text>
</g>
<g >
<title>snappy::internal::CompressFragment (3,101,010,070 samples, 0.49%)</title><rect x="755.1" y="821" width="5.7" height="15.0" fill="rgb(207,26,26)" rx="2" ry="2" />
<text  x="758.11" y="831.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (80,808,080 samples, 0.01%)</title><rect x="983.7" y="453" width="0.2" height="15.0" fill="rgb(235,164,52)" rx="2" ry="2" />
<text  x="986.74" y="463.5" ></text>
</g>
<g >
<title>__tls_get_addr (161,616,160 samples, 0.03%)</title><rect x="598.9" y="389" width="0.3" height="15.0" fill="rgb(232,211,21)" rx="2" ry="2" />
<text  x="601.94" y="399.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (323,232,320 samples, 0.05%)</title><rect x="722.4" y="357" width="0.6" height="15.0" fill="rgb(250,157,5)" rx="2" ry="2" />
<text  x="725.36" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;rocksdb::Status  (161,616,160 samples, 0.03%)</title><rect x="1145.9" y="453" width="0.3" height="15.0" fill="rgb(210,60,21)" rx="2" ry="2" />
<text  x="1148.91" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (60,606,060 samples, 0.01%)</title><rect x="1123.1" y="437" width="0.1" height="15.0" fill="rgb(206,211,38)" rx="2" ry="2" />
<text  x="1126.13" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (3,717,171,680 samples, 0.58%)</title><rect x="1134.7" y="421" width="6.9" height="15.0" fill="rgb(252,14,2)" rx="2" ry="2" />
<text  x="1137.73" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (222,222,220 samples, 0.03%)</title><rect x="880.7" y="373" width="0.4" height="15.0" fill="rgb(248,199,5)" rx="2" ry="2" />
<text  x="883.72" y="383.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::empty (1,010,101,000 samples, 0.16%)</title><rect x="808.6" y="421" width="1.8" height="15.0" fill="rgb(250,213,52)" rx="2" ry="2" />
<text  x="811.55" y="431.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (434,343,430 samples, 0.07%)</title><rect x="1138.3" y="357" width="0.8" height="15.0" fill="rgb(217,163,17)" rx="2" ry="2" />
<text  x="1141.26" y="367.5" ></text>
</g>
<g >
<title>rocksdb::CompressData (70,707,070 samples, 0.01%)</title><rect x="1022.7" y="373" width="0.1" height="15.0" fill="rgb(209,56,17)" rx="2" ry="2" />
<text  x="1025.70" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (737,373,730 samples, 0.12%)</title><rect x="1135.5" y="389" width="1.3" height="15.0" fill="rgb(207,57,25)" rx="2" ry="2" />
<text  x="1138.46" y="399.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Iterator::Valid (111,111,110 samples, 0.02%)</title><rect x="682.9" y="357" width="0.2" height="15.0" fill="rgb(227,196,4)" rx="2" ry="2" />
<text  x="685.93" y="367.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::ReadAndParseBlockFromFile&lt;rocksdb::Block_kData&gt; (2,353,535,330 samples, 0.37%)</title><rect x="861.8" y="309" width="4.3" height="15.0" fill="rgb(213,61,49)" rx="2" ry="2" />
<text  x="864.75" y="319.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::IOStatus (70,707,070 samples, 0.01%)</title><rect x="571.6" y="357" width="0.1" height="15.0" fill="rgb(212,163,26)" rx="2" ry="2" />
<text  x="574.61" y="367.5" ></text>
</g>
<g >
<title>rocksdb::ShortenedIndexBuilder::OnKeyAdded (252,525,250 samples, 0.04%)</title><rect x="1125.0" y="469" width="0.4" height="15.0" fill="rgb(253,107,17)" rx="2" ry="2" />
<text  x="1127.96" y="479.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (104,343,433,300 samples, 16.33%)</title><rect x="562.0" y="613" width="192.7" height="15.0" fill="rgb(212,123,37)" rx="2" ry="2" />
<text  x="565.04" y="623.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::SkipListRep::InsertKeyConcurrently (60,606,060 samples, 0.01%)</title><rect x="66.7" y="645" width="0.1" height="15.0" fill="rgb(211,4,37)" rx="2" ry="2" />
<text  x="69.72" y="655.5" ></text>
</g>
<g >
<title>@plt (212,121,210 samples, 0.03%)</title><rect x="1002.3" y="469" width="0.4" height="15.0" fill="rgb(235,63,1)" rx="2" ry="2" />
<text  x="1005.30" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Compaction::immutable_options (232,323,230 samples, 0.04%)</title><rect x="978.5" y="469" width="0.4" height="15.0" fill="rgb(251,157,42)" rx="2" ry="2" />
<text  x="981.52" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::get (111,111,110 samples, 0.02%)</title><rect x="859.3" y="357" width="0.2" height="15.0" fill="rgb(218,65,50)" rx="2" ry="2" />
<text  x="862.29" y="367.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::Clear (212,121,210 samples, 0.03%)</title><rect x="876.3" y="373" width="0.4" height="15.0" fill="rgb(224,190,13)" rx="2" ry="2" />
<text  x="879.30" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::back (222,222,220 samples, 0.03%)</title><rect x="1158.6" y="469" width="0.4" height="15.0" fill="rgb(226,213,11)" rx="2" ry="2" />
<text  x="1161.55" y="479.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (104,343,433,300 samples, 16.33%)</title><rect x="562.0" y="805" width="192.7" height="15.0" fill="rgb(221,210,26)" rx="2" ry="2" />
<text  x="565.04" y="815.5" >std::thread::_Invoker&lt;std..</text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid (161,616,160 samples, 0.03%)</title><rect x="981.3" y="453" width="0.3" height="15.0" fill="rgb(247,52,33)" rx="2" ry="2" />
<text  x="984.26" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Compaction::SupportsPerKeyPlacement (272,727,270 samples, 0.04%)</title><rect x="979.8" y="453" width="0.5" height="15.0" fill="rgb(219,228,36)" rx="2" ry="2" />
<text  x="982.79" y="463.5" ></text>
</g>
<g >
<title>std::operator== (161,616,160 samples, 0.03%)</title><rect x="661.1" y="389" width="0.3" height="15.0" fill="rgb(224,95,9)" rx="2" ry="2" />
<text  x="664.11" y="399.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::FindKeyForward (101,010,100 samples, 0.02%)</title><rect x="824.8" y="373" width="0.2" height="15.0" fill="rgb(214,30,29)" rx="2" ry="2" />
<text  x="827.80" y="383.5" ></text>
</g>
<g >
<title>rocksdb::operator== (484,848,480 samples, 0.08%)</title><rect x="924.6" y="453" width="0.9" height="15.0" fill="rgb(208,207,15)" rx="2" ry="2" />
<text  x="927.61" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="907.2" y="309" width="0.1" height="15.0" fill="rgb(213,165,32)" rx="2" ry="2" />
<text  x="910.21" y="319.5" ></text>
</g>
<g >
<title>std::make_unique&lt;rocksdb::InternalKeyComparator, rocksdb::Comparator const*&amp;&gt; (70,707,070 samples, 0.01%)</title><rect x="825.7" y="229" width="0.1" height="15.0" fill="rgb(230,149,1)" rx="2" ry="2" />
<text  x="828.66" y="239.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (414,141,410 samples, 0.06%)</title><rect x="239.8" y="677" width="0.8" height="15.0" fill="rgb(239,28,7)" rx="2" ry="2" />
<text  x="242.82" y="687.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ikey (121,212,120 samples, 0.02%)</title><rect x="751.6" y="469" width="0.2" height="15.0" fill="rgb(236,225,1)" rx="2" ry="2" />
<text  x="754.55" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::SavePoints*, std::default_delete&lt;rocksdb::SavePoints&gt; &gt;::_Tuple_impl (60,606,060 samples, 0.01%)</title><rect x="477.4" y="677" width="0.1" height="15.0" fill="rgb(240,189,10)" rx="2" ry="2" />
<text  x="480.36" y="687.5" ></text>
</g>
<g >
<title>rocksdb::SstFileManagerImpl::ScheduleFileDeletion (80,808,080 samples, 0.01%)</title><rect x="1179.3" y="501" width="0.1" height="15.0" fill="rgb(252,156,48)" rx="2" ry="2" />
<text  x="1182.29" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (333,333,330 samples, 0.05%)</title><rect x="910.6" y="373" width="0.6" height="15.0" fill="rgb(234,162,53)" rx="2" ry="2" />
<text  x="913.58" y="383.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (101,010,100 samples, 0.02%)</title><rect x="1180.2" y="821" width="0.2" height="15.0" fill="rgb(225,213,53)" rx="2" ry="2" />
<text  x="1183.24" y="831.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (535,353,530 samples, 0.08%)</title><rect x="941.0" y="373" width="1.0" height="15.0" fill="rgb(207,225,41)" rx="2" ry="2" />
<text  x="944.03" y="383.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count (101,010,100 samples, 0.02%)</title><rect x="290.2" y="629" width="0.2" height="15.0" fill="rgb(252,80,12)" rx="2" ry="2" />
<text  x="293.24" y="639.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (747,474,740 samples, 0.12%)</title><rect x="163.5" y="693" width="1.4" height="15.0" fill="rgb(237,101,16)" rx="2" ry="2" />
<text  x="166.55" y="703.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::NextAndGetResult (15,404,040,250 samples, 2.41%)</title><rect x="823.6" y="421" width="28.5" height="15.0" fill="rgb(252,54,39)" rx="2" ry="2" />
<text  x="826.63" y="431.5" >ro..</text>
</g>
<g >
<title>rocksdb::DecodeFixed64 (101,010,100 samples, 0.02%)</title><rect x="938.7" y="453" width="0.2" height="15.0" fill="rgb(217,227,26)" rx="2" ry="2" />
<text  x="941.75" y="463.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Next (39,262,625,870 samples, 6.14%)</title><rect x="822.6" y="437" width="72.5" height="15.0" fill="rgb(219,225,29)" rx="2" ry="2" />
<text  x="825.56" y="447.5" >rocksdb:..</text>
</g>
<g >
<title>rocksdb::Status::IsTryAgain (80,808,080 samples, 0.01%)</title><rect x="144.7" y="661" width="0.1" height="15.0" fill="rgb(230,101,16)" rx="2" ry="2" />
<text  x="147.65" y="671.5" ></text>
</g>
<g >
<title>rocksdb::ThreadStatusUpdater::GetLocalThreadStatus (606,060,600 samples, 0.09%)</title><rect x="745.4" y="421" width="1.1" height="15.0" fill="rgb(240,160,6)" rx="2" ry="2" />
<text  x="748.40" y="431.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::TryGetFromPrefetchBuffer (121,212,120 samples, 0.02%)</title><rect x="826.9" y="245" width="0.2" height="15.0" fill="rgb(218,8,38)" rx="2" ry="2" />
<text  x="829.91" y="255.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::duration&lt;unsigned long, void&gt; (90,909,090 samples, 0.01%)</title><rect x="163.4" y="693" width="0.1" height="15.0" fill="rgb(247,130,3)" rx="2" ry="2" />
<text  x="166.38" y="703.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::empty (80,808,080 samples, 0.01%)</title><rect x="1046.2" y="453" width="0.1" height="15.0" fill="rgb(230,78,13)" rx="2" ry="2" />
<text  x="1049.19" y="463.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::IOOptions (70,707,070 samples, 0.01%)</title><rect x="35.1" y="645" width="0.2" height="15.0" fill="rgb(213,174,38)" rx="2" ry="2" />
<text  x="38.13" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (171,717,170 samples, 0.03%)</title><rect x="480.4" y="741" width="0.3" height="15.0" fill="rgb(223,108,39)" rx="2" ry="2" />
<text  x="483.40" y="751.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (343,434,340 samples, 0.05%)</title><rect x="889.1" y="325" width="0.6" height="15.0" fill="rgb(214,40,6)" rx="2" ry="2" />
<text  x="892.10" y="335.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyMemTables::~ColumnFamilyMemTables (80,808,080 samples, 0.01%)</title><rect x="25.5" y="725" width="0.1" height="15.0" fill="rgb(245,62,37)" rx="2" ry="2" />
<text  x="28.50" y="735.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;::base (202,020,200 samples, 0.03%)</title><rect x="702.6" y="389" width="0.3" height="15.0" fill="rgb(218,151,2)" rx="2" ry="2" />
<text  x="705.57" y="399.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (171,717,170 samples, 0.03%)</title><rect x="653.0" y="341" width="0.3" height="15.0" fill="rgb(240,168,9)" rx="2" ry="2" />
<text  x="655.95" y="351.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, false&gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="694.1" y="325" width="0.1" height="15.0" fill="rgb(225,66,21)" rx="2" ry="2" />
<text  x="697.06" y="335.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (202,020,200 samples, 0.03%)</title><rect x="44.7" y="389" width="0.3" height="15.0" fill="rgb(248,206,27)" rx="2" ry="2" />
<text  x="47.68" y="399.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;33ul&gt; (878,787,870 samples, 0.14%)</title><rect x="1122.7" y="453" width="1.6" height="15.0" fill="rgb(206,29,40)" rx="2" ry="2" />
<text  x="1125.68" y="463.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;35ul&gt; (90,909,090 samples, 0.01%)</title><rect x="139.9" y="629" width="0.2" height="15.0" fill="rgb(225,190,3)" rx="2" ry="2" />
<text  x="142.93" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (121,212,120 samples, 0.02%)</title><rect x="859.0" y="373" width="0.3" height="15.0" fill="rgb(251,53,36)" rx="2" ry="2" />
<text  x="862.03" y="383.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Iterator::key (171,717,170 samples, 0.03%)</title><rect x="682.9" y="373" width="0.3" height="15.0" fill="rgb(237,89,42)" rx="2" ry="2" />
<text  x="685.89" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="890.8" y="341" width="0.2" height="15.0" fill="rgb(230,204,43)" rx="2" ry="2" />
<text  x="893.83" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::operator (171,717,170 samples, 0.03%)</title><rect x="1179.0" y="517" width="0.3" height="15.0" fill="rgb(208,48,2)" rx="2" ry="2" />
<text  x="1181.98" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="843.4" y="229" width="0.1" height="15.0" fill="rgb(221,16,36)" rx="2" ry="2" />
<text  x="846.38" y="239.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Valid (80,808,080 samples, 0.01%)</title><rect x="963.8" y="389" width="0.1" height="15.0" fill="rgb(221,152,23)" rx="2" ry="2" />
<text  x="966.76" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::SstPartitioner*, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt; (999,999,990 samples, 0.16%)</title><rect x="1097.6" y="405" width="1.8" height="15.0" fill="rgb(215,219,34)" rx="2" ry="2" />
<text  x="1100.56" y="415.5" ></text>
</g>
<g >
<title>std::move&lt;bool&amp;&gt; (90,909,090 samples, 0.01%)</title><rect x="732.2" y="437" width="0.1" height="15.0" fill="rgb(218,172,27)" rx="2" ry="2" />
<text  x="735.15" y="447.5" ></text>
</g>
<g >
<title>rocksdb::MemTableIterator::Valid (151,515,150 samples, 0.02%)</title><rect x="629.3" y="389" width="0.3" height="15.0" fill="rgb(226,122,9)" rx="2" ry="2" />
<text  x="632.34" y="399.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (111,111,110 samples, 0.02%)</title><rect x="686.9" y="373" width="0.2" height="15.0" fill="rgb(236,141,22)" rx="2" ry="2" />
<text  x="689.92" y="383.5" ></text>
</g>
<g >
<title>TLS init function for rocksdb::perf_context (222,222,220 samples, 0.03%)</title><rect x="787.6" y="357" width="0.4" height="15.0" fill="rgb(242,214,31)" rx="2" ry="2" />
<text  x="790.57" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::CompactionIterator*, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt; (141,414,140 samples, 0.02%)</title><rect x="1170.5" y="453" width="0.3" height="15.0" fill="rgb(235,111,54)" rx="2" ry="2" />
<text  x="1173.53" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (656,565,650 samples, 0.10%)</title><rect x="577.5" y="389" width="1.2" height="15.0" fill="rgb(220,185,3)" rx="2" ry="2" />
<text  x="580.49" y="399.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, false&gt;::_M_head (90,909,090 samples, 0.01%)</title><rect x="892.2" y="325" width="0.2" height="15.0" fill="rgb(235,45,18)" rx="2" ry="2" />
<text  x="895.21" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt;::begin (232,323,230 samples, 0.04%)</title><rect x="610.1" y="421" width="0.5" height="15.0" fill="rgb(224,214,29)" rx="2" ry="2" />
<text  x="613.15" y="431.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::EstimateSizeAfterKV (999,999,990 samples, 0.16%)</title><rect x="594.7" y="405" width="1.8" height="15.0" fill="rgb(238,174,34)" rx="2" ry="2" />
<text  x="597.70" y="415.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ExtractLargeValueIfNeededImpl (161,616,160 samples, 0.03%)</title><rect x="695.7" y="421" width="0.3" height="15.0" fill="rgb(235,189,21)" rx="2" ry="2" />
<text  x="698.71" y="431.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (232,323,230 samples, 0.04%)</title><rect x="1026.9" y="165" width="0.4" height="15.0" fill="rgb(221,142,39)" rx="2" ry="2" />
<text  x="1029.86" y="175.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockHashIndexBuilder::Valid (70,707,070 samples, 0.01%)</title><rect x="592.9" y="405" width="0.2" height="15.0" fill="rgb(247,195,43)" rx="2" ry="2" />
<text  x="595.93" y="415.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::InitDataBlock (4,313,131,270 samples, 0.67%)</title><rect x="861.0" y="357" width="8.0" height="15.0" fill="rgb(225,20,17)" rx="2" ry="2" />
<text  x="864.02" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::operator bool (1,020,202,010 samples, 0.16%)</title><rect x="973.8" y="453" width="1.9" height="15.0" fill="rgb(239,37,29)" rx="2" ry="2" />
<text  x="976.78" y="463.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (848,484,840 samples, 0.13%)</title><rect x="970.7" y="453" width="1.6" height="15.0" fill="rgb(208,12,41)" rx="2" ry="2" />
<text  x="973.72" y="463.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;char const []&gt;, true&gt;::_Head_base (60,606,060 samples, 0.01%)</title><rect x="1062.1" y="309" width="0.1" height="15.0" fill="rgb(244,3,10)" rx="2" ry="2" />
<text  x="1065.08" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="142.5" y="549" width="0.1" height="15.0" fill="rgb(234,150,41)" rx="2" ry="2" />
<text  x="145.45" y="559.5" ></text>
</g>
<g >
<title>XXH3_accumulate_512_avx512 (111,111,110 samples, 0.02%)</title><rect x="863.2" y="133" width="0.2" height="15.0" fill="rgb(247,91,40)" rx="2" ry="2" />
<text  x="866.19" y="143.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (101,010,100 samples, 0.02%)</title><rect x="899.8" y="309" width="0.2" height="15.0" fill="rgb(208,225,0)" rx="2" ry="2" />
<text  x="902.82" y="319.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::status (6,202,020,140 samples, 0.97%)</title><rect x="839.2" y="389" width="11.4" height="15.0" fill="rgb(246,27,35)" rx="2" ry="2" />
<text  x="842.18" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (383,838,380 samples, 0.06%)</title><rect x="1061.6" y="373" width="0.7" height="15.0" fill="rgb(249,13,47)" rx="2" ry="2" />
<text  x="1064.56" y="383.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::WriteMaybeCompressedBlock (2,929,292,900 samples, 0.46%)</title><rect x="1023.4" y="405" width="5.4" height="15.0" fill="rgb(244,210,42)" rx="2" ry="2" />
<text  x="1026.38" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (181,818,180 samples, 0.03%)</title><rect x="473.7" y="661" width="0.3" height="15.0" fill="rgb(216,112,15)" rx="2" ry="2" />
<text  x="476.68" y="671.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::SstPartitioner*, false&gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="1099.3" y="357" width="0.1" height="15.0" fill="rgb(249,167,31)" rx="2" ry="2" />
<text  x="1102.29" y="367.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (828,282,820 samples, 0.13%)</title><rect x="631.3" y="373" width="1.5" height="15.0" fill="rgb(217,150,33)" rx="2" ry="2" />
<text  x="634.32" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::_M_ptr (848,484,840 samples, 0.13%)</title><rect x="1087.0" y="389" width="1.6" height="15.0" fill="rgb(231,143,32)" rx="2" ry="2" />
<text  x="1090.04" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (232,323,230 samples, 0.04%)</title><rect x="735.9" y="389" width="0.4" height="15.0" fill="rgb(228,45,54)" rx="2" ry="2" />
<text  x="738.87" y="399.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::MemTableInserter::PutCF (46,929,292,460 samples, 7.34%)</title><rect x="59.1" y="677" width="86.6" height="15.0" fill="rgb(211,175,29)" rx="2" ry="2" />
<text  x="62.07" y="687.5" >rocksdb::(..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (212,121,210 samples, 0.03%)</title><rect x="740.6" y="405" width="0.4" height="15.0" fill="rgb(222,97,52)" rx="2" ry="2" />
<text  x="743.58" y="415.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (121,212,120 samples, 0.02%)</title><rect x="819.9" y="389" width="0.2" height="15.0" fill="rgb(235,144,42)" rx="2" ry="2" />
<text  x="822.88" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (232,323,230 samples, 0.04%)</title><rect x="913.5" y="389" width="0.4" height="15.0" fill="rgb(211,179,29)" rx="2" ry="2" />
<text  x="916.46" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="848.6" y="309" width="0.2" height="15.0" fill="rgb(244,119,27)" rx="2" ry="2" />
<text  x="851.62" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::VersionSet, std::default_delete&lt;rocksdb::VersionSet&gt; &gt;::get (171,717,170 samples, 0.03%)</title><rect x="460.4" y="709" width="0.3" height="15.0" fill="rgb(237,170,3)" rx="2" ry="2" />
<text  x="463.42" y="719.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::SavePoints, std::default_delete&lt;rocksdb::SavePoints&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="46.6" y="693" width="0.2" height="15.0" fill="rgb(244,43,41)" rx="2" ry="2" />
<text  x="49.60" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (212,121,210 samples, 0.03%)</title><rect x="897.4" y="293" width="0.4" height="15.0" fill="rgb(213,220,2)" rx="2" ry="2" />
<text  x="900.40" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::IndexBuilder*, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="620.9" y="405" width="0.1" height="15.0" fill="rgb(236,133,18)" rx="2" ry="2" />
<text  x="623.91" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (464,646,460 samples, 0.07%)</title><rect x="728.7" y="453" width="0.8" height="15.0" fill="rgb(245,175,7)" rx="2" ry="2" />
<text  x="731.68" y="463.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::UpdateFilesToCutForTTLStates (686,868,680 samples, 0.11%)</title><rect x="1089.4" y="453" width="1.3" height="15.0" fill="rgb(251,141,54)" rx="2" ry="2" />
<text  x="1092.41" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (555,555,550 samples, 0.09%)</title><rect x="879.7" y="341" width="1.0" height="15.0" fill="rgb(254,85,25)" rx="2" ry="2" />
<text  x="882.70" y="351.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (141,414,140 samples, 0.02%)</title><rect x="269.3" y="661" width="0.2" height="15.0" fill="rgb(248,96,53)" rx="2" ry="2" />
<text  x="272.25" y="671.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Valid (292,929,290 samples, 0.05%)</title><rect x="957.4" y="437" width="0.6" height="15.0" fill="rgb(212,89,30)" rx="2" ry="2" />
<text  x="960.42" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (373,737,370 samples, 0.06%)</title><rect x="898.4" y="341" width="0.7" height="15.0" fill="rgb(224,61,15)" rx="2" ry="2" />
<text  x="901.37" y="351.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (333,333,330 samples, 0.05%)</title><rect x="165.8" y="645" width="0.6" height="15.0" fill="rgb(211,204,15)" rx="2" ry="2" />
<text  x="168.77" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="603.0" y="421" width="0.2" height="15.0" fill="rgb(230,143,42)" rx="2" ry="2" />
<text  x="606.02" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;::_Deque_iterator&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt;, void&gt; (131,313,130 samples, 0.02%)</title><rect x="701.2" y="405" width="0.3" height="15.0" fill="rgb(216,185,41)" rx="2" ry="2" />
<text  x="704.21" y="415.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; (2,282,828,260 samples, 0.36%)</title><rect x="285.7" y="629" width="4.2" height="15.0" fill="rgb(225,120,6)" rx="2" ry="2" />
<text  x="288.67" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::get (515,151,510 samples, 0.08%)</title><rect x="697.5" y="389" width="0.9" height="15.0" fill="rgb(236,146,47)" rx="2" ry="2" />
<text  x="700.48" y="399.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::downheap (12,555,555,430 samples, 1.96%)</title><rect x="776.7" y="421" width="23.2" height="15.0" fill="rgb(249,219,51)" rx="2" ry="2" />
<text  x="779.70" y="431.5" >r..</text>
</g>
<g >
<title>rocksdb::Block::~Block (70,707,070 samples, 0.01%)</title><rect x="869.0" y="261" width="0.1" height="15.0" fill="rgb(233,199,12)" rx="2" ry="2" />
<text  x="872.01" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::FileMetaData* const*, std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt; &gt;::base (202,020,200 samples, 0.03%)</title><rect x="1091.8" y="421" width="0.3" height="15.0" fill="rgb(224,31,49)" rx="2" ry="2" />
<text  x="1094.76" y="431.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (141,414,140 samples, 0.02%)</title><rect x="44.8" y="325" width="0.2" height="15.0" fill="rgb(250,55,46)" rx="2" ry="2" />
<text  x="47.79" y="335.5" ></text>
</g>
<g >
<title>__alloc_pages (141,414,140 samples, 0.02%)</title><rect x="559.7" y="693" width="0.3" height="15.0" fill="rgb(249,116,47)" rx="2" ry="2" />
<text  x="562.73" y="703.5" ></text>
</g>
<g >
<title>do_unlinkat (242,424,240 samples, 0.04%)</title><rect x="754.3" y="405" width="0.4" height="15.0" fill="rgb(206,163,26)" rx="2" ry="2" />
<text  x="757.26" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (90,909,090 samples, 0.01%)</title><rect x="457.0" y="661" width="0.2" height="15.0" fill="rgb(235,106,52)" rx="2" ry="2" />
<text  x="460.01" y="671.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (878,787,870 samples, 0.14%)</title><rect x="985.3" y="469" width="1.6" height="15.0" fill="rgb(211,62,22)" rx="2" ry="2" />
<text  x="988.29" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (121,212,120 samples, 0.02%)</title><rect x="667.1" y="357" width="0.2" height="15.0" fill="rgb(227,29,39)" rx="2" ry="2" />
<text  x="670.09" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::get (313,131,310 samples, 0.05%)</title><rect x="1064.0" y="437" width="0.6" height="15.0" fill="rgb(222,106,35)" rx="2" ry="2" />
<text  x="1067.04" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (383,838,380 samples, 0.06%)</title><rect x="913.2" y="421" width="0.7" height="15.0" fill="rgb(237,193,38)" rx="2" ry="2" />
<text  x="916.18" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (111,111,110 samples, 0.02%)</title><rect x="642.0" y="389" width="0.2" height="15.0" fill="rgb(236,181,21)" rx="2" ry="2" />
<text  x="644.97" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_head (242,424,240 samples, 0.04%)</title><rect x="693.4" y="341" width="0.5" height="15.0" fill="rgb(244,188,10)" rx="2" ry="2" />
<text  x="696.45" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::_Bind&lt;void  (104,343,433,300 samples, 16.33%)</title><rect x="562.0" y="661" width="192.7" height="15.0" fill="rgb(223,146,29)" rx="2" ry="2" />
<text  x="565.04" y="671.5" >std::__invoke_impl&lt;void, ..</text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::operator (60,606,060 samples, 0.01%)</title><rect x="543.7" y="773" width="0.1" height="15.0" fill="rgb(222,65,20)" rx="2" ry="2" />
<text  x="546.71" y="783.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::operator (121,212,120 samples, 0.02%)</title><rect x="859.3" y="373" width="0.2" height="15.0" fill="rgb(234,211,51)" rx="2" ry="2" />
<text  x="862.27" y="383.5" ></text>
</g>
<g >
<title>std::operator&amp; (80,808,080 samples, 0.01%)</title><rect x="579.2" y="373" width="0.1" height="15.0" fill="rgb(218,190,9)" rx="2" ry="2" />
<text  x="582.17" y="383.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count (686,868,680 samples, 0.11%)</title><rect x="266.8" y="613" width="1.2" height="15.0" fill="rgb(215,83,5)" rx="2" ry="2" />
<text  x="269.77" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (60,606,060 samples, 0.01%)</title><rect x="1026.0" y="341" width="0.1" height="15.0" fill="rgb(237,14,49)" rx="2" ry="2" />
<text  x="1029.01" y="351.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (171,717,170 samples, 0.03%)</title><rect x="1094.5" y="405" width="0.3" height="15.0" fill="rgb(251,88,34)" rx="2" ry="2" />
<text  x="1097.52" y="415.5" ></text>
</g>
<g >
<title>TLS init function for rocksdb::perf_context (131,313,130 samples, 0.02%)</title><rect x="1117.0" y="405" width="0.3" height="15.0" fill="rgb(229,51,3)" rx="2" ry="2" />
<text  x="1120.01" y="415.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Valid (111,111,110 samples, 0.02%)</title><rect x="851.8" y="405" width="0.2" height="15.0" fill="rgb(218,72,11)" rx="2" ry="2" />
<text  x="854.79" y="415.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::WriteMaybeCompressedBlock (2,585,858,560 samples, 0.40%)</title><rect x="569.6" y="389" width="4.8" height="15.0" fill="rgb(251,91,33)" rx="2" ry="2" />
<text  x="572.60" y="399.5" ></text>
</g>
<g >
<title>rocksdb::OutputValidator::Add (5,727,272,670 samples, 0.90%)</title><rect x="1114.4" y="469" width="10.6" height="15.0" fill="rgb(220,187,33)" rx="2" ry="2" />
<text  x="1117.38" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt;::operator* (101,010,100 samples, 0.02%)</title><rect x="602.8" y="421" width="0.2" height="15.0" fill="rgb(229,128,7)" rx="2" ry="2" />
<text  x="605.78" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Cleanable::Reset (343,434,340 samples, 0.05%)</title><rect x="869.0" y="309" width="0.6" height="15.0" fill="rgb(206,130,29)" rx="2" ry="2" />
<text  x="872.01" y="319.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::IOOptions (60,606,060 samples, 0.01%)</title><rect x="863.7" y="245" width="0.2" height="15.0" fill="rgb(235,107,50)" rx="2" ry="2" />
<text  x="866.75" y="255.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (60,606,060 samples, 0.01%)</title><rect x="456.4" y="645" width="0.1" height="15.0" fill="rgb(219,94,21)" rx="2" ry="2" />
<text  x="459.38" y="655.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (80,808,080 samples, 0.01%)</title><rect x="565.4" y="453" width="0.1" height="15.0" fill="rgb(210,38,48)" rx="2" ry="2" />
<text  x="568.38" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (404,040,400 samples, 0.06%)</title><rect x="1009.3" y="437" width="0.8" height="15.0" fill="rgb(211,150,32)" rx="2" ry="2" />
<text  x="1012.31" y="447.5" ></text>
</g>
<g >
<title>TLS init function for rocksdb::perf_context (70,707,070 samples, 0.01%)</title><rect x="717.7" y="389" width="0.1" height="15.0" fill="rgb(230,56,1)" rx="2" ry="2" />
<text  x="720.66" y="399.5" ></text>
</g>
<g >
<title>TLS init function for rocksdb::perf_context (60,606,060 samples, 0.01%)</title><rect x="1055.3" y="405" width="0.1" height="15.0" fill="rgb(230,122,41)" rx="2" ry="2" />
<text  x="1058.27" y="415.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (191,919,190 samples, 0.03%)</title><rect x="588.4" y="421" width="0.4" height="15.0" fill="rgb(223,101,15)" rx="2" ry="2" />
<text  x="591.42" y="431.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (282,828,280 samples, 0.04%)</title><rect x="241.0" y="677" width="0.5" height="15.0" fill="rgb(213,227,4)" rx="2" ry="2" />
<text  x="243.97" y="687.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::BlockBasedTablePropertiesCollector::InternalAdd (282,828,280 samples, 0.04%)</title><rect x="568.6" y="437" width="0.5" height="15.0" fill="rgb(224,170,28)" rx="2" ry="2" />
<text  x="571.59" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (595,959,590 samples, 0.09%)</title><rect x="652.3" y="357" width="1.1" height="15.0" fill="rgb(213,87,50)" rx="2" ry="2" />
<text  x="655.30" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;rocksdb::InternalKeyComparator, std::default_delete&lt;rocksdb::InternalKeyComparator&gt;, true, true&gt;::operator= (60,606,060 samples, 0.01%)</title><rect x="825.8" y="213" width="0.1" height="15.0" fill="rgb(242,229,53)" rx="2" ry="2" />
<text  x="828.79" y="223.5" ></text>
</g>
<g >
<title>rocksdb::GetVarint32Ptr (70,707,070 samples, 0.01%)</title><rect x="93.7" y="517" width="0.1" height="15.0" fill="rgb(227,13,42)" rx="2" ry="2" />
<text  x="96.69" y="527.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (212,121,210 samples, 0.03%)</title><rect x="1087.1" y="373" width="0.4" height="15.0" fill="rgb(236,165,19)" rx="2" ry="2" />
<text  x="1090.15" y="383.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::TrimAppend (161,616,160 samples, 0.03%)</title><rect x="875.1" y="325" width="0.3" height="15.0" fill="rgb(238,93,19)" rx="2" ry="2" />
<text  x="878.13" y="335.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (131,313,130 samples, 0.02%)</title><rect x="743.4" y="357" width="0.2" height="15.0" fill="rgb(223,210,13)" rx="2" ry="2" />
<text  x="746.38" y="367.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::RecomputeSpliceLevels (26,646,464,380 samples, 4.17%)</title><rect x="76.9" y="581" width="49.2" height="15.0" fill="rgb(219,8,11)" rx="2" ry="2" />
<text  x="79.93" y="591.5" >rock..</text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::Valid (171,717,170 samples, 0.03%)</title><rect x="998.0" y="485" width="0.3" height="15.0" fill="rgb(208,160,2)" rx="2" ry="2" />
<text  x="1000.95" y="495.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000000l&gt;, void&gt; (454,545,450 samples, 0.07%)</title><rect x="167.4" y="661" width="0.8" height="15.0" fill="rgb(205,180,27)" rx="2" ry="2" />
<text  x="170.37" y="671.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt;@plt (202,020,200 samples, 0.03%)</title><rect x="1146.6" y="469" width="0.3" height="15.0" fill="rgb(219,127,24)" rx="2" ry="2" />
<text  x="1149.56" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::SstPartitioner*, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="1099.4" y="421" width="0.2" height="15.0" fill="rgb(252,182,21)" rx="2" ry="2" />
<text  x="1102.40" y="431.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator-- (151,515,150 samples, 0.02%)</title><rect x="184.0" y="709" width="0.2" height="15.0" fill="rgb(213,138,50)" rx="2" ry="2" />
<text  x="186.95" y="719.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::IntTblPropCollector*, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="609.6" y="357" width="0.2" height="15.0" fill="rgb(244,21,37)" rx="2" ry="2" />
<text  x="612.62" y="367.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Valid (343,434,340 samples, 0.05%)</title><rect x="962.7" y="437" width="0.6" height="15.0" fill="rgb(249,26,27)" rx="2" ry="2" />
<text  x="965.70" y="447.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::Writer::~Writer (131,313,130 samples, 0.02%)</title><rect x="458.2" y="725" width="0.3" height="15.0" fill="rgb(210,37,3)" rx="2" ry="2" />
<text  x="461.22" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (242,424,240 samples, 0.04%)</title><rect x="467.3" y="645" width="0.4" height="15.0" fill="rgb(236,218,10)" rx="2" ry="2" />
<text  x="470.29" y="655.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (121,212,120 samples, 0.02%)</title><rect x="442.8" y="629" width="0.2" height="15.0" fill="rgb(206,39,29)" rx="2" ry="2" />
<text  x="445.81" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (282,828,280 samples, 0.04%)</title><rect x="1035.4" y="421" width="0.5" height="15.0" fill="rgb(217,136,32)" rx="2" ry="2" />
<text  x="1038.43" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::BlobGarbageMeter*, false&gt;::_M_head (101,010,100 samples, 0.02%)</title><rect x="1154.0" y="389" width="0.1" height="15.0" fill="rgb(249,210,31)" rx="2" ry="2" />
<text  x="1156.96" y="399.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::Valid (272,727,270 samples, 0.04%)</title><rect x="705.5" y="437" width="0.5" height="15.0" fill="rgb(210,91,16)" rx="2" ry="2" />
<text  x="708.46" y="447.5" ></text>
</g>
<g >
<title>_int_free (60,606,060 samples, 0.01%)</title><rect x="558.6" y="837" width="0.2" height="15.0" fill="rgb(222,84,54)" rx="2" ry="2" />
<text  x="561.65" y="847.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_head (232,323,230 samples, 0.04%)</title><rect x="988.3" y="389" width="0.4" height="15.0" fill="rgb(214,35,6)" rx="2" ry="2" />
<text  x="991.29" y="399.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::seed (22,262,626,040 samples, 3.48%)</title><rect x="501.3" y="789" width="41.2" height="15.0" fill="rgb(219,83,36)" rx="2" ry="2" />
<text  x="504.35" y="799.5" >std..</text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid (454,545,450 samples, 0.07%)</title><rect x="930.5" y="469" width="0.9" height="15.0" fill="rgb(242,19,2)" rx="2" ry="2" />
<text  x="933.52" y="479.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindSpliceForLevel&lt;true&gt; (26,171,716,910 samples, 4.10%)</title><rect x="77.2" y="565" width="48.3" height="15.0" fill="rgb(209,49,24)" rx="2" ry="2" />
<text  x="80.19" y="575.5" >rock..</text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (747,474,740 samples, 0.12%)</title><rect x="275.1" y="677" width="1.4" height="15.0" fill="rgb(252,128,4)" rx="2" ry="2" />
<text  x="278.07" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::operator bool (666,666,660 samples, 0.10%)</title><rect x="697.2" y="405" width="1.2" height="15.0" fill="rgb(225,71,7)" rx="2" ry="2" />
<text  x="700.20" y="415.5" ></text>
</g>
<g >
<title>[unknown] (6,202,020,140 samples, 0.97%)</title><rect x="10.3" y="837" width="11.4" height="15.0" fill="rgb(242,36,45)" rx="2" ry="2" />
<text  x="13.28" y="847.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (151,515,150 samples, 0.02%)</title><rect x="889.9" y="357" width="0.3" height="15.0" fill="rgb(206,6,11)" rx="2" ry="2" />
<text  x="892.92" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_ptr (80,808,080 samples, 0.01%)</title><rect x="973.9" y="437" width="0.2" height="15.0" fill="rgb(246,177,34)" rx="2" ry="2" />
<text  x="976.91" y="447.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (292,929,290 samples, 0.05%)</title><rect x="904.0" y="373" width="0.6" height="15.0" fill="rgb(240,85,47)" rx="2" ry="2" />
<text  x="907.04" y="383.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block_kData&gt; (323,232,320 samples, 0.05%)</title><rect x="866.1" y="309" width="0.6" height="15.0" fill="rgb(218,133,30)" rx="2" ry="2" />
<text  x="869.14" y="319.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (60,606,060 samples, 0.01%)</title><rect x="1006.7" y="501" width="0.1" height="15.0" fill="rgb(233,96,41)" rx="2" ry="2" />
<text  x="1009.68" y="511.5" ></text>
</g>
<g >
<title>rocksdb::FlushBlockBySizePolicy::BlockAlmostFull (1,393,939,380 samples, 0.22%)</title><rect x="1050.9" y="437" width="2.6" height="15.0" fill="rgb(236,24,1)" rx="2" ry="2" />
<text  x="1053.94" y="447.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::status (1,818,181,800 samples, 0.28%)</title><rect x="899.4" y="373" width="3.3" height="15.0" fill="rgb(247,5,3)" rx="2" ry="2" />
<text  x="902.36" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (60,606,060 samples, 0.01%)</title><rect x="481.2" y="773" width="0.1" height="15.0" fill="rgb(245,22,22)" rx="2" ry="2" />
<text  x="484.18" y="783.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (212,121,210 samples, 0.03%)</title><rect x="473.7" y="677" width="0.4" height="15.0" fill="rgb(234,70,19)" rx="2" ry="2" />
<text  x="476.67" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::get@plt (80,808,080 samples, 0.01%)</title><rect x="608.7" y="421" width="0.2" height="15.0" fill="rgb(212,161,48)" rx="2" ry="2" />
<text  x="611.71" y="431.5" ></text>
</g>
<g >
<title>ROCKSDB_XXH3_64bits (464,646,460 samples, 0.07%)</title><rect x="1023.8" y="373" width="0.9" height="15.0" fill="rgb(238,44,6)" rx="2" ry="2" />
<text  x="1026.84" y="383.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::status (4,353,535,310 samples, 0.68%)</title><rect x="895.5" y="421" width="8.0" height="15.0" fill="rgb(254,54,22)" rx="2" ry="2" />
<text  x="898.48" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (70,707,070 samples, 0.01%)</title><rect x="482.2" y="805" width="0.2" height="15.0" fill="rgb(217,166,36)" rx="2" ry="2" />
<text  x="485.25" y="815.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (232,323,230 samples, 0.04%)</title><rect x="145.2" y="661" width="0.4" height="15.0" fill="rgb(244,153,47)" rx="2" ry="2" />
<text  x="148.18" y="671.5" ></text>
</g>
<g >
<title>rocksdb::DB::Put (60,606,060 samples, 0.01%)</title><rect x="22.9" y="789" width="0.1" height="15.0" fill="rgb(212,115,46)" rx="2" ry="2" />
<text  x="25.91" y="799.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (292,929,290 samples, 0.05%)</title><rect x="722.4" y="341" width="0.6" height="15.0" fill="rgb(230,80,18)" rx="2" ry="2" />
<text  x="725.42" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_10_impl&lt;unsigned long&gt; (595,959,590 samples, 0.09%)</title><rect x="482.7" y="789" width="1.1" height="15.0" fill="rgb(214,221,43)" rx="2" ry="2" />
<text  x="485.69" y="799.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (121,212,120 samples, 0.02%)</title><rect x="1146.0" y="181" width="0.2" height="15.0" fill="rgb(231,22,27)" rx="2" ry="2" />
<text  x="1148.96" y="191.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (1,727,272,710 samples, 0.27%)</title><rect x="899.4" y="357" width="3.2" height="15.0" fill="rgb(208,161,45)" rx="2" ry="2" />
<text  x="902.43" y="367.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::value (90,909,090 samples, 0.01%)</title><rect x="962.5" y="437" width="0.1" height="15.0" fill="rgb(249,96,14)" rx="2" ry="2" />
<text  x="965.46" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="851.4" y="341" width="0.2" height="15.0" fill="rgb(240,36,10)" rx="2" ry="2" />
<text  x="854.42" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (181,818,180 samples, 0.03%)</title><rect x="854.3" y="261" width="0.3" height="15.0" fill="rgb(247,191,42)" rx="2" ry="2" />
<text  x="857.25" y="271.5" ></text>
</g>
<g >
<title>evict (242,424,240 samples, 0.04%)</title><rect x="754.3" y="373" width="0.4" height="15.0" fill="rgb(211,122,1)" rx="2" ry="2" />
<text  x="757.26" y="383.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (224,373,735,130 samples, 35.11%)</title><rect x="765.1" y="821" width="414.3" height="15.0" fill="rgb(226,149,13)" rx="2" ry="2" />
<text  x="768.11" y="831.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tupl..</text>
</g>
<g >
<title>std::forward&lt;std::_Rb_tree_node_base*&amp;&gt; (70,707,070 samples, 0.01%)</title><rect x="64.4" y="565" width="0.2" height="15.0" fill="rgb(225,147,51)" rx="2" ry="2" />
<text  x="67.43" y="575.5" ></text>
</g>
<g >
<title>ext4_sync_file (151,515,150 samples, 0.02%)</title><rect x="1145.9" y="261" width="0.3" height="15.0" fill="rgb(215,207,5)" rx="2" ry="2" />
<text  x="1148.92" y="271.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator unsigned long (60,606,060 samples, 0.01%)</title><rect x="459.0" y="725" width="0.1" height="15.0" fill="rgb(232,120,45)" rx="2" ry="2" />
<text  x="461.99" y="735.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid (262,626,260 samples, 0.04%)</title><rect x="645.0" y="405" width="0.5" height="15.0" fill="rgb(222,56,29)" rx="2" ry="2" />
<text  x="647.97" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt;::__normal_iterator (171,717,170 samples, 0.03%)</title><rect x="1067.0" y="421" width="0.3" height="15.0" fill="rgb(250,74,21)" rx="2" ry="2" />
<text  x="1070.00" y="431.5" ></text>
</g>
<g >
<title>__alloc_pages (101,010,100 samples, 0.02%)</title><rect x="1027.0" y="85" width="0.2" height="15.0" fill="rgb(231,8,1)" rx="2" ry="2" />
<text  x="1030.01" y="95.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::status (171,717,170 samples, 0.03%)</title><rect x="766.4" y="517" width="0.3" height="15.0" fill="rgb(222,99,13)" rx="2" ry="2" />
<text  x="769.38" y="527.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::_M_ptr (1,878,787,860 samples, 0.29%)</title><rect x="1171.4" y="469" width="3.5" height="15.0" fill="rgb(237,77,3)" rx="2" ry="2" />
<text  x="1174.38" y="479.5" ></text>
</g>
<g >
<title>rocksdb::MemTableIterator::VerifyEntryChecksum (202,020,200 samples, 0.03%)</title><rect x="633.2" y="405" width="0.3" height="15.0" fill="rgb(216,205,22)" rx="2" ry="2" />
<text  x="636.16" y="415.5" ></text>
</g>
<g >
<title>rocksdb::GetLengthPrefixedSlice (101,010,100 samples, 0.02%)</title><rect x="73.2" y="581" width="0.1" height="15.0" fill="rgb(239,160,30)" rx="2" ry="2" />
<text  x="76.16" y="591.5" ></text>
</g>
<g >
<title>TLS init function for rocksdb::perf_context (101,010,100 samples, 0.02%)</title><rect x="133.6" y="517" width="0.2" height="15.0" fill="rgb(212,204,53)" rx="2" ry="2" />
<text  x="136.59" y="527.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (171,717,170 samples, 0.03%)</title><rect x="902.8" y="373" width="0.3" height="15.0" fill="rgb(227,91,7)" rx="2" ry="2" />
<text  x="905.82" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (272,727,270 samples, 0.04%)</title><rect x="827.6" y="197" width="0.5" height="15.0" fill="rgb(243,21,41)" rx="2" ry="2" />
<text  x="830.58" y="207.5" ></text>
</g>
<g >
<title>std::make_pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (797,979,790 samples, 0.12%)</title><rect x="484.5" y="805" width="1.5" height="15.0" fill="rgb(229,34,16)" rx="2" ry="2" />
<text  x="487.48" y="815.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (121,212,120 samples, 0.02%)</title><rect x="847.1" y="277" width="0.2" height="15.0" fill="rgb(209,158,4)" rx="2" ry="2" />
<text  x="850.09" y="287.5" ></text>
</g>
<g >
<title>__schedule (41,808,080,390 samples, 6.54%)</title><rect x="343.9" y="581" width="77.2" height="15.0" fill="rgb(207,185,30)" rx="2" ry="2" />
<text  x="346.86" y="591.5" >__schedule</text>
</g>
<g >
<title>rocksdb::operator== (515,151,510 samples, 0.08%)</title><rect x="641.6" y="405" width="0.9" height="15.0" fill="rgb(234,91,18)" rx="2" ry="2" />
<text  x="644.58" y="415.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (141,414,140 samples, 0.02%)</title><rect x="691.5" y="421" width="0.3" height="15.0" fill="rgb(217,190,47)" rx="2" ry="2" />
<text  x="694.53" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (484,848,480 samples, 0.08%)</title><rect x="1011.4" y="437" width="0.9" height="15.0" fill="rgb(248,229,28)" rx="2" ry="2" />
<text  x="1014.42" y="447.5" ></text>
</g>
<g >
<title>std::atomic&lt;void*&gt;::load (252,525,250 samples, 0.04%)</title><rect x="746.0" y="405" width="0.4" height="15.0" fill="rgb(214,79,31)" rx="2" ry="2" />
<text  x="748.98" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (222,222,220 samples, 0.03%)</title><rect x="495.8" y="741" width="0.4" height="15.0" fill="rgb(205,153,44)" rx="2" ry="2" />
<text  x="498.77" y="751.5" ></text>
</g>
<g >
<title>std::chrono::operator&gt;=&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt;@plt (80,808,080 samples, 0.01%)</title><rect x="452.9" y="709" width="0.1" height="15.0" fill="rgb(226,197,2)" rx="2" ry="2" />
<text  x="455.89" y="719.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::FlushBlockPolicy, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt;::_M_ptr (131,313,130 samples, 0.02%)</title><rect x="617.0" y="421" width="0.3" height="15.0" fill="rgb(238,110,32)" rx="2" ry="2" />
<text  x="620.03" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (313,131,310 samples, 0.05%)</title><rect x="461.4" y="741" width="0.6" height="15.0" fill="rgb(206,58,20)" rx="2" ry="2" />
<text  x="464.37" y="751.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::key (494,949,490 samples, 0.08%)</title><rect x="960.9" y="453" width="1.0" height="15.0" fill="rgb(225,221,40)" rx="2" ry="2" />
<text  x="963.95" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (303,030,300 samples, 0.05%)</title><rect x="688.4" y="421" width="0.5" height="15.0" fill="rgb(207,225,35)" rx="2" ry="2" />
<text  x="691.36" y="431.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::IntTblPropCollector*, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; (141,414,140 samples, 0.02%)</title><rect x="1065.9" y="373" width="0.2" height="15.0" fill="rgb(249,101,37)" rx="2" ry="2" />
<text  x="1068.89" y="383.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;, rocksdb::CompactionMergingIterator::HeapItem*&gt;::operator* (121,212,120 samples, 0.02%)</title><rect x="805.7" y="421" width="0.2" height="15.0" fill="rgb(206,116,9)" rx="2" ry="2" />
<text  x="808.72" y="431.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ExtractLargeValueIfNeededImpl (90,909,090 samples, 0.01%)</title><rect x="695.5" y="405" width="0.2" height="15.0" fill="rgb(231,164,40)" rx="2" ry="2" />
<text  x="698.54" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (141,414,140 samples, 0.02%)</title><rect x="1069.8" y="453" width="0.3" height="15.0" fill="rgb(211,172,51)" rx="2" ry="2" />
<text  x="1072.82" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (202,020,200 samples, 0.03%)</title><rect x="846.7" y="293" width="0.3" height="15.0" fill="rgb(225,127,0)" rx="2" ry="2" />
<text  x="849.66" y="303.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;29ul&gt; (444,444,440 samples, 0.07%)</title><rect x="998.9" y="485" width="0.9" height="15.0" fill="rgb(245,124,45)" rx="2" ry="2" />
<text  x="1001.94" y="495.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::EnlargeBufferIfNeeded (151,515,150 samples, 0.02%)</title><rect x="936.5" y="421" width="0.3" height="15.0" fill="rgb(234,158,50)" rx="2" ry="2" />
<text  x="939.51" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::FlushBlockPolicy*, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt;::_M_head (262,626,260 samples, 0.04%)</title><rect x="1075.1" y="389" width="0.5" height="15.0" fill="rgb(219,51,33)" rx="2" ry="2" />
<text  x="1078.10" y="399.5" ></text>
</g>
<g >
<title>__tls_get_addr (333,333,330 samples, 0.05%)</title><rect x="564.7" y="437" width="0.6" height="15.0" fill="rgb(224,115,22)" rx="2" ry="2" />
<text  x="567.73" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (353,535,350 samples, 0.06%)</title><rect x="909.8" y="325" width="0.6" height="15.0" fill="rgb(221,28,43)" rx="2" ry="2" />
<text  x="912.76" y="335.5" ></text>
</g>
<g >
<title>rocksdb::ThreadStatusUtil::SetThreadOperationProperty (303,030,300 samples, 0.05%)</title><rect x="753.6" y="469" width="0.6" height="15.0" fill="rgb(244,163,40)" rx="2" ry="2" />
<text  x="756.64" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (343,434,340 samples, 0.05%)</title><rect x="1189.3" y="837" width="0.7" height="15.0" fill="rgb(235,181,41)" rx="2" ry="2" />
<text  x="1192.35" y="847.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block_kData&gt; (2,989,898,960 samples, 0.47%)</title><rect x="861.7" y="325" width="5.6" height="15.0" fill="rgb(244,147,12)" rx="2" ry="2" />
<text  x="864.73" y="335.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (333,333,330 samples, 0.05%)</title><rect x="812.7" y="389" width="0.6" height="15.0" fill="rgb(247,202,1)" rx="2" ry="2" />
<text  x="815.73" y="399.5" ></text>
</g>
<g >
<title>vfs_read (303,030,300 samples, 0.05%)</title><rect x="864.5" y="197" width="0.5" height="15.0" fill="rgb(236,190,28)" rx="2" ry="2" />
<text  x="867.46" y="207.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_context (444,444,440 samples, 0.07%)</title><rect x="1055.2" y="421" width="0.8" height="15.0" fill="rgb(214,163,49)" rx="2" ry="2" />
<text  x="1058.22" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (505,050,500 samples, 0.08%)</title><rect x="742.7" y="405" width="0.9" height="15.0" fill="rgb(242,128,0)" rx="2" ry="2" />
<text  x="745.69" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;rocksdb::MemTable* const&amp;&gt;, std::tuple&lt;&gt; &gt; (989,898,980 samples, 0.15%)</title><rect x="61.7" y="581" width="1.8" height="15.0" fill="rgb(241,149,10)" rx="2" ry="2" />
<text  x="64.69" y="591.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt; (1,161,616,150 samples, 0.18%)</title><rect x="614.0" y="437" width="2.1" height="15.0" fill="rgb(238,124,47)" rx="2" ry="2" />
<text  x="616.95" y="447.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::AwaitState (129,505,049,210 samples, 20.27%)</title><rect x="204.1" y="709" width="239.2" height="15.0" fill="rgb(216,152,19)" rx="2" ry="2" />
<text  x="207.14" y="719.5" >rocksdb::WriteThread::AwaitState</text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::UpdateKey (454,545,450 samples, 0.07%)</title><rect x="833.1" y="341" width="0.9" height="15.0" fill="rgb(229,0,32)" rx="2" ry="2" />
<text  x="836.12" y="351.5" ></text>
</g>
<g >
<title>__sched_yield (6,727,272,660 samples, 1.05%)</title><rect x="169.5" y="677" width="12.4" height="15.0" fill="rgb(220,50,38)" rx="2" ry="2" />
<text  x="172.52" y="687.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (70,707,070 samples, 0.01%)</title><rect x="1062.3" y="421" width="0.1" height="15.0" fill="rgb(222,127,39)" rx="2" ry="2" />
<text  x="1065.30" y="431.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;33ul&gt; (191,919,190 samples, 0.03%)</title><rect x="743.7" y="453" width="0.3" height="15.0" fill="rgb(233,161,33)" rx="2" ry="2" />
<text  x="746.68" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (222,222,220 samples, 0.03%)</title><rect x="604.9" y="309" width="0.4" height="15.0" fill="rgb(206,113,51)" rx="2" ry="2" />
<text  x="607.91" y="319.5" ></text>
</g>
<g >
<title>__dynamic_cast (101,010,100 samples, 0.02%)</title><rect x="465.5" y="709" width="0.2" height="15.0" fill="rgb(213,162,54)" rx="2" ry="2" />
<text  x="468.50" y="719.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (434,343,430 samples, 0.07%)</title><rect x="664.4" y="405" width="0.8" height="15.0" fill="rgb(235,92,19)" rx="2" ry="2" />
<text  x="667.43" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (363,636,360 samples, 0.06%)</title><rect x="473.4" y="709" width="0.7" height="15.0" fill="rgb(218,1,41)" rx="2" ry="2" />
<text  x="476.39" y="719.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;::_Deque_iterator (161,616,160 samples, 0.03%)</title><rect x="993.3" y="437" width="0.3" height="15.0" fill="rgb(230,210,19)" rx="2" ry="2" />
<text  x="996.35" y="447.5" ></text>
</g>
<g >
<title>std::tuple&lt;rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;&gt;::tuple&lt;true, true&gt; (161,616,160 samples, 0.03%)</title><rect x="472.8" y="725" width="0.3" height="15.0" fill="rgb(221,57,29)" rx="2" ry="2" />
<text  x="475.83" y="735.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_context (111,111,110 samples, 0.02%)</title><rect x="95.2" y="501" width="0.2" height="15.0" fill="rgb(234,213,41)" rx="2" ry="2" />
<text  x="98.22" y="511.5" ></text>
</g>
<g >
<title>std::move&lt;rocksdb::Status::SubCode&amp;&gt; (262,626,260 samples, 0.04%)</title><rect x="1148.5" y="469" width="0.5" height="15.0" fill="rgb(226,97,40)" rx="2" ry="2" />
<text  x="1151.52" y="479.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::operator= (111,111,110 samples, 0.02%)</title><rect x="33.3" y="677" width="0.2" height="15.0" fill="rgb(210,4,4)" rx="2" ry="2" />
<text  x="36.33" y="687.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::get_offset (60,606,060 samples, 0.01%)</title><rect x="1081.2" y="469" width="0.1" height="15.0" fill="rgb(231,23,1)" rx="2" ry="2" />
<text  x="1084.18" y="479.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;long&gt;::_S_nd&lt;unsigned long, std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;, unsigned int&gt; (3,929,292,890 samples, 0.61%)</title><rect x="543.9" y="757" width="7.3" height="15.0" fill="rgb(233,16,32)" rx="2" ry="2" />
<text  x="546.93" y="767.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (202,020,200 samples, 0.03%)</title><rect x="843.1" y="277" width="0.4" height="15.0" fill="rgb(233,192,50)" rx="2" ry="2" />
<text  x="846.14" y="287.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (111,111,110 samples, 0.02%)</title><rect x="44.8" y="293" width="0.2" height="15.0" fill="rgb(208,183,44)" rx="2" ry="2" />
<text  x="47.84" y="303.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::SkipListRep::Iterator::key (212,121,210 samples, 0.03%)</title><rect x="682.9" y="389" width="0.3" height="15.0" fill="rgb(235,83,24)" rx="2" ry="2" />
<text  x="685.85" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (383,838,380 samples, 0.06%)</title><rect x="1010.7" y="405" width="0.7" height="15.0" fill="rgb(227,8,47)" rx="2" ry="2" />
<text  x="1013.69" y="415.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt; (252,525,250 samples, 0.04%)</title><rect x="471.3" y="725" width="0.5" height="15.0" fill="rgb(236,114,31)" rx="2" ry="2" />
<text  x="474.32" y="735.5" ></text>
</g>
<g >
<title>rocksdb::Status::MustCheck@plt (90,909,090 samples, 0.01%)</title><rect x="728.1" y="453" width="0.2" height="15.0" fill="rgb(253,169,49)" rx="2" ry="2" />
<text  x="731.14" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (101,010,100 samples, 0.02%)</title><rect x="480.5" y="709" width="0.2" height="15.0" fill="rgb(213,154,20)" rx="2" ry="2" />
<text  x="483.53" y="719.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::SetKeyImpl (494,949,490 samples, 0.08%)</title><rect x="647.8" y="389" width="0.9" height="15.0" fill="rgb(239,137,1)" rx="2" ry="2" />
<text  x="650.79" y="399.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="898.2" y="245" width="0.1" height="15.0" fill="rgb(236,198,2)" rx="2" ry="2" />
<text  x="901.16" y="255.5" ></text>
</g>
<g >
<title>rocksdb::PosixWritableFile::Append (606,060,600 samples, 0.09%)</title><rect x="1026.6" y="341" width="1.1" height="15.0" fill="rgb(241,35,29)" rx="2" ry="2" />
<text  x="1029.60" y="351.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (1,141,414,130 samples, 0.18%)</title><rect x="795.7" y="389" width="2.1" height="15.0" fill="rgb(244,12,52)" rx="2" ry="2" />
<text  x="798.68" y="399.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::GetImmutableMemTableOptions (60,606,060 samples, 0.01%)</title><rect x="144.5" y="661" width="0.2" height="15.0" fill="rgb(213,38,48)" rx="2" ry="2" />
<text  x="147.54" y="671.5" ></text>
</g>
<g >
<title>std::operator&amp; (80,808,080 samples, 0.01%)</title><rect x="1031.4" y="437" width="0.1" height="15.0" fill="rgb(206,32,32)" rx="2" ry="2" />
<text  x="1034.36" y="447.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (666,666,660 samples, 0.10%)</title><rect x="165.2" y="677" width="1.2" height="15.0" fill="rgb(234,66,11)" rx="2" ry="2" />
<text  x="168.21" y="687.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (60,606,060 samples, 0.01%)</title><rect x="630.8" y="373" width="0.1" height="15.0" fill="rgb(242,87,44)" rx="2" ry="2" />
<text  x="633.78" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (171,717,170 samples, 0.03%)</title><rect x="143.3" y="629" width="0.3" height="15.0" fill="rgb(224,60,15)" rx="2" ry="2" />
<text  x="146.27" y="639.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::ParseNextKey&lt;rocksdb::DecodeEntry&gt; (121,212,120 samples, 0.02%)</title><rect x="871.9" y="357" width="0.2" height="15.0" fill="rgb(230,80,4)" rx="2" ry="2" />
<text  x="874.90" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::get (171,717,170 samples, 0.03%)</title><rect x="1071.4" y="437" width="0.3" height="15.0" fill="rgb(251,226,43)" rx="2" ry="2" />
<text  x="1074.43" y="447.5" ></text>
</g>
<g >
<title>std::operator&amp; (141,414,140 samples, 0.02%)</title><rect x="628.1" y="325" width="0.3" height="15.0" fill="rgb(214,214,18)" rx="2" ry="2" />
<text  x="631.11" y="335.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (848,484,840 samples, 0.13%)</title><rect x="940.5" y="453" width="1.6" height="15.0" fill="rgb(242,150,19)" rx="2" ry="2" />
<text  x="943.52" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::operator bool (222,222,220 samples, 0.03%)</title><rect x="1089.0" y="437" width="0.4" height="15.0" fill="rgb(230,74,51)" rx="2" ry="2" />
<text  x="1092.00" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_mbegin (151,515,150 samples, 0.02%)</title><rect x="660.1" y="357" width="0.3" height="15.0" fill="rgb(252,90,42)" rx="2" ry="2" />
<text  x="663.10" y="367.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (101,010,100 samples, 0.02%)</title><rect x="573.1" y="101" width="0.2" height="15.0" fill="rgb(227,152,3)" rx="2" ry="2" />
<text  x="576.07" y="111.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_level (90,909,090 samples, 0.01%)</title><rect x="1118.3" y="421" width="0.2" height="15.0" fill="rgb(208,157,18)" rx="2" ry="2" />
<text  x="1121.34" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (101,010,100 samples, 0.02%)</title><rect x="882.8" y="261" width="0.1" height="15.0" fill="rgb(223,40,21)" rx="2" ry="2" />
<text  x="885.75" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (424,242,420 samples, 0.07%)</title><rect x="954.7" y="437" width="0.8" height="15.0" fill="rgb(215,60,46)" rx="2" ry="2" />
<text  x="957.68" y="447.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (565,656,560 samples, 0.09%)</title><rect x="640.4" y="405" width="1.1" height="15.0" fill="rgb(235,189,24)" rx="2" ry="2" />
<text  x="643.42" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (90,909,090 samples, 0.01%)</title><rect x="1150.7" y="469" width="0.1" height="15.0" fill="rgb(248,175,54)" rx="2" ry="2" />
<text  x="1153.68" y="479.5" ></text>
</g>
<g >
<title>file_write_and_wait_range (121,212,120 samples, 0.02%)</title><rect x="562.1" y="373" width="0.2" height="15.0" fill="rgb(208,26,16)" rx="2" ry="2" />
<text  x="565.06" y="383.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Valid (60,606,060 samples, 0.01%)</title><rect x="871.8" y="373" width="0.1" height="15.0" fill="rgb(218,83,24)" rx="2" ry="2" />
<text  x="874.77" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_construct_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;rocksdb::MemTable* const&amp;&gt;, std::tuple&lt;&gt; &gt; (656,565,650 samples, 0.10%)</title><rect x="61.7" y="565" width="1.2" height="15.0" fill="rgb(228,152,12)" rx="2" ry="2" />
<text  x="64.69" y="575.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (121,212,120 samples, 0.02%)</title><rect x="1027.3" y="133" width="0.3" height="15.0" fill="rgb(213,161,11)" rx="2" ry="2" />
<text  x="1030.35" y="143.5" ></text>
</g>
<g >
<title>rocksdb::Slice::remove_suffix (80,808,080 samples, 0.01%)</title><rect x="139.1" y="629" width="0.1" height="15.0" fill="rgb(228,102,27)" rx="2" ry="2" />
<text  x="142.09" y="639.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (242,424,240 samples, 0.04%)</title><rect x="827.6" y="181" width="0.4" height="15.0" fill="rgb(226,190,37)" rx="2" ry="2" />
<text  x="830.58" y="191.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::current_output (4,131,313,090 samples, 0.65%)</title><rect x="1101.0" y="469" width="7.6" height="15.0" fill="rgb(243,58,27)" rx="2" ry="2" />
<text  x="1103.97" y="479.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::AddToOutput (78,313,130,530 samples, 12.26%)</title><rect x="1015.4" y="485" width="144.6" height="15.0" fill="rgb(238,154,43)" rx="2" ry="2" />
<text  x="1018.41" y="495.5" >rocksdb::Compactio..</text>
</g>
<g >
<title>rocksdb::Slice::size (191,919,190 samples, 0.03%)</title><rect x="585.5" y="405" width="0.3" height="15.0" fill="rgb(240,52,32)" rx="2" ry="2" />
<text  x="588.49" y="415.5" ></text>
</g>
<g >
<title>rocksdb::LocalSavePoint::commit (262,626,260 samples, 0.04%)</title><rect x="469.7" y="725" width="0.5" height="15.0" fill="rgb(248,148,49)" rx="2" ry="2" />
<text  x="472.69" y="735.5" ></text>
</g>
<g >
<title>std::__detail::__mod&lt;unsigned long, 624ul, 1ul, 0ul&gt; (606,060,600 samples, 0.09%)</title><rect x="500.2" y="789" width="1.1" height="15.0" fill="rgb(245,219,54)" rx="2" ry="2" />
<text  x="503.23" y="799.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="856.1" y="245" width="0.1" height="15.0" fill="rgb(226,132,41)" rx="2" ry="2" />
<text  x="859.10" y="255.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (121,212,120 samples, 0.02%)</title><rect x="467.3" y="613" width="0.3" height="15.0" fill="rgb(240,150,53)" rx="2" ry="2" />
<text  x="470.34" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_Node_allocator@plt (60,606,060 samples, 0.01%)</title><rect x="56.5" y="629" width="0.1" height="15.0" fill="rgb(216,137,28)" rx="2" ry="2" />
<text  x="59.52" y="639.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (80,808,080 samples, 0.01%)</title><rect x="586.7" y="421" width="0.2" height="15.0" fill="rgb(245,50,9)" rx="2" ry="2" />
<text  x="589.74" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::IndexBuilder*, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt; (202,020,200 samples, 0.03%)</title><rect x="1078.7" y="421" width="0.3" height="15.0" fill="rgb(249,82,43)" rx="2" ry="2" />
<text  x="1081.66" y="431.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::FindBlockForward (4,050,505,010 samples, 0.63%)</title><rect x="825.4" y="341" width="7.5" height="15.0" fill="rgb(241,118,24)" rx="2" ry="2" />
<text  x="828.38" y="351.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (6,939,393,870 samples, 1.09%)</title><rect x="1129.8" y="469" width="12.8" height="15.0" fill="rgb(229,61,54)" rx="2" ry="2" />
<text  x="1132.75" y="479.5" ></text>
</g>
<g >
<title>fdatasync (212,121,210 samples, 0.03%)</title><rect x="747.3" y="421" width="0.4" height="15.0" fill="rgb(241,21,15)" rx="2" ry="2" />
<text  x="750.26" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (171,717,170 samples, 0.03%)</title><rect x="956.6" y="421" width="0.3" height="15.0" fill="rgb(230,165,49)" rx="2" ry="2" />
<text  x="959.62" y="431.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (464,646,460 samples, 0.07%)</title><rect x="1136.0" y="373" width="0.8" height="15.0" fill="rgb(231,214,21)" rx="2" ry="2" />
<text  x="1138.96" y="383.5" ></text>
</g>
<g >
<title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Release (171,717,170 samples, 0.03%)</title><rect x="832.0" y="213" width="0.3" height="15.0" fill="rgb(213,9,24)" rx="2" ry="2" />
<text  x="834.98" y="223.5" ></text>
</g>
<g >
<title>rocksdb::FlushBlockBySizePolicy::Update (161,616,160 samples, 0.03%)</title><rect x="712.5" y="453" width="0.3" height="15.0" fill="rgb(233,8,18)" rx="2" ry="2" />
<text  x="715.48" y="463.5" ></text>
</g>
<g >
<title>rocksdb::ForceReleaseCachedEntry (191,919,190 samples, 0.03%)</title><rect x="832.0" y="245" width="0.3" height="15.0" fill="rgb(240,186,21)" rx="2" ry="2" />
<text  x="834.96" y="255.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::CompactionHeapItemComparator::operator (161,616,160 samples, 0.03%)</title><rect x="802.0" y="421" width="0.3" height="15.0" fill="rgb(239,102,13)" rx="2" ry="2" />
<text  x="804.97" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (101,010,100 samples, 0.02%)</title><rect x="957.8" y="405" width="0.2" height="15.0" fill="rgb(207,63,15)" rx="2" ry="2" />
<text  x="960.78" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_ptr (101,010,100 samples, 0.02%)</title><rect x="859.3" y="341" width="0.2" height="15.0" fill="rgb(238,96,49)" rx="2" ry="2" />
<text  x="862.31" y="351.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::GetBlockContents (262,626,260 samples, 0.04%)</title><rect x="862.5" y="277" width="0.4" height="15.0" fill="rgb(227,26,37)" rx="2" ry="2" />
<text  x="865.46" y="287.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::value (2,878,787,850 samples, 0.45%)</title><rect x="682.4" y="421" width="5.3" height="15.0" fill="rgb(220,225,20)" rx="2" ry="2" />
<text  x="685.41" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt;::end (181,818,180 samples, 0.03%)</title><rect x="610.6" y="421" width="0.3" height="15.0" fill="rgb(227,219,42)" rx="2" ry="2" />
<text  x="613.58" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="912.1" y="357" width="0.2" height="15.0" fill="rgb(206,216,41)" rx="2" ry="2" />
<text  x="915.13" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (363,636,360 samples, 0.06%)</title><rect x="864.4" y="245" width="0.7" height="15.0" fill="rgb(217,134,33)" rx="2" ry="2" />
<text  x="867.38" y="255.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::Valid (171,717,170 samples, 0.03%)</title><rect x="823.7" y="405" width="0.3" height="15.0" fill="rgb(242,69,45)" rx="2" ry="2" />
<text  x="826.70" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (797,979,790 samples, 0.12%)</title><rect x="896.9" y="309" width="1.4" height="15.0" fill="rgb(224,36,29)" rx="2" ry="2" />
<text  x="899.86" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (90,909,090 samples, 0.01%)</title><rect x="457.0" y="677" width="0.2" height="15.0" fill="rgb(241,140,47)" rx="2" ry="2" />
<text  x="460.01" y="687.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::ReadAndParseBlockFromFile&lt;rocksdb::Block_kData&gt; (2,030,303,010 samples, 0.32%)</title><rect x="826.0" y="277" width="3.8" height="15.0" fill="rgb(234,21,44)" rx="2" ry="2" />
<text  x="829.03" y="287.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (303,030,300 samples, 0.05%)</title><rect x="1034.8" y="437" width="0.6" height="15.0" fill="rgb(250,168,27)" rx="2" ry="2" />
<text  x="1037.85" y="447.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::PurgeObsoleteFiles (252,525,250 samples, 0.04%)</title><rect x="754.3" y="549" width="0.4" height="15.0" fill="rgb(222,19,16)" rx="2" ry="2" />
<text  x="757.26" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (808,080,800 samples, 0.13%)</title><rect x="904.6" y="373" width="1.5" height="15.0" fill="rgb(228,32,0)" rx="2" ry="2" />
<text  x="907.60" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (585,858,580 samples, 0.09%)</title><rect x="1032.9" y="389" width="1.1" height="15.0" fill="rgb(251,82,27)" rx="2" ry="2" />
<text  x="1035.91" y="399.5" ></text>
</g>
<g >
<title>std::numeric_limits&lt;unsigned long&gt;::max (212,121,210 samples, 0.03%)</title><rect x="806.7" y="421" width="0.4" height="15.0" fill="rgb(205,140,42)" rx="2" ry="2" />
<text  x="809.73" y="431.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::BlobGarbageMeter*, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;@plt (60,606,060 samples, 0.01%)</title><rect x="1153.0" y="421" width="0.1" height="15.0" fill="rgb(218,204,7)" rx="2" ry="2" />
<text  x="1156.01" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (303,030,300 samples, 0.05%)</title><rect x="580.0" y="405" width="0.6" height="15.0" fill="rgb(223,148,43)" rx="2" ry="2" />
<text  x="583.02" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="148.9" y="581" width="0.2" height="15.0" fill="rgb(208,12,34)" rx="2" ry="2" />
<text  x="151.91" y="591.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="885.4" y="325" width="0.2" height="15.0" fill="rgb(206,120,51)" rx="2" ry="2" />
<text  x="888.40" y="335.5" ></text>
</g>
<g >
<title>rocksdb::Block_kData::Block (131,313,130 samples, 0.02%)</title><rect x="861.9" y="277" width="0.3" height="15.0" fill="rgb(228,116,50)" rx="2" ry="2" />
<text  x="864.92" y="287.5" ></text>
</g>
<g >
<title>rocksdb::EncodeVarint32 (252,525,250 samples, 0.04%)</title><rect x="1037.6" y="421" width="0.4" height="15.0" fill="rgb(244,20,48)" rx="2" ry="2" />
<text  x="1040.55" y="431.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (585,858,580 samples, 0.09%)</title><rect x="265.7" y="613" width="1.1" height="15.0" fill="rgb(207,159,54)" rx="2" ry="2" />
<text  x="268.69" y="623.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatchInternal::Iterate (80,808,080 samples, 0.01%)</title><rect x="150.1" y="709" width="0.1" height="15.0" fill="rgb(229,160,28)" rx="2" ry="2" />
<text  x="153.08" y="719.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::Crc32AppendZeroes (525,252,520 samples, 0.08%)</title><rect x="44.1" y="645" width="1.0" height="15.0" fill="rgb(245,96,31)" rx="2" ry="2" />
<text  x="47.12" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (121,212,120 samples, 0.02%)</title><rect x="1006.2" y="485" width="0.2" height="15.0" fill="rgb(215,23,46)" rx="2" ry="2" />
<text  x="1009.18" y="495.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;53ul&gt; (242,424,240 samples, 0.04%)</title><rect x="1144.4" y="469" width="0.4" height="15.0" fill="rgb(211,41,21)" rx="2" ry="2" />
<text  x="1147.36" y="479.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;::base (101,010,100 samples, 0.02%)</title><rect x="995.6" y="453" width="0.2" height="15.0" fill="rgb(238,121,32)" rx="2" ry="2" />
<text  x="998.57" y="463.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (272,727,270 samples, 0.04%)</title><rect x="816.8" y="421" width="0.5" height="15.0" fill="rgb(215,173,1)" rx="2" ry="2" />
<text  x="819.76" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt;::end (191,919,190 samples, 0.03%)</title><rect x="1093.1" y="421" width="0.3" height="15.0" fill="rgb(254,6,11)" rx="2" ry="2" />
<text  x="1096.08" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr@plt (101,010,100 samples, 0.02%)</title><rect x="879.5" y="341" width="0.2" height="15.0" fill="rgb(216,164,9)" rx="2" ry="2" />
<text  x="882.51" y="351.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (111,111,110 samples, 0.02%)</title><rect x="31.7" y="677" width="0.2" height="15.0" fill="rgb(216,210,0)" rx="2" ry="2" />
<text  x="34.69" y="687.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (70,707,070 samples, 0.01%)</title><rect x="143.0" y="645" width="0.1" height="15.0" fill="rgb(217,173,4)" rx="2" ry="2" />
<text  x="145.97" y="655.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;::_Deque_iterator (161,616,160 samples, 0.03%)</title><rect x="702.6" y="373" width="0.3" height="15.0" fill="rgb(210,39,44)" rx="2" ry="2" />
<text  x="705.65" y="383.5" ></text>
</g>
<g >
<title>rocksdb::FlushBlockBySizePolicy::Update (181,818,180 samples, 0.03%)</title><rect x="1112.3" y="469" width="0.3" height="15.0" fill="rgb(231,15,40)" rx="2" ry="2" />
<text  x="1115.29" y="479.5" ></text>
</g>
<g >
<title>rocksdb::GetLengthPrefixedSlice (111,111,110 samples, 0.02%)</title><rect x="88.8" y="533" width="0.2" height="15.0" fill="rgb(241,181,51)" rx="2" ry="2" />
<text  x="91.75" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (121,212,120 samples, 0.02%)</title><rect x="486.9" y="725" width="0.2" height="15.0" fill="rgb(217,126,6)" rx="2" ry="2" />
<text  x="489.91" y="735.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (202,020,200 samples, 0.03%)</title><rect x="898.6" y="293" width="0.3" height="15.0" fill="rgb(242,229,26)" rx="2" ry="2" />
<text  x="901.55" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (797,979,790 samples, 0.12%)</title><rect x="1139.7" y="373" width="1.5" height="15.0" fill="rgb(240,215,36)" rx="2" ry="2" />
<text  x="1142.75" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="888.7" y="277" width="0.1" height="15.0" fill="rgb(242,216,9)" rx="2" ry="2" />
<text  x="891.67" y="287.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::IsDeleteRangeSentinelKey@plt (90,909,090 samples, 0.01%)</title><rect x="1014.2" y="485" width="0.2" height="15.0" fill="rgb(252,52,53)" rx="2" ry="2" />
<text  x="1017.24" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::get (424,242,420 samples, 0.07%)</title><rect x="849.9" y="357" width="0.7" height="15.0" fill="rgb(236,9,48)" rx="2" ry="2" />
<text  x="852.85" y="367.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid@plt (60,606,060 samples, 0.01%)</title><rect x="751.4" y="469" width="0.2" height="15.0" fill="rgb(214,117,18)" rx="2" ry="2" />
<text  x="754.44" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (141,414,140 samples, 0.02%)</title><rect x="1048.3" y="421" width="0.2" height="15.0" fill="rgb(214,190,14)" rx="2" ry="2" />
<text  x="1051.26" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (434,343,430 samples, 0.07%)</title><rect x="689.1" y="405" width="0.8" height="15.0" fill="rgb(209,68,46)" rx="2" ry="2" />
<text  x="692.08" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (60,606,060 samples, 0.01%)</title><rect x="469.9" y="613" width="0.1" height="15.0" fill="rgb(223,12,21)" rx="2" ry="2" />
<text  x="472.92" y="623.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="955.1" y="389" width="0.4" height="15.0" fill="rgb(205,209,47)" rx="2" ry="2" />
<text  x="958.15" y="399.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (202,020,200 samples, 0.03%)</title><rect x="1138.7" y="325" width="0.4" height="15.0" fill="rgb(222,229,52)" rx="2" ry="2" />
<text  x="1141.69" y="335.5" ></text>
</g>
<g >
<title>handle_mm_fault (333,333,330 samples, 0.05%)</title><rect x="559.5" y="773" width="0.6" height="15.0" fill="rgb(220,79,2)" rx="2" ry="2" />
<text  x="562.51" y="783.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (80,808,080 samples, 0.01%)</title><rect x="890.4" y="405" width="0.2" height="15.0" fill="rgb(236,25,49)" rx="2" ry="2" />
<text  x="893.40" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (858,585,850 samples, 0.13%)</title><rect x="896.8" y="325" width="1.6" height="15.0" fill="rgb(207,130,22)" rx="2" ry="2" />
<text  x="899.78" y="335.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::SeekToFirst (80,808,080 samples, 0.01%)</title><rect x="832.6" y="325" width="0.2" height="15.0" fill="rgb(253,223,5)" rx="2" ry="2" />
<text  x="835.62" y="335.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status (3,474,747,440 samples, 0.54%)</title><rect x="839.4" y="373" width="6.4" height="15.0" fill="rgb(205,225,20)" rx="2" ry="2" />
<text  x="842.42" y="383.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (131,313,130 samples, 0.02%)</title><rect x="443.0" y="645" width="0.3" height="15.0" fill="rgb(223,185,40)" rx="2" ry="2" />
<text  x="446.04" y="655.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::key (161,616,160 samples, 0.03%)</title><rect x="838.6" y="373" width="0.3" height="15.0" fill="rgb(253,191,35)" rx="2" ry="2" />
<text  x="841.64" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::DynamicBloom*, std::default_delete&lt;rocksdb::DynamicBloom&gt; &gt; (222,222,220 samples, 0.03%)</title><rect x="140.8" y="581" width="0.5" height="15.0" fill="rgb(211,81,37)" rx="2" ry="2" />
<text  x="143.85" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (101,010,100 samples, 0.02%)</title><rect x="653.6" y="405" width="0.2" height="15.0" fill="rgb(241,116,38)" rx="2" ry="2" />
<text  x="656.63" y="415.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::RealCompaction::allow_ingest_behind (343,434,340 samples, 0.05%)</title><rect x="980.3" y="469" width="0.6" height="15.0" fill="rgb(209,211,52)" rx="2" ry="2" />
<text  x="983.29" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (141,414,140 samples, 0.02%)</title><rect x="1144.8" y="469" width="0.3" height="15.0" fill="rgb(206,63,27)" rx="2" ry="2" />
<text  x="1147.82" y="479.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now@plt (202,020,200 samples, 0.03%)</title><rect x="448.8" y="709" width="0.4" height="15.0" fill="rgb(205,220,42)" rx="2" ry="2" />
<text  x="451.78" y="719.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::IOStatus (60,606,060 samples, 0.01%)</title><rect x="47.5" y="709" width="0.1" height="15.0" fill="rgb(240,186,11)" rx="2" ry="2" />
<text  x="50.45" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (333,333,330 samples, 0.05%)</title><rect x="498.7" y="725" width="0.7" height="15.0" fill="rgb(252,224,10)" rx="2" ry="2" />
<text  x="501.74" y="735.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (212,121,210 samples, 0.03%)</title><rect x="630.9" y="373" width="0.4" height="15.0" fill="rgb(215,148,7)" rx="2" ry="2" />
<text  x="633.89" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (141,414,140 samples, 0.02%)</title><rect x="968.3" y="453" width="0.3" height="15.0" fill="rgb(225,153,24)" rx="2" ry="2" />
<text  x="971.30" y="463.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::IsKeyPinned (141,414,140 samples, 0.02%)</title><rect x="982.9" y="453" width="0.3" height="15.0" fill="rgb(209,35,54)" rx="2" ry="2" />
<text  x="985.94" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::FlushBlockPolicy*, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt; (696,969,690 samples, 0.11%)</title><rect x="1075.1" y="405" width="1.2" height="15.0" fill="rgb(245,131,1)" rx="2" ry="2" />
<text  x="1078.06" y="415.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid (424,242,420 samples, 0.07%)</title><rect x="931.4" y="469" width="0.8" height="15.0" fill="rgb(250,47,53)" rx="2" ry="2" />
<text  x="934.40" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (111,111,110 samples, 0.02%)</title><rect x="842.3" y="293" width="0.2" height="15.0" fill="rgb(221,65,41)" rx="2" ry="2" />
<text  x="845.32" y="303.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (242,424,240 samples, 0.04%)</title><rect x="720.5" y="437" width="0.4" height="15.0" fill="rgb(227,182,22)" rx="2" ry="2" />
<text  x="723.48" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (676,767,670 samples, 0.11%)</title><rect x="846.5" y="341" width="1.2" height="15.0" fill="rgb(237,87,47)" rx="2" ry="2" />
<text  x="849.46" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::get (606,060,600 samples, 0.09%)</title><rect x="985.8" y="437" width="1.1" height="15.0" fill="rgb(240,113,52)" rx="2" ry="2" />
<text  x="988.79" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::operator bool (1,010,101,000 samples, 0.16%)</title><rect x="1071.7" y="437" width="1.9" height="15.0" fill="rgb(247,186,2)" rx="2" ry="2" />
<text  x="1074.74" y="447.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid (313,131,310 samples, 0.05%)</title><rect x="696.3" y="405" width="0.6" height="15.0" fill="rgb(214,48,17)" rx="2" ry="2" />
<text  x="699.30" y="415.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid (90,909,090 samples, 0.01%)</title><rect x="699.3" y="421" width="0.1" height="15.0" fill="rgb(245,31,19)" rx="2" ry="2" />
<text  x="702.25" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (262,626,260 samples, 0.04%)</title><rect x="967.0" y="469" width="0.5" height="15.0" fill="rgb(232,45,8)" rx="2" ry="2" />
<text  x="969.97" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::lower_bound (131,313,130 samples, 0.02%)</title><rect x="66.3" y="597" width="0.2" height="15.0" fill="rgb(210,158,45)" rx="2" ry="2" />
<text  x="69.29" y="607.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (141,414,140 samples, 0.02%)</title><rect x="1012.1" y="373" width="0.2" height="15.0" fill="rgb(227,162,31)" rx="2" ry="2" />
<text  x="1015.05" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::FilterBlockBuilder*, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;@plt (191,919,190 samples, 0.03%)</title><rect x="1072.2" y="389" width="0.4" height="15.0" fill="rgb(234,103,37)" rx="2" ry="2" />
<text  x="1075.23" y="399.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::Value (151,515,150 samples, 0.02%)</title><rect x="45.2" y="661" width="0.3" height="15.0" fill="rgb(210,186,49)" rx="2" ry="2" />
<text  x="48.18" y="671.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Valid (111,111,110 samples, 0.02%)</title><rect x="966.3" y="421" width="0.2" height="15.0" fill="rgb(220,181,29)" rx="2" ry="2" />
<text  x="969.28" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (181,818,180 samples, 0.03%)</title><rect x="885.3" y="373" width="0.3" height="15.0" fill="rgb(244,76,9)" rx="2" ry="2" />
<text  x="888.25" y="383.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::WriteThread::Writer*&gt;::compare_exchange_weak (555,555,550 samples, 0.09%)</title><rect x="443.4" y="693" width="1.1" height="15.0" fill="rgb(221,153,16)" rx="2" ry="2" />
<text  x="446.43" y="703.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (363,636,360 samples, 0.06%)</title><rect x="967.9" y="469" width="0.7" height="15.0" fill="rgb(251,86,7)" rx="2" ry="2" />
<text  x="970.88" y="479.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::FlushBlockPolicy*, false&gt;::_M_head (232,323,230 samples, 0.04%)</title><rect x="1075.7" y="373" width="0.4" height="15.0" fill="rgb(225,215,8)" rx="2" ry="2" />
<text  x="1078.70" y="383.5" ></text>
</g>
<g >
<title>rocksdb::IsValueType (292,929,290 samples, 0.05%)</title><rect x="650.8" y="405" width="0.6" height="15.0" fill="rgb(220,11,42)" rx="2" ry="2" />
<text  x="653.81" y="415.5" ></text>
</g>
<g >
<title>std::numeric_limits&lt;unsigned int&gt;::max (80,808,080 samples, 0.01%)</title><rect x="472.4" y="741" width="0.1" height="15.0" fill="rgb(220,71,3)" rx="2" ry="2" />
<text  x="475.40" y="751.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (676,767,670 samples, 0.11%)</title><rect x="1137.8" y="389" width="1.3" height="15.0" fill="rgb(212,136,7)" rx="2" ry="2" />
<text  x="1140.81" y="399.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::Writer::CheckCallback (60,606,060 samples, 0.01%)</title><rect x="455.9" y="725" width="0.1" height="15.0" fill="rgb(218,36,33)" rx="2" ry="2" />
<text  x="458.87" y="735.5" ></text>
</g>
<g >
<title>rocksdb::GetLengthPrefixedSlice (1,141,414,130 samples, 0.18%)</title><rect x="126.9" y="565" width="2.1" height="15.0" fill="rgb(215,76,29)" rx="2" ry="2" />
<text  x="129.91" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (101,010,100 samples, 0.02%)</title><rect x="467.1" y="597" width="0.1" height="15.0" fill="rgb(244,28,29)" rx="2" ry="2" />
<text  x="470.06" y="607.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (424,242,420 samples, 0.07%)</title><rect x="287.6" y="613" width="0.8" height="15.0" fill="rgb(240,167,39)" rx="2" ry="2" />
<text  x="290.63" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (131,313,130 samples, 0.02%)</title><rect x="50.8" y="709" width="0.2" height="15.0" fill="rgb(242,132,39)" rx="2" ry="2" />
<text  x="53.76" y="719.5" ></text>
</g>
<g >
<title>ext4_da_map_blocks.constprop.0 (80,808,080 samples, 0.01%)</title><rect x="572.6" y="101" width="0.1" height="15.0" fill="rgb(228,91,35)" rx="2" ry="2" />
<text  x="575.56" y="111.5" ></text>
</g>
<g >
<title>rocksdb::GetLengthPrefixedSlice (70,707,070 samples, 0.01%)</title><rect x="136.3" y="565" width="0.1" height="15.0" fill="rgb(206,73,37)" rx="2" ry="2" />
<text  x="139.28" y="575.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (131,313,130 samples, 0.02%)</title><rect x="38.3" y="389" width="0.3" height="15.0" fill="rgb(217,142,35)" rx="2" ry="2" />
<text  x="41.31" y="399.5" ></text>
</g>
<g >
<title>rocksdb::port::AsmVolatilePause (1,515,151,500 samples, 0.24%)</title><rect x="444.7" y="709" width="2.8" height="15.0" fill="rgb(215,201,24)" rx="2" ry="2" />
<text  x="447.68" y="719.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size@plt (60,606,060 samples, 0.01%)</title><rect x="799.3" y="405" width="0.1" height="15.0" fill="rgb(230,39,29)" rx="2" ry="2" />
<text  x="802.32" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt;::empty (1,414,141,400 samples, 0.22%)</title><rect x="1090.8" y="437" width="2.6" height="15.0" fill="rgb(206,20,17)" rx="2" ry="2" />
<text  x="1093.82" y="447.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*&gt;::compare_exchange_strong (90,909,090 samples, 0.01%)</title><rect x="136.5" y="581" width="0.1" height="15.0" fill="rgb(234,18,41)" rx="2" ry="2" />
<text  x="139.46" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (70,707,070 samples, 0.01%)</title><rect x="149.2" y="661" width="0.2" height="15.0" fill="rgb(205,200,3)" rx="2" ry="2" />
<text  x="152.24" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (242,424,240 samples, 0.04%)</title><rect x="754.3" y="453" width="0.4" height="15.0" fill="rgb(246,27,18)" rx="2" ry="2" />
<text  x="757.26" y="463.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Valid (60,606,060 samples, 0.01%)</title><rect x="965.3" y="389" width="0.1" height="15.0" fill="rgb(252,15,37)" rx="2" ry="2" />
<text  x="968.25" y="399.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="905.9" y="277" width="0.1" height="15.0" fill="rgb(245,180,41)" rx="2" ry="2" />
<text  x="908.87" y="287.5" ></text>
</g>
<g >
<title>rocksdb::Slice::difference_offset (757,575,750 samples, 0.12%)</title><rect x="584.1" y="405" width="1.4" height="15.0" fill="rgb(219,46,27)" rx="2" ry="2" />
<text  x="587.09" y="415.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::IOStatus (60,606,060 samples, 0.01%)</title><rect x="42.1" y="629" width="0.1" height="15.0" fill="rgb(253,36,14)" rx="2" ry="2" />
<text  x="45.10" y="639.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (191,919,190 samples, 0.03%)</title><rect x="905.0" y="309" width="0.4" height="15.0" fill="rgb(247,202,20)" rx="2" ry="2" />
<text  x="908.03" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::operator (424,242,420 samples, 0.07%)</title><rect x="1164.0" y="485" width="0.8" height="15.0" fill="rgb(217,126,13)" rx="2" ry="2" />
<text  x="1166.98" y="495.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (224,373,735,130 samples, 35.11%)</title><rect x="765.1" y="645" width="414.3" height="15.0" fill="rgb(233,52,19)" rx="2" ry="2" />
<text  x="768.11" y="655.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (494,949,490 samples, 0.08%)</title><rect x="840.5" y="309" width="0.9" height="15.0" fill="rgb(218,134,52)" rx="2" ry="2" />
<text  x="843.51" y="319.5" ></text>
</g>
<g >
<title>rocksdb::BlockCreateContext::Create (171,717,170 samples, 0.03%)</title><rect x="861.9" y="293" width="0.3" height="15.0" fill="rgb(210,215,6)" rx="2" ry="2" />
<text  x="864.90" y="303.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::SetInternalKey (2,414,141,390 samples, 0.38%)</title><rect x="933.4" y="469" width="4.4" height="15.0" fill="rgb(212,173,33)" rx="2" ry="2" />
<text  x="936.38" y="479.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::AddWithLastKeyImpl (90,909,090 samples, 0.01%)</title><rect x="611.0" y="405" width="0.2" height="15.0" fill="rgb(210,55,27)" rx="2" ry="2" />
<text  x="613.99" y="415.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (121,212,120 samples, 0.02%)</title><rect x="37.3" y="405" width="0.2" height="15.0" fill="rgb(211,134,11)" rx="2" ry="2" />
<text  x="40.31" y="415.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::HeapItem::key (202,020,200 samples, 0.03%)</title><rect x="961.1" y="437" width="0.4" height="15.0" fill="rgb(216,97,5)" rx="2" ry="2" />
<text  x="964.10" y="447.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::WriteThread::Writer*&gt;::load (121,212,120 samples, 0.02%)</title><rect x="444.5" y="693" width="0.2" height="15.0" fill="rgb(236,216,42)" rx="2" ry="2" />
<text  x="447.46" y="703.5" ></text>
</g>
<g >
<title>__x64_sys_write (606,060,600 samples, 0.09%)</title><rect x="1026.6" y="277" width="1.1" height="15.0" fill="rgb(249,160,30)" rx="2" ry="2" />
<text  x="1029.60" y="287.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::WriteToWAL (8,767,676,680 samples, 1.37%)</title><rect x="31.2" y="725" width="16.2" height="15.0" fill="rgb(224,36,38)" rx="2" ry="2" />
<text  x="34.21" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::get (212,121,210 samples, 0.03%)</title><rect x="849.3" y="373" width="0.4" height="15.0" fill="rgb(244,132,53)" rx="2" ry="2" />
<text  x="852.35" y="383.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::EqualWithoutTimestamp (1,171,717,160 samples, 0.18%)</title><rect x="640.4" y="421" width="2.1" height="15.0" fill="rgb(219,112,16)" rx="2" ry="2" />
<text  x="643.36" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;rocksdb::Status, rocksdb::CompactionJob::ProcessKeyValueCompaction (161,616,160 samples, 0.03%)</title><rect x="1145.9" y="421" width="0.3" height="15.0" fill="rgb(235,67,2)" rx="2" ry="2" />
<text  x="1148.91" y="431.5" ></text>
</g>
<g >
<title>rocksdb::OutputValidator::Add (6,202,020,140 samples, 0.97%)</title><rect x="714.7" y="453" width="11.5" height="15.0" fill="rgb(235,130,27)" rx="2" ry="2" />
<text  x="717.71" y="463.5" ></text>
</g>
<g >
<title>rocksdb::InternalKeyComparator::CompareKeySeq (3,616,161,580 samples, 0.57%)</title><rect x="129.3" y="565" width="6.7" height="15.0" fill="rgb(230,55,25)" rx="2" ry="2" />
<text  x="132.28" y="575.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::SavePoints, std::default_delete&lt;rocksdb::SavePoints&gt; &gt;::_M_ptr (131,313,130 samples, 0.02%)</title><rect x="478.3" y="725" width="0.3" height="15.0" fill="rgb(231,190,7)" rx="2" ry="2" />
<text  x="481.33" y="735.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="467.1" y="581" width="0.1" height="15.0" fill="rgb(228,5,42)" rx="2" ry="2" />
<text  x="470.14" y="591.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (323,232,320 samples, 0.05%)</title><rect x="954.1" y="453" width="0.6" height="15.0" fill="rgb(213,165,8)" rx="2" ry="2" />
<text  x="957.06" y="463.5" ></text>
</g>
<g >
<title>std::chrono::operator&gt;=&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (696,969,690 samples, 0.11%)</title><rect x="166.9" y="693" width="1.3" height="15.0" fill="rgb(245,209,31)" rx="2" ry="2" />
<text  x="169.94" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (393,939,390 samples, 0.06%)</title><rect x="1011.6" y="421" width="0.7" height="15.0" fill="rgb(216,42,1)" rx="2" ry="2" />
<text  x="1014.59" y="431.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::get_root (161,616,160 samples, 0.03%)</title><rect x="776.1" y="437" width="0.3" height="15.0" fill="rgb(209,177,33)" rx="2" ry="2" />
<text  x="779.06" y="447.5" ></text>
</g>
<g >
<title>std::random_device::_M_fini (90,909,090 samples, 0.01%)</title><rect x="542.5" y="805" width="0.2" height="15.0" fill="rgb(212,1,38)" rx="2" ry="2" />
<text  x="545.49" y="815.5" ></text>
</g>
<g >
<title>rocksdb::Status::MarkChecked (111,111,110 samples, 0.02%)</title><rect x="1126.1" y="469" width="0.2" height="15.0" fill="rgb(234,176,52)" rx="2" ry="2" />
<text  x="1129.08" y="479.5" ></text>
</g>
<g >
<title>xas_load (70,707,070 samples, 0.01%)</title><rect x="37.0" y="421" width="0.1" height="15.0" fill="rgb(233,72,32)" rx="2" ry="2" />
<text  x="40.01" y="431.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::begin (171,717,170 samples, 0.03%)</title><rect x="812.4" y="389" width="0.3" height="15.0" fill="rgb(218,96,33)" rx="2" ry="2" />
<text  x="815.42" y="399.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_buffers (131,313,130 samples, 0.02%)</title><rect x="747.3" y="261" width="0.3" height="15.0" fill="rgb(228,14,24)" rx="2" ry="2" />
<text  x="750.32" y="271.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (222,222,220 samples, 0.03%)</title><rect x="910.8" y="325" width="0.4" height="15.0" fill="rgb(219,185,9)" rx="2" ry="2" />
<text  x="913.75" y="335.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (484,848,480 samples, 0.08%)</title><rect x="606.4" y="421" width="0.9" height="15.0" fill="rgb(248,104,15)" rx="2" ry="2" />
<text  x="609.44" y="431.5" ></text>
</g>
<g >
<title>rocksdb::PackSequenceAndType (80,808,080 samples, 0.01%)</title><rect x="141.7" y="645" width="0.2" height="15.0" fill="rgb(230,144,35)" rx="2" ry="2" />
<text  x="144.71" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (80,808,080 samples, 0.01%)</title><rect x="148.9" y="597" width="0.2" height="15.0" fill="rgb(238,108,23)" rx="2" ry="2" />
<text  x="151.91" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IndexBuilder, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt;::operator (1,323,232,310 samples, 0.21%)</title><rect x="1076.6" y="453" width="2.5" height="15.0" fill="rgb(248,110,18)" rx="2" ry="2" />
<text  x="1079.65" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (70,707,070 samples, 0.01%)</title><rect x="1111.2" y="453" width="0.1" height="15.0" fill="rgb(221,167,4)" rx="2" ry="2" />
<text  x="1114.21" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (767,676,760 samples, 0.12%)</title><rect x="1120.8" y="437" width="1.4" height="15.0" fill="rgb(215,22,22)" rx="2" ry="2" />
<text  x="1123.76" y="447.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (191,919,190 samples, 0.03%)</title><rect x="253.8" y="693" width="0.4" height="15.0" fill="rgb(216,131,15)" rx="2" ry="2" />
<text  x="256.85" y="703.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (191,919,190 samples, 0.03%)</title><rect x="711.2" y="357" width="0.3" height="15.0" fill="rgb(248,218,3)" rx="2" ry="2" />
<text  x="714.17" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (161,616,160 samples, 0.03%)</title><rect x="888.1" y="293" width="0.3" height="15.0" fill="rgb(228,128,36)" rx="2" ry="2" />
<text  x="891.07" y="303.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Valid (171,717,170 samples, 0.03%)</title><rect x="914.7" y="453" width="0.3" height="15.0" fill="rgb(242,149,11)" rx="2" ry="2" />
<text  x="917.73" y="463.5" ></text>
</g>
<g >
<title>rocksdb::ExtractInternalKeyFooter (333,333,330 samples, 0.05%)</title><rect x="590.9" y="421" width="0.6" height="15.0" fill="rgb(231,100,43)" rx="2" ry="2" />
<text  x="593.92" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::DynamicBloom*, false&gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="141.0" y="549" width="0.1" height="15.0" fill="rgb(251,67,46)" rx="2" ry="2" />
<text  x="144.02" y="559.5" ></text>
</g>
<g >
<title>rocksdb::RangeDelAggregator::ShouldDelete (232,323,230 samples, 0.04%)</title><rect x="704.9" y="437" width="0.4" height="15.0" fill="rgb(228,157,14)" rx="2" ry="2" />
<text  x="707.88" y="447.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::ShouldScheduleFlush (80,808,080 samples, 0.01%)</title><rect x="59.7" y="629" width="0.1" height="15.0" fill="rgb(249,196,6)" rx="2" ry="2" />
<text  x="62.65" y="639.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (323,232,320 samples, 0.05%)</title><rect x="984.2" y="421" width="0.6" height="15.0" fill="rgb(242,92,21)" rx="2" ry="2" />
<text  x="987.21" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::operator (161,616,160 samples, 0.03%)</title><rect x="912.4" y="405" width="0.3" height="15.0" fill="rgb(238,24,54)" rx="2" ry="2" />
<text  x="915.36" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (545,454,540 samples, 0.09%)</title><rect x="607.3" y="421" width="1.0" height="15.0" fill="rgb(229,126,24)" rx="2" ry="2" />
<text  x="610.33" y="431.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (121,212,120 samples, 0.02%)</title><rect x="44.8" y="309" width="0.2" height="15.0" fill="rgb(230,176,21)" rx="2" ry="2" />
<text  x="47.82" y="319.5" ></text>
</g>
<g >
<title>rocksdb::Slice::difference_offset (313,131,310 samples, 0.05%)</title><rect x="586.9" y="421" width="0.6" height="15.0" fill="rgb(207,153,19)" rx="2" ry="2" />
<text  x="589.89" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (151,515,150 samples, 0.02%)</title><rect x="906.4" y="309" width="0.3" height="15.0" fill="rgb(241,29,12)" rx="2" ry="2" />
<text  x="909.44" y="319.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatchInternal::Count (181,818,180 samples, 0.03%)</title><rect x="52.4" y="725" width="0.3" height="15.0" fill="rgb(240,19,46)" rx="2" ry="2" />
<text  x="55.40" y="735.5" ></text>
</g>
<g >
<title>std::operator==&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="32.3" y="677" width="0.1" height="15.0" fill="rgb(219,110,15)" rx="2" ry="2" />
<text  x="35.31" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_ptr (757,575,750 samples, 0.12%)</title><rect x="987.3" y="437" width="1.4" height="15.0" fill="rgb(250,0,49)" rx="2" ry="2" />
<text  x="990.32" y="447.5" ></text>
</g>
<g >
<title>std::forward&lt;bool*&gt; (212,121,210 samples, 0.03%)</title><rect x="1094.9" y="453" width="0.4" height="15.0" fill="rgb(242,163,50)" rx="2" ry="2" />
<text  x="1097.89" y="463.5" ></text>
</g>
<g >
<title>rocksdb::DecodeFixed64 (171,717,170 samples, 0.03%)</title><rect x="933.0" y="469" width="0.3" height="15.0" fill="rgb(212,77,19)" rx="2" ry="2" />
<text  x="935.97" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (232,323,230 samples, 0.04%)</title><rect x="579.6" y="421" width="0.4" height="15.0" fill="rgb(236,139,34)" rx="2" ry="2" />
<text  x="582.58" y="431.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;29ul&gt; (1,252,525,240 samples, 0.20%)</title><rect x="970.0" y="469" width="2.3" height="15.0" fill="rgb(211,114,22)" rx="2" ry="2" />
<text  x="972.97" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Block::Block (80,808,080 samples, 0.01%)</title><rect x="826.1" y="229" width="0.1" height="15.0" fill="rgb(224,190,14)" rx="2" ry="2" />
<text  x="829.09" y="239.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_ptr (121,212,120 samples, 0.02%)</title><rect x="903.2" y="341" width="0.2" height="15.0" fill="rgb(214,198,11)" rx="2" ry="2" />
<text  x="906.20" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (262,626,260 samples, 0.04%)</title><rect x="910.7" y="341" width="0.5" height="15.0" fill="rgb(252,201,54)" rx="2" ry="2" />
<text  x="913.68" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (434,343,430 samples, 0.07%)</title><rect x="577.9" y="357" width="0.8" height="15.0" fill="rgb(249,24,51)" rx="2" ry="2" />
<text  x="580.90" y="367.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (828,282,820 samples, 0.13%)</title><rect x="1120.6" y="453" width="1.6" height="15.0" fill="rgb(247,82,12)" rx="2" ry="2" />
<text  x="1123.65" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="854.4" y="245" width="0.2" height="15.0" fill="rgb(219,122,17)" rx="2" ry="2" />
<text  x="857.37" y="255.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::SyncInternal (131,313,130 samples, 0.02%)</title><rect x="562.0" y="469" width="0.3" height="15.0" fill="rgb(211,16,15)" rx="2" ry="2" />
<text  x="565.04" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (111,111,110 samples, 0.02%)</title><rect x="846.2" y="293" width="0.2" height="15.0" fill="rgb(205,156,13)" rx="2" ry="2" />
<text  x="849.21" y="303.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Valid (303,030,300 samples, 0.05%)</title><rect x="956.4" y="437" width="0.5" height="15.0" fill="rgb(250,19,30)" rx="2" ry="2" />
<text  x="959.38" y="447.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::UpdateInternalKey (424,242,420 samples, 0.07%)</title><rect x="982.4" y="469" width="0.8" height="15.0" fill="rgb(234,59,47)" rx="2" ry="2" />
<text  x="985.42" y="479.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::IsKeyPinned (101,010,100 samples, 0.02%)</title><rect x="836.2" y="293" width="0.2" height="15.0" fill="rgb(214,179,26)" rx="2" ry="2" />
<text  x="839.20" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (4,595,959,550 samples, 0.72%)</title><rect x="486.1" y="789" width="8.5" height="15.0" fill="rgb(210,64,51)" rx="2" ry="2" />
<text  x="489.09" y="799.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::FileMetaData* const*, std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt; &gt;::__normal_iterator (101,010,100 samples, 0.02%)</title><rect x="1093.2" y="405" width="0.2" height="15.0" fill="rgb(224,196,16)" rx="2" ry="2" />
<text  x="1096.25" y="415.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::FailIfCfHasTs (545,454,540 samples, 0.09%)</title><rect x="479.8" y="773" width="1.0" height="15.0" fill="rgb(232,1,28)" rx="2" ry="2" />
<text  x="482.80" y="783.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (242,424,240 samples, 0.04%)</title><rect x="725.3" y="405" width="0.5" height="15.0" fill="rgb(232,112,20)" rx="2" ry="2" />
<text  x="728.35" y="415.5" ></text>
</g>
<g >
<title>std::operator&amp; (363,636,360 samples, 0.06%)</title><rect x="928.5" y="453" width="0.7" height="15.0" fill="rgb(231,176,1)" rx="2" ry="2" />
<text  x="931.51" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::back (1,333,333,320 samples, 0.21%)</title><rect x="1101.6" y="453" width="2.5" height="15.0" fill="rgb(234,137,25)" rx="2" ry="2" />
<text  x="1104.61" y="463.5" ></text>
</g>
<g >
<title>rocksdb::PinnableSlice::Reset (565,656,560 samples, 0.09%)</title><rect x="942.3" y="469" width="1.0" height="15.0" fill="rgb(234,143,11)" rx="2" ry="2" />
<text  x="945.27" y="479.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::operator[] (393,939,390 samples, 0.06%)</title><rect x="814.5" y="373" width="0.8" height="15.0" fill="rgb(206,206,52)" rx="2" ry="2" />
<text  x="817.54" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (151,515,150 samples, 0.02%)</title><rect x="905.7" y="325" width="0.3" height="15.0" fill="rgb(230,198,9)" rx="2" ry="2" />
<text  x="908.72" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (636,363,630 samples, 0.10%)</title><rect x="884.0" y="357" width="1.2" height="15.0" fill="rgb(242,62,39)" rx="2" ry="2" />
<text  x="887.02" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (70,707,070 samples, 0.01%)</title><rect x="139.5" y="597" width="0.1" height="15.0" fill="rgb(221,214,47)" rx="2" ry="2" />
<text  x="142.50" y="607.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::SetInternalKey (70,707,070 samples, 0.01%)</title><rect x="700.4" y="437" width="0.2" height="15.0" fill="rgb(238,223,36)" rx="2" ry="2" />
<text  x="703.43" y="447.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::KeyCommitted (80,808,080 samples, 0.01%)</title><rect x="916.9" y="485" width="0.1" height="15.0" fill="rgb(214,96,14)" rx="2" ry="2" />
<text  x="919.89" y="495.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (1,010,101,000 samples, 0.16%)</title><rect x="651.6" y="389" width="1.9" height="15.0" fill="rgb(248,86,47)" rx="2" ry="2" />
<text  x="654.63" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (181,818,180 samples, 0.03%)</title><rect x="857.4" y="277" width="0.3" height="15.0" fill="rgb(229,139,18)" rx="2" ry="2" />
<text  x="860.37" y="287.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (292,929,290 samples, 0.05%)</title><rect x="44.5" y="501" width="0.5" height="15.0" fill="rgb(253,201,5)" rx="2" ry="2" />
<text  x="47.51" y="511.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (404,040,400 samples, 0.06%)</title><rect x="134.3" y="517" width="0.7" height="15.0" fill="rgb(208,140,14)" rx="2" ry="2" />
<text  x="137.26" y="527.5" ></text>
</g>
<g >
<title>rocksdb::Compaction::column_family_data (222,222,220 samples, 0.03%)</title><rect x="1085.4" y="453" width="0.4" height="15.0" fill="rgb(244,157,28)" rx="2" ry="2" />
<text  x="1088.43" y="463.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (181,818,180 samples, 0.03%)</title><rect x="814.9" y="357" width="0.4" height="15.0" fill="rgb(229,29,23)" rx="2" ry="2" />
<text  x="817.92" y="367.5" ></text>
</g>
<g >
<title>ext4_evict_inode (80,808,080 samples, 0.01%)</title><rect x="1179.3" y="357" width="0.1" height="15.0" fill="rgb(227,67,38)" rx="2" ry="2" />
<text  x="1182.29" y="367.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::IntTblPropCollector*, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="609.8" y="357" width="0.2" height="15.0" fill="rgb(218,172,13)" rx="2" ry="2" />
<text  x="612.79" y="367.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (121,212,120 samples, 0.02%)</title><rect x="164.7" y="677" width="0.2" height="15.0" fill="rgb(243,156,40)" rx="2" ry="2" />
<text  x="167.70" y="687.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="900.9" y="261" width="0.2" height="15.0" fill="rgb(234,196,9)" rx="2" ry="2" />
<text  x="903.92" y="271.5" ></text>
</g>
<g >
<title>__page_cache_alloc (171,717,170 samples, 0.03%)</title><rect x="572.7" y="101" width="0.4" height="15.0" fill="rgb(211,44,50)" rx="2" ry="2" />
<text  x="575.75" y="111.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (80,808,080 samples, 0.01%)</title><rect x="484.8" y="773" width="0.2" height="15.0" fill="rgb(215,106,40)" rx="2" ry="2" />
<text  x="487.80" y="783.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (232,323,230 samples, 0.04%)</title><rect x="467.3" y="629" width="0.4" height="15.0" fill="rgb(246,67,17)" rx="2" ry="2" />
<text  x="470.31" y="639.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::UpdateInternalKey (70,707,070 samples, 0.01%)</title><rect x="991.8" y="485" width="0.2" height="15.0" fill="rgb(239,47,19)" rx="2" ry="2" />
<text  x="994.83" y="495.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;33ul&gt; (60,606,060 samples, 0.01%)</title><rect x="203.0" y="709" width="0.1" height="15.0" fill="rgb(234,64,40)" rx="2" ry="2" />
<text  x="206.04" y="719.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (90,909,090 samples, 0.01%)</title><rect x="887.0" y="309" width="0.2" height="15.0" fill="rgb(240,147,23)" rx="2" ry="2" />
<text  x="890.04" y="319.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::MergeBatch (737,373,730 samples, 0.12%)</title><rect x="31.3" y="709" width="1.4" height="15.0" fill="rgb(231,51,24)" rx="2" ry="2" />
<text  x="34.32" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::operator (696,969,690 samples, 0.11%)</title><rect x="608.9" y="421" width="1.2" height="15.0" fill="rgb(234,11,29)" rx="2" ry="2" />
<text  x="611.86" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (797,979,790 samples, 0.12%)</title><rect x="940.6" y="437" width="1.5" height="15.0" fill="rgb(208,75,9)" rx="2" ry="2" />
<text  x="943.58" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::FlushBlockPolicy*, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt; (383,838,380 samples, 0.06%)</title><rect x="1075.6" y="389" width="0.7" height="15.0" fill="rgb(214,168,0)" rx="2" ry="2" />
<text  x="1078.64" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;rocksdb::InternalKeyComparator, std::default_delete&lt;rocksdb::InternalKeyComparator&gt;, true, true&gt;::__uniq_ptr_impl (101,010,100 samples, 0.02%)</title><rect x="861.3" y="229" width="0.2" height="15.0" fill="rgb(215,8,39)" rx="2" ry="2" />
<text  x="864.29" y="239.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (131,313,130 samples, 0.02%)</title><rect x="847.4" y="277" width="0.3" height="15.0" fill="rgb(207,9,45)" rx="2" ry="2" />
<text  x="850.41" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (4,373,737,330 samples, 0.68%)</title><rect x="171.9" y="629" width="8.1" height="15.0" fill="rgb(245,211,38)" rx="2" ry="2" />
<text  x="174.92" y="639.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::Flush (626,262,620 samples, 0.10%)</title><rect x="1026.6" y="373" width="1.2" height="15.0" fill="rgb(239,44,41)" rx="2" ry="2" />
<text  x="1029.60" y="383.5" ></text>
</g>
<g >
<title>rocksdb::InternalKey::DecodeFrom (232,323,230 samples, 0.04%)</title><rect x="1112.6" y="469" width="0.5" height="15.0" fill="rgb(214,192,9)" rx="2" ry="2" />
<text  x="1115.63" y="479.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (313,131,310 samples, 0.05%)</title><rect x="44.5" y="517" width="0.5" height="15.0" fill="rgb(216,71,37)" rx="2" ry="2" />
<text  x="47.47" y="527.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::TrimAppend (141,414,140 samples, 0.02%)</title><rect x="875.7" y="341" width="0.3" height="15.0" fill="rgb(228,213,0)" rx="2" ry="2" />
<text  x="878.72" y="351.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::value (101,010,100 samples, 0.02%)</title><rect x="965.0" y="373" width="0.2" height="15.0" fill="rgb(236,155,10)" rx="2" ry="2" />
<text  x="968.03" y="383.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (454,545,450 samples, 0.07%)</title><rect x="572.4" y="149" width="0.9" height="15.0" fill="rgb(206,225,49)" rx="2" ry="2" />
<text  x="575.41" y="159.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::IOOptions (131,313,130 samples, 0.02%)</title><rect x="1025.7" y="357" width="0.2" height="15.0" fill="rgb(216,176,6)" rx="2" ry="2" />
<text  x="1028.69" y="367.5" ></text>
</g>
<g >
<title>rocksdb::operator== (212,121,210 samples, 0.03%)</title><rect x="972.3" y="469" width="0.4" height="15.0" fill="rgb(210,11,43)" rx="2" ry="2" />
<text  x="975.29" y="479.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::HasBuilder (1,464,646,450 samples, 0.23%)</title><rect x="1086.7" y="453" width="2.7" height="15.0" fill="rgb(248,143,8)" rx="2" ry="2" />
<text  x="1089.70" y="463.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt;=&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (767,676,760 samples, 0.12%)</title><rect x="165.0" y="693" width="1.4" height="15.0" fill="rgb(252,40,42)" rx="2" ry="2" />
<text  x="168.02" y="703.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::IsUserKey (80,808,080 samples, 0.01%)</title><rect x="833.7" y="309" width="0.1" height="15.0" fill="rgb(207,155,28)" rx="2" ry="2" />
<text  x="836.68" y="319.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::Put (248,303,027,820 samples, 38.86%)</title><rect x="23.2" y="789" width="458.5" height="15.0" fill="rgb(239,140,23)" rx="2" ry="2" />
<text  x="26.15" y="799.5" >rocksdb::DBImpl::Put</text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound (1,515,151,500 samples, 0.24%)</title><rect x="497.0" y="789" width="2.8" height="15.0" fill="rgb(209,153,28)" rx="2" ry="2" />
<text  x="499.96" y="799.5" ></text>
</g>
<g >
<title>main (286,747,471,880 samples, 44.87%)</title><rect x="21.8" y="821" width="529.5" height="15.0" fill="rgb(249,92,42)" rx="2" ry="2" />
<text  x="24.81" y="831.5" >main</text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (161,616,160 samples, 0.03%)</title><rect x="499.4" y="725" width="0.3" height="15.0" fill="rgb(246,88,32)" rx="2" ry="2" />
<text  x="502.37" y="735.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::IsParallelCompressionEnabled (333,333,330 samples, 0.05%)</title><rect x="1030.2" y="453" width="0.7" height="15.0" fill="rgb(254,49,20)" rx="2" ry="2" />
<text  x="1033.24" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (4,464,646,420 samples, 0.70%)</title><rect x="486.2" y="773" width="8.2" height="15.0" fill="rgb(209,167,42)" rx="2" ry="2" />
<text  x="489.18" y="783.5" ></text>
</g>
<g >
<title>std::move&lt;unsigned char&amp;&gt; (70,707,070 samples, 0.01%)</title><rect x="1149.0" y="469" width="0.2" height="15.0" fill="rgb(208,181,42)" rx="2" ry="2" />
<text  x="1152.04" y="479.5" ></text>
</g>
<g >
<title>std::operator&lt; &lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (242,424,240 samples, 0.04%)</title><rect x="493.9" y="741" width="0.5" height="15.0" fill="rgb(240,123,21)" rx="2" ry="2" />
<text  x="496.94" y="751.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (333,333,330 samples, 0.05%)</title><rect x="881.5" y="325" width="0.6" height="15.0" fill="rgb(216,32,47)" rx="2" ry="2" />
<text  x="884.50" y="335.5" ></text>
</g>
<g >
<title>rocksdb::lru_cache::LRUCacheShard::NotifyEvicted (70,707,070 samples, 0.01%)</title><rect x="867.9" y="261" width="0.2" height="15.0" fill="rgb(214,58,34)" rx="2" ry="2" />
<text  x="870.93" y="271.5" ></text>
</g>
<g >
<title>__alloc_pages (151,515,150 samples, 0.02%)</title><rect x="572.8" y="69" width="0.2" height="15.0" fill="rgb(253,201,34)" rx="2" ry="2" />
<text  x="575.77" y="79.5" ></text>
</g>
<g >
<title>rocksdb::Slice::compare (121,212,120 samples, 0.02%)</title><rect x="1119.7" y="421" width="0.2" height="15.0" fill="rgb(246,149,51)" rx="2" ry="2" />
<text  x="1122.70" y="431.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (393,939,390 samples, 0.06%)</title><rect x="167.5" y="645" width="0.7" height="15.0" fill="rgb(250,130,42)" rx="2" ry="2" />
<text  x="170.48" y="655.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (434,343,430 samples, 0.07%)</title><rect x="987.9" y="405" width="0.8" height="15.0" fill="rgb(254,122,32)" rx="2" ry="2" />
<text  x="990.92" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (383,838,380 samples, 0.06%)</title><rect x="906.1" y="373" width="0.7" height="15.0" fill="rgb(249,119,3)" rx="2" ry="2" />
<text  x="909.09" y="383.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (424,242,420 samples, 0.07%)</title><rect x="44.3" y="597" width="0.7" height="15.0" fill="rgb(219,91,12)" rx="2" ry="2" />
<text  x="47.26" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::operator (474,747,470 samples, 0.07%)</title><rect x="849.8" y="373" width="0.8" height="15.0" fill="rgb(253,82,44)" rx="2" ry="2" />
<text  x="852.76" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (212,121,210 samples, 0.03%)</title><rect x="853.3" y="293" width="0.4" height="15.0" fill="rgb(213,18,39)" rx="2" ry="2" />
<text  x="856.30" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompressionDict, std::default_delete&lt;rocksdb::CompressionDict&gt; &gt;::get (101,010,100 samples, 0.02%)</title><rect x="1023.1" y="357" width="0.2" height="15.0" fill="rgb(230,85,14)" rx="2" ry="2" />
<text  x="1026.10" y="367.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (90,909,090 samples, 0.01%)</title><rect x="38.0" y="357" width="0.2" height="15.0" fill="rgb(243,205,53)" rx="2" ry="2" />
<text  x="41.02" y="367.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::_M_gen_rand (3,848,484,810 samples, 0.60%)</title><rect x="544.1" y="725" width="7.1" height="15.0" fill="rgb(207,54,43)" rx="2" ry="2" />
<text  x="547.08" y="735.5" ></text>
</g>
<g >
<title>schedule (3,696,969,660 samples, 0.58%)</title><rect x="173.1" y="597" width="6.8" height="15.0" fill="rgb(239,217,26)" rx="2" ry="2" />
<text  x="176.10" y="607.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey (464,646,460 samples, 0.07%)</title><rect x="716.4" y="421" width="0.9" height="15.0" fill="rgb(252,12,4)" rx="2" ry="2" />
<text  x="719.39" y="431.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::IOOptions (60,606,060 samples, 0.01%)</title><rect x="863.7" y="261" width="0.2" height="15.0" fill="rgb(226,141,44)" rx="2" ry="2" />
<text  x="866.75" y="271.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="254.2" y="693" width="0.2" height="15.0" fill="rgb(248,207,32)" rx="2" ry="2" />
<text  x="257.20" y="703.5" ></text>
</g>
<g >
<title>rocksdb::PerfStepTimer::Stop (90,909,090 samples, 0.01%)</title><rect x="48.4" y="725" width="0.1" height="15.0" fill="rgb(233,55,32)" rx="2" ry="2" />
<text  x="51.37" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char, rocksdb::CustomDeleter&gt;::__uniq_ptr_impl (60,606,060 samples, 0.01%)</title><rect x="861.8" y="245" width="0.1" height="15.0" fill="rgb(242,30,32)" rx="2" ry="2" />
<text  x="864.79" y="255.5" ></text>
</g>
<g >
<title>rocksdb::InternalKeyComparator::Compare (1,878,787,860 samples, 0.29%)</title><rect x="1053.7" y="453" width="3.5" height="15.0" fill="rgb(235,183,46)" rx="2" ry="2" />
<text  x="1056.71" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;::pair&lt;rocksdb::MemTable* const&amp;, 0ul&gt; (101,010,100 samples, 0.02%)</title><rect x="62.5" y="501" width="0.2" height="15.0" fill="rgb(213,127,10)" rx="2" ry="2" />
<text  x="65.53" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_begin (474,747,470 samples, 0.07%)</title><rect x="945.9" y="421" width="0.8" height="15.0" fill="rgb(219,76,46)" rx="2" ry="2" />
<text  x="948.86" y="431.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (272,727,270 samples, 0.04%)</title><rect x="44.5" y="469" width="0.5" height="15.0" fill="rgb(242,53,5)" rx="2" ry="2" />
<text  x="47.54" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::FlushBlockPolicy*, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt; (363,636,360 samples, 0.06%)</title><rect x="618.5" y="389" width="0.7" height="15.0" fill="rgb(238,9,50)" rx="2" ry="2" />
<text  x="621.52" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (101,010,100 samples, 0.02%)</title><rect x="1013.0" y="421" width="0.2" height="15.0" fill="rgb(207,41,53)" rx="2" ry="2" />
<text  x="1015.99" y="431.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;::reverse_iterator (212,121,210 samples, 0.03%)</title><rect x="993.3" y="453" width="0.3" height="15.0" fill="rgb(231,171,16)" rx="2" ry="2" />
<text  x="996.25" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (242,424,240 samples, 0.04%)</title><rect x="711.1" y="373" width="0.4" height="15.0" fill="rgb(225,191,24)" rx="2" ry="2" />
<text  x="714.08" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (171,717,170 samples, 0.03%)</title><rect x="149.4" y="677" width="0.3" height="15.0" fill="rgb(210,13,45)" rx="2" ry="2" />
<text  x="152.43" y="687.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (60,606,060 samples, 0.01%)</title><rect x="902.7" y="373" width="0.1" height="15.0" fill="rgb(235,149,15)" rx="2" ry="2" />
<text  x="905.71" y="383.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (575,757,570 samples, 0.09%)</title><rect x="1123.2" y="437" width="1.1" height="15.0" fill="rgb(251,86,16)" rx="2" ry="2" />
<text  x="1126.24" y="447.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::Valid (1,111,111,100 samples, 0.17%)</title><rect x="667.4" y="421" width="2.0" height="15.0" fill="rgb(213,215,42)" rx="2" ry="2" />
<text  x="670.37" y="431.5" ></text>
</g>
<g >
<title>rocksdb::MergeHelper::keys[abi:cxx11] (111,111,110 samples, 0.02%)</title><rect x="700.6" y="437" width="0.2" height="15.0" fill="rgb(224,173,2)" rx="2" ry="2" />
<text  x="703.56" y="447.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::SetInternalKey (1,606,060,590 samples, 0.25%)</title><rect x="934.3" y="453" width="3.0" height="15.0" fill="rgb(237,101,30)" rx="2" ry="2" />
<text  x="937.31" y="463.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::HeapItem::key (1,636,363,620 samples, 0.26%)</title><rect x="780.3" y="389" width="3.0" height="15.0" fill="rgb(225,148,34)" rx="2" ry="2" />
<text  x="783.30" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::push_back (60,606,060 samples, 0.01%)</title><rect x="611.0" y="389" width="0.2" height="15.0" fill="rgb(236,115,3)" rx="2" ry="2" />
<text  x="614.04" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (636,363,630 samples, 0.10%)</title><rect x="843.9" y="325" width="1.1" height="15.0" fill="rgb(249,77,38)" rx="2" ry="2" />
<text  x="846.86" y="335.5" ></text>
</g>
<g >
<title>rocksdb::MemTableIterator::Valid (313,131,310 samples, 0.05%)</title><rect x="681.8" y="389" width="0.6" height="15.0" fill="rgb(219,155,27)" rx="2" ry="2" />
<text  x="684.79" y="399.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Valid (111,111,110 samples, 0.02%)</title><rect x="957.0" y="453" width="0.2" height="15.0" fill="rgb(212,61,22)" rx="2" ry="2" />
<text  x="959.99" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_right (131,313,130 samples, 0.02%)</title><rect x="498.3" y="741" width="0.2" height="15.0" fill="rgb(214,35,52)" rx="2" ry="2" />
<text  x="501.27" y="751.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (141,414,140 samples, 0.02%)</title><rect x="96.8" y="501" width="0.3" height="15.0" fill="rgb(237,100,19)" rx="2" ry="2" />
<text  x="99.81" y="511.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::Next (303,030,300 samples, 0.05%)</title><rect x="997.4" y="485" width="0.6" height="15.0" fill="rgb(235,177,38)" rx="2" ry="2" />
<text  x="1000.39" y="495.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (161,616,160 samples, 0.03%)</title><rect x="687.4" y="405" width="0.3" height="15.0" fill="rgb(215,30,1)" rx="2" ry="2" />
<text  x="690.42" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (151,515,150 samples, 0.02%)</title><rect x="1145.9" y="309" width="0.3" height="15.0" fill="rgb(244,156,27)" rx="2" ry="2" />
<text  x="1148.92" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (303,030,300 samples, 0.05%)</title><rect x="711.0" y="405" width="0.6" height="15.0" fill="rgb(215,132,52)" rx="2" ry="2" />
<text  x="714.02" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::operator (787,878,780 samples, 0.12%)</title><rect x="987.3" y="469" width="1.4" height="15.0" fill="rgb(219,166,42)" rx="2" ry="2" />
<text  x="990.27" y="479.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;char const []&gt;, true&gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="1009.9" y="373" width="0.2" height="15.0" fill="rgb(231,16,5)" rx="2" ry="2" />
<text  x="1012.91" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (252,525,250 samples, 0.04%)</title><rect x="735.4" y="341" width="0.5" height="15.0" fill="rgb(210,77,34)" rx="2" ry="2" />
<text  x="738.40" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::end (60,606,060 samples, 0.01%)</title><rect x="656.0" y="389" width="0.1" height="15.0" fill="rgb(227,194,27)" rx="2" ry="2" />
<text  x="659.03" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (191,919,190 samples, 0.03%)</title><rect x="763.8" y="837" width="0.4" height="15.0" fill="rgb(252,5,44)" rx="2" ry="2" />
<text  x="766.84" y="847.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::AddWithLastKeyImpl (3,131,313,100 samples, 0.49%)</title><rect x="1036.8" y="437" width="5.8" height="15.0" fill="rgb(246,31,10)" rx="2" ry="2" />
<text  x="1039.77" y="447.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Flush (4,161,616,120 samples, 0.65%)</title><rect x="1022.6" y="453" width="7.6" height="15.0" fill="rgb(244,93,37)" rx="2" ry="2" />
<text  x="1025.56" y="463.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (383,838,380 samples, 0.06%)</title><rect x="1121.5" y="373" width="0.7" height="15.0" fill="rgb(222,60,8)" rx="2" ry="2" />
<text  x="1124.45" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Slice::difference_offset@plt (202,020,200 samples, 0.03%)</title><rect x="587.5" y="421" width="0.3" height="15.0" fill="rgb(254,200,39)" rx="2" ry="2" />
<text  x="590.47" y="431.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load@plt (60,606,060 samples, 0.01%)</title><rect x="973.3" y="469" width="0.1" height="15.0" fill="rgb(247,59,33)" rx="2" ry="2" />
<text  x="976.31" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (171,717,170 samples, 0.03%)</title><rect x="952.8" y="341" width="0.3" height="15.0" fill="rgb(239,38,0)" rx="2" ry="2" />
<text  x="955.81" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (222,222,220 samples, 0.03%)</title><rect x="887.5" y="309" width="0.4" height="15.0" fill="rgb(236,89,9)" rx="2" ry="2" />
<text  x="890.46" y="319.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::DeleteObsoleteFileImpl (80,808,080 samples, 0.01%)</title><rect x="1179.3" y="533" width="0.1" height="15.0" fill="rgb(230,80,17)" rx="2" ry="2" />
<text  x="1182.29" y="543.5" ></text>
</g>
<g >
<title>rocksdb::ExtractValueType (616,161,610 samples, 0.10%)</title><rect x="1047.5" y="453" width="1.2" height="15.0" fill="rgb(249,24,50)" rx="2" ry="2" />
<text  x="1050.53" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="665.5" y="341" width="0.3" height="15.0" fill="rgb(215,182,48)" rx="2" ry="2" />
<text  x="668.55" y="351.5" ></text>
</g>
<g >
<title>std::tuple&lt;rocksdb::SavePoints*, std::default_delete&lt;rocksdb::SavePoints&gt; &gt;::tuple&lt;true, true&gt; (121,212,120 samples, 0.02%)</title><rect x="477.3" y="693" width="0.2" height="15.0" fill="rgb(213,175,25)" rx="2" ry="2" />
<text  x="480.28" y="703.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count (797,979,790 samples, 0.12%)</title><rect x="288.4" y="613" width="1.5" height="15.0" fill="rgb(225,94,26)" rx="2" ry="2" />
<text  x="291.41" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Cleanable::DoCleanup (171,717,170 samples, 0.03%)</title><rect x="942.5" y="453" width="0.3" height="15.0" fill="rgb(206,157,9)" rx="2" ry="2" />
<text  x="945.50" y="463.5" ></text>
</g>
<g >
<title>std::random_device::random_device (424,242,420 samples, 0.07%)</title><rect x="542.8" y="805" width="0.8" height="15.0" fill="rgb(206,83,0)" rx="2" ry="2" />
<text  x="545.77" y="815.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (60,606,060 samples, 0.01%)</title><rect x="147.1" y="677" width="0.1" height="15.0" fill="rgb(215,131,30)" rx="2" ry="2" />
<text  x="150.08" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (131,313,130 samples, 0.02%)</title><rect x="467.0" y="629" width="0.3" height="15.0" fill="rgb(216,175,54)" rx="2" ry="2" />
<text  x="470.03" y="639.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (303,030,300 samples, 0.05%)</title><rect x="37.8" y="389" width="0.5" height="15.0" fill="rgb(216,90,25)" rx="2" ry="2" />
<text  x="40.76" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompressionDict, std::default_delete&lt;rocksdb::CompressionDict&gt; &gt;::operator bool (111,111,110 samples, 0.02%)</title><rect x="1023.1" y="373" width="0.2" height="15.0" fill="rgb(236,47,16)" rx="2" ry="2" />
<text  x="1026.08" y="383.5" ></text>
</g>
<g >
<title>rocksdb::RandomAccessFileReader::ShouldNotifyListeners (60,606,060 samples, 0.01%)</title><rect x="865.1" y="261" width="0.2" height="15.0" fill="rgb(205,91,20)" rx="2" ry="2" />
<text  x="868.15" y="271.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (151,515,150 samples, 0.02%)</title><rect x="467.0" y="645" width="0.3" height="15.0" fill="rgb(242,39,23)" rx="2" ry="2" />
<text  x="469.99" y="655.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (90,909,090 samples, 0.01%)</title><rect x="467.7" y="645" width="0.2" height="15.0" fill="rgb(243,169,45)" rx="2" ry="2" />
<text  x="470.73" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (262,626,260 samples, 0.04%)</title><rect x="1145.4" y="469" width="0.5" height="15.0" fill="rgb(233,130,41)" rx="2" ry="2" />
<text  x="1148.42" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::lower_bound (141,414,140 samples, 0.02%)</title><rect x="656.1" y="389" width="0.3" height="15.0" fill="rgb(241,124,9)" rx="2" ry="2" />
<text  x="659.14" y="399.5" ></text>
</g>
<g >
<title>std::operator== (70,707,070 samples, 0.01%)</title><rect x="950.3" y="437" width="0.1" height="15.0" fill="rgb(239,158,43)" rx="2" ry="2" />
<text  x="953.26" y="447.5" ></text>
</g>
<g >
<title>std::map&lt;rocksdb::MemTable*, rocksdb::MemTablePostProcessInfo, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::begin (80,808,080 samples, 0.01%)</title><rect x="150.7" y="709" width="0.1" height="15.0" fill="rgb(232,42,8)" rx="2" ry="2" />
<text  x="153.66" y="719.5" ></text>
</g>
<g >
<title>rocksdb::InternalKeyComparator::Compare (1,676,767,660 samples, 0.26%)</title><rect x="597.1" y="437" width="3.1" height="15.0" fill="rgb(246,141,7)" rx="2" ry="2" />
<text  x="600.13" y="447.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::AddWithLastKeyImpl (212,121,210 samples, 0.03%)</title><rect x="1044.9" y="453" width="0.4" height="15.0" fill="rgb(243,67,29)" rx="2" ry="2" />
<text  x="1047.92" y="463.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::PrepareOutput (60,606,060 samples, 0.01%)</title><rect x="1003.8" y="501" width="0.1" height="15.0" fill="rgb(253,88,1)" rx="2" ry="2" />
<text  x="1006.81" y="511.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::RealCompaction::SupportsPerKeyPlacement (333,333,330 samples, 0.05%)</title><rect x="979.7" y="469" width="0.6" height="15.0" fill="rgb(215,64,13)" rx="2" ry="2" />
<text  x="982.67" y="479.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::status (9,505,050,410 samples, 1.49%)</title><rect x="895.2" y="437" width="17.5" height="15.0" fill="rgb(248,227,40)" rx="2" ry="2" />
<text  x="898.16" y="447.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (242,424,240 samples, 0.04%)</title><rect x="864.5" y="165" width="0.4" height="15.0" fill="rgb(241,155,50)" rx="2" ry="2" />
<text  x="867.49" y="175.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::status (4,030,302,990 samples, 0.63%)</title><rect x="852.3" y="405" width="7.4" height="15.0" fill="rgb(231,169,51)" rx="2" ry="2" />
<text  x="855.26" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;rocksdb::SuperVersion*, std::allocator&lt;rocksdb::SuperVersion*&gt; &gt;::_Vector_base (80,808,080 samples, 0.01%)</title><rect x="27.9" y="661" width="0.1" height="15.0" fill="rgb(211,39,22)" rx="2" ry="2" />
<text  x="30.87" y="671.5" ></text>
</g>
<g >
<title>rocksdb::MemTableIterator::Valid (60,606,060 samples, 0.01%)</title><rect x="666.3" y="405" width="0.2" height="15.0" fill="rgb(231,202,26)" rx="2" ry="2" />
<text  x="669.35" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (161,616,160 samples, 0.03%)</title><rect x="901.1" y="293" width="0.3" height="15.0" fill="rgb(206,136,49)" rx="2" ry="2" />
<text  x="904.13" y="303.5" ></text>
</g>
<g >
<title>rocksdb::InternalKeyComparator::CompareKeySeq (12,848,484,720 samples, 2.01%)</title><rect x="94.0" y="517" width="23.7" height="15.0" fill="rgb(241,217,49)" rx="2" ry="2" />
<text  x="96.97" y="527.5" >r..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (104,343,433,300 samples, 16.33%)</title><rect x="562.0" y="789" width="192.7" height="15.0" fill="rgb(235,175,33)" rx="2" ry="2" />
<text  x="565.04" y="799.5" >std::thread::_Invoker&lt;std..</text>
</g>
<g >
<title>rocksdb::WriteBatch::WriteBatch (777,777,770 samples, 0.12%)</title><rect x="476.6" y="757" width="1.4" height="15.0" fill="rgb(219,208,11)" rx="2" ry="2" />
<text  x="479.59" y="767.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::GetStatus (313,131,310 samples, 0.05%)</title><rect x="1031.7" y="437" width="0.6" height="15.0" fill="rgb(224,130,46)" rx="2" ry="2" />
<text  x="1034.73" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::CompactionIterator*, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::_M_head (363,636,360 samples, 0.06%)</title><rect x="1172.6" y="437" width="0.7" height="15.0" fill="rgb(214,54,25)" rx="2" ry="2" />
<text  x="1175.60" y="447.5" ></text>
</g>
<g >
<title>__handle_mm_fault (292,929,290 samples, 0.05%)</title><rect x="559.5" y="757" width="0.6" height="15.0" fill="rgb(250,226,12)" rx="2" ry="2" />
<text  x="562.52" y="767.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::SstPartitioner*, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::_M_head@plt (181,818,180 samples, 0.03%)</title><rect x="1098.1" y="389" width="0.4" height="15.0" fill="rgb(246,144,47)" rx="2" ry="2" />
<text  x="1101.12" y="399.5" ></text>
</g>
<g >
<title>__memset_evex_unaligned_erms (60,606,060 samples, 0.01%)</title><rect x="886.7" y="373" width="0.1" height="15.0" fill="rgb(243,214,16)" rx="2" ry="2" />
<text  x="889.65" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Cleanable::Reset (121,212,120 samples, 0.02%)</title><rect x="642.5" y="421" width="0.3" height="15.0" fill="rgb(230,22,36)" rx="2" ry="2" />
<text  x="645.53" y="431.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatch::GetDataSize (70,707,070 samples, 0.01%)</title><rect x="471.0" y="725" width="0.1" height="15.0" fill="rgb(243,59,19)" rx="2" ry="2" />
<text  x="473.96" y="735.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::TryGetFromPrefetchBuffer (222,222,220 samples, 0.03%)</title><rect x="863.6" y="277" width="0.4" height="15.0" fill="rgb(218,60,48)" rx="2" ry="2" />
<text  x="866.58" y="287.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (111,111,110 samples, 0.02%)</title><rect x="31.7" y="661" width="0.2" height="15.0" fill="rgb(218,98,48)" rx="2" ry="2" />
<text  x="34.69" y="671.5" ></text>
</g>
<g >
<title>std::operator&amp;@plt (282,828,280 samples, 0.04%)</title><rect x="453.6" y="709" width="0.5" height="15.0" fill="rgb(223,12,13)" rx="2" ry="2" />
<text  x="456.56" y="719.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::CurrentSizeEstimate (282,828,280 samples, 0.04%)</title><rect x="594.2" y="405" width="0.5" height="15.0" fill="rgb(241,70,10)" rx="2" ry="2" />
<text  x="597.18" y="415.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool@plt (60,606,060 samples, 0.01%)</title><rect x="1167.7" y="469" width="0.1" height="15.0" fill="rgb(243,170,38)" rx="2" ry="2" />
<text  x="1170.73" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="880.5" y="325" width="0.1" height="15.0" fill="rgb(212,111,30)" rx="2" ry="2" />
<text  x="883.46" y="335.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (656,565,650 samples, 0.10%)</title><rect x="808.9" y="405" width="1.2" height="15.0" fill="rgb(231,194,33)" rx="2" ry="2" />
<text  x="811.89" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (434,343,430 samples, 0.07%)</title><rect x="1110.3" y="421" width="0.8" height="15.0" fill="rgb(211,99,5)" rx="2" ry="2" />
<text  x="1113.33" y="431.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (3,616,161,580 samples, 0.57%)</title><rect x="551.6" y="837" width="6.6" height="15.0" fill="rgb(220,218,41)" rx="2" ry="2" />
<text  x="554.56" y="847.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (70,707,070 samples, 0.01%)</title><rect x="912.9" y="421" width="0.1" height="15.0" fill="rgb(239,47,3)" rx="2" ry="2" />
<text  x="915.90" y="431.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::IOOptions (171,717,170 samples, 0.03%)</title><rect x="1025.7" y="373" width="0.3" height="15.0" fill="rgb(221,24,52)" rx="2" ry="2" />
<text  x="1028.67" y="383.5" ></text>
</g>
<g >
<title>rocksdb::UserComparatorWrapper::Compare (101,010,100 samples, 0.02%)</title><rect x="118.1" y="517" width="0.2" height="15.0" fill="rgb(218,148,14)" rx="2" ry="2" />
<text  x="121.09" y="527.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::KeyIsAfterNode (90,909,090 samples, 0.01%)</title><rect x="125.5" y="565" width="0.2" height="15.0" fill="rgb(224,108,18)" rx="2" ry="2" />
<text  x="128.52" y="575.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (1,707,070,690 samples, 0.27%)</title><rect x="855.6" y="357" width="3.1" height="15.0" fill="rgb(238,49,28)" rx="2" ry="2" />
<text  x="858.56" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_Auto_node::_M_insert (141,414,140 samples, 0.02%)</title><rect x="63.6" y="597" width="0.2" height="15.0" fill="rgb(245,32,38)" rx="2" ry="2" />
<text  x="66.55" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (242,424,240 samples, 0.04%)</title><rect x="754.3" y="437" width="0.4" height="15.0" fill="rgb(224,24,29)" rx="2" ry="2" />
<text  x="757.26" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (90,909,090 samples, 0.01%)</title><rect x="41.5" y="597" width="0.2" height="15.0" fill="rgb(245,172,1)" rx="2" ry="2" />
<text  x="44.50" y="607.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;47ul&gt; (363,636,360 samples, 0.06%)</title><rect x="1176.8" y="517" width="0.7" height="15.0" fill="rgb(234,102,2)" rx="2" ry="2" />
<text  x="1179.83" y="527.5" ></text>
</g>
<g >
<title>rocksdb::Status::MarkChecked (60,606,060 samples, 0.01%)</title><rect x="729.1" y="437" width="0.1" height="15.0" fill="rgb(252,176,31)" rx="2" ry="2" />
<text  x="732.06" y="447.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::empty (393,939,390 samples, 0.06%)</title><rect x="817.9" y="421" width="0.8" height="15.0" fill="rgb(219,34,42)" rx="2" ry="2" />
<text  x="820.94" y="431.5" ></text>
</g>
<g >
<title>generic_perform_write (1,202,020,190 samples, 0.19%)</title><rect x="36.5" y="485" width="2.2" height="15.0" fill="rgb(216,211,45)" rx="2" ry="2" />
<text  x="39.47" y="495.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (3,434,343,400 samples, 0.54%)</title><rect x="270.1" y="693" width="6.4" height="15.0" fill="rgb(229,75,9)" rx="2" ry="2" />
<text  x="273.11" y="703.5" ></text>
</g>
<g >
<title>XXH3_accumulate_avx512 (131,313,130 samples, 0.02%)</title><rect x="826.6" y="117" width="0.2" height="15.0" fill="rgb(230,179,35)" rx="2" ry="2" />
<text  x="829.55" y="127.5" ></text>
</g>
<g >
<title>rocksdb::FlushBlockBySizePolicy::Update (2,676,767,650 samples, 0.42%)</title><rect x="1048.7" y="453" width="4.9" height="15.0" fill="rgb(229,221,30)" rx="2" ry="2" />
<text  x="1051.71" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::empty (1,232,323,220 samples, 0.19%)</title><rect x="1104.3" y="453" width="2.3" height="15.0" fill="rgb(226,139,40)" rx="2" ry="2" />
<text  x="1107.31" y="463.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;long&gt;::operator (4,161,616,120 samples, 0.65%)</title><rect x="543.6" y="789" width="7.7" height="15.0" fill="rgb(225,228,39)" rx="2" ry="2" />
<text  x="546.59" y="799.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::FilterBlockBuilder*, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt; (282,828,280 samples, 0.04%)</title><rect x="614.8" y="373" width="0.5" height="15.0" fill="rgb(209,209,54)" rx="2" ry="2" />
<text  x="617.75" y="383.5" ></text>
</g>
<g >
<title>XXH3_hashLong_64b_internal (161,616,160 samples, 0.03%)</title><rect x="826.6" y="149" width="0.3" height="15.0" fill="rgb(233,104,38)" rx="2" ry="2" />
<text  x="829.55" y="159.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="857.0" y="261" width="0.2" height="15.0" fill="rgb(219,131,7)" rx="2" ry="2" />
<text  x="860.00" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (151,515,150 samples, 0.02%)</title><rect x="857.4" y="261" width="0.3" height="15.0" fill="rgb(251,25,20)" rx="2" ry="2" />
<text  x="860.42" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (181,818,180 samples, 0.03%)</title><rect x="847.3" y="293" width="0.4" height="15.0" fill="rgb(205,128,40)" rx="2" ry="2" />
<text  x="850.31" y="303.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;::reverse_iterator (131,313,130 samples, 0.02%)</title><rect x="701.5" y="405" width="0.2" height="15.0" fill="rgb(237,208,40)" rx="2" ry="2" />
<text  x="704.45" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (101,010,100 samples, 0.02%)</title><rect x="843.9" y="293" width="0.2" height="15.0" fill="rgb(252,47,48)" rx="2" ry="2" />
<text  x="846.94" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (80,808,080 samples, 0.01%)</title><rect x="480.5" y="693" width="0.2" height="15.0" fill="rgb(242,90,45)" rx="2" ry="2" />
<text  x="483.55" y="703.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::IsShuttingDown (575,757,570 samples, 0.09%)</title><rect x="929.2" y="469" width="1.1" height="15.0" fill="rgb(212,167,33)" rx="2" ry="2" />
<text  x="932.20" y="479.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned long, rocksdb::RangeDelAggregator::StripeRep, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::end (232,323,230 samples, 0.04%)</title><rect x="945.3" y="437" width="0.5" height="15.0" fill="rgb(240,41,6)" rx="2" ry="2" />
<text  x="948.33" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="891.7" y="357" width="0.1" height="15.0" fill="rgb(213,160,24)" rx="2" ry="2" />
<text  x="894.65" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;rocksdb::Status, rocksdb::CompactionJob::ProcessKeyValueCompaction (161,616,160 samples, 0.03%)</title><rect x="1145.9" y="437" width="0.3" height="15.0" fill="rgb(211,151,29)" rx="2" ry="2" />
<text  x="1148.91" y="447.5" ></text>
</g>
<g >
<title>__tls_get_addr (353,535,350 samples, 0.06%)</title><rect x="1055.4" y="405" width="0.6" height="15.0" fill="rgb(240,163,45)" rx="2" ry="2" />
<text  x="1058.38" y="415.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (4,060,606,020 samples, 0.64%)</title><rect x="861.1" y="341" width="7.5" height="15.0" fill="rgb(214,212,31)" rx="2" ry="2" />
<text  x="864.08" y="351.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (151,515,150 samples, 0.02%)</title><rect x="132.7" y="549" width="0.2" height="15.0" fill="rgb(240,214,22)" rx="2" ry="2" />
<text  x="135.66" y="559.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::AddWithLastKey (4,848,484,800 samples, 0.76%)</title><rect x="1036.0" y="453" width="8.9" height="15.0" fill="rgb(227,195,6)" rx="2" ry="2" />
<text  x="1038.97" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (252,525,250 samples, 0.04%)</title><rect x="969.2" y="437" width="0.5" height="15.0" fill="rgb(233,178,31)" rx="2" ry="2" />
<text  x="972.25" y="447.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::IsPausingManualCompaction (626,262,620 samples, 0.10%)</title><rect x="643.2" y="421" width="1.1" height="15.0" fill="rgb(227,221,1)" rx="2" ry="2" />
<text  x="646.16" y="431.5" ></text>
</g>
<g >
<title>rocksdb::GetVarint32Ptr (898,989,890 samples, 0.14%)</title><rect x="91.5" y="501" width="1.7" height="15.0" fill="rgb(225,109,2)" rx="2" ry="2" />
<text  x="94.49" y="511.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (70,707,070 samples, 0.01%)</title><rect x="457.6" y="709" width="0.1" height="15.0" fill="rgb(233,44,26)" rx="2" ry="2" />
<text  x="460.55" y="719.5" ></text>
</g>
<g >
<title>rocksdb::Snappy_Uncompress (131,313,130 samples, 0.02%)</title><rect x="829.0" y="197" width="0.3" height="15.0" fill="rgb(221,203,27)" rx="2" ry="2" />
<text  x="832.04" y="207.5" ></text>
</g>
<g >
<title>rocksdb:low (230,202,017,900 samples, 36.02%)</title><rect x="764.9" y="853" width="425.1" height="15.0" fill="rgb(241,177,14)" rx="2" ry="2" />
<text  x="767.91" y="863.5" >rocksdb:low</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="888.1" y="277" width="0.3" height="15.0" fill="rgb(225,168,22)" rx="2" ry="2" />
<text  x="891.15" y="287.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt; (60,606,060 samples, 0.01%)</title><rect x="71.3" y="613" width="0.1" height="15.0" fill="rgb(221,55,4)" rx="2" ry="2" />
<text  x="74.27" y="623.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;, rocksdb::CompactionMergingIterator::HeapItem*&gt;::operator* (555,555,550 samples, 0.09%)</title><rect x="804.6" y="405" width="1.0" height="15.0" fill="rgb(211,189,40)" rx="2" ry="2" />
<text  x="807.58" y="415.5" ></text>
</g>
<g >
<title>rocksdb::IndexBlockIter::DecodeCurrentValue (111,111,110 samples, 0.02%)</title><rect x="869.9" y="309" width="0.2" height="15.0" fill="rgb(247,184,35)" rx="2" ry="2" />
<text  x="872.92" y="319.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1,343,434,330 samples, 0.21%)</title><rect x="36.2" y="517" width="2.5" height="15.0" fill="rgb(248,217,4)" rx="2" ry="2" />
<text  x="39.21" y="527.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid (171,717,170 samples, 0.03%)</title><rect x="1086.4" y="437" width="0.3" height="15.0" fill="rgb(218,193,48)" rx="2" ry="2" />
<text  x="1089.37" y="447.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::IsDeleteRangeSentinelKey (212,121,210 samples, 0.03%)</title><rect x="1013.8" y="485" width="0.4" height="15.0" fill="rgb(211,50,2)" rx="2" ry="2" />
<text  x="1016.84" y="495.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (181,818,180 samples, 0.03%)</title><rect x="570.7" y="357" width="0.3" height="15.0" fill="rgb(205,110,19)" rx="2" ry="2" />
<text  x="573.70" y="367.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::SkipListRep::Iterator::Next (1,949,494,930 samples, 0.31%)</title><rect x="625.4" y="389" width="3.6" height="15.0" fill="rgb(212,126,44)" rx="2" ry="2" />
<text  x="628.42" y="399.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;::reverse_iterator (545,454,540 samples, 0.09%)</title><rect x="703.6" y="421" width="1.0" height="15.0" fill="rgb(218,170,1)" rx="2" ry="2" />
<text  x="706.58" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (80,808,080 samples, 0.01%)</title><rect x="725.8" y="437" width="0.2" height="15.0" fill="rgb(233,217,54)" rx="2" ry="2" />
<text  x="728.85" y="447.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;::base (151,515,150 samples, 0.02%)</title><rect x="702.9" y="405" width="0.3" height="15.0" fill="rgb(232,63,43)" rx="2" ry="2" />
<text  x="705.94" y="415.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::BlockBasedTablePropertiesCollector::InternalAdd (292,929,290 samples, 0.05%)</title><rect x="1022.0" y="453" width="0.6" height="15.0" fill="rgb(252,67,28)" rx="2" ry="2" />
<text  x="1025.01" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (60,606,060 samples, 0.01%)</title><rect x="1116.5" y="437" width="0.1" height="15.0" fill="rgb(206,208,54)" rx="2" ry="2" />
<text  x="1119.47" y="447.5" ></text>
</g>
<g >
<title>rocksdb::InternalKeyComparator::Compare (2,494,949,470 samples, 0.39%)</title><rect x="715.9" y="437" width="4.6" height="15.0" fill="rgb(226,222,30)" rx="2" ry="2" />
<text  x="718.87" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (151,515,150 samples, 0.02%)</title><rect x="716.8" y="405" width="0.3" height="15.0" fill="rgb(238,152,39)" rx="2" ry="2" />
<text  x="719.78" y="415.5" ></text>
</g>
<g >
<title>rocksdb::ParseInternalKey (101,010,100 samples, 0.02%)</title><rect x="704.6" y="437" width="0.2" height="15.0" fill="rgb(206,201,45)" rx="2" ry="2" />
<text  x="707.59" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::get (262,626,260 samples, 0.04%)</title><rect x="1170.3" y="485" width="0.5" height="15.0" fill="rgb(227,4,39)" rx="2" ry="2" />
<text  x="1173.30" y="495.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::IsDeleteRangeSentinelKey (242,424,240 samples, 0.04%)</title><rect x="821.4" y="421" width="0.5" height="15.0" fill="rgb(246,46,46)" rx="2" ry="2" />
<text  x="824.41" y="431.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::status (7,828,282,750 samples, 1.23%)</title><rect x="878.2" y="421" width="14.5" height="15.0" fill="rgb(233,132,33)" rx="2" ry="2" />
<text  x="881.24" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (151,515,150 samples, 0.02%)</title><rect x="147.7" y="677" width="0.3" height="15.0" fill="rgb(216,55,20)" rx="2" ry="2" />
<text  x="150.67" y="687.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (202,020,200 samples, 0.03%)</title><rect x="469.8" y="677" width="0.4" height="15.0" fill="rgb(221,180,46)" rx="2" ry="2" />
<text  x="472.79" y="687.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (989,898,980 samples, 0.15%)</title><rect x="180.0" y="629" width="1.9" height="15.0" fill="rgb(228,221,47)" rx="2" ry="2" />
<text  x="183.04" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_ptr (757,575,750 samples, 0.12%)</title><rect x="693.0" y="373" width="1.4" height="15.0" fill="rgb(243,161,20)" rx="2" ry="2" />
<text  x="696.02" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (353,535,350 samples, 0.06%)</title><rect x="607.7" y="389" width="0.6" height="15.0" fill="rgb(254,21,39)" rx="2" ry="2" />
<text  x="610.68" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (111,111,110 samples, 0.02%)</title><rect x="31.7" y="645" width="0.2" height="15.0" fill="rgb(212,26,39)" rx="2" ry="2" />
<text  x="34.69" y="655.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="845.1" y="309" width="0.2" height="15.0" fill="rgb(209,189,3)" rx="2" ry="2" />
<text  x="848.11" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="1035.8" y="389" width="0.1" height="15.0" fill="rgb(238,79,23)" rx="2" ry="2" />
<text  x="1038.76" y="399.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (464,646,460 samples, 0.07%)</title><rect x="44.2" y="613" width="0.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="47.19" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (60,606,060 samples, 0.01%)</title><rect x="1044.0" y="437" width="0.2" height="15.0" fill="rgb(242,188,27)" rx="2" ry="2" />
<text  x="1047.04" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Slice::compare (90,909,090 samples, 0.01%)</title><rect x="793.1" y="357" width="0.1" height="15.0" fill="rgb(225,225,54)" rx="2" ry="2" />
<text  x="796.07" y="367.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (161,616,160 samples, 0.03%)</title><rect x="1035.1" y="421" width="0.3" height="15.0" fill="rgb(254,61,11)" rx="2" ry="2" />
<text  x="1038.11" y="431.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::ResetDataIter (282,828,280 samples, 0.04%)</title><rect x="831.8" y="325" width="0.6" height="15.0" fill="rgb(254,94,52)" rx="2" ry="2" />
<text  x="834.83" y="335.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader (151,515,150 samples, 0.02%)</title><rect x="185.4" y="725" width="0.2" height="15.0" fill="rgb(214,84,48)" rx="2" ry="2" />
<text  x="188.35" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (333,333,330 samples, 0.05%)</title><rect x="662.9" y="341" width="0.6" height="15.0" fill="rgb(210,81,51)" rx="2" ry="2" />
<text  x="665.88" y="351.5" ></text>
</g>
<g >
<title>rocksdb::UserComparatorWrapper::Compare (1,636,363,620 samples, 0.26%)</title><rect x="132.9" y="549" width="3.1" height="15.0" fill="rgb(222,82,33)" rx="2" ry="2" />
<text  x="135.94" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;rocksdb::MemTable* const&amp;&gt;, std::tuple&lt;&gt; &gt; (505,050,500 samples, 0.08%)</title><rect x="61.9" y="549" width="1.0" height="15.0" fill="rgb(226,105,40)" rx="2" ry="2" />
<text  x="64.95" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (141,414,140 samples, 0.02%)</title><rect x="456.3" y="677" width="0.2" height="15.0" fill="rgb(213,70,31)" rx="2" ry="2" />
<text  x="459.28" y="687.5" ></text>
</g>
<g >
<title>malloc (121,212,120 samples, 0.02%)</title><rect x="1188.7" y="837" width="0.3" height="15.0" fill="rgb(214,126,42)" rx="2" ry="2" />
<text  x="1191.73" y="847.5" ></text>
</g>
<g >
<title>rocksdb::MemTableIterator::Next (131,313,130 samples, 0.02%)</title><rect x="623.1" y="421" width="0.2" height="15.0" fill="rgb(240,55,0)" rx="2" ry="2" />
<text  x="626.09" y="431.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::GetInstance (111,111,110 samples, 0.02%)</title><rect x="969.7" y="469" width="0.2" height="15.0" fill="rgb(211,131,45)" rx="2" ry="2" />
<text  x="972.73" y="479.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::KeyComparator::operator (151,515,150 samples, 0.02%)</title><rect x="137.4" y="597" width="0.2" height="15.0" fill="rgb(233,203,31)" rx="2" ry="2" />
<text  x="140.36" y="607.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="50.3" y="597" width="0.1" height="15.0" fill="rgb(222,100,39)" rx="2" ry="2" />
<text  x="53.27" y="607.5" ></text>
</g>
<g >
<title>generic_file_read_iter (242,424,240 samples, 0.04%)</title><rect x="864.5" y="149" width="0.4" height="15.0" fill="rgb(221,88,28)" rx="2" ry="2" />
<text  x="867.49" y="159.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (101,010,100 samples, 0.02%)</title><rect x="48.9" y="725" width="0.2" height="15.0" fill="rgb(250,30,25)" rx="2" ry="2" />
<text  x="51.87" y="735.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::WriteBuffered (2,656,565,630 samples, 0.42%)</title><rect x="34.7" y="661" width="4.9" height="15.0" fill="rgb(243,19,35)" rx="2" ry="2" />
<text  x="37.71" y="671.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::IOOptions (212,121,210 samples, 0.03%)</title><rect x="41.4" y="645" width="0.4" height="15.0" fill="rgb(240,19,51)" rx="2" ry="2" />
<text  x="44.41" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (60,606,060 samples, 0.01%)</title><rect x="479.1" y="757" width="0.1" height="15.0" fill="rgb(221,193,22)" rx="2" ry="2" />
<text  x="482.13" y="767.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (313,131,310 samples, 0.05%)</title><rect x="898.4" y="325" width="0.6" height="15.0" fill="rgb(219,173,3)" rx="2" ry="2" />
<text  x="901.42" y="335.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Valid (141,414,140 samples, 0.02%)</title><rect x="838.4" y="373" width="0.2" height="15.0" fill="rgb(207,55,9)" rx="2" ry="2" />
<text  x="841.38" y="383.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::value (1,727,272,710 samples, 0.27%)</title><rect x="963.4" y="437" width="3.1" height="15.0" fill="rgb(228,61,31)" rx="2" ry="2" />
<text  x="966.35" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (181,818,180 samples, 0.03%)</title><rect x="884.6" y="309" width="0.3" height="15.0" fill="rgb(209,24,23)" rx="2" ry="2" />
<text  x="887.58" y="319.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::SuperVersionContext::WriteStallNotification, 8ul&gt;::autovector (111,111,110 samples, 0.02%)</title><rect x="28.0" y="693" width="0.2" height="15.0" fill="rgb(225,196,6)" rx="2" ry="2" />
<text  x="31.04" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::SavePoints, std::default_delete&lt;rocksdb::SavePoints&gt; &gt;::_M_ptr (70,707,070 samples, 0.01%)</title><rect x="478.1" y="741" width="0.1" height="15.0" fill="rgb(210,225,40)" rx="2" ry="2" />
<text  x="481.11" y="751.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::get (939,393,930 samples, 0.15%)</title><rect x="1071.9" y="421" width="1.7" height="15.0" fill="rgb(234,119,52)" rx="2" ry="2" />
<text  x="1074.87" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, false&gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="698.2" y="309" width="0.2" height="15.0" fill="rgb(224,205,4)" rx="2" ry="2" />
<text  x="701.24" y="319.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (70,707,070 samples, 0.01%)</title><rect x="998.8" y="485" width="0.1" height="15.0" fill="rgb(253,154,33)" rx="2" ry="2" />
<text  x="1001.76" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (313,131,310 samples, 0.05%)</title><rect x="1061.7" y="341" width="0.6" height="15.0" fill="rgb(215,19,8)" rx="2" ry="2" />
<text  x="1064.69" y="351.5" ></text>
</g>
<g >
<title>std::operator== (70,707,070 samples, 0.01%)</title><rect x="702.4" y="389" width="0.2" height="15.0" fill="rgb(210,128,21)" rx="2" ry="2" />
<text  x="705.44" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::FileChecksumGenerator*, std::default_delete&lt;rocksdb::FileChecksumGenerator&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="42.9" y="565" width="0.1" height="15.0" fill="rgb(246,187,20)" rx="2" ry="2" />
<text  x="45.88" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (141,414,140 samples, 0.02%)</title><rect x="580.3" y="341" width="0.3" height="15.0" fill="rgb(234,8,33)" rx="2" ry="2" />
<text  x="583.32" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (797,979,790 samples, 0.12%)</title><rect x="734.4" y="373" width="1.5" height="15.0" fill="rgb(211,95,24)" rx="2" ry="2" />
<text  x="737.39" y="383.5" ></text>
</g>
<g >
<title>rocksdb::IsValueType (60,606,060 samples, 0.01%)</title><rect x="662.2" y="373" width="0.1" height="15.0" fill="rgb(226,152,19)" rx="2" ry="2" />
<text  x="665.21" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (444,444,440 samples, 0.07%)</title><rect x="1121.4" y="405" width="0.8" height="15.0" fill="rgb(251,55,35)" rx="2" ry="2" />
<text  x="1124.36" y="415.5" ></text>
</g>
<g >
<title>filemap_fdatawrite_wbc (141,414,140 samples, 0.02%)</title><rect x="1145.9" y="229" width="0.3" height="15.0" fill="rgb(243,69,6)" rx="2" ry="2" />
<text  x="1148.94" y="239.5" ></text>
</g>
<g >
<title>rocksdb::ShortenedIndexBuilder::OnKeyAdded (161,616,160 samples, 0.03%)</title><rect x="726.2" y="453" width="0.3" height="15.0" fill="rgb(241,135,9)" rx="2" ry="2" />
<text  x="729.17" y="463.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (222,222,220 samples, 0.03%)</title><rect x="36.8" y="453" width="0.4" height="15.0" fill="rgb(208,209,1)" rx="2" ry="2" />
<text  x="39.77" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; &gt;::pair&lt;std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;, true&gt; (80,808,080 samples, 0.01%)</title><rect x="39.4" y="645" width="0.2" height="15.0" fill="rgb(222,82,53)" rx="2" ry="2" />
<text  x="42.42" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (545,454,540 samples, 0.09%)</title><rect x="1110.1" y="437" width="1.0" height="15.0" fill="rgb(238,214,49)" rx="2" ry="2" />
<text  x="1113.13" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (111,111,110 samples, 0.02%)</title><rect x="145.3" y="613" width="0.2" height="15.0" fill="rgb(241,103,7)" rx="2" ry="2" />
<text  x="148.34" y="623.5" ></text>
</g>
<g >
<title>std::move&lt;rocksdb::Status::Severity&amp;&gt; (323,232,320 samples, 0.05%)</title><rect x="1147.9" y="469" width="0.6" height="15.0" fill="rgb(220,75,28)" rx="2" ry="2" />
<text  x="1150.88" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (6,646,464,580 samples, 1.04%)</title><rect x="729.5" y="453" width="12.3" height="15.0" fill="rgb(214,220,23)" rx="2" ry="2" />
<text  x="732.54" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (60,606,060 samples, 0.01%)</title><rect x="753.5" y="469" width="0.1" height="15.0" fill="rgb(247,109,43)" rx="2" ry="2" />
<text  x="756.47" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (90,909,090 samples, 0.01%)</title><rect x="648.4" y="373" width="0.1" height="15.0" fill="rgb(253,119,27)" rx="2" ry="2" />
<text  x="651.37" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (171,717,170 samples, 0.03%)</title><rect x="1035.6" y="405" width="0.3" height="15.0" fill="rgb(248,4,9)" rx="2" ry="2" />
<text  x="1038.63" y="415.5" ></text>
</g>
<g >
<title>rocksdb::RandomAccessFileReader::Read (636,363,630 samples, 0.10%)</title><rect x="864.3" y="277" width="1.2" height="15.0" fill="rgb(248,79,25)" rx="2" ry="2" />
<text  x="867.31" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::empty (414,141,410 samples, 0.06%)</title><rect x="1159.1" y="469" width="0.7" height="15.0" fill="rgb(239,122,35)" rx="2" ry="2" />
<text  x="1162.07" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::push_back (313,131,310 samples, 0.05%)</title><rect x="1042.0" y="421" width="0.6" height="15.0" fill="rgb(213,72,52)" rx="2" ry="2" />
<text  x="1044.97" y="431.5" ></text>
</g>
<g >
<title>malloc (595,959,590 samples, 0.09%)</title><rect x="560.3" y="837" width="1.1" height="15.0" fill="rgb(248,36,41)" rx="2" ry="2" />
<text  x="563.33" y="847.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (151,515,150 samples, 0.02%)</title><rect x="894.3" y="373" width="0.3" height="15.0" fill="rgb(254,128,4)" rx="2" ry="2" />
<text  x="897.28" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (90,909,090 samples, 0.01%)</title><rect x="456.6" y="645" width="0.2" height="15.0" fill="rgb(251,28,44)" rx="2" ry="2" />
<text  x="459.62" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (90,909,090 samples, 0.01%)</title><rect x="963.2" y="405" width="0.1" height="15.0" fill="rgb(224,204,4)" rx="2" ry="2" />
<text  x="966.17" y="415.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (131,313,130 samples, 0.02%)</title><rect x="748.9" y="453" width="0.2" height="15.0" fill="rgb(205,190,42)" rx="2" ry="2" />
<text  x="751.87" y="463.5" ></text>
</g>
<g >
<title>std::make_unique&lt;rocksdb::InternalKeyComparator, rocksdb::Comparator const*&amp;&gt; (111,111,110 samples, 0.02%)</title><rect x="861.3" y="261" width="0.2" height="15.0" fill="rgb(221,140,46)" rx="2" ry="2" />
<text  x="864.27" y="271.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::MemTableInserter::GetPostMap (383,838,380 samples, 0.06%)</title><rect x="60.0" y="629" width="0.8" height="15.0" fill="rgb(234,159,50)" rx="2" ry="2" />
<text  x="63.04" y="639.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::get (191,919,190 samples, 0.03%)</title><rect x="471.4" y="693" width="0.4" height="15.0" fill="rgb(214,122,30)" rx="2" ry="2" />
<text  x="474.43" y="703.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::AdvanceInputIter (77,666,665,890 samples, 12.15%)</title><rect x="771.9" y="485" width="143.4" height="15.0" fill="rgb(231,137,7)" rx="2" ry="2" />
<text  x="774.86" y="495.5" >rocksdb::Compactio..</text>
</g>
<g >
<title>rocksdb::IOOptions::~IOOptions (90,909,090 samples, 0.01%)</title><rect x="571.4" y="357" width="0.2" height="15.0" fill="rgb(211,74,50)" rx="2" ry="2" />
<text  x="574.44" y="367.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ikey (60,606,060 samples, 0.01%)</title><rect x="1083.3" y="469" width="0.1" height="15.0" fill="rgb(247,12,11)" rx="2" ry="2" />
<text  x="1086.33" y="479.5" ></text>
</g>
<g >
<title>filemap_read (161,616,160 samples, 0.03%)</title><rect x="827.7" y="101" width="0.3" height="15.0" fill="rgb(223,229,15)" rx="2" ry="2" />
<text  x="830.67" y="111.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (70,707,070 samples, 0.01%)</title><rect x="1033.7" y="293" width="0.2" height="15.0" fill="rgb(212,4,31)" rx="2" ry="2" />
<text  x="1036.73" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::BlobGarbageMeter, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt;::get (434,343,430 samples, 0.07%)</title><rect x="1151.0" y="469" width="0.8" height="15.0" fill="rgb(221,3,30)" rx="2" ry="2" />
<text  x="1153.96" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (181,818,180 samples, 0.03%)</title><rect x="456.6" y="661" width="0.3" height="15.0" fill="rgb(231,42,4)" rx="2" ry="2" />
<text  x="459.60" y="671.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::status (2,363,636,340 samples, 0.37%)</title><rect x="907.4" y="405" width="4.3" height="15.0" fill="rgb(245,93,11)" rx="2" ry="2" />
<text  x="910.38" y="415.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::duration&lt;unsigned long, void&gt; (363,636,360 samples, 0.06%)</title><rect x="449.2" y="709" width="0.6" height="15.0" fill="rgb(228,192,31)" rx="2" ry="2" />
<text  x="452.16" y="719.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;47ul&gt; (1,484,848,470 samples, 0.23%)</title><rect x="1165.1" y="501" width="2.7" height="15.0" fill="rgb(206,9,36)" rx="2" ry="2" />
<text  x="1168.10" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (222,222,220 samples, 0.03%)</title><rect x="851.2" y="373" width="0.4" height="15.0" fill="rgb(228,169,8)" rx="2" ry="2" />
<text  x="854.19" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (212,121,210 samples, 0.03%)</title><rect x="904.2" y="357" width="0.4" height="15.0" fill="rgb(252,177,0)" rx="2" ry="2" />
<text  x="907.19" y="367.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (131,313,130 samples, 0.02%)</title><rect x="578.2" y="277" width="0.2" height="15.0" fill="rgb(244,141,52)" rx="2" ry="2" />
<text  x="581.20" y="287.5" ></text>
</g>
<g >
<title>generic_write_end (171,717,170 samples, 0.03%)</title><rect x="573.3" y="133" width="0.3" height="15.0" fill="rgb(213,21,52)" rx="2" ry="2" />
<text  x="576.25" y="143.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (565,656,560 samples, 0.09%)</title><rect x="49.5" y="677" width="1.1" height="15.0" fill="rgb(225,223,16)" rx="2" ry="2" />
<text  x="52.54" y="687.5" ></text>
</g>
<g >
<title>rocksdb::SuperVersionContext::Clean (292,929,290 samples, 0.05%)</title><rect x="29.0" y="709" width="0.5" height="15.0" fill="rgb(208,131,52)" rx="2" ry="2" />
<text  x="31.99" y="719.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyData::IsDropped (181,818,180 samples, 0.03%)</title><rect x="765.1" y="517" width="0.3" height="15.0" fill="rgb(234,9,5)" rx="2" ry="2" />
<text  x="768.11" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_Rb_tree (70,707,070 samples, 0.01%)</title><rect x="60.1" y="613" width="0.1" height="15.0" fill="rgb(250,158,26)" rx="2" ry="2" />
<text  x="63.08" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="890.8" y="325" width="0.2" height="15.0" fill="rgb(230,219,28)" rx="2" ry="2" />
<text  x="893.85" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Mod&lt;unsigned long, 624ul, 1ul, 0ul, true, true&gt;::__calc (6,070,707,010 samples, 0.95%)</title><rect x="531.2" y="757" width="11.3" height="15.0" fill="rgb(206,0,54)" rx="2" ry="2" />
<text  x="534.25" y="767.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (272,727,270 samples, 0.04%)</title><rect x="880.0" y="309" width="0.5" height="15.0" fill="rgb(249,76,13)" rx="2" ry="2" />
<text  x="882.96" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (313,131,310 samples, 0.05%)</title><rect x="857.8" y="341" width="0.6" height="15.0" fill="rgb(249,96,51)" rx="2" ry="2" />
<text  x="860.83" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::VersionSet, std::default_delete&lt;rocksdb::VersionSet&gt; &gt;::operator (282,828,280 samples, 0.04%)</title><rect x="460.2" y="725" width="0.5" height="15.0" fill="rgb(219,40,34)" rx="2" ry="2" />
<text  x="463.22" y="735.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="911.3" y="341" width="0.2" height="15.0" fill="rgb(229,8,30)" rx="2" ry="2" />
<text  x="914.31" y="351.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_context (212,121,210 samples, 0.03%)</title><rect x="598.8" y="405" width="0.4" height="15.0" fill="rgb(213,8,20)" rx="2" ry="2" />
<text  x="601.84" y="415.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (181,818,180 samples, 0.03%)</title><rect x="803.9" y="389" width="0.4" height="15.0" fill="rgb(205,54,25)" rx="2" ry="2" />
<text  x="806.93" y="399.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (222,222,220 samples, 0.03%)</title><rect x="694.0" y="341" width="0.4" height="15.0" fill="rgb(226,229,18)" rx="2" ry="2" />
<text  x="697.01" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (101,010,100 samples, 0.02%)</title><rect x="859.1" y="357" width="0.2" height="15.0" fill="rgb(224,61,42)" rx="2" ry="2" />
<text  x="862.07" y="367.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock (202,020,200 samples, 0.03%)</title><rect x="569.2" y="389" width="0.3" height="15.0" fill="rgb(226,109,29)" rx="2" ry="2" />
<text  x="572.17" y="399.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Next (2,626,262,600 samples, 0.41%)</title><rect x="833.0" y="357" width="4.9" height="15.0" fill="rgb(220,168,12)" rx="2" ry="2" />
<text  x="836.03" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (4,646,464,600 samples, 0.73%)</title><rect x="1133.7" y="437" width="8.5" height="15.0" fill="rgb(224,227,35)" rx="2" ry="2" />
<text  x="1136.65" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::operator (898,989,890 samples, 0.14%)</title><rect x="1156.9" y="469" width="1.7" height="15.0" fill="rgb(240,205,2)" rx="2" ry="2" />
<text  x="1159.89" y="479.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::status (1,777,777,760 samples, 0.28%)</title><rect x="855.5" y="373" width="3.3" height="15.0" fill="rgb(249,182,47)" rx="2" ry="2" />
<text  x="858.52" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (252,525,250 samples, 0.04%)</title><rect x="898.5" y="309" width="0.4" height="15.0" fill="rgb(221,102,8)" rx="2" ry="2" />
<text  x="901.46" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (70,707,070 samples, 0.01%)</title><rect x="185.9" y="645" width="0.2" height="15.0" fill="rgb(242,118,54)" rx="2" ry="2" />
<text  x="188.93" y="655.5" ></text>
</g>
<g >
<title>ext4_inode_csum (70,707,070 samples, 0.01%)</title><rect x="38.1" y="341" width="0.1" height="15.0" fill="rgb(213,201,21)" rx="2" ry="2" />
<text  x="41.05" y="351.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::operator[] (171,717,170 samples, 0.03%)</title><rect x="820.2" y="373" width="0.3" height="15.0" fill="rgb(222,179,18)" rx="2" ry="2" />
<text  x="823.21" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::FilterBlockBuilder*, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;@plt (161,616,160 samples, 0.03%)</title><rect x="615.3" y="373" width="0.3" height="15.0" fill="rgb(229,82,5)" rx="2" ry="2" />
<text  x="618.28" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="1084.4" y="373" width="0.1" height="15.0" fill="rgb(212,62,41)" rx="2" ry="2" />
<text  x="1087.35" y="383.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (141,414,140 samples, 0.02%)</title><rect x="897.5" y="245" width="0.3" height="15.0" fill="rgb(225,132,26)" rx="2" ry="2" />
<text  x="900.53" y="255.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::IntTblPropCollector*, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; (141,414,140 samples, 0.02%)</title><rect x="1066.1" y="405" width="0.3" height="15.0" fill="rgb(206,183,6)" rx="2" ry="2" />
<text  x="1069.15" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::operator bool (1,141,414,130 samples, 0.18%)</title><rect x="1086.9" y="421" width="2.1" height="15.0" fill="rgb(242,127,35)" rx="2" ry="2" />
<text  x="1089.89" y="431.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::SstPartitioner*, false&gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="1156.3" y="373" width="0.2" height="15.0" fill="rgb(250,60,1)" rx="2" ry="2" />
<text  x="1159.31" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (242,424,240 samples, 0.04%)</title><rect x="128.6" y="549" width="0.4" height="15.0" fill="rgb(249,63,42)" rx="2" ry="2" />
<text  x="131.57" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::VersionSet*, std::default_delete&lt;rocksdb::VersionSet&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="460.5" y="677" width="0.2" height="15.0" fill="rgb(245,53,31)" rx="2" ry="2" />
<text  x="463.48" y="687.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (151,515,150 samples, 0.02%)</title><rect x="913.6" y="373" width="0.3" height="15.0" fill="rgb(219,49,3)" rx="2" ry="2" />
<text  x="916.61" y="383.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::get_right (101,010,100 samples, 0.02%)</title><rect x="801.4" y="421" width="0.1" height="15.0" fill="rgb(214,77,20)" rx="2" ry="2" />
<text  x="804.35" y="431.5" ></text>
</g>
<g >
<title>mpage_map_and_submit_extent (70,707,070 samples, 0.01%)</title><rect x="562.1" y="309" width="0.1" height="15.0" fill="rgb(223,75,50)" rx="2" ry="2" />
<text  x="565.12" y="319.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (676,767,670 samples, 0.11%)</title><rect x="456.0" y="709" width="1.3" height="15.0" fill="rgb(218,9,33)" rx="2" ry="2" />
<text  x="459.04" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_erase (545,454,540 samples, 0.09%)</title><rect x="56.2" y="661" width="1.0" height="15.0" fill="rgb(227,0,4)" rx="2" ry="2" />
<text  x="59.17" y="671.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (262,626,260 samples, 0.04%)</title><rect x="847.9" y="309" width="0.5" height="15.0" fill="rgb(220,121,23)" rx="2" ry="2" />
<text  x="850.93" y="319.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (90,909,090 samples, 0.01%)</title><rect x="202.7" y="709" width="0.2" height="15.0" fill="rgb(220,201,45)" rx="2" ry="2" />
<text  x="205.70" y="719.5" ></text>
</g>
<g >
<title>rocksdb::DecodeFixed64 (80,808,080 samples, 0.01%)</title><rect x="1048.0" y="421" width="0.1" height="15.0" fill="rgb(237,104,48)" rx="2" ry="2" />
<text  x="1050.98" y="431.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (202,020,200 samples, 0.03%)</title><rect x="277.5" y="677" width="0.4" height="15.0" fill="rgb(236,151,29)" rx="2" ry="2" />
<text  x="280.48" y="687.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::GetInternalKey (131,313,130 samples, 0.02%)</title><rect x="871.4" y="357" width="0.3" height="15.0" fill="rgb(231,62,34)" rx="2" ry="2" />
<text  x="874.43" y="367.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (90,909,090 samples, 0.01%)</title><rect x="1012.1" y="357" width="0.2" height="15.0" fill="rgb(254,0,7)" rx="2" ry="2" />
<text  x="1015.15" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (60,606,060 samples, 0.01%)</title><rect x="750.2" y="453" width="0.1" height="15.0" fill="rgb(240,196,9)" rx="2" ry="2" />
<text  x="753.23" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (1,787,878,770 samples, 0.28%)</title><rect x="896.0" y="357" width="3.3" height="15.0" fill="rgb(206,146,2)" rx="2" ry="2" />
<text  x="898.96" y="367.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::CASNext (80,808,080 samples, 0.01%)</title><rect x="136.7" y="597" width="0.2" height="15.0" fill="rgb(220,89,27)" rx="2" ry="2" />
<text  x="139.73" y="607.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (1,979,797,960 samples, 0.31%)</title><rect x="903.7" y="389" width="3.6" height="15.0" fill="rgb(214,74,23)" rx="2" ry="2" />
<text  x="906.66" y="399.5" ></text>
</g>
<g >
<title>rocksdb::GetVarint32 (60,606,060 samples, 0.01%)</title><rect x="146.7" y="661" width="0.1" height="15.0" fill="rgb(214,94,42)" rx="2" ry="2" />
<text  x="149.69" y="671.5" ></text>
</g>
<g >
<title>__GI___unlink (242,424,240 samples, 0.04%)</title><rect x="754.3" y="469" width="0.4" height="15.0" fill="rgb(247,110,29)" rx="2" ry="2" />
<text  x="757.26" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::_M_ptr (525,252,520 samples, 0.08%)</title><rect x="891.6" y="373" width="1.0" height="15.0" fill="rgb(249,4,39)" rx="2" ry="2" />
<text  x="894.63" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (828,282,820 samples, 0.13%)</title><rect x="853.1" y="325" width="1.5" height="15.0" fill="rgb(210,31,18)" rx="2" ry="2" />
<text  x="856.12" y="335.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (151,515,150 samples, 0.02%)</title><rect x="1125.8" y="469" width="0.2" height="15.0" fill="rgb(224,53,30)" rx="2" ry="2" />
<text  x="1128.76" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_head (90,909,090 samples, 0.01%)</title><rect x="974.4" y="389" width="0.2" height="15.0" fill="rgb(218,151,5)" rx="2" ry="2" />
<text  x="977.39" y="399.5" ></text>
</g>
<g >
<title>__tls_get_addr (262,626,260 samples, 0.04%)</title><rect x="107.2" y="469" width="0.5" height="15.0" fill="rgb(214,162,52)" rx="2" ry="2" />
<text  x="110.24" y="479.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (141,414,140 samples, 0.02%)</title><rect x="599.3" y="389" width="0.3" height="15.0" fill="rgb(231,150,53)" rx="2" ry="2" />
<text  x="602.35" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (191,919,190 samples, 0.03%)</title><rect x="497.8" y="725" width="0.4" height="15.0" fill="rgb(226,92,36)" rx="2" ry="2" />
<text  x="500.80" y="735.5" ></text>
</g>
<g >
<title>rocksdb::CompactionJob::Run (224,292,927,050 samples, 35.10%)</title><rect x="765.1" y="533" width="414.2" height="15.0" fill="rgb(225,216,33)" rx="2" ry="2" />
<text  x="768.11" y="543.5" >rocksdb::CompactionJob::Run</text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (262,626,260 samples, 0.04%)</title><rect x="857.9" y="325" width="0.5" height="15.0" fill="rgb(223,122,45)" rx="2" ry="2" />
<text  x="860.91" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalKeyComparator, std::default_delete&lt;rocksdb::InternalKeyComparator&gt; &gt;::unique_ptr&lt;std::default_delete&lt;rocksdb::InternalKeyComparator&gt;, void&gt; (101,010,100 samples, 0.02%)</title><rect x="861.3" y="245" width="0.2" height="15.0" fill="rgb(205,171,27)" rx="2" ry="2" />
<text  x="864.29" y="255.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (222,222,220 samples, 0.03%)</title><rect x="854.8" y="309" width="0.4" height="15.0" fill="rgb(249,84,2)" rx="2" ry="2" />
<text  x="857.78" y="319.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::status (3,828,282,790 samples, 0.60%)</title><rect x="852.4" y="389" width="7.1" height="15.0" fill="rgb(253,64,0)" rx="2" ry="2" />
<text  x="855.43" y="399.5" ></text>
</g>
<g >
<title>rocksdb::DeleteDBFile (242,424,240 samples, 0.04%)</title><rect x="754.3" y="517" width="0.4" height="15.0" fill="rgb(212,45,16)" rx="2" ry="2" />
<text  x="757.26" y="527.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::UpdateGrandparentBoundaryInfo (1,575,757,560 samples, 0.25%)</title><rect x="1090.7" y="453" width="2.9" height="15.0" fill="rgb(254,175,25)" rx="2" ry="2" />
<text  x="1093.67" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (111,111,110 samples, 0.02%)</title><rect x="726.8" y="453" width="0.2" height="15.0" fill="rgb(243,72,4)" rx="2" ry="2" />
<text  x="729.76" y="463.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; (161,616,160 samples, 0.03%)</title><rect x="283.4" y="645" width="0.3" height="15.0" fill="rgb(232,16,4)" rx="2" ry="2" />
<text  x="286.41" y="655.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::Append (1,626,262,610 samples, 0.25%)</title><rect x="40.9" y="661" width="3.0" height="15.0" fill="rgb(231,58,34)" rx="2" ry="2" />
<text  x="43.91" y="671.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find (4,626,262,580 samples, 0.72%)</title><rect x="486.0" y="805" width="8.6" height="15.0" fill="rgb(245,182,41)" rx="2" ry="2" />
<text  x="489.03" y="815.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;35ul&gt; (101,010,100 samples, 0.02%)</title><rect x="143.8" y="645" width="0.2" height="15.0" fill="rgb(232,56,2)" rx="2" ry="2" />
<text  x="146.81" y="655.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::IntTblPropCollector*, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;@plt (141,414,140 samples, 0.02%)</title><rect x="609.3" y="373" width="0.3" height="15.0" fill="rgb(234,65,21)" rx="2" ry="2" />
<text  x="612.33" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (121,212,120 samples, 0.02%)</title><rect x="728.3" y="453" width="0.2" height="15.0" fill="rgb(247,220,5)" rx="2" ry="2" />
<text  x="731.31" y="463.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_context (242,424,240 samples, 0.04%)</title><rect x="133.5" y="533" width="0.4" height="15.0" fill="rgb(212,10,30)" rx="2" ry="2" />
<text  x="136.46" y="543.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::duration&lt;unsigned long, void&gt; (1,646,464,630 samples, 0.26%)</title><rect x="232.4" y="693" width="3.0" height="15.0" fill="rgb(219,195,35)" rx="2" ry="2" />
<text  x="235.39" y="703.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::FlushBlockPolicy*, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt; (505,050,500 samples, 0.08%)</title><rect x="617.6" y="389" width="0.9" height="15.0" fill="rgb(225,122,44)" rx="2" ry="2" />
<text  x="620.55" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_write (838,383,830 samples, 0.13%)</title><rect x="572.1" y="309" width="1.5" height="15.0" fill="rgb(248,136,28)" rx="2" ry="2" />
<text  x="575.10" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree_key_compare&lt;std::less&lt;rocksdb::MemTable*&gt; &gt;::_Rb_tree_key_compare (60,606,060 samples, 0.01%)</title><rect x="60.4" y="581" width="0.1" height="15.0" fill="rgb(240,211,17)" rx="2" ry="2" />
<text  x="63.42" y="591.5" ></text>
</g>
<g >
<title>std::__detail::__mod&lt;unsigned long, 4294967296ul, 1ul, 0ul&gt; (7,050,504,980 samples, 1.10%)</title><rect x="516.7" y="773" width="13.0" height="15.0" fill="rgb(253,222,23)" rx="2" ry="2" />
<text  x="519.70" y="783.5" ></text>
</g>
<g >
<title>rocksdb::UserComparatorWrapper::Compare (3,363,636,330 samples, 0.53%)</title><rect x="787.0" y="373" width="6.2" height="15.0" fill="rgb(217,187,18)" rx="2" ry="2" />
<text  x="790.03" y="383.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::InitializeBase (161,616,160 samples, 0.03%)</title><rect x="825.6" y="245" width="0.3" height="15.0" fill="rgb(208,113,1)" rx="2" ry="2" />
<text  x="828.60" y="255.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="694.4" y="373" width="0.3" height="15.0" fill="rgb(240,207,31)" rx="2" ry="2" />
<text  x="697.42" y="383.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ExtractLargeValueIfNeeded (212,121,210 samples, 0.03%)</title><rect x="695.3" y="421" width="0.4" height="15.0" fill="rgb(254,47,15)" rx="2" ry="2" />
<text  x="698.31" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (282,828,280 samples, 0.04%)</title><rect x="1136.8" y="405" width="0.5" height="15.0" fill="rgb(207,37,15)" rx="2" ry="2" />
<text  x="1139.82" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::back@plt (60,606,060 samples, 0.01%)</title><rect x="1159.0" y="469" width="0.1" height="15.0" fill="rgb(222,34,6)" rx="2" ry="2" />
<text  x="1161.96" y="479.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::Invalidate (121,212,120 samples, 0.02%)</title><rect x="699.5" y="437" width="0.3" height="15.0" fill="rgb(253,110,6)" rx="2" ry="2" />
<text  x="702.53" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (282,828,280 samples, 0.04%)</title><rect x="887.9" y="325" width="0.5" height="15.0" fill="rgb(210,55,20)" rx="2" ry="2" />
<text  x="890.87" y="335.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::Status, unsigned int, unsigned long&gt;::_Tuple_impl&lt;rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;, void&gt; (1,030,303,020 samples, 0.16%)</title><rect x="466.7" y="693" width="1.9" height="15.0" fill="rgb(232,100,5)" rx="2" ry="2" />
<text  x="469.67" y="703.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (60,606,060 samples, 0.01%)</title><rect x="44.9" y="261" width="0.1" height="15.0" fill="rgb(230,93,32)" rx="2" ry="2" />
<text  x="47.94" y="271.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::GetStatus (1,222,222,210 samples, 0.19%)</title><rect x="577.1" y="405" width="2.3" height="15.0" fill="rgb(233,53,35)" rx="2" ry="2" />
<text  x="580.13" y="415.5" ></text>
</g>
<g >
<title>std::operator&amp; (545,454,540 samples, 0.09%)</title><rect x="168.4" y="693" width="1.0" height="15.0" fill="rgb(214,42,22)" rx="2" ry="2" />
<text  x="171.40" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Auto_node::_M_insert (333,333,330 samples, 0.05%)</title><rect x="495.6" y="757" width="0.6" height="15.0" fill="rgb(212,183,41)" rx="2" ry="2" />
<text  x="498.60" y="767.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatchInternal::InsertInto (53,232,322,700 samples, 8.33%)</title><rect x="52.7" y="725" width="98.3" height="15.0" fill="rgb(225,225,39)" rx="2" ry="2" />
<text  x="55.73" y="735.5" >rocksdb::Wr..</text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::VersionSet, std::default_delete&lt;rocksdb::VersionSet&gt; &gt;::operator (60,606,060 samples, 0.01%)</title><rect x="463.5" y="741" width="0.1" height="15.0" fill="rgb(245,71,16)" rx="2" ry="2" />
<text  x="466.54" y="751.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1,565,656,550 samples, 0.25%)</title><rect x="272.2" y="677" width="2.9" height="15.0" fill="rgb(230,212,32)" rx="2" ry="2" />
<text  x="275.18" y="687.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (151,515,150 samples, 0.02%)</title><rect x="786.7" y="373" width="0.3" height="15.0" fill="rgb(242,23,7)" rx="2" ry="2" />
<text  x="789.75" y="383.5" ></text>
</g>
<g >
<title>exc_page_fault (404,040,400 samples, 0.06%)</title><rect x="559.4" y="805" width="0.7" height="15.0" fill="rgb(238,180,41)" rx="2" ry="2" />
<text  x="562.39" y="815.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (343,434,340 samples, 0.05%)</title><rect x="1033.3" y="357" width="0.6" height="15.0" fill="rgb(205,180,39)" rx="2" ry="2" />
<text  x="1036.30" y="367.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (161,616,160 samples, 0.03%)</title><rect x="853.4" y="261" width="0.3" height="15.0" fill="rgb(240,223,32)" rx="2" ry="2" />
<text  x="856.40" y="271.5" ></text>
</g>
<g >
<title>__memset_evex_unaligned_erms (60,606,060 samples, 0.01%)</title><rect x="721.6" y="405" width="0.1" height="15.0" fill="rgb(247,38,12)" rx="2" ry="2" />
<text  x="724.60" y="415.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::NextEntryOffset (141,414,140 samples, 0.02%)</title><rect x="872.4" y="341" width="0.2" height="15.0" fill="rgb(232,123,15)" rx="2" ry="2" />
<text  x="875.37" y="351.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::output_to_penultimate_level (141,414,140 samples, 0.02%)</title><rect x="1004.7" y="501" width="0.2" height="15.0" fill="rgb(212,62,15)" rx="2" ry="2" />
<text  x="1007.67" y="511.5" ></text>
</g>
<g >
<title>schedule (141,414,140 samples, 0.02%)</title><rect x="421.1" y="613" width="0.2" height="15.0" fill="rgb(232,35,11)" rx="2" ry="2" />
<text  x="424.07" y="623.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::BlobGarbageMeter*, std::default_delete&lt;rocksdb::BlobGarbageMeter&gt; &gt; (181,818,180 samples, 0.03%)</title><rect x="1154.3" y="437" width="0.3" height="15.0" fill="rgb(247,145,5)" rx="2" ry="2" />
<text  x="1157.28" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (1,070,707,060 samples, 0.17%)</title><rect x="603.5" y="405" width="2.0" height="15.0" fill="rgb(236,159,26)" rx="2" ry="2" />
<text  x="606.49" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_ptr (444,444,440 samples, 0.07%)</title><rect x="974.2" y="421" width="0.8" height="15.0" fill="rgb(238,140,42)" rx="2" ry="2" />
<text  x="977.21" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="909.7" y="261" width="0.1" height="15.0" fill="rgb(239,53,30)" rx="2" ry="2" />
<text  x="912.65" y="271.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::value (383,838,380 samples, 0.06%)</title><rect x="964.5" y="389" width="0.7" height="15.0" fill="rgb(229,147,28)" rx="2" ry="2" />
<text  x="967.51" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::DynamicBloom, std::default_delete&lt;rocksdb::DynamicBloom&gt; &gt;::_M_ptr (404,040,400 samples, 0.06%)</title><rect x="140.5" y="597" width="0.8" height="15.0" fill="rgb(224,150,40)" rx="2" ry="2" />
<text  x="143.51" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_begin (515,151,510 samples, 0.08%)</title><rect x="657.1" y="373" width="0.9" height="15.0" fill="rgb(209,186,39)" rx="2" ry="2" />
<text  x="660.06" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt;::end (80,808,080 samples, 0.01%)</title><rect x="1090.5" y="421" width="0.1" height="15.0" fill="rgb(225,114,7)" rx="2" ry="2" />
<text  x="1093.47" y="431.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (141,414,140 samples, 0.02%)</title><rect x="187.2" y="709" width="0.3" height="15.0" fill="rgb(242,143,5)" rx="2" ry="2" />
<text  x="190.22" y="719.5" ></text>
</g>
<g >
<title>file_write_and_wait_range (212,121,210 samples, 0.03%)</title><rect x="747.3" y="341" width="0.4" height="15.0" fill="rgb(253,51,6)" rx="2" ry="2" />
<text  x="750.26" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;rocksdb::CompactionOutputs::Output const*, std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt; &gt; (252,525,250 samples, 0.04%)</title><rect x="1105.2" y="437" width="0.5" height="15.0" fill="rgb(227,128,49)" rx="2" ry="2" />
<text  x="1108.22" y="447.5" ></text>
</g>
<g >
<title>rocksdb::SstFileManagerImpl::ScheduleFileDeletion (242,424,240 samples, 0.04%)</title><rect x="754.3" y="501" width="0.4" height="15.0" fill="rgb(243,216,42)" rx="2" ry="2" />
<text  x="757.26" y="511.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockHashIndexBuilder::Valid (131,313,130 samples, 0.02%)</title><rect x="1049.4" y="421" width="0.3" height="15.0" fill="rgb(211,63,13)" rx="2" ry="2" />
<text  x="1052.42" y="431.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (60,606,060 samples, 0.01%)</title><rect x="480.6" y="677" width="0.1" height="15.0" fill="rgb(233,99,5)" rx="2" ry="2" />
<text  x="483.59" y="687.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::Initialize (222,222,220 samples, 0.03%)</title><rect x="861.2" y="293" width="0.4" height="15.0" fill="rgb(218,68,17)" rx="2" ry="2" />
<text  x="864.21" y="303.5" ></text>
</g>
<g >
<title>__alloc_pages (70,707,070 samples, 0.01%)</title><rect x="36.8" y="389" width="0.2" height="15.0" fill="rgb(228,7,50)" rx="2" ry="2" />
<text  x="39.84" y="399.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::Next (1,717,171,700 samples, 0.27%)</title><rect x="625.8" y="357" width="3.1" height="15.0" fill="rgb(238,204,13)" rx="2" ry="2" />
<text  x="628.76" y="367.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (60,606,060 samples, 0.01%)</title><rect x="1027.4" y="69" width="0.2" height="15.0" fill="rgb(216,2,54)" rx="2" ry="2" />
<text  x="1030.44" y="79.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="969.4" y="421" width="0.3" height="15.0" fill="rgb(245,228,3)" rx="2" ry="2" />
<text  x="972.40" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (242,424,240 samples, 0.04%)</title><rect x="743.2" y="373" width="0.4" height="15.0" fill="rgb(251,132,50)" rx="2" ry="2" />
<text  x="746.18" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="849.2" y="325" width="0.1" height="15.0" fill="rgb(213,211,26)" rx="2" ry="2" />
<text  x="852.24" y="335.5" ></text>
</g>
<g >
<title>std::reverse_iterator&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;::base (464,646,460 samples, 0.07%)</title><rect x="994.7" y="437" width="0.8" height="15.0" fill="rgb(220,176,17)" rx="2" ry="2" />
<text  x="997.69" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (161,616,160 samples, 0.03%)</title><rect x="858.1" y="277" width="0.3" height="15.0" fill="rgb(222,46,0)" rx="2" ry="2" />
<text  x="861.06" y="287.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (333,333,330 samples, 0.05%)</title><rect x="578.7" y="389" width="0.6" height="15.0" fill="rgb(229,196,14)" rx="2" ry="2" />
<text  x="581.70" y="399.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader (464,646,460 samples, 0.07%)</title><rect x="185.8" y="709" width="0.8" height="15.0" fill="rgb(212,76,26)" rx="2" ry="2" />
<text  x="188.76" y="719.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (60,606,060 samples, 0.01%)</title><rect x="464.8" y="741" width="0.1" height="15.0" fill="rgb(209,114,48)" rx="2" ry="2" />
<text  x="467.77" y="751.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::FilterBlockBuilder*, false&gt;::_M_head (111,111,110 samples, 0.02%)</title><rect x="615.7" y="341" width="0.2" height="15.0" fill="rgb(229,160,52)" rx="2" ry="2" />
<text  x="618.74" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::get (414,141,410 samples, 0.06%)</title><rect x="691.9" y="405" width="0.8" height="15.0" fill="rgb(221,164,23)" rx="2" ry="2" />
<text  x="694.92" y="415.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="900.9" y="245" width="0.2" height="15.0" fill="rgb(250,74,1)" rx="2" ry="2" />
<text  x="903.94" y="255.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (60,606,060 samples, 0.01%)</title><rect x="139.5" y="549" width="0.1" height="15.0" fill="rgb(212,11,6)" rx="2" ry="2" />
<text  x="142.50" y="559.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (191,919,190 samples, 0.03%)</title><rect x="1141.6" y="421" width="0.4" height="15.0" fill="rgb(244,96,5)" rx="2" ry="2" />
<text  x="1144.60" y="431.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;long&gt;::operator (4,010,100,970 samples, 0.63%)</title><rect x="543.8" y="773" width="7.4" height="15.0" fill="rgb(235,142,3)" rx="2" ry="2" />
<text  x="546.82" y="783.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (696,969,690 samples, 0.11%)</title><rect x="840.1" y="325" width="1.3" height="15.0" fill="rgb(251,200,46)" rx="2" ry="2" />
<text  x="843.13" y="335.5" ></text>
</g>
<g >
<title>rocksdb::ThreadStatusUpdater::SetThreadOperationProperty (262,626,260 samples, 0.04%)</title><rect x="744.1" y="453" width="0.5" height="15.0" fill="rgb(246,187,42)" rx="2" ry="2" />
<text  x="747.13" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_ptr (505,050,500 samples, 0.08%)</title><rect x="985.9" y="421" width="1.0" height="15.0" fill="rgb(238,215,51)" rx="2" ry="2" />
<text  x="988.92" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Slice::difference_offset (343,434,340 samples, 0.05%)</title><rect x="1043.3" y="437" width="0.6" height="15.0" fill="rgb(241,216,7)" rx="2" ry="2" />
<text  x="1046.30" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,606,060,590 samples, 0.25%)</title><rect x="35.8" y="597" width="3.0" height="15.0" fill="rgb(242,221,41)" rx="2" ry="2" />
<text  x="38.80" y="607.5" ></text>
</g>
<g >
<title>std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (6,838,383,770 samples, 1.07%)</title><rect x="256.9" y="677" width="12.6" height="15.0" fill="rgb(219,139,32)" rx="2" ry="2" />
<text  x="259.90" y="687.5" ></text>
</g>
<g >
<title>rocksdb::InstrumentedMutexLock::InstrumentedMutexLock (171,717,170 samples, 0.03%)</title><rect x="26.8" y="709" width="0.3" height="15.0" fill="rgb(234,98,39)" rx="2" ry="2" />
<text  x="29.79" y="719.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (171,717,170 samples, 0.03%)</title><rect x="1054.3" y="421" width="0.3" height="15.0" fill="rgb(213,8,24)" rx="2" ry="2" />
<text  x="1057.30" y="431.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (101,010,100 samples, 0.02%)</title><rect x="469.8" y="629" width="0.2" height="15.0" fill="rgb(241,39,32)" rx="2" ry="2" />
<text  x="472.84" y="639.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::InitializeBase (171,717,170 samples, 0.03%)</title><rect x="861.2" y="277" width="0.4" height="15.0" fill="rgb(207,146,46)" rx="2" ry="2" />
<text  x="864.25" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::TableBuilder*, false&gt;::_M_head (242,424,240 samples, 0.04%)</title><rect x="1087.7" y="341" width="0.4" height="15.0" fill="rgb(252,109,5)" rx="2" ry="2" />
<text  x="1090.67" y="351.5" ></text>
</g>
<g >
<title>rocksdb::Cleanable::Reset (262,626,260 samples, 0.04%)</title><rect x="942.8" y="453" width="0.5" height="15.0" fill="rgb(249,36,13)" rx="2" ry="2" />
<text  x="945.83" y="463.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::SuperVersion*, 8ul&gt;::~autovector (191,919,190 samples, 0.03%)</title><rect x="29.6" y="693" width="0.3" height="15.0" fill="rgb(247,185,39)" rx="2" ry="2" />
<text  x="32.57" y="703.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (131,313,130 samples, 0.02%)</title><rect x="738.1" y="309" width="0.3" height="15.0" fill="rgb(248,63,18)" rx="2" ry="2" />
<text  x="741.14" y="319.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::Writer::~Writer (60,606,060 samples, 0.01%)</title><rect x="463.2" y="741" width="0.1" height="15.0" fill="rgb(252,40,3)" rx="2" ry="2" />
<text  x="466.16" y="751.5" ></text>
</g>
<g >
<title>rocksdb::GetVarint32Ptr@plt (80,808,080 samples, 0.01%)</title><rect x="93.8" y="517" width="0.2" height="15.0" fill="rgb(216,222,8)" rx="2" ry="2" />
<text  x="96.82" y="527.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::PrepareOutput (171,717,170 samples, 0.03%)</title><rect x="708.0" y="453" width="0.4" height="15.0" fill="rgb(214,26,4)" rx="2" ry="2" />
<text  x="711.04" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (191,919,190 samples, 0.03%)</title><rect x="1061.9" y="325" width="0.3" height="15.0" fill="rgb(214,68,31)" rx="2" ry="2" />
<text  x="1064.88" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;::~vector (70,707,070 samples, 0.01%)</title><rect x="30.7" y="693" width="0.2" height="15.0" fill="rgb(225,69,6)" rx="2" ry="2" />
<text  x="33.74" y="703.5" ></text>
</g>
<g >
<title>std::atomic&lt;void*&gt;::load (373,737,370 samples, 0.06%)</title><rect x="746.5" y="421" width="0.7" height="15.0" fill="rgb(207,200,39)" rx="2" ry="2" />
<text  x="749.52" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (101,010,100 samples, 0.02%)</title><rect x="888.6" y="309" width="0.2" height="15.0" fill="rgb(211,135,35)" rx="2" ry="2" />
<text  x="891.59" y="319.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (242,424,240 samples, 0.04%)</title><rect x="1136.4" y="357" width="0.4" height="15.0" fill="rgb(247,223,11)" rx="2" ry="2" />
<text  x="1139.37" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator==&lt;rocksdb::FileMetaData* const*, std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt; &gt; (232,323,230 samples, 0.04%)</title><rect x="1092.3" y="421" width="0.4" height="15.0" fill="rgb(239,169,36)" rx="2" ry="2" />
<text  x="1095.26" y="431.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::BackgroundCallFlush (104,343,433,300 samples, 16.33%)</title><rect x="562.0" y="565" width="192.7" height="15.0" fill="rgb(232,208,9)" rx="2" ry="2" />
<text  x="565.04" y="575.5" >rocksdb::DBImpl::Backgrou..</text>
</g>
<g >
<title>rocksdb::Status::operator=@plt (90,909,090 samples, 0.01%)</title><rect x="1163.0" y="485" width="0.2" height="15.0" fill="rgb(244,115,3)" rx="2" ry="2" />
<text  x="1165.99" y="495.5" ></text>
</g>
<g >
<title>std::tuple&lt;rocksdb::Status, unsigned int, unsigned long&gt;::~tuple (101,010,100 samples, 0.02%)</title><rect x="476.4" y="741" width="0.2" height="15.0" fill="rgb(252,223,1)" rx="2" ry="2" />
<text  x="479.41" y="751.5" ></text>
</g>
<g >
<title>rocksdb::MemTableRep::KeyComparator::decode_key (121,212,120 samples, 0.02%)</title><rect x="136.2" y="581" width="0.3" height="15.0" fill="rgb(249,106,7)" rx="2" ry="2" />
<text  x="139.24" y="591.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (5,222,222,170 samples, 0.82%)</title><rect x="241.9" y="677" width="9.7" height="15.0" fill="rgb(219,212,28)" rx="2" ry="2" />
<text  x="244.91" y="687.5" ></text>
</g>
<g >
<title>clear_page_orig (80,808,080 samples, 0.01%)</title><rect x="1027.0" y="53" width="0.2" height="15.0" fill="rgb(219,2,12)" rx="2" ry="2" />
<text  x="1030.01" y="63.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::Flush (868,686,860 samples, 0.14%)</title><rect x="572.0" y="357" width="1.6" height="15.0" fill="rgb(233,226,27)" rx="2" ry="2" />
<text  x="575.04" y="367.5" ></text>
</g>
<g >
<title>rocksdb::SubcompactionState::AddToOutput (82,090,908,270 samples, 12.85%)</title><rect x="1013.2" y="501" width="151.6" height="15.0" fill="rgb(226,18,0)" rx="2" ry="2" />
<text  x="1016.17" y="511.5" >rocksdb::Subcompact..</text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (262,626,260 samples, 0.04%)</title><rect x="1033.4" y="325" width="0.5" height="15.0" fill="rgb(235,213,7)" rx="2" ry="2" />
<text  x="1036.45" y="335.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (70,707,070 samples, 0.01%)</title><rect x="1027.6" y="149" width="0.1" height="15.0" fill="rgb(229,46,36)" rx="2" ry="2" />
<text  x="1030.57" y="159.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (141,414,140 samples, 0.02%)</title><rect x="896.5" y="309" width="0.3" height="15.0" fill="rgb(211,221,46)" rx="2" ry="2" />
<text  x="899.50" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char, rocksdb::CustomDeleter, true, true&gt;::__uniq_ptr_data (60,606,060 samples, 0.01%)</title><rect x="861.8" y="261" width="0.1" height="15.0" fill="rgb(232,98,12)" rx="2" ry="2" />
<text  x="864.79" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (393,939,390 samples, 0.06%)</title><rect x="722.2" y="373" width="0.8" height="15.0" fill="rgb(244,65,42)" rx="2" ry="2" />
<text  x="725.23" y="383.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatchInternal::Iterate (49,464,645,970 samples, 7.74%)</title><rect x="58.6" y="693" width="91.4" height="15.0" fill="rgb(244,31,44)" rx="2" ry="2" />
<text  x="61.61" y="703.5" >rocksdb::W..</text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul&gt;::operator (3,898,989,860 samples, 0.61%)</title><rect x="544.0" y="741" width="7.2" height="15.0" fill="rgb(235,72,15)" rx="2" ry="2" />
<text  x="546.99" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound (1,393,939,380 samples, 0.22%)</title><rect x="497.1" y="757" width="2.6" height="15.0" fill="rgb(214,89,36)" rx="2" ry="2" />
<text  x="500.09" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt;::begin (272,727,270 samples, 0.04%)</title><rect x="1090.0" y="421" width="0.5" height="15.0" fill="rgb(243,8,45)" rx="2" ry="2" />
<text  x="1092.97" y="431.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (70,707,070 samples, 0.01%)</title><rect x="26.4" y="693" width="0.2" height="15.0" fill="rgb(249,182,40)" rx="2" ry="2" />
<text  x="29.43" y="703.5" ></text>
</g>
<g >
<title>rocksdb::ParseInternalKey (1,191,919,180 samples, 0.19%)</title><rect x="661.4" y="405" width="2.2" height="15.0" fill="rgb(253,171,46)" rx="2" ry="2" />
<text  x="664.44" y="415.5" ></text>
</g>
<g >
<title>rocksdb::BlockContents::BlockContents (60,606,060 samples, 0.01%)</title><rect x="861.8" y="293" width="0.1" height="15.0" fill="rgb(214,223,9)" rx="2" ry="2" />
<text  x="864.79" y="303.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (101,010,100 samples, 0.02%)</title><rect x="458.3" y="709" width="0.2" height="15.0" fill="rgb(239,41,12)" rx="2" ry="2" />
<text  x="461.28" y="719.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (111,111,110 samples, 0.02%)</title><rect x="712.1" y="437" width="0.2" height="15.0" fill="rgb(216,109,40)" rx="2" ry="2" />
<text  x="715.06" y="447.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::operator[] (1,949,494,930 samples, 0.31%)</title><rect x="794.4" y="405" width="3.6" height="15.0" fill="rgb(252,159,33)" rx="2" ry="2" />
<text  x="797.43" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (212,121,210 samples, 0.03%)</title><rect x="889.3" y="309" width="0.4" height="15.0" fill="rgb(247,105,8)" rx="2" ry="2" />
<text  x="892.34" y="319.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (104,343,433,300 samples, 16.33%)</title><rect x="562.0" y="773" width="192.7" height="15.0" fill="rgb(229,189,17)" rx="2" ry="2" />
<text  x="565.04" y="783.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>rocksdb::CompactionIterator::PrepareOutput@plt (90,909,090 samples, 0.01%)</title><rect x="1003.9" y="501" width="0.2" height="15.0" fill="rgb(254,221,0)" rx="2" ry="2" />
<text  x="1006.92" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WritableFileWriter, std::default_delete&lt;rocksdb::WritableFileWriter&gt; &gt;::operator (80,808,080 samples, 0.01%)</title><rect x="45.7" y="661" width="0.2" height="15.0" fill="rgb(245,213,4)" rx="2" ry="2" />
<text  x="48.70" y="671.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::CompactionOutputs::Output*, std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt; &gt;::__normal_iterator (222,222,220 samples, 0.03%)</title><rect x="1101.9" y="437" width="0.4" height="15.0" fill="rgb(245,96,45)" rx="2" ry="2" />
<text  x="1104.92" y="447.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count@plt (111,111,110 samples, 0.02%)</title><rect x="269.0" y="629" width="0.3" height="15.0" fill="rgb(239,130,6)" rx="2" ry="2" />
<text  x="272.05" y="639.5" ></text>
</g>
<g >
<title>[unknown] (101,010,100 samples, 0.02%)</title><rect x="1180.1" y="821" width="0.1" height="15.0" fill="rgb(209,120,11)" rx="2" ry="2" />
<text  x="1183.06" y="831.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::FlushBlockPolicy*, false&gt;::_M_head@plt (101,010,100 samples, 0.02%)</title><rect x="619.0" y="357" width="0.2" height="15.0" fill="rgb(221,82,30)" rx="2" ry="2" />
<text  x="622.01" y="367.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::get_offset (353,535,350 samples, 0.06%)</title><rect x="1030.9" y="453" width="0.6" height="15.0" fill="rgb(247,191,49)" rx="2" ry="2" />
<text  x="1033.86" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (90,909,090 samples, 0.01%)</title><rect x="686.6" y="373" width="0.2" height="15.0" fill="rgb(238,222,10)" rx="2" ry="2" />
<text  x="689.59" y="383.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Valid (454,545,450 samples, 0.07%)</title><rect x="782.5" y="357" width="0.8" height="15.0" fill="rgb(206,81,0)" rx="2" ry="2" />
<text  x="785.48" y="367.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (555,555,550 samples, 0.09%)</title><rect x="952.2" y="421" width="1.0" height="15.0" fill="rgb(251,12,27)" rx="2" ry="2" />
<text  x="955.20" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (323,232,320 samples, 0.05%)</title><rect x="148.5" y="629" width="0.6" height="15.0" fill="rgb(226,163,50)" rx="2" ry="2" />
<text  x="151.48" y="639.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (70,707,070 samples, 0.01%)</title><rect x="811.9" y="405" width="0.2" height="15.0" fill="rgb(232,87,20)" rx="2" ry="2" />
<text  x="814.95" y="415.5" ></text>
</g>
<g >
<title>XXH3_hashLong_internal_loop (181,818,180 samples, 0.03%)</title><rect x="863.1" y="165" width="0.3" height="15.0" fill="rgb(234,82,30)" rx="2" ry="2" />
<text  x="866.08" y="175.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::IOStatus (101,010,100 samples, 0.02%)</title><rect x="1026.1" y="373" width="0.2" height="15.0" fill="rgb(230,93,41)" rx="2" ry="2" />
<text  x="1029.14" y="383.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatch::Put (90,909,090 samples, 0.01%)</title><rect x="481.3" y="773" width="0.2" height="15.0" fill="rgb(219,101,54)" rx="2" ry="2" />
<text  x="484.29" y="783.5" ></text>
</g>
<g >
<title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (232,323,230 samples, 0.04%)</title><rect x="129.9" y="549" width="0.5" height="15.0" fill="rgb(239,150,38)" rx="2" ry="2" />
<text  x="132.94" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (353,535,350 samples, 0.06%)</title><rect x="893.9" y="405" width="0.7" height="15.0" fill="rgb(248,213,35)" rx="2" ry="2" />
<text  x="896.91" y="415.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Valid (80,808,080 samples, 0.01%)</title><rect x="932.6" y="469" width="0.2" height="15.0" fill="rgb(241,182,37)" rx="2" ry="2" />
<text  x="935.63" y="479.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::MemTable*, 8ul&gt;::~autovector (181,818,180 samples, 0.03%)</title><rect x="30.5" y="709" width="0.4" height="15.0" fill="rgb(207,114,54)" rx="2" ry="2" />
<text  x="33.54" y="719.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (1,111,111,100 samples, 0.17%)</title><rect x="736.4" y="389" width="2.0" height="15.0" fill="rgb(245,76,18)" rx="2" ry="2" />
<text  x="739.39" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (60,606,060 samples, 0.01%)</title><rect x="49.5" y="661" width="0.2" height="15.0" fill="rgb(242,74,48)" rx="2" ry="2" />
<text  x="52.54" y="671.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::EstimateSizeAfterKV (686,868,680 samples, 0.11%)</title><rect x="1051.6" y="421" width="1.2" height="15.0" fill="rgb(226,30,28)" rx="2" ry="2" />
<text  x="1054.58" y="431.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (272,727,270 samples, 0.04%)</title><rect x="818.2" y="405" width="0.5" height="15.0" fill="rgb(248,95,35)" rx="2" ry="2" />
<text  x="821.16" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (60,606,060 samples, 0.01%)</title><rect x="651.4" y="405" width="0.1" height="15.0" fill="rgb(253,78,50)" rx="2" ry="2" />
<text  x="654.39" y="415.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="883.7" y="341" width="0.2" height="15.0" fill="rgb(241,221,13)" rx="2" ry="2" />
<text  x="886.74" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::operator (101,010,100 samples, 0.02%)</title><rect x="851.6" y="389" width="0.2" height="15.0" fill="rgb(214,41,46)" rx="2" ry="2" />
<text  x="854.60" y="399.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::IsKeyPinned (414,141,410 samples, 0.06%)</title><rect x="981.7" y="469" width="0.7" height="15.0" fill="rgb(245,11,29)" rx="2" ry="2" />
<text  x="984.65" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (242,424,240 samples, 0.04%)</title><rect x="854.7" y="325" width="0.5" height="15.0" fill="rgb(208,61,25)" rx="2" ry="2" />
<text  x="857.74" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SstPartitioner, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::get (1,434,343,420 samples, 0.22%)</title><rect x="1097.0" y="437" width="2.6" height="15.0" fill="rgb(248,85,26)" rx="2" ry="2" />
<text  x="1099.98" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt;::__normal_iterator (161,616,160 samples, 0.03%)</title><rect x="610.3" y="405" width="0.3" height="15.0" fill="rgb(224,136,48)" rx="2" ry="2" />
<text  x="613.28" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (323,232,320 samples, 0.05%)</title><rect x="543.0" y="789" width="0.6" height="15.0" fill="rgb(239,193,38)" rx="2" ry="2" />
<text  x="545.96" y="799.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (90,909,090 samples, 0.01%)</title><rect x="147.8" y="613" width="0.1" height="15.0" fill="rgb(227,140,54)" rx="2" ry="2" />
<text  x="150.77" y="623.5" ></text>
</g>
<g >
<title>XXH3_hashLong_64b_internal (222,222,220 samples, 0.03%)</title><rect x="863.1" y="181" width="0.4" height="15.0" fill="rgb(220,152,36)" rx="2" ry="2" />
<text  x="866.08" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_lower_bound (282,828,280 samples, 0.04%)</title><rect x="947.4" y="421" width="0.5" height="15.0" fill="rgb(254,47,9)" rx="2" ry="2" />
<text  x="950.37" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (282,828,280 samples, 0.04%)</title><rect x="827.6" y="213" width="0.5" height="15.0" fill="rgb(231,93,37)" rx="2" ry="2" />
<text  x="830.56" y="223.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::AllocateKey (1,555,555,540 samples, 0.24%)</title><rect x="68.2" y="613" width="2.9" height="15.0" fill="rgb(242,227,54)" rx="2" ry="2" />
<text  x="71.21" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::operator bool (90,909,090 samples, 0.01%)</title><rect x="32.1" y="661" width="0.2" height="15.0" fill="rgb(252,73,5)" rx="2" ry="2" />
<text  x="35.14" y="671.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (70,707,070 samples, 0.01%)</title><rect x="629.5" y="373" width="0.1" height="15.0" fill="rgb(241,121,3)" rx="2" ry="2" />
<text  x="632.49" y="383.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::SkipListRep::Iterator::Valid (141,414,140 samples, 0.02%)</title><rect x="629.0" y="389" width="0.3" height="15.0" fill="rgb(221,39,15)" rx="2" ry="2" />
<text  x="632.02" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::IntTblPropCollector*, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::_M_head@plt (70,707,070 samples, 0.01%)</title><rect x="1065.8" y="373" width="0.1" height="15.0" fill="rgb(241,172,10)" rx="2" ry="2" />
<text  x="1068.76" y="383.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::StashHeight (70,707,070 samples, 0.01%)</title><rect x="70.6" y="597" width="0.2" height="15.0" fill="rgb(207,139,22)" rx="2" ry="2" />
<text  x="73.64" y="607.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (343,434,340 samples, 0.05%)</title><rect x="1128.2" y="437" width="0.6" height="15.0" fill="rgb(218,109,21)" rx="2" ry="2" />
<text  x="1131.20" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (224,373,735,130 samples, 35.11%)</title><rect x="765.1" y="597" width="414.3" height="15.0" fill="rgb(219,158,20)" rx="2" ry="2" />
<text  x="768.11" y="607.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;::_Rb_tree_iterator (111,111,110 samples, 0.02%)</title><rect x="656.6" y="357" width="0.2" height="15.0" fill="rgb(234,99,17)" rx="2" ry="2" />
<text  x="659.57" y="367.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::TableBuilder*, false&gt;::_M_head@plt (181,818,180 samples, 0.03%)</title><rect x="1088.1" y="341" width="0.4" height="15.0" fill="rgb(250,76,21)" rx="2" ry="2" />
<text  x="1091.12" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (404,040,400 samples, 0.06%)</title><rect x="889.0" y="341" width="0.7" height="15.0" fill="rgb(241,161,40)" rx="2" ry="2" />
<text  x="891.98" y="351.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (323,232,320 samples, 0.05%)</title><rect x="44.5" y="533" width="0.5" height="15.0" fill="rgb(245,214,50)" rx="2" ry="2" />
<text  x="47.45" y="543.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (222,222,220 samples, 0.03%)</title><rect x="887.5" y="293" width="0.4" height="15.0" fill="rgb(246,183,40)" rx="2" ry="2" />
<text  x="890.46" y="303.5" ></text>
</g>
<g >
<title>rocksdb::ReadRecordFromWriteBatch (646,464,640 samples, 0.10%)</title><rect x="145.9" y="677" width="1.2" height="15.0" fill="rgb(213,186,26)" rx="2" ry="2" />
<text  x="148.88" y="687.5" ></text>
</g>
<g >
<title>std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (595,959,590 samples, 0.09%)</title><rect x="498.6" y="741" width="1.1" height="15.0" fill="rgb(235,100,5)" rx="2" ry="2" />
<text  x="501.57" y="751.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey (191,919,190 samples, 0.03%)</title><rect x="90.1" y="517" width="0.3" height="15.0" fill="rgb(223,60,17)" rx="2" ry="2" />
<text  x="93.06" y="527.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (373,737,370 samples, 0.06%)</title><rect x="1143.5" y="421" width="0.7" height="15.0" fill="rgb(235,165,1)" rx="2" ry="2" />
<text  x="1146.52" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="1088.5" y="341" width="0.1" height="15.0" fill="rgb(234,24,28)" rx="2" ry="2" />
<text  x="1091.46" y="351.5" ></text>
</g>
<g >
<title>rocksdb::ParseInternalKey (242,424,240 samples, 0.04%)</title><rect x="996.0" y="485" width="0.4" height="15.0" fill="rgb(219,198,44)" rx="2" ry="2" />
<text  x="998.98" y="495.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (686,868,680 samples, 0.11%)</title><rect x="37.3" y="421" width="1.3" height="15.0" fill="rgb(250,49,30)" rx="2" ry="2" />
<text  x="40.29" y="431.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (232,323,230 samples, 0.04%)</title><rect x="934.7" y="437" width="0.4" height="15.0" fill="rgb(237,89,7)" rx="2" ry="2" />
<text  x="937.68" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (555,555,550 samples, 0.09%)</title><rect x="693.4" y="357" width="1.0" height="15.0" fill="rgb(207,176,47)" rx="2" ry="2" />
<text  x="696.39" y="367.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="261.7" y="645" width="0.2" height="15.0" fill="rgb(241,64,24)" rx="2" ry="2" />
<text  x="264.74" y="655.5" ></text>
</g>
<g >
<title>std::move&lt;bool&amp;&gt; (181,818,180 samples, 0.03%)</title><rect x="1132.9" y="453" width="0.3" height="15.0" fill="rgb(214,135,39)" rx="2" ry="2" />
<text  x="1135.89" y="463.5" ></text>
</g>
<g >
<title>rocksdb::FSWritableFilePtr::operator (131,313,130 samples, 0.02%)</title><rect x="41.2" y="645" width="0.2" height="15.0" fill="rgb(242,32,28)" rx="2" ry="2" />
<text  x="44.17" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::end (999,999,990 samples, 0.16%)</title><rect x="1106.6" y="453" width="1.8" height="15.0" fill="rgb(233,128,44)" rx="2" ry="2" />
<text  x="1109.59" y="463.5" ></text>
</g>
<g >
<title>std::forward&lt;bool*&gt; (80,808,080 samples, 0.01%)</title><rect x="1095.8" y="437" width="0.2" height="15.0" fill="rgb(245,152,50)" rx="2" ry="2" />
<text  x="1098.84" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::get (585,858,580 samples, 0.09%)</title><rect x="1168.8" y="501" width="1.1" height="15.0" fill="rgb(243,107,21)" rx="2" ry="2" />
<text  x="1171.83" y="511.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (4,818,181,770 samples, 0.75%)</title><rect x="108.3" y="485" width="8.9" height="15.0" fill="rgb(223,92,7)" rx="2" ry="2" />
<text  x="111.32" y="495.5" ></text>
</g>
<g >
<title>rocksdb::Slice::compare (242,424,240 samples, 0.04%)</title><rect x="117.2" y="485" width="0.5" height="15.0" fill="rgb(245,179,3)" rx="2" ry="2" />
<text  x="120.22" y="495.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (80,808,080 samples, 0.01%)</title><rect x="605.0" y="293" width="0.2" height="15.0" fill="rgb(215,139,11)" rx="2" ry="2" />
<text  x="608.02" y="303.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (60,606,060 samples, 0.01%)</title><rect x="1110.0" y="453" width="0.1" height="15.0" fill="rgb(213,107,40)" rx="2" ry="2" />
<text  x="1112.96" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="907.1" y="325" width="0.2" height="15.0" fill="rgb(237,139,19)" rx="2" ry="2" />
<text  x="910.08" y="335.5" ></text>
</g>
<g >
<title>new_sync_read (171,717,170 samples, 0.03%)</title><rect x="827.7" y="149" width="0.3" height="15.0" fill="rgb(215,151,20)" rx="2" ry="2" />
<text  x="830.65" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt;::end (141,414,140 samples, 0.02%)</title><rect x="1067.3" y="437" width="0.3" height="15.0" fill="rgb(232,14,31)" rx="2" ry="2" />
<text  x="1070.32" y="447.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::Initialize (181,818,180 samples, 0.03%)</title><rect x="825.6" y="261" width="0.3" height="15.0" fill="rgb(206,163,32)" rx="2" ry="2" />
<text  x="828.60" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (1,111,111,100 samples, 0.17%)</title><rect x="908.5" y="373" width="2.1" height="15.0" fill="rgb(218,194,54)" rx="2" ry="2" />
<text  x="911.53" y="383.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::HasBuilder (434,343,430 samples, 0.07%)</title><rect x="1083.7" y="469" width="0.8" height="15.0" fill="rgb(242,215,17)" rx="2" ry="2" />
<text  x="1086.70" y="479.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;29ul&gt;@plt (70,707,070 samples, 0.01%)</title><rect x="706.7" y="437" width="0.1" height="15.0" fill="rgb(231,157,14)" rx="2" ry="2" />
<text  x="709.66" y="447.5" ></text>
</g>
<g >
<title>rocksdb::GetVarint32Ptr@plt (70,707,070 samples, 0.01%)</title><rect x="129.2" y="565" width="0.1" height="15.0" fill="rgb(242,119,45)" rx="2" ry="2" />
<text  x="132.15" y="575.5" ></text>
</g>
<g >
<title>rocksdb::Cleanable::Reset (161,616,160 samples, 0.03%)</title><rect x="654.4" y="405" width="0.3" height="15.0" fill="rgb(246,53,15)" rx="2" ry="2" />
<text  x="657.35" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (939,393,930 samples, 0.15%)</title><rect x="1137.4" y="405" width="1.7" height="15.0" fill="rgb(224,138,21)" rx="2" ry="2" />
<text  x="1140.36" y="415.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatchInternal::Put (1,696,969,680 samples, 0.27%)</title><rect x="468.8" y="741" width="3.2" height="15.0" fill="rgb(252,58,33)" rx="2" ry="2" />
<text  x="471.84" y="751.5" ></text>
</g>
<g >
<title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (202,020,200 samples, 0.03%)</title><rect x="784.0" y="373" width="0.3" height="15.0" fill="rgb(252,88,38)" rx="2" ry="2" />
<text  x="786.97" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (202,020,200 samples, 0.03%)</title><rect x="955.1" y="405" width="0.4" height="15.0" fill="rgb(208,163,44)" rx="2" ry="2" />
<text  x="958.09" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::empty (70,707,070 samples, 0.01%)</title><rect x="1053.5" y="437" width="0.1" height="15.0" fill="rgb(218,128,26)" rx="2" ry="2" />
<text  x="1056.52" y="447.5" ></text>
</g>
<g >
<title>rocksdb::lru_cache::LRUCacheShard::Release (151,515,150 samples, 0.02%)</title><rect x="869.2" y="229" width="0.3" height="15.0" fill="rgb(245,98,22)" rx="2" ry="2" />
<text  x="872.23" y="239.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (141,414,140 samples, 0.02%)</title><rect x="901.2" y="277" width="0.2" height="15.0" fill="rgb(244,97,0)" rx="2" ry="2" />
<text  x="904.16" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::SstPartitioner*, false&gt;::_M_head (414,141,410 samples, 0.06%)</title><rect x="1098.5" y="373" width="0.8" height="15.0" fill="rgb(236,202,35)" rx="2" ry="2" />
<text  x="1101.51" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_lower_bound (232,323,230 samples, 0.04%)</title><rect x="948.6" y="405" width="0.4" height="15.0" fill="rgb(206,212,47)" rx="2" ry="2" />
<text  x="951.56" y="415.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid (232,323,230 samples, 0.04%)</title><rect x="1086.3" y="453" width="0.4" height="15.0" fill="rgb(205,95,9)" rx="2" ry="2" />
<text  x="1089.25" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FileChecksumGenerator, std::default_delete&lt;rocksdb::FileChecksumGenerator&gt; &gt;::operator bool (111,111,110 samples, 0.02%)</title><rect x="42.8" y="613" width="0.2" height="15.0" fill="rgb(217,124,2)" rx="2" ry="2" />
<text  x="45.79" y="623.5" ></text>
</g>
<g >
<title>__libc_pread (373,737,370 samples, 0.06%)</title><rect x="864.4" y="261" width="0.7" height="15.0" fill="rgb(239,127,48)" rx="2" ry="2" />
<text  x="867.36" y="271.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (444,444,440 samples, 0.07%)</title><rect x="971.0" y="421" width="0.8" height="15.0" fill="rgb(212,67,15)" rx="2" ry="2" />
<text  x="973.98" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (272,727,270 samples, 0.04%)</title><rect x="497.7" y="741" width="0.5" height="15.0" fill="rgb(230,0,40)" rx="2" ry="2" />
<text  x="500.73" y="751.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (90,909,090 samples, 0.01%)</title><rect x="890.0" y="325" width="0.2" height="15.0" fill="rgb(229,126,54)" rx="2" ry="2" />
<text  x="893.03" y="335.5" ></text>
</g>
<g >
<title>std::make_tuple&lt;rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;&gt; (1,242,424,230 samples, 0.19%)</title><rect x="466.5" y="725" width="2.3" height="15.0" fill="rgb(215,74,34)" rx="2" ry="2" />
<text  x="469.47" y="735.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (60,606,060 samples, 0.01%)</title><rect x="184.2" y="709" width="0.1" height="15.0" fill="rgb(235,18,5)" rx="2" ry="2" />
<text  x="187.23" y="719.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (111,111,110 samples, 0.02%)</title><rect x="889.4" y="293" width="0.2" height="15.0" fill="rgb(250,66,24)" rx="2" ry="2" />
<text  x="892.43" y="303.5" ></text>
</g>
<g >
<title>rocksdb::GetLengthPrefixedSlice (1,898,989,880 samples, 0.30%)</title><rect x="683.2" y="389" width="3.6" height="15.0" fill="rgb(226,12,52)" rx="2" ry="2" />
<text  x="686.25" y="399.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::value (2,767,676,740 samples, 0.43%)</title><rect x="961.9" y="469" width="5.1" height="15.0" fill="rgb(215,167,20)" rx="2" ry="2" />
<text  x="964.86" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (171,717,170 samples, 0.03%)</title><rect x="1129.4" y="453" width="0.4" height="15.0" fill="rgb(224,12,34)" rx="2" ry="2" />
<text  x="1132.44" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (202,020,200 samples, 0.03%)</title><rect x="456.6" y="677" width="0.4" height="15.0" fill="rgb(218,120,44)" rx="2" ry="2" />
<text  x="459.58" y="687.5" ></text>
</g>
<g >
<title>std::move&lt;bool&amp;&gt; (80,808,080 samples, 0.01%)</title><rect x="1147.2" y="469" width="0.1" height="15.0" fill="rgb(248,62,2)" rx="2" ry="2" />
<text  x="1150.19" y="479.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="1095.3" y="453" width="0.3" height="15.0" fill="rgb(237,138,15)" rx="2" ry="2" />
<text  x="1098.34" y="463.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::IsPausingManualCompaction (1,363,636,350 samples, 0.21%)</title><rect x="926.7" y="469" width="2.5" height="15.0" fill="rgb(219,201,7)" rx="2" ry="2" />
<text  x="929.68" y="479.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (60,606,060 samples, 0.01%)</title><rect x="456.7" y="613" width="0.1" height="15.0" fill="rgb(215,16,46)" rx="2" ry="2" />
<text  x="459.67" y="623.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid@plt (60,606,060 samples, 0.01%)</title><rect x="699.4" y="437" width="0.1" height="15.0" fill="rgb(205,25,34)" rx="2" ry="2" />
<text  x="702.42" y="447.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::value (212,121,210 samples, 0.03%)</title><rect x="966.5" y="453" width="0.4" height="15.0" fill="rgb(242,177,36)" rx="2" ry="2" />
<text  x="969.54" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;::_M_valptr (80,808,080 samples, 0.01%)</title><rect x="64.0" y="581" width="0.1" height="15.0" fill="rgb(213,163,8)" rx="2" ry="2" />
<text  x="66.96" y="591.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::SeekToFirstImpl (60,606,060 samples, 0.01%)</title><rect x="870.2" y="341" width="0.1" height="15.0" fill="rgb(231,64,24)" rx="2" ry="2" />
<text  x="873.18" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (70,707,070 samples, 0.01%)</title><rect x="1010.1" y="437" width="0.1" height="15.0" fill="rgb(236,67,31)" rx="2" ry="2" />
<text  x="1013.06" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (313,131,310 samples, 0.05%)</title><rect x="901.6" y="309" width="0.6" height="15.0" fill="rgb(247,133,43)" rx="2" ry="2" />
<text  x="904.63" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::MemTable* const&amp;&gt; (60,606,060 samples, 0.01%)</title><rect x="62.6" y="485" width="0.1" height="15.0" fill="rgb(211,131,54)" rx="2" ry="2" />
<text  x="65.60" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (808,080,800 samples, 0.13%)</title><rect x="887.3" y="341" width="1.5" height="15.0" fill="rgb(229,228,47)" rx="2" ry="2" />
<text  x="890.31" y="351.5" ></text>
</g>
<g >
<title>rocksdb::lru_cache::LRUCacheShard::Insert (272,727,270 samples, 0.04%)</title><rect x="830.8" y="261" width="0.5" height="15.0" fill="rgb(210,1,20)" rx="2" ry="2" />
<text  x="833.77" y="271.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (191,919,190 samples, 0.03%)</title><rect x="971.9" y="437" width="0.4" height="15.0" fill="rgb(226,71,39)" rx="2" ry="2" />
<text  x="974.91" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__to_chars_len&lt;unsigned long&gt; (282,828,280 samples, 0.04%)</title><rect x="483.8" y="789" width="0.5" height="15.0" fill="rgb(213,205,8)" rx="2" ry="2" />
<text  x="486.79" y="799.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (343,434,340 samples, 0.05%)</title><rect x="864.4" y="213" width="0.6" height="15.0" fill="rgb(205,160,36)" rx="2" ry="2" />
<text  x="867.38" y="223.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (60,606,060 samples, 0.01%)</title><rect x="168.2" y="693" width="0.1" height="15.0" fill="rgb(240,199,47)" rx="2" ry="2" />
<text  x="171.23" y="703.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::Append (1,898,989,880 samples, 0.30%)</title><rect x="1025.1" y="389" width="3.5" height="15.0" fill="rgb(254,64,47)" rx="2" ry="2" />
<text  x="1028.07" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_Rb_tree_impl&lt;std::less&lt;rocksdb::MemTable*&gt;, true&gt;::_Rb_tree_impl (60,606,060 samples, 0.01%)</title><rect x="60.6" y="597" width="0.2" height="15.0" fill="rgb(205,137,36)" rx="2" ry="2" />
<text  x="63.64" y="607.5" ></text>
</g>
<g >
<title>rocksdb::port::AsmVolatilePause (1,090,909,080 samples, 0.17%)</title><rect x="181.9" y="709" width="2.1" height="15.0" fill="rgb(246,149,43)" rx="2" ry="2" />
<text  x="184.94" y="719.5" ></text>
</g>
<g >
<title>__memset_evex_unaligned_erms (171,717,170 samples, 0.03%)</title><rect x="603.9" y="373" width="0.4" height="15.0" fill="rgb(236,198,30)" rx="2" ry="2" />
<text  x="606.94" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (838,383,830 samples, 0.13%)</title><rect x="887.3" y="357" width="1.5" height="15.0" fill="rgb(210,41,32)" rx="2" ry="2" />
<text  x="890.29" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (696,969,690 samples, 0.11%)</title><rect x="900.2" y="325" width="1.3" height="15.0" fill="rgb(224,128,23)" rx="2" ry="2" />
<text  x="903.18" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_valptr (171,717,170 samples, 0.03%)</title><rect x="486.8" y="741" width="0.3" height="15.0" fill="rgb(217,60,12)" rx="2" ry="2" />
<text  x="489.82" y="751.5" ></text>
</g>
<g >
<title>rocksdb::Status::MustCheck (333,333,330 samples, 0.05%)</title><rect x="727.5" y="453" width="0.6" height="15.0" fill="rgb(226,188,13)" rx="2" ry="2" />
<text  x="730.53" y="463.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;29ul&gt; (686,868,680 samples, 0.11%)</title><rect x="689.9" y="421" width="1.3" height="15.0" fill="rgb(228,195,37)" rx="2" ry="2" />
<text  x="692.91" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (303,030,300 samples, 0.05%)</title><rect x="854.6" y="341" width="0.6" height="15.0" fill="rgb(217,202,3)" rx="2" ry="2" />
<text  x="857.65" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::operator bool (222,222,220 samples, 0.03%)</title><rect x="471.4" y="709" width="0.4" height="15.0" fill="rgb(210,17,37)" rx="2" ry="2" />
<text  x="474.37" y="719.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::FilterBlockBuilder*, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="1073.4" y="405" width="0.2" height="15.0" fill="rgb(226,121,3)" rx="2" ry="2" />
<text  x="1076.42" y="415.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*&gt;::load (131,313,130 samples, 0.02%)</title><rect x="125.2" y="549" width="0.2" height="15.0" fill="rgb(223,229,9)" rx="2" ry="2" />
<text  x="128.18" y="559.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (282,828,280 samples, 0.04%)</title><rect x="800.1" y="389" width="0.5" height="15.0" fill="rgb(253,145,2)" rx="2" ry="2" />
<text  x="803.10" y="399.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (232,323,230 samples, 0.04%)</title><rect x="820.5" y="373" width="0.5" height="15.0" fill="rgb(216,185,20)" rx="2" ry="2" />
<text  x="823.53" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="888.6" y="293" width="0.2" height="15.0" fill="rgb(233,160,51)" rx="2" ry="2" />
<text  x="891.65" y="303.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;40ul&gt; (111,111,110 samples, 0.02%)</title><rect x="203.7" y="709" width="0.2" height="15.0" fill="rgb(252,32,25)" rx="2" ry="2" />
<text  x="206.74" y="719.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="841.0" y="293" width="0.2" height="15.0" fill="rgb(242,66,45)" rx="2" ry="2" />
<text  x="843.97" y="303.5" ></text>
</g>
<g >
<title>rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper (104,343,433,300 samples, 16.33%)</title><rect x="562.0" y="741" width="192.7" height="15.0" fill="rgb(213,162,43)" rx="2" ry="2" />
<text  x="565.04" y="751.5" >rocksdb::ThreadPoolImpl::..</text>
</g>
<g >
<title>std::map&lt;rocksdb::MemTable*, rocksdb::MemTablePostProcessInfo, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::lower_bound (242,424,240 samples, 0.04%)</title><rect x="66.1" y="613" width="0.4" height="15.0" fill="rgb(243,124,52)" rx="2" ry="2" />
<text  x="69.09" y="623.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (90,909,090 samples, 0.01%)</title><rect x="844.2" y="277" width="0.2" height="15.0" fill="rgb(247,80,16)" rx="2" ry="2" />
<text  x="847.20" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (49,919,191,420 samples, 7.81%)</title><rect x="329.1" y="629" width="92.2" height="15.0" fill="rgb(205,218,4)" rx="2" ry="2" />
<text  x="332.15" y="639.5" >__x64_sys_s..</text>
</g>
<g >
<title>TLS wrapper function for rocksdb::iostats_context (494,949,490 samples, 0.08%)</title><rect x="564.4" y="453" width="1.0" height="15.0" fill="rgb(245,134,26)" rx="2" ry="2" />
<text  x="567.45" y="463.5" ></text>
</g>
<g >
<title>get_page_from_freelist (141,414,140 samples, 0.02%)</title><rect x="572.8" y="53" width="0.2" height="15.0" fill="rgb(235,111,32)" rx="2" ry="2" />
<text  x="575.79" y="63.5" ></text>
</g>
<g >
<title>rocksdb::Status::IsManualCompactionPaused (323,232,320 samples, 0.05%)</title><rect x="1005.8" y="501" width="0.6" height="15.0" fill="rgb(243,199,31)" rx="2" ry="2" />
<text  x="1008.81" y="511.5" ></text>
</g>
<g >
<title>rocksdb::GetVarint32 (121,212,120 samples, 0.02%)</title><rect x="146.1" y="645" width="0.3" height="15.0" fill="rgb(215,19,41)" rx="2" ry="2" />
<text  x="149.13" y="655.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (414,141,410 samples, 0.06%)</title><rect x="889.0" y="357" width="0.7" height="15.0" fill="rgb(212,59,35)" rx="2" ry="2" />
<text  x="891.98" y="367.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::SetInternalKey (878,787,870 samples, 0.14%)</title><rect x="647.2" y="405" width="1.7" height="15.0" fill="rgb(223,128,21)" rx="2" ry="2" />
<text  x="650.23" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (60,606,060 samples, 0.01%)</title><rect x="1120.5" y="453" width="0.1" height="15.0" fill="rgb(231,16,0)" rx="2" ry="2" />
<text  x="1123.54" y="463.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (224,373,735,130 samples, 35.11%)</title><rect x="765.1" y="629" width="414.3" height="15.0" fill="rgb(222,176,27)" rx="2" ry="2" />
<text  x="768.11" y="639.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>rocksdb::IterKey::IsKeyPinned (111,111,110 samples, 0.02%)</title><rect x="874.8" y="325" width="0.2" height="15.0" fill="rgb(208,0,29)" rx="2" ry="2" />
<text  x="877.75" y="335.5" ></text>
</g>
<g >
<title>std::chrono::operator&gt;=&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (7,727,272,650 samples, 1.21%)</title><rect x="276.5" y="693" width="14.2" height="15.0" fill="rgb(219,109,13)" rx="2" ry="2" />
<text  x="279.45" y="703.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::downheap (90,909,090 samples, 0.01%)</title><rect x="775.5" y="437" width="0.1" height="15.0" fill="rgb(209,30,1)" rx="2" ry="2" />
<text  x="778.46" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (1,151,515,140 samples, 0.18%)</title><rect x="738.4" y="389" width="2.2" height="15.0" fill="rgb(247,81,7)" rx="2" ry="2" />
<text  x="741.44" y="399.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (212,121,210 samples, 0.03%)</title><rect x="269.5" y="693" width="0.4" height="15.0" fill="rgb(209,208,45)" rx="2" ry="2" />
<text  x="272.53" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (171,717,170 samples, 0.03%)</title><rect x="142.4" y="613" width="0.3" height="15.0" fill="rgb(247,44,9)" rx="2" ry="2" />
<text  x="145.38" y="623.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::Key (60,606,060 samples, 0.01%)</title><rect x="136.9" y="597" width="0.1" height="15.0" fill="rgb(205,172,24)" rx="2" ry="2" />
<text  x="139.89" y="607.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::IOStatus (80,808,080 samples, 0.01%)</title><rect x="32.7" y="693" width="0.1" height="15.0" fill="rgb(230,90,19)" rx="2" ry="2" />
<text  x="35.70" y="703.5" ></text>
</g>
<g >
<title>rocksdb::MemTableIterator::Valid (555,555,550 samples, 0.09%)</title><rect x="668.4" y="405" width="1.0" height="15.0" fill="rgb(241,28,25)" rx="2" ry="2" />
<text  x="671.40" y="415.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::IsPausingManualCompaction (131,313,130 samples, 0.02%)</title><rect x="916.5" y="485" width="0.3" height="15.0" fill="rgb(252,24,6)" rx="2" ry="2" />
<text  x="919.52" y="495.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="1150.5" y="389" width="0.2" height="15.0" fill="rgb(236,190,19)" rx="2" ry="2" />
<text  x="1153.48" y="399.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;33ul&gt; (1,131,313,120 samples, 0.18%)</title><rect x="723.7" y="437" width="2.1" height="15.0" fill="rgb(254,42,45)" rx="2" ry="2" />
<text  x="726.70" y="447.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::CurrentSizeEstimate (373,737,370 samples, 0.06%)</title><rect x="592.4" y="421" width="0.7" height="15.0" fill="rgb(253,92,24)" rx="2" ry="2" />
<text  x="595.37" y="431.5" ></text>
</g>
<g >
<title>std::move&lt;rocksdb::Status::SubCode&amp;&gt; (80,808,080 samples, 0.01%)</title><rect x="749.8" y="453" width="0.2" height="15.0" fill="rgb(205,160,35)" rx="2" ry="2" />
<text  x="752.82" y="463.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::front (1,474,747,460 samples, 0.23%)</title><rect x="803.0" y="421" width="2.7" height="15.0" fill="rgb(224,99,15)" rx="2" ry="2" />
<text  x="806.00" y="431.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (161,616,160 samples, 0.03%)</title><rect x="580.3" y="357" width="0.3" height="15.0" fill="rgb(211,21,1)" rx="2" ry="2" />
<text  x="583.28" y="367.5" ></text>
</g>
<g >
<title>generic_perform_write (808,080,800 samples, 0.13%)</title><rect x="572.1" y="165" width="1.5" height="15.0" fill="rgb(249,123,31)" rx="2" ry="2" />
<text  x="575.13" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt;::empty@plt (101,010,100 samples, 0.02%)</title><rect x="1159.8" y="469" width="0.2" height="15.0" fill="rgb(207,132,28)" rx="2" ry="2" />
<text  x="1162.84" y="479.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (939,393,930 samples, 0.15%)</title><rect x="134.1" y="533" width="1.8" height="15.0" fill="rgb(210,199,5)" rx="2" ry="2" />
<text  x="137.13" y="543.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::WriteToWAL (7,242,424,170 samples, 1.13%)</title><rect x="32.7" y="709" width="13.4" height="15.0" fill="rgb(222,191,10)" rx="2" ry="2" />
<text  x="35.68" y="719.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (104,343,433,300 samples, 16.33%)</title><rect x="562.0" y="645" width="192.7" height="15.0" fill="rgb(229,24,54)" rx="2" ry="2" />
<text  x="565.04" y="655.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>rocksdb::Slice::data (70,707,070 samples, 0.01%)</title><rect x="1048.1" y="421" width="0.2" height="15.0" fill="rgb(223,97,15)" rx="2" ry="2" />
<text  x="1051.13" y="431.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::IndexBuilder*, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt; (303,030,300 samples, 0.05%)</title><rect x="620.3" y="373" width="0.6" height="15.0" fill="rgb(232,6,13)" rx="2" ry="2" />
<text  x="623.35" y="383.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::IOStatus (60,606,060 samples, 0.01%)</title><rect x="35.3" y="645" width="0.1" height="15.0" fill="rgb(237,6,42)" rx="2" ry="2" />
<text  x="38.33" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (313,131,310 samples, 0.05%)</title><rect x="580.0" y="421" width="0.6" height="15.0" fill="rgb(205,190,0)" rx="2" ry="2" />
<text  x="583.00" y="431.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::value (2,333,333,310 samples, 0.37%)</title><rect x="962.2" y="453" width="4.3" height="15.0" fill="rgb(251,51,8)" rx="2" ry="2" />
<text  x="965.23" y="463.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::Flush (3,363,636,330 samples, 0.53%)</title><rect x="33.8" y="677" width="6.2" height="15.0" fill="rgb(228,140,14)" rx="2" ry="2" />
<text  x="36.76" y="687.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (1,545,454,530 samples, 0.24%)</title><rect x="852.6" y="357" width="2.8" height="15.0" fill="rgb(251,73,45)" rx="2" ry="2" />
<text  x="855.56" y="367.5" ></text>
</g>
<g >
<title>std::forward&lt;std::default_delete&lt;char const []&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="1141.3" y="405" width="0.2" height="15.0" fill="rgb(244,97,13)" rx="2" ry="2" />
<text  x="1144.32" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;::_Rb_tree_iterator (373,737,370 samples, 0.06%)</title><rect x="660.4" y="357" width="0.7" height="15.0" fill="rgb(238,84,3)" rx="2" ry="2" />
<text  x="663.40" y="367.5" ></text>
</g>
<g >
<title>filemap_fdatawrite_wbc (90,909,090 samples, 0.01%)</title><rect x="562.1" y="357" width="0.2" height="15.0" fill="rgb(249,74,18)" rx="2" ry="2" />
<text  x="565.12" y="367.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (151,515,150 samples, 0.02%)</title><rect x="910.1" y="277" width="0.3" height="15.0" fill="rgb(224,33,43)" rx="2" ry="2" />
<text  x="913.14" y="287.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long&amp;&gt; (60,606,060 samples, 0.01%)</title><rect x="466.3" y="725" width="0.1" height="15.0" fill="rgb(206,95,52)" rx="2" ry="2" />
<text  x="469.32" y="735.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Next (9,030,302,940 samples, 1.41%)</title><rect x="860.5" y="405" width="16.7" height="15.0" fill="rgb(230,144,0)" rx="2" ry="2" />
<text  x="863.50" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (111,111,110 samples, 0.02%)</title><rect x="1042.9" y="437" width="0.2" height="15.0" fill="rgb(221,11,3)" rx="2" ry="2" />
<text  x="1045.92" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="854.4" y="229" width="0.2" height="15.0" fill="rgb(242,218,26)" rx="2" ry="2" />
<text  x="857.44" y="239.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (747,474,740 samples, 0.12%)</title><rect x="840.0" y="341" width="1.4" height="15.0" fill="rgb(245,173,20)" rx="2" ry="2" />
<text  x="843.04" y="351.5" ></text>
</g>
<g >
<title>std::atomic&lt;rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*&gt;::load (2,888,888,860 samples, 0.45%)</title><rect x="119.3" y="533" width="5.3" height="15.0" fill="rgb(240,127,42)" rx="2" ry="2" />
<text  x="122.27" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; const*, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; &gt;::__normal_iterator (252,525,250 samples, 0.04%)</title><rect x="601.8" y="421" width="0.4" height="15.0" fill="rgb(245,165,38)" rx="2" ry="2" />
<text  x="604.75" y="431.5" ></text>
</g>
<g >
<title>rocksdb::MemTable::KeyComparator::operator (171,717,170 samples, 0.03%)</title><rect x="124.9" y="549" width="0.3" height="15.0" fill="rgb(213,194,21)" rx="2" ry="2" />
<text  x="127.86" y="559.5" ></text>
</g>
<g >
<title>rocksdb::MemTableIterator::Valid (121,212,120 samples, 0.02%)</title><rect x="649.3" y="421" width="0.3" height="15.0" fill="rgb(247,85,6)" rx="2" ry="2" />
<text  x="652.34" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (202,020,200 samples, 0.03%)</title><rect x="652.5" y="309" width="0.4" height="15.0" fill="rgb(248,97,16)" rx="2" ry="2" />
<text  x="655.53" y="319.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (101,010,100 samples, 0.02%)</title><rect x="936.9" y="421" width="0.2" height="15.0" fill="rgb(206,75,20)" rx="2" ry="2" />
<text  x="939.88" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (888,888,880 samples, 0.14%)</title><rect x="1139.6" y="389" width="1.6" height="15.0" fill="rgb(248,178,9)" rx="2" ry="2" />
<text  x="1142.58" y="399.5" ></text>
</g>
<g >
<title>rocksdb::IndexValue::EncodeTo (70,707,070 samples, 0.01%)</title><rect x="611.3" y="421" width="0.1" height="15.0" fill="rgb(217,133,43)" rx="2" ry="2" />
<text  x="614.30" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (1,101,010,090 samples, 0.17%)</title><rect x="651.6" y="405" width="2.0" height="15.0" fill="rgb(246,92,27)" rx="2" ry="2" />
<text  x="654.59" y="415.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;char const []&gt;, true&gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="887.8" y="261" width="0.1" height="15.0" fill="rgb(227,15,3)" rx="2" ry="2" />
<text  x="890.75" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::get (141,414,140 samples, 0.02%)</title><rect x="912.4" y="389" width="0.3" height="15.0" fill="rgb(244,209,41)" rx="2" ry="2" />
<text  x="915.39" y="399.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (383,838,380 samples, 0.06%)</title><rect x="1063.3" y="437" width="0.7" height="15.0" fill="rgb(234,128,37)" rx="2" ry="2" />
<text  x="1066.31" y="447.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::GetInternalKey (212,121,210 samples, 0.03%)</title><rect x="833.5" y="325" width="0.4" height="15.0" fill="rgb(242,194,2)" rx="2" ry="2" />
<text  x="836.49" y="335.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (80,808,080 samples, 0.01%)</title><rect x="884.4" y="309" width="0.2" height="15.0" fill="rgb(230,29,32)" rx="2" ry="2" />
<text  x="887.41" y="319.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::CurrentSizeEstimate@plt (101,010,100 samples, 0.02%)</title><rect x="1046.0" y="453" width="0.2" height="15.0" fill="rgb(253,115,34)" rx="2" ry="2" />
<text  x="1049.00" y="463.5" ></text>
</g>
<g >
<title>rocksdb::VersionSet::GetColumnFamilySet (222,222,220 samples, 0.03%)</title><rect x="51.6" y="725" width="0.4" height="15.0" fill="rgb(206,64,37)" rx="2" ry="2" />
<text  x="54.60" y="735.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::TrimAppend (101,010,100 samples, 0.02%)</title><rect x="836.6" y="293" width="0.2" height="15.0" fill="rgb(211,114,37)" rx="2" ry="2" />
<text  x="839.57" y="303.5" ></text>
</g>
<g >
<title>alloc_pages (111,111,110 samples, 0.02%)</title><rect x="1027.0" y="101" width="0.2" height="15.0" fill="rgb(253,144,46)" rx="2" ry="2" />
<text  x="1030.00" y="111.5" ></text>
</g>
<g >
<title>rocksdb::WriteBatch::Put (6,767,676,700 samples, 1.06%)</title><rect x="464.1" y="757" width="12.5" height="15.0" fill="rgb(209,145,19)" rx="2" ry="2" />
<text  x="467.10" y="767.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (191,919,190 samples, 0.03%)</title><rect x="203.4" y="693" width="0.3" height="15.0" fill="rgb(252,116,40)" rx="2" ry="2" />
<text  x="206.39" y="703.5" ></text>
</g>
<g >
<title>__tls_get_addr (494,949,490 samples, 0.08%)</title><rect x="788.3" y="341" width="0.9" height="15.0" fill="rgb(252,202,21)" rx="2" ry="2" />
<text  x="791.32" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::lower_bound (1,191,919,180 samples, 0.19%)</title><rect x="658.9" y="373" width="2.2" height="15.0" fill="rgb(210,22,50)" rx="2" ry="2" />
<text  x="661.90" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (80,808,080 samples, 0.01%)</title><rect x="42.2" y="581" width="0.2" height="15.0" fill="rgb(215,79,0)" rx="2" ry="2" />
<text  x="45.23" y="591.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (80,808,080 samples, 0.01%)</title><rect x="896.6" y="293" width="0.1" height="15.0" fill="rgb(206,213,44)" rx="2" ry="2" />
<text  x="899.59" y="303.5" ></text>
</g>
<g >
<title>generic_perform_write (606,060,600 samples, 0.09%)</title><rect x="1026.6" y="181" width="1.1" height="15.0" fill="rgb(207,127,1)" rx="2" ry="2" />
<text  x="1029.60" y="191.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (111,111,110 samples, 0.02%)</title><rect x="1027.4" y="117" width="0.2" height="15.0" fill="rgb(247,66,27)" rx="2" ry="2" />
<text  x="1030.37" y="127.5" ></text>
</g>
<g >
<title>rocksdb::InternalKeyComparator::Compare (272,727,270 samples, 0.04%)</title><rect x="713.3" y="453" width="0.5" height="15.0" fill="rgb(230,221,0)" rx="2" ry="2" />
<text  x="716.28" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::_M_ptr (676,767,670 samples, 0.11%)</title><rect x="1064.9" y="405" width="1.2" height="15.0" fill="rgb(205,66,24)" rx="2" ry="2" />
<text  x="1067.90" y="415.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::NextAndGetResult (7,777,777,700 samples, 1.22%)</title><rect x="824.7" y="389" width="14.4" height="15.0" fill="rgb(243,215,40)" rx="2" ry="2" />
<text  x="827.69" y="399.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::IsParallelCompressionEnabled (70,707,070 samples, 0.01%)</title><rect x="1081.0" y="469" width="0.2" height="15.0" fill="rgb(230,45,43)" rx="2" ry="2" />
<text  x="1084.03" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (181,818,180 samples, 0.03%)</title><rect x="665.4" y="373" width="0.4" height="15.0" fill="rgb(217,72,23)" rx="2" ry="2" />
<text  x="668.41" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (161,616,160 samples, 0.03%)</title><rect x="1063.7" y="405" width="0.3" height="15.0" fill="rgb(214,89,29)" rx="2" ry="2" />
<text  x="1066.72" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (90,909,090 samples, 0.01%)</title><rect x="1039.8" y="421" width="0.2" height="15.0" fill="rgb(210,140,49)" rx="2" ry="2" />
<text  x="1042.81" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;*, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt; (414,141,410 samples, 0.06%)</title><rect x="891.8" y="357" width="0.8" height="15.0" fill="rgb(225,121,46)" rx="2" ry="2" />
<text  x="894.84" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::emplace_hint&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1,141,414,130 samples, 0.18%)</title><rect x="494.8" y="789" width="2.1" height="15.0" fill="rgb(223,122,53)" rx="2" ry="2" />
<text  x="497.80" y="799.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (60,606,060 samples, 0.01%)</title><rect x="467.8" y="629" width="0.1" height="15.0" fill="rgb(252,225,44)" rx="2" ry="2" />
<text  x="470.79" y="639.5" ></text>
</g>
<g >
<title>rocksdb::IsExtendedValueType (262,626,260 samples, 0.04%)</title><rect x="938.9" y="453" width="0.5" height="15.0" fill="rgb(214,153,50)" rx="2" ry="2" />
<text  x="941.94" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (232,323,230 samples, 0.04%)</title><rect x="1009.6" y="405" width="0.5" height="15.0" fill="rgb(225,31,50)" rx="2" ry="2" />
<text  x="1012.63" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (202,020,200 samples, 0.03%)</title><rect x="855.9" y="325" width="0.3" height="15.0" fill="rgb(241,162,48)" rx="2" ry="2" />
<text  x="858.88" y="335.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (303,030,300 samples, 0.05%)</title><rect x="1138.5" y="341" width="0.6" height="15.0" fill="rgb(247,3,50)" rx="2" ry="2" />
<text  x="1141.50" y="351.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (525,252,520 samples, 0.08%)</title><rect x="631.6" y="357" width="0.9" height="15.0" fill="rgb(237,172,19)" rx="2" ry="2" />
<text  x="634.56" y="367.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (212,121,210 samples, 0.03%)</title><rect x="37.8" y="373" width="0.4" height="15.0" fill="rgb(252,62,9)" rx="2" ry="2" />
<text  x="40.83" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (383,838,380 samples, 0.06%)</title><rect x="986.1" y="405" width="0.8" height="15.0" fill="rgb(228,169,25)" rx="2" ry="2" />
<text  x="989.15" y="415.5" ></text>
</g>
<g >
<title>rocksdb::IsValueType (171,717,170 samples, 0.03%)</title><rect x="1113.6" y="469" width="0.3" height="15.0" fill="rgb(234,60,49)" rx="2" ry="2" />
<text  x="1116.58" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice@plt (70,707,070 samples, 0.01%)</title><rect x="118.0" y="517" width="0.1" height="15.0" fill="rgb(212,161,39)" rx="2" ry="2" />
<text  x="120.96" y="527.5" ></text>
</g>
<g >
<title>rocksdb::port::AsmVolatilePause (737,373,730 samples, 0.12%)</title><rect x="162.0" y="693" width="1.4" height="15.0" fill="rgb(207,96,26)" rx="2" ry="2" />
<text  x="165.02" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (202,020,200 samples, 0.03%)</title><rect x="897.9" y="277" width="0.4" height="15.0" fill="rgb(216,20,13)" rx="2" ry="2" />
<text  x="900.94" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::IndexBuilder*, false&gt;::_M_head (171,717,170 samples, 0.03%)</title><rect x="620.4" y="357" width="0.3" height="15.0" fill="rgb(223,98,53)" rx="2" ry="2" />
<text  x="623.41" y="367.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid (282,828,280 samples, 0.04%)</title><rect x="1004.1" y="501" width="0.5" height="15.0" fill="rgb(205,195,24)" rx="2" ry="2" />
<text  x="1007.09" y="511.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (111,111,110 samples, 0.02%)</title><rect x="941.4" y="341" width="0.2" height="15.0" fill="rgb(205,221,26)" rx="2" ry="2" />
<text  x="944.36" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (101,010,100 samples, 0.02%)</title><rect x="853.5" y="245" width="0.2" height="15.0" fill="rgb(234,97,35)" rx="2" ry="2" />
<text  x="856.51" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (575,757,570 samples, 0.09%)</title><rect x="49.5" y="709" width="1.1" height="15.0" fill="rgb(235,72,49)" rx="2" ry="2" />
<text  x="52.52" y="719.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (1,202,020,190 samples, 0.19%)</title><rect x="1086.8" y="437" width="2.2" height="15.0" fill="rgb(206,110,41)" rx="2" ry="2" />
<text  x="1089.78" y="447.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Next (76,101,009,340 samples, 11.91%)</title><rect x="774.0" y="453" width="140.5" height="15.0" fill="rgb(214,141,25)" rx="2" ry="2" />
<text  x="776.97" y="463.5" >rocksdb::Compacti..</text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (262,626,260 samples, 0.04%)</title><rect x="887.4" y="325" width="0.5" height="15.0" fill="rgb(225,199,3)" rx="2" ry="2" />
<text  x="890.38" y="335.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (1,272,727,260 samples, 0.20%)</title><rect x="1186.2" y="837" width="2.3" height="15.0" fill="rgb(247,6,22)" rx="2" ry="2" />
<text  x="1189.16" y="847.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::Finish (111,111,110 samples, 0.02%)</title><rect x="1029.6" y="421" width="0.2" height="15.0" fill="rgb(250,17,54)" rx="2" ry="2" />
<text  x="1032.63" y="431.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (333,333,330 samples, 0.05%)</title><rect x="652.3" y="325" width="0.7" height="15.0" fill="rgb(225,106,35)" rx="2" ry="2" />
<text  x="655.34" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_unlink (242,424,240 samples, 0.04%)</title><rect x="754.3" y="421" width="0.4" height="15.0" fill="rgb(237,144,48)" rx="2" ry="2" />
<text  x="757.26" y="431.5" ></text>
</g>
<g >
<title>rocksdb::PerfStepTimer::PerfStepTimer (151,515,150 samples, 0.02%)</title><rect x="48.0" y="725" width="0.3" height="15.0" fill="rgb(222,50,51)" rx="2" ry="2" />
<text  x="51.03" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FlushBlockPolicy, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt;::operator (1,282,828,270 samples, 0.20%)</title><rect x="617.0" y="437" width="2.3" height="15.0" fill="rgb(245,149,9)" rx="2" ry="2" />
<text  x="619.97" y="447.5" ></text>
</g>
<g >
<title>rocksdb::ShortenedIndexBuilder::FindShortestInternalKeySeparator (131,313,130 samples, 0.02%)</title><rect x="611.5" y="421" width="0.3" height="15.0" fill="rgb(221,97,18)" rx="2" ry="2" />
<text  x="614.51" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (151,515,150 samples, 0.02%)</title><rect x="1145.9" y="293" width="0.3" height="15.0" fill="rgb(248,59,10)" rx="2" ry="2" />
<text  x="1148.92" y="303.5" ></text>
</g>
<g >
<title>std::map&lt;unsigned long, rocksdb::RangeDelAggregator::StripeRep, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::lower_bound (2,434,343,410 samples, 0.38%)</title><rect x="945.8" y="437" width="4.5" height="15.0" fill="rgb(251,58,27)" rx="2" ry="2" />
<text  x="948.76" y="447.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::ratio&lt;1000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;@plt (90,909,090 samples, 0.01%)</title><rect x="261.9" y="645" width="0.2" height="15.0" fill="rgb(248,211,45)" rx="2" ry="2" />
<text  x="264.92" y="655.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::operator= (101,010,100 samples, 0.02%)</title><rect x="46.1" y="709" width="0.2" height="15.0" fill="rgb(231,53,22)" rx="2" ry="2" />
<text  x="49.13" y="719.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FlushBlockPolicy, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt;::operator (121,212,120 samples, 0.02%)</title><rect x="750.4" y="453" width="0.2" height="15.0" fill="rgb(251,120,43)" rx="2" ry="2" />
<text  x="753.38" y="463.5" ></text>
</g>
<g >
<title>rocksdb::PinnableSlice::Reset (131,313,130 samples, 0.02%)</title><rect x="996.5" y="485" width="0.2" height="15.0" fill="rgb(248,212,7)" rx="2" ry="2" />
<text  x="999.48" y="495.5" ></text>
</g>
<g >
<title>rocksdb::ExtractUserKey (1,080,808,070 samples, 0.17%)</title><rect x="130.5" y="549" width="2.0" height="15.0" fill="rgb(228,175,17)" rx="2" ry="2" />
<text  x="133.51" y="559.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::SavePoints*, std::default_delete&lt;rocksdb::SavePoints&gt; &gt; (90,909,090 samples, 0.01%)</title><rect x="478.4" y="709" width="0.2" height="15.0" fill="rgb(229,195,6)" rx="2" ry="2" />
<text  x="481.40" y="719.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (60,606,060 samples, 0.01%)</title><rect x="69.4" y="549" width="0.1" height="15.0" fill="rgb(226,215,13)" rx="2" ry="2" />
<text  x="72.37" y="559.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (434,343,430 samples, 0.07%)</title><rect x="662.8" y="357" width="0.8" height="15.0" fill="rgb(217,4,48)" rx="2" ry="2" />
<text  x="665.77" y="367.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::EstimateSizeAfterKV (212,121,210 samples, 0.03%)</title><rect x="1049.7" y="437" width="0.3" height="15.0" fill="rgb(248,185,20)" rx="2" ry="2" />
<text  x="1052.66" y="447.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, std::ratio&lt;1l, 1000000l&gt;, void&gt; (4,666,666,620 samples, 0.73%)</title><rect x="282.0" y="661" width="8.6" height="15.0" fill="rgb(251,66,52)" rx="2" ry="2" />
<text  x="284.95" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt;::begin (161,616,160 samples, 0.03%)</title><rect x="621.6" y="437" width="0.3" height="15.0" fill="rgb(248,11,29)" rx="2" ry="2" />
<text  x="624.62" y="447.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::Status, false&gt;::_Head_base&lt;rocksdb::Status&amp;&gt; (717,171,710 samples, 0.11%)</title><rect x="466.8" y="677" width="1.3" height="15.0" fill="rgb(231,26,34)" rx="2" ry="2" />
<text  x="469.82" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset (1,202,020,190 samples, 0.19%)</title><rect x="1139.1" y="405" width="2.2" height="15.0" fill="rgb(210,43,1)" rx="2" ry="2" />
<text  x="1142.10" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (3,828,282,790 samples, 0.60%)</title><rect x="878.5" y="389" width="7.1" height="15.0" fill="rgb(242,125,6)" rx="2" ry="2" />
<text  x="881.52" y="399.5" ></text>
</g>
<g >
<title>do_user_addr_fault (70,707,070 samples, 0.01%)</title><rect x="70.5" y="533" width="0.1" height="15.0" fill="rgb(216,170,14)" rx="2" ry="2" />
<text  x="73.51" y="543.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::CopyBufferToHeapBuf (121,212,120 samples, 0.02%)</title><rect x="862.6" y="261" width="0.3" height="15.0" fill="rgb(210,54,33)" rx="2" ry="2" />
<text  x="865.65" y="271.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;char const []&gt;, true&gt;::_Head_base (90,909,090 samples, 0.01%)</title><rect x="941.6" y="341" width="0.1" height="15.0" fill="rgb(240,68,46)" rx="2" ry="2" />
<text  x="944.57" y="351.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (70,707,070 samples, 0.01%)</title><rect x="1128.8" y="469" width="0.2" height="15.0" fill="rgb(251,207,14)" rx="2" ry="2" />
<text  x="1131.84" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (70,707,070 samples, 0.01%)</title><rect x="1070.4" y="453" width="0.1" height="15.0" fill="rgb(212,221,21)" rx="2" ry="2" />
<text  x="1073.38" y="463.5" ></text>
</g>
<g >
<title>vfs_read (222,222,220 samples, 0.03%)</title><rect x="827.6" y="165" width="0.4" height="15.0" fill="rgb(240,56,51)" rx="2" ry="2" />
<text  x="830.62" y="175.5" ></text>
</g>
<g >
<title>ROCKSDB_XXH3_64bits (171,717,170 samples, 0.03%)</title><rect x="826.6" y="197" width="0.3" height="15.0" fill="rgb(222,106,33)" rx="2" ry="2" />
<text  x="829.55" y="207.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_context (70,707,070 samples, 0.01%)</title><rect x="129.7" y="549" width="0.2" height="15.0" fill="rgb(211,178,49)" rx="2" ry="2" />
<text  x="132.73" y="559.5" ></text>
</g>
<g >
<title>mpage_submit_page (121,212,120 samples, 0.02%)</title><rect x="747.3" y="245" width="0.2" height="15.0" fill="rgb(254,146,35)" rx="2" ry="2" />
<text  x="750.32" y="255.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (70,707,070 samples, 0.01%)</title><rect x="163.9" y="677" width="0.2" height="15.0" fill="rgb(223,218,12)" rx="2" ry="2" />
<text  x="166.92" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::end (161,616,160 samples, 0.03%)</title><rect x="656.5" y="373" width="0.3" height="15.0" fill="rgb(227,228,27)" rx="2" ry="2" />
<text  x="659.48" y="383.5" ></text>
</g>
<g >
<title>std::move&lt;rocksdb::Status::Severity&amp;&gt; (111,111,110 samples, 0.02%)</title><rect x="749.6" y="453" width="0.2" height="15.0" fill="rgb(226,168,49)" rx="2" ry="2" />
<text  x="752.61" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::get (202,020,200 samples, 0.03%)</title><rect x="608.3" y="421" width="0.4" height="15.0" fill="rgb(215,161,25)" rx="2" ry="2" />
<text  x="611.34" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (80,808,080 samples, 0.01%)</title><rect x="849.2" y="341" width="0.1" height="15.0" fill="rgb(251,124,29)" rx="2" ry="2" />
<text  x="852.20" y="351.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (131,313,130 samples, 0.02%)</title><rect x="688.0" y="421" width="0.2" height="15.0" fill="rgb(226,70,13)" rx="2" ry="2" />
<text  x="691.00" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::SstPartitioner, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::_M_ptr (414,141,410 samples, 0.06%)</title><rect x="1155.7" y="437" width="0.8" height="15.0" fill="rgb(228,188,53)" rx="2" ry="2" />
<text  x="1158.70" y="447.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (232,323,230 samples, 0.04%)</title><rect x="855.8" y="341" width="0.4" height="15.0" fill="rgb(234,166,32)" rx="2" ry="2" />
<text  x="858.82" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Mod&lt;unsigned long, 4294967296ul, 1ul, 0ul, true, true&gt;::__calc (212,121,210 samples, 0.03%)</title><rect x="515.2" y="773" width="0.4" height="15.0" fill="rgb(221,81,49)" rx="2" ry="2" />
<text  x="518.17" y="783.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (70,707,070 samples, 0.01%)</title><rect x="899.9" y="293" width="0.1" height="15.0" fill="rgb(242,75,25)" rx="2" ry="2" />
<text  x="902.88" y="303.5" ></text>
</g>
<g >
<title>rocksdb::ParseInternalKey (2,303,030,280 samples, 0.36%)</title><rect x="649.6" y="421" width="4.3" height="15.0" fill="rgb(252,81,24)" rx="2" ry="2" />
<text  x="652.62" y="431.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid (181,818,180 samples, 0.03%)</title><rect x="708.5" y="437" width="0.3" height="15.0" fill="rgb(254,40,33)" rx="2" ry="2" />
<text  x="711.50" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (181,818,180 samples, 0.03%)</title><rect x="132.2" y="533" width="0.3" height="15.0" fill="rgb(229,213,34)" rx="2" ry="2" />
<text  x="135.17" y="543.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid (60,606,060 samples, 0.01%)</title><rect x="1083.2" y="469" width="0.1" height="15.0" fill="rgb(249,201,44)" rx="2" ry="2" />
<text  x="1086.21" y="479.5" ></text>
</g>
<g >
<title>rocksdb::FSWritableFilePtr::operator (131,313,130 samples, 0.02%)</title><rect x="1025.4" y="373" width="0.2" height="15.0" fill="rgb(240,186,50)" rx="2" ry="2" />
<text  x="1028.39" y="383.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt; const, rocksdb::CompactionMergingIterator::HeapItem* const&gt;::operator* (1,010,101,000 samples, 0.16%)</title><rect x="814.2" y="389" width="1.8" height="15.0" fill="rgb(250,93,50)" rx="2" ry="2" />
<text  x="817.15" y="399.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::output_to_penultimate_level (101,010,100 samples, 0.02%)</title><rect x="1014.7" y="485" width="0.2" height="15.0" fill="rgb(254,143,28)" rx="2" ry="2" />
<text  x="1017.74" y="495.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status (60,606,060 samples, 0.01%)</title><rect x="859.5" y="389" width="0.1" height="15.0" fill="rgb(248,82,41)" rx="2" ry="2" />
<text  x="862.49" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::_M_ptr (242,424,240 samples, 0.04%)</title><rect x="1150.2" y="421" width="0.5" height="15.0" fill="rgb(231,83,19)" rx="2" ry="2" />
<text  x="1153.21" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="899.2" y="309" width="0.1" height="15.0" fill="rgb(248,156,40)" rx="2" ry="2" />
<text  x="902.15" y="319.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (232,323,230 samples, 0.04%)</title><rect x="908.0" y="373" width="0.5" height="15.0" fill="rgb(243,108,26)" rx="2" ry="2" />
<text  x="911.05" y="383.5" ></text>
</g>
<g >
<title>std::max&lt;unsigned long&gt; (90,909,090 samples, 0.01%)</title><rect x="1111.9" y="453" width="0.2" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="1114.88" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (151,515,150 samples, 0.02%)</title><rect x="887.6" y="277" width="0.3" height="15.0" fill="rgb(247,5,35)" rx="2" ry="2" />
<text  x="890.59" y="287.5" ></text>
</g>
<g >
<title>rocksdb::ParseInternalKey (2,343,434,320 samples, 0.37%)</title><rect x="937.8" y="469" width="4.4" height="15.0" fill="rgb(240,180,8)" rx="2" ry="2" />
<text  x="940.84" y="479.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::IsParallelCompressionEnabled (70,707,070 samples, 0.01%)</title><rect x="1080.9" y="453" width="0.1" height="15.0" fill="rgb(253,126,47)" rx="2" ry="2" />
<text  x="1083.88" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (60,606,060 samples, 0.01%)</title><rect x="146.9" y="661" width="0.1" height="15.0" fill="rgb(225,159,29)" rx="2" ry="2" />
<text  x="149.87" y="671.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::get (747,474,740 samples, 0.12%)</title><rect x="614.7" y="405" width="1.4" height="15.0" fill="rgb(233,74,5)" rx="2" ry="2" />
<text  x="617.72" y="415.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (292,929,290 samples, 0.05%)</title><rect x="164.2" y="677" width="0.5" height="15.0" fill="rgb(236,86,1)" rx="2" ry="2" />
<text  x="167.16" y="687.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid (121,212,120 samples, 0.02%)</title><rect x="751.2" y="469" width="0.2" height="15.0" fill="rgb(223,67,31)" rx="2" ry="2" />
<text  x="754.22" y="479.5" ></text>
</g>
<g >
<title>clear_page_orig (111,111,110 samples, 0.02%)</title><rect x="559.7" y="661" width="0.3" height="15.0" fill="rgb(206,61,20)" rx="2" ry="2" />
<text  x="562.75" y="671.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, unsigned long&gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="474.9" y="693" width="0.2" height="15.0" fill="rgb(226,107,39)" rx="2" ry="2" />
<text  x="477.93" y="703.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::IOOptions (181,818,180 samples, 0.03%)</title><rect x="41.4" y="629" width="0.3" height="15.0" fill="rgb(244,6,21)" rx="2" ry="2" />
<text  x="44.41" y="639.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid (464,646,460 samples, 0.07%)</title><rect x="696.0" y="421" width="0.9" height="15.0" fill="rgb(215,182,54)" rx="2" ry="2" />
<text  x="699.02" y="431.5" ></text>
</g>
<g >
<title>rocksdb::UserComparatorWrapper::Compare (838,383,830 samples, 0.13%)</title><rect x="598.7" y="421" width="1.5" height="15.0" fill="rgb(253,129,44)" rx="2" ry="2" />
<text  x="601.68" y="431.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (232,323,230 samples, 0.04%)</title><rect x="1110.6" y="373" width="0.4" height="15.0" fill="rgb(247,186,11)" rx="2" ry="2" />
<text  x="1113.60" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (181,818,180 samples, 0.03%)</title><rect x="480.4" y="757" width="0.3" height="15.0" fill="rgb(222,34,22)" rx="2" ry="2" />
<text  x="483.40" y="767.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (343,434,340 samples, 0.05%)</title><rect x="975.0" y="421" width="0.7" height="15.0" fill="rgb(242,182,41)" rx="2" ry="2" />
<text  x="978.03" y="431.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::empty (494,949,490 samples, 0.08%)</title><rect x="810.8" y="405" width="0.9" height="15.0" fill="rgb(226,15,6)" rx="2" ry="2" />
<text  x="813.81" y="415.5" ></text>
</g>
<g >
<title>rocksdb::DecodeEntry::operator (141,414,140 samples, 0.02%)</title><rect x="835.9" y="293" width="0.2" height="15.0" fill="rgb(252,73,4)" rx="2" ry="2" />
<text  x="838.88" y="303.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status (2,050,505,030 samples, 0.32%)</title><rect x="903.6" y="405" width="3.8" height="15.0" fill="rgb(246,19,39)" rx="2" ry="2" />
<text  x="906.59" y="415.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (60,606,060 samples, 0.01%)</title><rect x="856.7" y="261" width="0.1" height="15.0" fill="rgb(225,166,8)" rx="2" ry="2" />
<text  x="859.70" y="271.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::LinkOne (757,575,750 samples, 0.12%)</title><rect x="443.3" y="709" width="1.4" height="15.0" fill="rgb(252,9,30)" rx="2" ry="2" />
<text  x="446.28" y="719.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::begin (212,121,210 samples, 0.03%)</title><rect x="802.3" y="421" width="0.4" height="15.0" fill="rgb(206,77,47)" rx="2" ry="2" />
<text  x="805.27" y="431.5" ></text>
</g>
<g >
<title>rocksdb::UserComparatorWrapper::Compare (1,676,767,660 samples, 0.26%)</title><rect x="717.4" y="421" width="3.1" height="15.0" fill="rgb(234,110,12)" rx="2" ry="2" />
<text  x="720.38" y="431.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (464,646,460 samples, 0.07%)</title><rect x="984.0" y="437" width="0.9" height="15.0" fill="rgb(244,119,52)" rx="2" ry="2" />
<text  x="987.00" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (282,828,280 samples, 0.04%)</title><rect x="986.3" y="389" width="0.6" height="15.0" fill="rgb(225,61,42)" rx="2" ry="2" />
<text  x="989.33" y="399.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::EqualWithoutTimestamp (919,191,910 samples, 0.14%)</title><rect x="923.8" y="469" width="1.7" height="15.0" fill="rgb(219,95,40)" rx="2" ry="2" />
<text  x="926.81" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SavePoints, std::default_delete&lt;rocksdb::SavePoints&gt; &gt;::unique_ptr&lt;std::default_delete&lt;rocksdb::SavePoints&gt;, void&gt; (282,828,280 samples, 0.04%)</title><rect x="477.1" y="741" width="0.5" height="15.0" fill="rgb(230,4,29)" rx="2" ry="2" />
<text  x="480.10" y="751.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (80,808,080 samples, 0.01%)</title><rect x="608.2" y="325" width="0.1" height="15.0" fill="rgb(227,225,1)" rx="2" ry="2" />
<text  x="611.19" y="335.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (303,030,300 samples, 0.05%)</title><rect x="910.6" y="357" width="0.6" height="15.0" fill="rgb(205,32,5)" rx="2" ry="2" />
<text  x="913.62" y="367.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (999,999,990 samples, 0.16%)</title><rect x="841.9" y="325" width="1.9" height="15.0" fill="rgb(220,191,25)" rx="2" ry="2" />
<text  x="844.94" y="335.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (131,313,130 samples, 0.02%)</title><rect x="893.4" y="405" width="0.3" height="15.0" fill="rgb(250,162,1)" rx="2" ry="2" />
<text  x="896.42" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (222,222,220 samples, 0.03%)</title><rect x="1012.8" y="469" width="0.4" height="15.0" fill="rgb(236,23,33)" rx="2" ry="2" />
<text  x="1015.76" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SavePoints, std::default_delete&lt;rocksdb::SavePoints&gt; &gt;::~unique_ptr (171,717,170 samples, 0.03%)</title><rect x="478.3" y="741" width="0.3" height="15.0" fill="rgb(215,46,24)" rx="2" ry="2" />
<text  x="481.33" y="751.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::empty (101,010,100 samples, 0.02%)</title><rect x="1050.2" y="437" width="0.1" height="15.0" fill="rgb(234,42,40)" rx="2" ry="2" />
<text  x="1053.16" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::ColumnFamilySet*, std::default_delete&lt;rocksdb::ColumnFamilySet&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="51.9" y="661" width="0.1" height="15.0" fill="rgb(228,85,3)" rx="2" ry="2" />
<text  x="54.88" y="671.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::SetInternalKey (1,505,050,490 samples, 0.24%)</title><rect x="646.6" y="421" width="2.7" height="15.0" fill="rgb(226,15,1)" rx="2" ry="2" />
<text  x="649.56" y="431.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (282,828,280 samples, 0.04%)</title><rect x="1094.3" y="437" width="0.6" height="15.0" fill="rgb(211,132,43)" rx="2" ry="2" />
<text  x="1097.33" y="447.5" ></text>
</g>
<g >
<title>rocksdb::PinnableSlice::Reset (393,939,390 samples, 0.06%)</title><rect x="653.9" y="421" width="0.8" height="15.0" fill="rgb(234,115,10)" rx="2" ry="2" />
<text  x="656.92" y="431.5" ></text>
</g>
<g >
<title>rocksdb::DecodeFixed64 (80,808,080 samples, 0.01%)</title><rect x="650.2" y="405" width="0.1" height="15.0" fill="rgb(246,54,25)" rx="2" ry="2" />
<text  x="653.16" y="415.5" ></text>
</g>
<g >
<title>std::operator&amp; (131,313,130 samples, 0.02%)</title><rect x="1167.1" y="437" width="0.2" height="15.0" fill="rgb(211,72,51)" rx="2" ry="2" />
<text  x="1170.09" y="447.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (555,555,550 samples, 0.09%)</title><rect x="1056.1" y="421" width="1.0" height="15.0" fill="rgb(210,57,8)" rx="2" ry="2" />
<text  x="1059.11" y="431.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid (282,828,280 samples, 0.04%)</title><rect x="645.5" y="421" width="0.5" height="15.0" fill="rgb(211,194,39)" rx="2" ry="2" />
<text  x="648.49" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (1,020,202,010 samples, 0.16%)</title><rect x="721.3" y="437" width="1.8" height="15.0" fill="rgb(212,76,33)" rx="2" ry="2" />
<text  x="724.26" y="447.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::status (1,373,737,360 samples, 0.21%)</title><rect x="1032.3" y="437" width="2.5" height="15.0" fill="rgb(216,182,42)" rx="2" ry="2" />
<text  x="1035.31" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (131,313,130 samples, 0.02%)</title><rect x="1052.4" y="405" width="0.2" height="15.0" fill="rgb(228,123,1)" rx="2" ry="2" />
<text  x="1055.36" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (60,606,060 samples, 0.01%)</title><rect x="466.1" y="725" width="0.1" height="15.0" fill="rgb(220,100,35)" rx="2" ry="2" />
<text  x="469.07" y="735.5" ></text>
</g>
<g >
<title>std::__invoke_r&lt;void, std::_Bind&lt;void  (224,373,735,130 samples, 35.11%)</title><rect x="765.1" y="677" width="414.3" height="15.0" fill="rgb(213,163,39)" rx="2" ry="2" />
<text  x="768.11" y="687.5" >std::__invoke_r&lt;void, std::_Bind&lt;void </text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::SkipListRep::Allocate (1,646,464,630 samples, 0.26%)</title><rect x="68.2" y="629" width="3.1" height="15.0" fill="rgb(222,165,29)" rx="2" ry="2" />
<text  x="71.21" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (191,919,190 samples, 0.03%)</title><rect x="1132.5" y="453" width="0.4" height="15.0" fill="rgb(210,60,38)" rx="2" ry="2" />
<text  x="1135.53" y="463.5" ></text>
</g>
<g >
<title>pagecache_get_page (282,828,280 samples, 0.04%)</title><rect x="572.7" y="117" width="0.6" height="15.0" fill="rgb(248,163,31)" rx="2" ry="2" />
<text  x="575.73" y="127.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (90,909,090 samples, 0.01%)</title><rect x="605.5" y="405" width="0.1" height="15.0" fill="rgb(208,4,27)" rx="2" ry="2" />
<text  x="608.47" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::get (272,727,270 samples, 0.04%)</title><rect x="1084.0" y="421" width="0.5" height="15.0" fill="rgb(232,147,54)" rx="2" ry="2" />
<text  x="1086.98" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::operator (2,393,939,370 samples, 0.37%)</title><rect x="1170.8" y="501" width="4.4" height="15.0" fill="rgb(212,183,22)" rx="2" ry="2" />
<text  x="1173.79" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (1,505,050,490 samples, 0.24%)</title><rect x="881.1" y="373" width="2.8" height="15.0" fill="rgb(211,42,12)" rx="2" ry="2" />
<text  x="884.13" y="383.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::get_left (202,020,200 samples, 0.03%)</title><rect x="778.9" y="405" width="0.4" height="15.0" fill="rgb(211,91,17)" rx="2" ry="2" />
<text  x="781.92" y="415.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (363,636,360 samples, 0.06%)</title><rect x="811.0" y="389" width="0.7" height="15.0" fill="rgb(219,7,52)" rx="2" ry="2" />
<text  x="814.02" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (575,757,570 samples, 0.09%)</title><rect x="49.5" y="693" width="1.1" height="15.0" fill="rgb(224,34,49)" rx="2" ry="2" />
<text  x="52.52" y="703.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::IOOptions (131,313,130 samples, 0.02%)</title><rect x="571.2" y="357" width="0.2" height="15.0" fill="rgb(227,55,31)" rx="2" ry="2" />
<text  x="574.20" y="367.5" ></text>
</g>
<g >
<title>ext4_writepages (181,818,180 samples, 0.03%)</title><rect x="747.3" y="293" width="0.4" height="15.0" fill="rgb(243,13,52)" rx="2" ry="2" />
<text  x="750.32" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (90,909,090 samples, 0.01%)</title><rect x="458.3" y="693" width="0.2" height="15.0" fill="rgb(244,190,52)" rx="2" ry="2" />
<text  x="461.30" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::get (1,101,010,090 samples, 0.17%)</title><rect x="1087.0" y="405" width="2.0" height="15.0" fill="rgb(239,33,48)" rx="2" ry="2" />
<text  x="1089.96" y="415.5" ></text>
</g>
<g >
<title>__strlen_evex (60,606,060 samples, 0.01%)</title><rect x="1028.2" y="357" width="0.1" height="15.0" fill="rgb(231,184,29)" rx="2" ry="2" />
<text  x="1031.17" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::end (141,414,140 samples, 0.02%)</title><rect x="945.5" y="421" width="0.2" height="15.0" fill="rgb(246,38,29)" rx="2" ry="2" />
<text  x="948.46" y="431.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (333,333,330 samples, 0.05%)</title><rect x="972.7" y="469" width="0.6" height="15.0" fill="rgb(229,0,24)" rx="2" ry="2" />
<text  x="975.70" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (828,282,820 samples, 0.13%)</title><rect x="736.9" y="373" width="1.5" height="15.0" fill="rgb(210,178,28)" rx="2" ry="2" />
<text  x="739.85" y="383.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::SetInternalKey (202,020,200 samples, 0.03%)</title><rect x="991.4" y="485" width="0.4" height="15.0" fill="rgb(233,114,33)" rx="2" ry="2" />
<text  x="994.42" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (60,606,060 samples, 0.01%)</title><rect x="1044.3" y="437" width="0.1" height="15.0" fill="rgb(215,99,8)" rx="2" ry="2" />
<text  x="1047.29" y="447.5" ></text>
</g>
<g >
<title>__dynamic_cast (80,808,080 samples, 0.01%)</title><rect x="53.1" y="693" width="0.2" height="15.0" fill="rgb(243,90,2)" rx="2" ry="2" />
<text  x="56.12" y="703.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;rocksdb::SpinMutex&gt;::unique_lock (60,606,060 samples, 0.01%)</title><rect x="70.1" y="565" width="0.1" height="15.0" fill="rgb(253,182,18)" rx="2" ry="2" />
<text  x="73.12" y="575.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_Head_base (70,707,070 samples, 0.01%)</title><rect x="884.7" y="293" width="0.1" height="15.0" fill="rgb(222,82,51)" rx="2" ry="2" />
<text  x="887.68" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::IndexBuilder, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt;::_M_ptr (222,222,220 samples, 0.03%)</title><rect x="1076.7" y="437" width="0.5" height="15.0" fill="rgb(210,50,6)" rx="2" ry="2" />
<text  x="1079.74" y="447.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::CheckOutOfBound (70,707,070 samples, 0.01%)</title><rect x="860.6" y="389" width="0.2" height="15.0" fill="rgb(218,113,19)" rx="2" ry="2" />
<text  x="863.63" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (101,010,100 samples, 0.02%)</title><rect x="848.2" y="277" width="0.2" height="15.0" fill="rgb(253,99,39)" rx="2" ry="2" />
<text  x="851.21" y="287.5" ></text>
</g>
<g >
<title>rocksdb::BlockFetcher::ProcessTrailerIfPresent (232,323,230 samples, 0.04%)</title><rect x="826.5" y="245" width="0.4" height="15.0" fill="rgb(207,0,17)" rx="2" ry="2" />
<text  x="829.48" y="255.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::CurrentSizeEstimate@plt (111,111,110 samples, 0.02%)</title><rect x="589.9" y="437" width="0.2" height="15.0" fill="rgb(229,38,17)" rx="2" ry="2" />
<text  x="592.89" y="447.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::iterator_impl&lt;rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt; const, rocksdb::CompactionMergingIterator::HeapItem* const&gt;::operator* (313,131,310 samples, 0.05%)</title><rect x="816.1" y="405" width="0.5" height="15.0" fill="rgb(251,86,46)" rx="2" ry="2" />
<text  x="819.07" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (747,474,740 samples, 0.12%)</title><rect x="558.8" y="837" width="1.3" height="15.0" fill="rgb(250,63,13)" rx="2" ry="2" />
<text  x="561.76" y="847.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (141,414,140 samples, 0.02%)</title><rect x="901.2" y="261" width="0.2" height="15.0" fill="rgb(240,199,49)" rx="2" ry="2" />
<text  x="904.16" y="271.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (1,252,525,240 samples, 0.20%)</title><rect x="249.2" y="661" width="2.4" height="15.0" fill="rgb(215,209,13)" rx="2" ry="2" />
<text  x="252.24" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (141,414,140 samples, 0.02%)</title><rect x="573.9" y="357" width="0.2" height="15.0" fill="rgb(245,58,47)" rx="2" ry="2" />
<text  x="576.87" y="367.5" ></text>
</g>
<g >
<title>rocksdb::IsValueType (60,606,060 samples, 0.01%)</title><rect x="1057.2" y="453" width="0.1" height="15.0" fill="rgb(217,149,25)" rx="2" ry="2" />
<text  x="1060.17" y="463.5" ></text>
</g>
<g >
<title>rocksdb::IsExtendedValueType (151,515,150 samples, 0.02%)</title><rect x="951.3" y="437" width="0.3" height="15.0" fill="rgb(233,149,21)" rx="2" ry="2" />
<text  x="954.30" y="447.5" ></text>
</g>
<g >
<title>rocksdb::FSWritableFilePtr::operator (70,707,070 samples, 0.01%)</title><rect x="571.1" y="357" width="0.1" height="15.0" fill="rgb(247,94,52)" rx="2" ry="2" />
<text  x="574.07" y="367.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (90,909,090 samples, 0.01%)</title><rect x="571.4" y="341" width="0.2" height="15.0" fill="rgb(229,225,0)" rx="2" ry="2" />
<text  x="574.44" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::operator bool (757,575,750 samples, 0.12%)</title><rect x="985.5" y="453" width="1.4" height="15.0" fill="rgb(243,167,9)" rx="2" ry="2" />
<text  x="988.51" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="847.1" y="261" width="0.2" height="15.0" fill="rgb(215,177,27)" rx="2" ry="2" />
<text  x="850.09" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::operator bool (60,606,060 samples, 0.01%)</title><rect x="471.8" y="725" width="0.1" height="15.0" fill="rgb(207,149,22)" rx="2" ry="2" />
<text  x="474.82" y="735.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (212,121,210 samples, 0.03%)</title><rect x="786.3" y="357" width="0.4" height="15.0" fill="rgb(229,216,47)" rx="2" ry="2" />
<text  x="789.26" y="367.5" ></text>
</g>
<g >
<title>rocksdb::Status::MarkChecked (60,606,060 samples, 0.01%)</title><rect x="1129.3" y="453" width="0.1" height="15.0" fill="rgb(236,43,32)" rx="2" ry="2" />
<text  x="1132.32" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (464,646,460 samples, 0.07%)</title><rect x="722.1" y="389" width="0.9" height="15.0" fill="rgb(205,121,4)" rx="2" ry="2" />
<text  x="725.14" y="399.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (70,707,070 samples, 0.01%)</title><rect x="148.8" y="597" width="0.1" height="15.0" fill="rgb(242,120,15)" rx="2" ry="2" />
<text  x="151.76" y="607.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::Clear (80,808,080 samples, 0.01%)</title><rect x="833.3" y="325" width="0.2" height="15.0" fill="rgb(218,124,40)" rx="2" ry="2" />
<text  x="836.34" y="335.5" ></text>
</g>
<g >
<title>rocksdb::RangeDelAggregator::ShouldDelete (6,929,292,860 samples, 1.08%)</title><rect x="943.3" y="469" width="12.8" height="15.0" fill="rgb(253,90,21)" rx="2" ry="2" />
<text  x="946.32" y="479.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::Extend (111,111,110 samples, 0.02%)</title><rect x="45.2" y="645" width="0.2" height="15.0" fill="rgb(226,196,43)" rx="2" ry="2" />
<text  x="48.18" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (111,111,110 samples, 0.02%)</title><rect x="967.5" y="469" width="0.3" height="15.0" fill="rgb(251,50,1)" rx="2" ry="2" />
<text  x="970.55" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (838,383,830 samples, 0.13%)</title><rect x="856.3" y="341" width="1.5" height="15.0" fill="rgb(251,217,46)" rx="2" ry="2" />
<text  x="859.29" y="351.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid (373,737,370 samples, 0.06%)</title><rect x="644.8" y="421" width="0.7" height="15.0" fill="rgb(242,103,51)" rx="2" ry="2" />
<text  x="647.77" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_sched_yield (212,121,210 samples, 0.03%)</title><rect x="328.1" y="645" width="0.4" height="15.0" fill="rgb(244,150,46)" rx="2" ry="2" />
<text  x="331.06" y="655.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (60,606,060 samples, 0.01%)</title><rect x="952.0" y="437" width="0.2" height="15.0" fill="rgb(238,95,51)" rx="2" ry="2" />
<text  x="955.05" y="447.5" ></text>
</g>
<g >
<title>XXH3_64bits_internal (464,646,460 samples, 0.07%)</title><rect x="1023.8" y="357" width="0.9" height="15.0" fill="rgb(211,24,41)" rx="2" ry="2" />
<text  x="1026.84" y="367.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (393,939,390 samples, 0.06%)</title><rect x="1157.7" y="405" width="0.7" height="15.0" fill="rgb(241,102,12)" rx="2" ry="2" />
<text  x="1160.69" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (212,121,210 samples, 0.03%)</title><rect x="747.3" y="389" width="0.4" height="15.0" fill="rgb(239,41,28)" rx="2" ry="2" />
<text  x="750.26" y="399.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::unordered_map (131,313,130 samples, 0.02%)</title><rect x="41.5" y="613" width="0.2" height="15.0" fill="rgb(205,216,10)" rx="2" ry="2" />
<text  x="44.50" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (60,606,060 samples, 0.01%)</title><rect x="1044.2" y="437" width="0.1" height="15.0" fill="rgb(224,214,6)" rx="2" ry="2" />
<text  x="1047.17" y="447.5" ></text>
</g>
<g >
<title>std::operator&amp;@plt (141,414,140 samples, 0.02%)</title><rect x="184.9" y="709" width="0.3" height="15.0" fill="rgb(230,132,51)" rx="2" ry="2" />
<text  x="187.94" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (90,909,090 samples, 0.01%)</title><rect x="561.7" y="837" width="0.2" height="15.0" fill="rgb(218,148,9)" rx="2" ry="2" />
<text  x="564.71" y="847.5" ></text>
</g>
<g >
<title>std::forward&lt;std::tuple&lt;&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="65.8" y="613" width="0.1" height="15.0" fill="rgb(254,143,36)" rx="2" ry="2" />
<text  x="68.75" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_head@plt (60,606,060 samples, 0.01%)</title><rect x="693.9" y="341" width="0.1" height="15.0" fill="rgb(210,124,51)" rx="2" ry="2" />
<text  x="696.90" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt;, true, true&gt;::__uniq_ptr_data (212,121,210 samples, 0.03%)</title><rect x="477.6" y="725" width="0.4" height="15.0" fill="rgb(208,26,45)" rx="2" ry="2" />
<text  x="480.62" y="735.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (60,606,060 samples, 0.01%)</title><rect x="941.7" y="341" width="0.1" height="15.0" fill="rgb(217,35,18)" rx="2" ry="2" />
<text  x="944.73" y="351.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::MemTable*, 8ul&gt;::autovector (60,606,060 samples, 0.01%)</title><rect x="28.8" y="709" width="0.1" height="15.0" fill="rgb(250,31,31)" rx="2" ry="2" />
<text  x="31.76" y="719.5" ></text>
</g>
<g >
<title>truncate_inode_pages_range (80,808,080 samples, 0.01%)</title><rect x="1179.3" y="325" width="0.1" height="15.0" fill="rgb(232,0,8)" rx="2" ry="2" />
<text  x="1182.29" y="335.5" ></text>
</g>
<g >
<title>rocksdb::FilePrefetchBuffer::TryReadFromCache (60,606,060 samples, 0.01%)</title><rect x="863.6" y="261" width="0.1" height="15.0" fill="rgb(243,198,31)" rx="2" ry="2" />
<text  x="866.60" y="271.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (111,111,110 samples, 0.02%)</title><rect x="913.7" y="357" width="0.2" height="15.0" fill="rgb(215,34,23)" rx="2" ry="2" />
<text  x="916.68" y="367.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Iterator::Next (1,898,989,880 samples, 0.30%)</title><rect x="625.4" y="373" width="3.5" height="15.0" fill="rgb(241,180,19)" rx="2" ry="2" />
<text  x="628.44" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_lower_bound (202,020,200 samples, 0.03%)</title><rect x="658.5" y="373" width="0.4" height="15.0" fill="rgb(232,68,27)" rx="2" ry="2" />
<text  x="661.49" y="383.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::ParseNextDataKey (2,111,111,090 samples, 0.33%)</title><rect x="872.1" y="357" width="3.9" height="15.0" fill="rgb(247,73,36)" rx="2" ry="2" />
<text  x="875.12" y="367.5" ></text>
</g>
<g >
<title>rocksdb::EncodeVarint32 (222,222,220 samples, 0.03%)</title><rect x="582.3" y="405" width="0.4" height="15.0" fill="rgb(219,66,19)" rx="2" ry="2" />
<text  x="585.30" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (60,606,060 samples, 0.01%)</title><rect x="847.5" y="261" width="0.2" height="15.0" fill="rgb(218,126,28)" rx="2" ry="2" />
<text  x="850.54" y="271.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (60,606,060 samples, 0.01%)</title><rect x="140.0" y="613" width="0.1" height="15.0" fill="rgb(214,18,31)" rx="2" ry="2" />
<text  x="142.99" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (373,737,370 samples, 0.06%)</title><rect x="764.2" y="837" width="0.7" height="15.0" fill="rgb(240,12,33)" rx="2" ry="2" />
<text  x="767.20" y="847.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::SetValid (333,333,330 samples, 0.05%)</title><rect x="699.8" y="437" width="0.6" height="15.0" fill="rgb(211,120,49)" rx="2" ry="2" />
<text  x="702.79" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::IntTblPropCollector*, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; (464,646,460 samples, 0.07%)</title><rect x="1065.3" y="389" width="0.8" height="15.0" fill="rgb(245,208,17)" rx="2" ry="2" />
<text  x="1068.29" y="399.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::InitBlockIterator&lt;rocksdb::DataBlockIter&gt; (242,424,240 samples, 0.04%)</title><rect x="825.6" y="293" width="0.4" height="15.0" fill="rgb(231,50,31)" rx="2" ry="2" />
<text  x="828.58" y="303.5" ></text>
</g>
<g >
<title>rocksdb::GetLengthPrefixedSlice (5,606,060,550 samples, 0.88%)</title><rect x="670.9" y="389" width="10.4" height="15.0" fill="rgb(212,176,0)" rx="2" ry="2" />
<text  x="673.92" y="399.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::empty (282,828,280 samples, 0.04%)</title><rect x="803.8" y="405" width="0.5" height="15.0" fill="rgb(222,60,28)" rx="2" ry="2" />
<text  x="806.80" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (3,242,424,210 samples, 0.51%)</title><rect x="488.0" y="741" width="5.9" height="15.0" fill="rgb(239,13,31)" rx="2" ry="2" />
<text  x="490.95" y="751.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (777,777,770 samples, 0.12%)</title><rect x="856.4" y="325" width="1.4" height="15.0" fill="rgb(236,68,43)" rx="2" ry="2" />
<text  x="859.38" y="335.5" ></text>
</g>
<g >
<title>do_writepages (90,909,090 samples, 0.01%)</title><rect x="562.1" y="341" width="0.2" height="15.0" fill="rgb(252,87,19)" rx="2" ry="2" />
<text  x="565.12" y="351.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::operator= (60,606,060 samples, 0.01%)</title><rect x="47.6" y="725" width="0.1" height="15.0" fill="rgb(218,190,18)" rx="2" ry="2" />
<text  x="50.60" y="735.5" ></text>
</g>
<g >
<title>rocksdb::RangeDelAggregator::ShouldDelete (6,242,424,180 samples, 0.98%)</title><rect x="654.7" y="421" width="11.5" height="15.0" fill="rgb(206,74,42)" rx="2" ry="2" />
<text  x="657.65" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::FlushBlockPolicy*, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="619.2" y="405" width="0.1" height="15.0" fill="rgb(241,51,13)" rx="2" ry="2" />
<text  x="622.19" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (414,141,410 samples, 0.06%)</title><rect x="1129.0" y="469" width="0.8" height="15.0" fill="rgb(228,175,6)" rx="2" ry="2" />
<text  x="1131.99" y="479.5" ></text>
</g>
<g >
<title>std::chrono::operator&gt;=&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000l&gt; &gt; (222,222,220 samples, 0.03%)</title><rect x="452.5" y="709" width="0.4" height="15.0" fill="rgb(229,45,37)" rx="2" ry="2" />
<text  x="455.48" y="719.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::ShouldStopBefore (8,262,626,180 samples, 1.29%)</title><rect x="1084.5" y="469" width="15.3" height="15.0" fill="rgb(227,139,16)" rx="2" ry="2" />
<text  x="1087.50" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (202,020,200 samples, 0.03%)</title><rect x="578.2" y="293" width="0.3" height="15.0" fill="rgb(215,208,40)" rx="2" ry="2" />
<text  x="581.16" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (767,676,760 samples, 0.12%)</title><rect x="853.2" y="309" width="1.4" height="15.0" fill="rgb(243,27,43)" rx="2" ry="2" />
<text  x="856.17" y="319.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::key (90,909,090 samples, 0.01%)</title><rect x="1083.4" y="469" width="0.2" height="15.0" fill="rgb(219,104,11)" rx="2" ry="2" />
<text  x="1086.44" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator[] (70,707,070 samples, 0.01%)</title><rect x="482.1" y="805" width="0.1" height="15.0" fill="rgb(229,120,44)" rx="2" ry="2" />
<text  x="485.12" y="815.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~unordered_map (151,515,150 samples, 0.02%)</title><rect x="41.8" y="629" width="0.3" height="15.0" fill="rgb(215,16,29)" rx="2" ry="2" />
<text  x="44.82" y="639.5" ></text>
</g>
<g >
<title>truncate_cleanup_page (131,313,130 samples, 0.02%)</title><rect x="754.5" y="309" width="0.2" height="15.0" fill="rgb(247,117,50)" rx="2" ry="2" />
<text  x="757.46" y="319.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (121,212,120 samples, 0.02%)</title><rect x="1063.1" y="421" width="0.2" height="15.0" fill="rgb(225,166,1)" rx="2" ry="2" />
<text  x="1066.09" y="431.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::key (141,414,140 samples, 0.02%)</title><rect x="877.6" y="405" width="0.3" height="15.0" fill="rgb(228,87,40)" rx="2" ry="2" />
<text  x="880.63" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (292,929,290 samples, 0.05%)</title><rect x="495.1" y="757" width="0.5" height="15.0" fill="rgb(233,173,9)" rx="2" ry="2" />
<text  x="498.06" y="767.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (232,323,230 samples, 0.04%)</title><rect x="812.9" y="373" width="0.4" height="15.0" fill="rgb(228,138,15)" rx="2" ry="2" />
<text  x="815.88" y="383.5" ></text>
</g>
<g >
<title>rocksdb::Status::code (80,808,080 samples, 0.01%)</title><rect x="457.3" y="693" width="0.1" height="15.0" fill="rgb(230,5,27)" rx="2" ry="2" />
<text  x="460.29" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (1,898,989,880 samples, 0.30%)</title><rect x="1009.0" y="485" width="3.5" height="15.0" fill="rgb(223,195,3)" rx="2" ry="2" />
<text  x="1011.98" y="495.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (212,121,210 samples, 0.03%)</title><rect x="142.3" y="629" width="0.4" height="15.0" fill="rgb(219,19,10)" rx="2" ry="2" />
<text  x="145.30" y="639.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::Key (101,010,100 samples, 0.02%)</title><rect x="118.3" y="549" width="0.2" height="15.0" fill="rgb(219,12,27)" rx="2" ry="2" />
<text  x="121.30" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt; &gt;::_M_end (262,626,260 samples, 0.04%)</title><rect x="658.0" y="373" width="0.5" height="15.0" fill="rgb(222,87,13)" rx="2" ry="2" />
<text  x="661.01" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (141,414,140 samples, 0.02%)</title><rect x="887.0" y="325" width="0.2" height="15.0" fill="rgb(250,65,8)" rx="2" ry="2" />
<text  x="889.95" y="335.5" ></text>
</g>
<g >
<title>clear_page_orig (131,313,130 samples, 0.02%)</title><rect x="572.8" y="37" width="0.2" height="15.0" fill="rgb(252,64,49)" rx="2" ry="2" />
<text  x="575.79" y="47.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (606,060,600 samples, 0.09%)</title><rect x="970.8" y="437" width="1.1" height="15.0" fill="rgb(236,129,48)" rx="2" ry="2" />
<text  x="973.79" y="447.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (565,656,560 samples, 0.09%)</title><rect x="968.7" y="469" width="1.0" height="15.0" fill="rgb(222,36,54)" rx="2" ry="2" />
<text  x="971.67" y="479.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (212,121,210 samples, 0.03%)</title><rect x="1122.2" y="453" width="0.4" height="15.0" fill="rgb(235,203,52)" rx="2" ry="2" />
<text  x="1125.18" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FSWritableFileTracingWrapper, std::default_delete&lt;rocksdb::FSWritableFileTracingWrapper&gt; &gt;::operator (70,707,070 samples, 0.01%)</title><rect x="41.3" y="629" width="0.1" height="15.0" fill="rgb(223,80,6)" rx="2" ry="2" />
<text  x="44.28" y="639.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator unsigned long (333,333,330 samples, 0.05%)</title><rect x="1080.2" y="437" width="0.6" height="15.0" fill="rgb(254,78,2)" rx="2" ry="2" />
<text  x="1083.21" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::construct&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;rocksdb::MemTable* const&amp;&gt;, std::tuple&lt;&gt; &gt; (393,939,390 samples, 0.06%)</title><rect x="62.0" y="533" width="0.7" height="15.0" fill="rgb(248,64,7)" rx="2" ry="2" />
<text  x="65.00" y="543.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count (191,919,190 samples, 0.03%)</title><rect x="268.7" y="629" width="0.3" height="15.0" fill="rgb(235,68,39)" rx="2" ry="2" />
<text  x="271.69" y="639.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, rocksdb::FlushBlockPolicy*, false&gt;::_M_head@plt (80,808,080 samples, 0.01%)</title><rect x="1076.1" y="373" width="0.2" height="15.0" fill="rgb(220,130,17)" rx="2" ry="2" />
<text  x="1079.13" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (161,616,160 samples, 0.03%)</title><rect x="143.3" y="613" width="0.3" height="15.0" fill="rgb(243,164,54)" rx="2" ry="2" />
<text  x="146.29" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;unsigned long const, rocksdb::RangeDelAggregator::StripeRep&gt; &gt;::_Rb_tree_iterator (171,717,170 samples, 0.03%)</title><rect x="659.8" y="341" width="0.3" height="15.0" fill="rgb(223,157,10)" rx="2" ry="2" />
<text  x="662.78" y="351.5" ></text>
</g>
<g >
<title>rocksdb::VarintLength (60,606,060 samples, 0.01%)</title><rect x="144.0" y="645" width="0.1" height="15.0" fill="rgb(244,135,15)" rx="2" ry="2" />
<text  x="147.04" y="655.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::NextImpl (1,717,171,700 samples, 0.27%)</title><rect x="834.0" y="341" width="3.2" height="15.0" fill="rgb(254,141,41)" rx="2" ry="2" />
<text  x="837.02" y="351.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (70,707,070 samples, 0.01%)</title><rect x="164.6" y="661" width="0.1" height="15.0" fill="rgb(233,84,35)" rx="2" ry="2" />
<text  x="167.57" y="671.5" ></text>
</g>
<g >
<title>std::operator==&lt;rocksdb::CompressionDict, std::default_delete&lt;rocksdb::CompressionDict&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="1023.1" y="389" width="0.2" height="15.0" fill="rgb(209,142,5)" rx="2" ry="2" />
<text  x="1026.08" y="399.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (9,595,959,500 samples, 1.50%)</title><rect x="236.1" y="693" width="17.7" height="15.0" fill="rgb(249,191,0)" rx="2" ry="2" />
<text  x="239.13" y="703.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (80,808,080 samples, 0.01%)</title><rect x="579.4" y="405" width="0.2" height="15.0" fill="rgb(249,46,21)" rx="2" ry="2" />
<text  x="582.41" y="415.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyData::internal_comparator (242,424,240 samples, 0.04%)</title><rect x="1081.8" y="469" width="0.4" height="15.0" fill="rgb(224,89,33)" rx="2" ry="2" />
<text  x="1084.78" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (101,010,100 samples, 0.02%)</title><rect x="852.9" y="293" width="0.1" height="15.0" fill="rgb(235,108,3)" rx="2" ry="2" />
<text  x="855.85" y="303.5" ></text>
</g>
<g >
<title>rocksdb::MemTableIterator::VerifyEntryChecksum (151,515,150 samples, 0.02%)</title><rect x="629.6" y="389" width="0.3" height="15.0" fill="rgb(235,99,10)" rx="2" ry="2" />
<text  x="632.62" y="399.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (161,616,160 samples, 0.03%)</title><rect x="203.4" y="677" width="0.3" height="15.0" fill="rgb(245,3,40)" rx="2" ry="2" />
<text  x="206.41" y="687.5" ></text>
</g>
<g >
<title>rocksdb::BinaryHeap&lt;rocksdb::CompactionMergingIterator::HeapItem*, rocksdb::CompactionMergingIterator::CompactionHeapItemComparator&gt;::top (191,919,190 samples, 0.03%)</title><rect x="807.1" y="437" width="0.4" height="15.0" fill="rgb(213,102,53)" rx="2" ry="2" />
<text  x="810.12" y="447.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::IOOptions (90,909,090 samples, 0.01%)</title><rect x="571.2" y="341" width="0.2" height="15.0" fill="rgb(220,159,30)" rx="2" ry="2" />
<text  x="574.24" y="351.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::EnlargeBufferIfNeeded (60,606,060 samples, 0.01%)</title><rect x="648.3" y="373" width="0.1" height="15.0" fill="rgb(228,11,21)" rx="2" ry="2" />
<text  x="651.25" y="383.5" ></text>
</g>
<g >
<title>rocksdb::ShortenedIndexBuilder::OnKeyAdded (171,717,170 samples, 0.03%)</title><rect x="611.9" y="437" width="0.3" height="15.0" fill="rgb(235,111,47)" rx="2" ry="2" />
<text  x="614.88" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (70,707,070 samples, 0.01%)</title><rect x="842.8" y="229" width="0.2" height="15.0" fill="rgb(240,227,40)" rx="2" ry="2" />
<text  x="845.84" y="239.5" ></text>
</g>
<g >
<title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (90,909,090 samples, 0.01%)</title><rect x="1053.9" y="437" width="0.2" height="15.0" fill="rgb(218,188,52)" rx="2" ry="2" />
<text  x="1056.89" y="447.5" ></text>
</g>
<g >
<title>rocksdb::InternalKey::DecodeFrom (151,515,150 samples, 0.02%)</title><rect x="712.8" y="453" width="0.3" height="15.0" fill="rgb(237,124,13)" rx="2" ry="2" />
<text  x="715.77" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (212,121,210 samples, 0.03%)</title><rect x="908.9" y="309" width="0.4" height="15.0" fill="rgb(233,165,15)" rx="2" ry="2" />
<text  x="911.94" y="319.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (60,606,060 samples, 0.01%)</title><rect x="142.8" y="597" width="0.1" height="15.0" fill="rgb(225,40,3)" rx="2" ry="2" />
<text  x="145.79" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (212,121,210 samples, 0.03%)</title><rect x="747.3" y="405" width="0.4" height="15.0" fill="rgb(249,89,6)" rx="2" ry="2" />
<text  x="750.26" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Status::MustCheck@plt (171,717,170 samples, 0.03%)</title><rect x="1126.8" y="469" width="0.3" height="15.0" fill="rgb(248,41,52)" rx="2" ry="2" />
<text  x="1129.77" y="479.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::NextAndGetResult (181,818,180 samples, 0.03%)</title><rect x="774.9" y="437" width="0.3" height="15.0" fill="rgb(239,191,47)" rx="2" ry="2" />
<text  x="777.91" y="447.5" ></text>
</g>
<g >
<title>rocksdb::ThreadPoolImpl::Impl::BGThread (224,373,735,130 samples, 35.11%)</title><rect x="765.1" y="725" width="414.3" height="15.0" fill="rgb(254,208,25)" rx="2" ry="2" />
<text  x="768.11" y="735.5" >rocksdb::ThreadPoolImpl::Impl::BGThread</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (141,414,140 samples, 0.02%)</title><rect x="1128.4" y="389" width="0.3" height="15.0" fill="rgb(250,132,19)" rx="2" ry="2" />
<text  x="1131.43" y="399.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok@plt (60,606,060 samples, 0.01%)</title><rect x="968.6" y="469" width="0.1" height="15.0" fill="rgb(208,99,53)" rx="2" ry="2" />
<text  x="971.56" y="479.5" ></text>
</g>
<g >
<title>rocksdb::DeleteDBFile (80,808,080 samples, 0.01%)</title><rect x="1179.3" y="517" width="0.1" height="15.0" fill="rgb(233,127,11)" rx="2" ry="2" />
<text  x="1182.29" y="527.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="856.7" y="245" width="0.1" height="15.0" fill="rgb(253,169,30)" rx="2" ry="2" />
<text  x="859.70" y="255.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockIter::ParseNextDataKey (151,515,150 samples, 0.02%)</title><rect x="876.0" y="373" width="0.3" height="15.0" fill="rgb(249,210,21)" rx="2" ry="2" />
<text  x="879.02" y="383.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (606,060,600 samples, 0.09%)</title><rect x="1026.6" y="213" width="1.1" height="15.0" fill="rgb(238,33,46)" rx="2" ry="2" />
<text  x="1029.60" y="223.5" ></text>
</g>
<g >
<title>rocksdb::NotifyCollectTableCollectorsOnAdd (252,525,250 samples, 0.04%)</title><rect x="1113.9" y="469" width="0.5" height="15.0" fill="rgb(226,51,3)" rx="2" ry="2" />
<text  x="1116.90" y="479.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (171,717,170 samples, 0.03%)</title><rect x="142.4" y="597" width="0.3" height="15.0" fill="rgb(252,90,46)" rx="2" ry="2" />
<text  x="145.38" y="607.5" ></text>
</g>
<g >
<title>rocksdb::IsExtendedValueType (151,515,150 samples, 0.02%)</title><rect x="662.0" y="389" width="0.3" height="15.0" fill="rgb(237,138,45)" rx="2" ry="2" />
<text  x="665.04" y="399.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (333,333,330 samples, 0.05%)</title><rect x="255.6" y="677" width="0.6" height="15.0" fill="rgb(247,41,46)" rx="2" ry="2" />
<text  x="258.62" y="687.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::MemTableInserter::PutCFImpl (46,181,817,720 samples, 7.23%)</title><rect x="59.2" y="661" width="85.3" height="15.0" fill="rgb(253,197,44)" rx="2" ry="2" />
<text  x="62.19" y="671.5" >rocksdb::(..</text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::get (767,676,760 samples, 0.12%)</title><rect x="987.3" y="453" width="1.4" height="15.0" fill="rgb(234,98,11)" rx="2" ry="2" />
<text  x="990.30" y="463.5" ></text>
</g>
<g >
<title>grab_cache_page_write_begin (282,828,280 samples, 0.04%)</title><rect x="572.7" y="133" width="0.6" height="15.0" fill="rgb(231,123,11)" rx="2" ry="2" />
<text  x="575.73" y="143.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;@plt (121,212,120 samples, 0.02%)</title><rect x="841.2" y="293" width="0.2" height="15.0" fill="rgb(205,56,49)" rx="2" ry="2" />
<text  x="844.20" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator= (80,808,080 samples, 0.01%)</title><rect x="185.9" y="661" width="0.2" height="15.0" fill="rgb(217,27,47)" rx="2" ry="2" />
<text  x="188.93" y="671.5" ></text>
</g>
<g >
<title>rocksdb::ComputeBuiltinChecksum (252,525,250 samples, 0.04%)</title><rect x="863.0" y="245" width="0.5" height="15.0" fill="rgb(225,162,49)" rx="2" ry="2" />
<text  x="866.04" y="255.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (151,515,150 samples, 0.02%)</title><rect x="452.0" y="709" width="0.3" height="15.0" fill="rgb(247,31,49)" rx="2" ry="2" />
<text  x="455.01" y="719.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (171,717,170 samples, 0.03%)</title><rect x="139.4" y="629" width="0.3" height="15.0" fill="rgb(207,174,7)" rx="2" ry="2" />
<text  x="142.36" y="639.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::TableBuilder*, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt; (171,717,170 samples, 0.03%)</title><rect x="1150.3" y="405" width="0.4" height="15.0" fill="rgb(209,9,50)" rx="2" ry="2" />
<text  x="1153.34" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SstPartitioner, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt;::get (474,747,470 samples, 0.07%)</title><rect x="1155.6" y="453" width="0.9" height="15.0" fill="rgb(231,135,22)" rx="2" ry="2" />
<text  x="1158.59" y="463.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (818,181,810 samples, 0.13%)</title><rect x="572.1" y="181" width="1.5" height="15.0" fill="rgb(206,124,38)" rx="2" ry="2" />
<text  x="575.11" y="191.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::CompactionIterator::CompactionProxy*, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt; (222,222,220 samples, 0.03%)</title><rect x="698.0" y="341" width="0.4" height="15.0" fill="rgb(212,97,34)" rx="2" ry="2" />
<text  x="700.96" y="351.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::status (1,595,959,580 samples, 0.25%)</title><rect x="845.8" y="373" width="3.0" height="15.0" fill="rgb(238,81,30)" rx="2" ry="2" />
<text  x="848.84" y="383.5" ></text>
</g>
<g >
<title>TLS wrapper function for rocksdb::perf_context (747,474,740 samples, 0.12%)</title><rect x="1117.0" y="421" width="1.3" height="15.0" fill="rgb(214,152,1)" rx="2" ry="2" />
<text  x="1119.96" y="431.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::Next (5,989,898,930 samples, 0.94%)</title><rect x="623.3" y="421" width="11.1" height="15.0" fill="rgb(240,164,8)" rx="2" ry="2" />
<text  x="626.33" y="431.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::NextAndGetResult (9,929,292,830 samples, 1.55%)</title><rect x="859.9" y="421" width="18.3" height="15.0" fill="rgb(251,27,11)" rx="2" ry="2" />
<text  x="862.87" y="431.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="750.1" y="453" width="0.1" height="15.0" fill="rgb(246,140,21)" rx="2" ry="2" />
<text  x="753.10" y="463.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (60,606,060 samples, 0.01%)</title><rect x="56.7" y="597" width="0.1" height="15.0" fill="rgb(212,27,31)" rx="2" ry="2" />
<text  x="59.67" y="607.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (575,757,570 samples, 0.09%)</title><rect x="1138.0" y="373" width="1.1" height="15.0" fill="rgb(246,77,54)" rx="2" ry="2" />
<text  x="1141.00" y="383.5" ></text>
</g>
<g >
<title>[unknown] (3,323,232,290 samples, 0.52%)</title><rect x="754.7" y="837" width="6.2" height="15.0" fill="rgb(228,114,27)" rx="2" ry="2" />
<text  x="757.72" y="847.5" ></text>
</g>
<g >
<title>std::operator== (313,131,310 samples, 0.05%)</title><rect x="993.8" y="453" width="0.6" height="15.0" fill="rgb(253,82,11)" rx="2" ry="2" />
<text  x="996.79" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::__uniq_ptr_impl (191,919,190 samples, 0.03%)</title><rect x="477.6" y="709" width="0.4" height="15.0" fill="rgb(222,104,45)" rx="2" ry="2" />
<text  x="480.62" y="719.5" ></text>
</g>
<g >
<title>__tls_get_addr (111,111,110 samples, 0.02%)</title><rect x="25.1" y="709" width="0.2" height="15.0" fill="rgb(220,2,29)" rx="2" ry="2" />
<text  x="28.07" y="719.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (121,212,120 samples, 0.02%)</title><rect x="905.8" y="309" width="0.2" height="15.0" fill="rgb(214,200,37)" rx="2" ry="2" />
<text  x="908.77" y="319.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::key (7,030,302,960 samples, 1.10%)</title><rect x="669.4" y="421" width="13.0" height="15.0" fill="rgb(253,202,27)" rx="2" ry="2" />
<text  x="672.42" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_M_head (60,606,060 samples, 0.01%)</title><rect x="890.1" y="309" width="0.1" height="15.0" fill="rgb(206,229,5)" rx="2" ry="2" />
<text  x="893.09" y="319.5" ></text>
</g>
<g >
<title>rocksdb::ThreadStatusUtil::SetThreadOperationProperty (1,414,141,400 samples, 0.22%)</title><rect x="744.6" y="453" width="2.6" height="15.0" fill="rgb(232,183,26)" rx="2" ry="2" />
<text  x="747.63" y="463.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::MemTableInserter::CheckMemtableFull (181,818,180 samples, 0.03%)</title><rect x="59.5" y="645" width="0.4" height="15.0" fill="rgb(254,222,4)" rx="2" ry="2" />
<text  x="62.52" y="655.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="840.6" y="277" width="0.1" height="15.0" fill="rgb(205,65,4)" rx="2" ry="2" />
<text  x="843.56" y="287.5" ></text>
</g>
<g >
<title>rocksdb::FlushBlockBySizePolicy::Update (2,898,989,870 samples, 0.45%)</title><rect x="591.8" y="437" width="5.3" height="15.0" fill="rgb(254,90,43)" rx="2" ry="2" />
<text  x="594.77" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (252,525,250 samples, 0.04%)</title><rect x="840.5" y="293" width="0.5" height="15.0" fill="rgb(228,144,40)" rx="2" ry="2" />
<text  x="843.51" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (161,616,160 samples, 0.03%)</title><rect x="145.3" y="645" width="0.3" height="15.0" fill="rgb(251,134,10)" rx="2" ry="2" />
<text  x="148.31" y="655.5" ></text>
</g>
<g >
<title>generic_write_end (151,515,150 samples, 0.02%)</title><rect x="1027.3" y="149" width="0.3" height="15.0" fill="rgb(245,15,47)" rx="2" ry="2" />
<text  x="1030.29" y="159.5" ></text>
</g>
<g >
<title>rocksdb::EncodeFixed32 (80,808,080 samples, 0.01%)</title><rect x="469.1" y="725" width="0.2" height="15.0" fill="rgb(239,50,47)" rx="2" ry="2" />
<text  x="472.13" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (404,040,400 samples, 0.06%)</title><rect x="577.9" y="341" width="0.8" height="15.0" fill="rgb(231,59,25)" rx="2" ry="2" />
<text  x="580.92" y="351.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (232,323,230 samples, 0.04%)</title><rect x="598.1" y="405" width="0.5" height="15.0" fill="rgb(223,70,40)" rx="2" ry="2" />
<text  x="601.13" y="415.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (60,606,060 samples, 0.01%)</title><rect x="720.9" y="437" width="0.1" height="15.0" fill="rgb(241,133,25)" rx="2" ry="2" />
<text  x="723.92" y="447.5" ></text>
</g>
<g >
<title>std::tuple&lt;char const*, std::default_delete&lt;char const []&gt; &gt;::tuple&lt;true, true&gt; (242,424,240 samples, 0.04%)</title><rect x="952.7" y="357" width="0.4" height="15.0" fill="rgb(205,179,30)" rx="2" ry="2" />
<text  x="955.70" y="367.5" ></text>
</g>
<g >
<title>rocksdb::Slice::Slice (878,787,870 samples, 0.14%)</title><rect x="99.6" y="485" width="1.6" height="15.0" fill="rgb(223,88,34)" rx="2" ry="2" />
<text  x="102.57" y="495.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::KeyCommitted (90,909,090 samples, 0.01%)</title><rect x="930.3" y="469" width="0.1" height="15.0" fill="rgb(210,138,6)" rx="2" ry="2" />
<text  x="933.26" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IndexBuilder, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt;::operator (202,020,200 samples, 0.03%)</title><rect x="1154.9" y="469" width="0.3" height="15.0" fill="rgb(214,19,4)" rx="2" ry="2" />
<text  x="1157.86" y="479.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::Tracer*, std::default_delete&lt;rocksdb::Tracer&gt; &gt; (101,010,100 samples, 0.02%)</title><rect x="459.9" y="661" width="0.2" height="15.0" fill="rgb(246,176,29)" rx="2" ry="2" />
<text  x="462.94" y="671.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="911.4" y="325" width="0.1" height="15.0" fill="rgb(226,111,45)" rx="2" ry="2" />
<text  x="914.39" y="335.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::IsShuttingDown (121,212,120 samples, 0.02%)</title><rect x="644.3" y="421" width="0.2" height="15.0" fill="rgb(219,47,15)" rx="2" ry="2" />
<text  x="647.32" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::FlushBlockPolicy, std::default_delete&lt;rocksdb::FlushBlockPolicy&gt; &gt;::_M_ptr (232,323,230 samples, 0.04%)</title><rect x="1074.2" y="437" width="0.4" height="15.0" fill="rgb(231,48,7)" rx="2" ry="2" />
<text  x="1077.19" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (404,040,400 samples, 0.06%)</title><rect x="879.7" y="325" width="0.8" height="15.0" fill="rgb(234,12,29)" rx="2" ry="2" />
<text  x="882.71" y="335.5" ></text>
</g>
<g >
<title>ext4_writepages (141,414,140 samples, 0.02%)</title><rect x="1145.9" y="197" width="0.3" height="15.0" fill="rgb(248,205,29)" rx="2" ry="2" />
<text  x="1148.94" y="207.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::_M_ptr (60,606,060 samples, 0.01%)</title><rect x="697.4" y="389" width="0.1" height="15.0" fill="rgb(220,197,45)" rx="2" ry="2" />
<text  x="700.37" y="399.5" ></text>
</g>
<g >
<title>rocksdb::CompactionRangeDelAggregator::ShouldDelete (3,010,100,980 samples, 0.47%)</title><rect x="655.8" y="405" width="5.6" height="15.0" fill="rgb(242,6,50)" rx="2" ry="2" />
<text  x="658.85" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::rend (303,030,300 samples, 0.05%)</title><rect x="1000.5" y="485" width="0.5" height="15.0" fill="rgb(225,12,1)" rx="2" ry="2" />
<text  x="1003.49" y="495.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::IsValid (191,919,190 samples, 0.03%)</title><rect x="1004.3" y="485" width="0.3" height="15.0" fill="rgb(221,227,0)" rx="2" ry="2" />
<text  x="1007.26" y="495.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (70,707,070 samples, 0.01%)</title><rect x="858.9" y="373" width="0.1" height="15.0" fill="rgb(210,39,1)" rx="2" ry="2" />
<text  x="861.90" y="383.5" ></text>
</g>
<g >
<title>rocksdb::DeleteScheduler::DeleteFile (80,808,080 samples, 0.01%)</title><rect x="1179.3" y="485" width="0.1" height="15.0" fill="rgb(248,129,38)" rx="2" ry="2" />
<text  x="1182.29" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt;, std::default_delete&lt;rocksdb::InternalIteratorBase&lt;rocksdb::IndexValue&gt; &gt; &gt;::get (131,313,130 samples, 0.02%)</title><rect x="903.2" y="357" width="0.2" height="15.0" fill="rgb(209,148,6)" rx="2" ry="2" />
<text  x="906.20" y="367.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::Sync (131,313,130 samples, 0.02%)</title><rect x="562.0" y="485" width="0.3" height="15.0" fill="rgb(208,116,39)" rx="2" ry="2" />
<text  x="565.04" y="495.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (70,707,070 samples, 0.01%)</title><rect x="902.5" y="325" width="0.1" height="15.0" fill="rgb(246,78,2)" rx="2" ry="2" />
<text  x="905.49" y="335.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Valid (202,020,200 samples, 0.03%)</title><rect x="877.3" y="405" width="0.3" height="15.0" fill="rgb(245,37,13)" rx="2" ry="2" />
<text  x="880.25" y="415.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (383,838,380 samples, 0.06%)</title><rect x="1123.5" y="405" width="0.7" height="15.0" fill="rgb(229,109,13)" rx="2" ry="2" />
<text  x="1126.54" y="415.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::ok (2,383,838,360 samples, 0.37%)</title><rect x="1031.6" y="453" width="4.4" height="15.0" fill="rgb(220,123,36)" rx="2" ry="2" />
<text  x="1034.56" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator::CompactionProxy, std::default_delete&lt;rocksdb::CompactionIterator::CompactionProxy&gt; &gt;::get (90,909,090 samples, 0.01%)</title><rect x="973.6" y="453" width="0.1" height="15.0" fill="rgb(209,167,14)" rx="2" ry="2" />
<text  x="976.56" y="463.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (585,858,580 samples, 0.09%)</title><rect x="737.3" y="341" width="1.1" height="15.0" fill="rgb(213,24,14)" rx="2" ry="2" />
<text  x="740.30" y="351.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (90,909,090 samples, 0.01%)</title><rect x="1164.9" y="501" width="0.2" height="15.0" fill="rgb(206,214,49)" rx="2" ry="2" />
<text  x="1167.93" y="511.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (232,323,230 samples, 0.04%)</title><rect x="955.0" y="421" width="0.5" height="15.0" fill="rgb(207,148,40)" rx="2" ry="2" />
<text  x="958.03" y="431.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (224,373,735,130 samples, 35.11%)</title><rect x="765.1" y="613" width="414.3" height="15.0" fill="rgb(226,8,47)" rx="2" ry="2" />
<text  x="768.11" y="623.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>rocksdb::Cleanable::Reset (363,636,360 samples, 0.06%)</title><rect x="925.5" y="469" width="0.7" height="15.0" fill="rgb(221,21,7)" rx="2" ry="2" />
<text  x="928.51" y="479.5" ></text>
</g>
<g >
<title>std::min&lt;unsigned long&gt; (141,414,140 samples, 0.02%)</title><rect x="1146.9" y="469" width="0.3" height="15.0" fill="rgb(248,129,36)" rx="2" ry="2" />
<text  x="1149.93" y="479.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::value (434,343,430 samples, 0.07%)</title><rect x="965.5" y="421" width="0.8" height="15.0" fill="rgb(221,127,0)" rx="2" ry="2" />
<text  x="968.46" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (70,707,070 samples, 0.01%)</title><rect x="648.7" y="389" width="0.2" height="15.0" fill="rgb(244,199,47)" rx="2" ry="2" />
<text  x="651.72" y="399.5" ></text>
</g>
<g >
<title>__memmove_evex_unaligned_erms (1,494,949,480 samples, 0.23%)</title><rect x="760.9" y="837" width="2.7" height="15.0" fill="rgb(213,204,30)" rx="2" ry="2" />
<text  x="763.86" y="847.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (161,616,160 samples, 0.03%)</title><rect x="1012.9" y="437" width="0.3" height="15.0" fill="rgb(228,221,33)" rx="2" ry="2" />
<text  x="1015.88" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (151,515,150 samples, 0.02%)</title><rect x="10.0" y="837" width="0.3" height="15.0" fill="rgb(225,85,29)" rx="2" ry="2" />
<text  x="13.00" y="847.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;53ul&gt; (555,555,550 samples, 0.09%)</title><rect x="1093.8" y="453" width="1.1" height="15.0" fill="rgb(229,172,0)" rx="2" ry="2" />
<text  x="1096.83" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::InternalKeyComparator, std::default_delete&lt;rocksdb::InternalKeyComparator&gt; &gt;::__uniq_ptr_impl (90,909,090 samples, 0.01%)</title><rect x="861.3" y="213" width="0.2" height="15.0" fill="rgb(232,181,3)" rx="2" ry="2" />
<text  x="864.29" y="223.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (121,212,120 samples, 0.02%)</title><rect x="890.0" y="341" width="0.2" height="15.0" fill="rgb(210,41,22)" rx="2" ry="2" />
<text  x="892.97" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (60,606,060 samples, 0.01%)</title><rect x="722.8" y="325" width="0.2" height="15.0" fill="rgb(248,51,21)" rx="2" ry="2" />
<text  x="725.85" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;::operator (999,999,990 samples, 0.16%)</title><rect x="1064.7" y="437" width="1.8" height="15.0" fill="rgb(240,158,4)" rx="2" ry="2" />
<text  x="1067.65" y="447.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Next (222,222,220 samples, 0.03%)</title><rect x="772.1" y="469" width="0.4" height="15.0" fill="rgb(233,27,34)" rx="2" ry="2" />
<text  x="775.07" y="479.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (90,909,090 samples, 0.01%)</title><rect x="1167.6" y="469" width="0.1" height="15.0" fill="rgb(219,93,38)" rx="2" ry="2" />
<text  x="1170.56" y="479.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;1ul, std::default_delete&lt;char const []&gt;&gt; (161,616,160 samples, 0.03%)</title><rect x="897.1" y="261" width="0.3" height="15.0" fill="rgb(238,202,35)" rx="2" ry="2" />
<text  x="900.08" y="271.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::CurrentSizeEstimate (181,818,180 samples, 0.03%)</title><rect x="1051.2" y="421" width="0.4" height="15.0" fill="rgb(210,167,19)" rx="2" ry="2" />
<text  x="1054.24" y="431.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::CreateMissingNewerLinks (141,414,140 samples, 0.02%)</title><rect x="186.2" y="693" width="0.2" height="15.0" fill="rgb(222,30,8)" rx="2" ry="2" />
<text  x="189.16" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::FileMetaData*, std::allocator&lt;rocksdb::FileMetaData*&gt; &gt;::empty (70,707,070 samples, 0.01%)</title><rect x="1099.6" y="453" width="0.2" height="15.0" fill="rgb(215,23,19)" rx="2" ry="2" />
<text  x="1102.63" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (101,010,100 samples, 0.02%)</title><rect x="495.3" y="677" width="0.2" height="15.0" fill="rgb(247,144,25)" rx="2" ry="2" />
<text  x="498.27" y="687.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (252,525,250 samples, 0.04%)</title><rect x="44.6" y="453" width="0.4" height="15.0" fill="rgb(253,13,7)" rx="2" ry="2" />
<text  x="47.58" y="463.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;41ul&gt; (80,808,080 samples, 0.01%)</title><rect x="203.9" y="709" width="0.2" height="15.0" fill="rgb(218,80,42)" rx="2" ry="2" />
<text  x="206.95" y="719.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (141,414,140 samples, 0.02%)</title><rect x="900.5" y="277" width="0.3" height="15.0" fill="rgb(231,102,50)" rx="2" ry="2" />
<text  x="903.49" y="287.5" ></text>
</g>
<g >
<title>rocksdb::IOStatus::operator= (60,606,060 samples, 0.01%)</title><rect x="34.3" y="661" width="0.1" height="15.0" fill="rgb(244,0,26)" rx="2" ry="2" />
<text  x="37.30" y="671.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (224,373,735,130 samples, 35.11%)</title><rect x="765.1" y="789" width="414.3" height="15.0" fill="rgb(232,42,43)" rx="2" ry="2" />
<text  x="768.11" y="799.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>rocksdb::Status::code (80,808,080 samples, 0.01%)</title><rect x="822.3" y="405" width="0.2" height="15.0" fill="rgb(223,222,52)" rx="2" ry="2" />
<text  x="825.32" y="415.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (191,919,190 samples, 0.03%)</title><rect x="883.1" y="309" width="0.3" height="15.0" fill="rgb(223,61,5)" rx="2" ry="2" />
<text  x="886.07" y="319.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableBuilder::Rep::GetStatus (1,121,212,110 samples, 0.18%)</title><rect x="1032.5" y="421" width="2.1" height="15.0" fill="rgb(236,30,19)" rx="2" ry="2" />
<text  x="1035.53" y="431.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::Writer::Writer (282,828,280 samples, 0.04%)</title><rect x="457.7" y="725" width="0.5" height="15.0" fill="rgb(221,175,33)" rx="2" ry="2" />
<text  x="460.70" y="735.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (191,919,190 samples, 0.03%)</title><rect x="897.4" y="277" width="0.4" height="15.0" fill="rgb(237,229,50)" rx="2" ry="2" />
<text  x="900.43" y="287.5" ></text>
</g>
<g >
<title>__memset_evex_unaligned_erms (90,909,090 samples, 0.01%)</title><rect x="710.8" y="405" width="0.2" height="15.0" fill="rgb(230,30,31)" rx="2" ry="2" />
<text  x="713.80" y="415.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::IsUserKey (60,606,060 samples, 0.01%)</title><rect x="871.6" y="341" width="0.1" height="15.0" fill="rgb(221,58,40)" rx="2" ry="2" />
<text  x="874.56" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (60,606,060 samples, 0.01%)</title><rect x="469.5" y="693" width="0.1" height="15.0" fill="rgb(231,132,50)" rx="2" ry="2" />
<text  x="472.53" y="703.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="853.9" y="245" width="0.1" height="15.0" fill="rgb(231,171,0)" rx="2" ry="2" />
<text  x="856.88" y="255.5" ></text>
</g>
<g >
<title>rocksdb::lru_cache::LRUCacheShard::InsertItem (222,222,220 samples, 0.03%)</title><rect x="830.8" y="245" width="0.4" height="15.0" fill="rgb(236,153,51)" rx="2" ry="2" />
<text  x="833.83" y="255.5" ></text>
</g>
<g >
<title>rocksdb::IterKey::SetKeyImpl (757,575,750 samples, 0.12%)</title><rect x="935.8" y="437" width="1.4" height="15.0" fill="rgb(228,71,51)" rx="2" ry="2" />
<text  x="938.78" y="447.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::CompactionIterator*, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt; (828,282,820 samples, 0.13%)</title><rect x="1173.3" y="437" width="1.6" height="15.0" fill="rgb(228,225,41)" rx="2" ry="2" />
<text  x="1176.32" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (717,171,710 samples, 0.11%)</title><rect x="652.2" y="373" width="1.3" height="15.0" fill="rgb(220,134,10)" rx="2" ry="2" />
<text  x="655.17" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (131,313,130 samples, 0.02%)</title><rect x="840.7" y="277" width="0.3" height="15.0" fill="rgb(212,186,11)" rx="2" ry="2" />
<text  x="843.73" y="287.5" ></text>
</g>
<g >
<title>rocksdb::ShardedCache&lt;rocksdb::lru_cache::LRUCacheShard&gt;::Lookup (70,707,070 samples, 0.01%)</title><rect x="866.4" y="261" width="0.1" height="15.0" fill="rgb(234,60,18)" rx="2" ry="2" />
<text  x="869.38" y="271.5" ></text>
</g>
<g >
<title>XXH3_64bits_internal (383,838,380 samples, 0.06%)</title><rect x="569.7" y="341" width="0.8" height="15.0" fill="rgb(211,74,11)" rx="2" ry="2" />
<text  x="572.75" y="351.5" ></text>
</g>
<g >
<title>[unknown] (80,808,080 samples, 0.01%)</title><rect x="10.3" y="821" width="0.1" height="15.0" fill="rgb(222,70,16)" rx="2" ry="2" />
<text  x="13.28" y="831.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (151,515,150 samples, 0.02%)</title><rect x="842.7" y="261" width="0.3" height="15.0" fill="rgb(231,197,0)" rx="2" ry="2" />
<text  x="845.69" y="271.5" ></text>
</g>
<g >
<title>TLS init function for rocksdb::iostats_context (181,818,180 samples, 0.03%)</title><rect x="564.1" y="453" width="0.3" height="15.0" fill="rgb(224,92,46)" rx="2" ry="2" />
<text  x="567.11" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (686,868,680 samples, 0.11%)</title><rect x="484.7" y="789" width="1.3" height="15.0" fill="rgb(231,12,7)" rx="2" ry="2" />
<text  x="487.69" y="799.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (80,808,080 samples, 0.01%)</title><rect x="1070.1" y="453" width="0.2" height="15.0" fill="rgb(237,85,39)" rx="2" ry="2" />
<text  x="1073.14" y="463.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::AddWithLastKeyImpl (141,414,140 samples, 0.02%)</title><rect x="1067.7" y="421" width="0.2" height="15.0" fill="rgb(206,219,54)" rx="2" ry="2" />
<text  x="1070.68" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator bool (151,515,150 samples, 0.02%)</title><rect x="908.2" y="357" width="0.3" height="15.0" fill="rgb(205,86,44)" rx="2" ry="2" />
<text  x="911.20" y="367.5" ></text>
</g>
<g >
<title>vfs_write (818,181,810 samples, 0.13%)</title><rect x="572.1" y="229" width="1.5" height="15.0" fill="rgb(218,157,22)" rx="2" ry="2" />
<text  x="575.11" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::get (70,707,070 samples, 0.01%)</title><rect x="150.9" y="709" width="0.1" height="15.0" fill="rgb(222,159,43)" rx="2" ry="2" />
<text  x="153.90" y="719.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Valid (70,707,070 samples, 0.01%)</title><rect x="823.9" y="389" width="0.1" height="15.0" fill="rgb(243,158,20)" rx="2" ry="2" />
<text  x="826.89" y="399.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ExtractLargeValueIfNeeded@plt (90,909,090 samples, 0.01%)</title><rect x="916.0" y="485" width="0.1" height="15.0" fill="rgb(252,226,11)" rx="2" ry="2" />
<text  x="918.97" y="495.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::ParseNextKey&lt;rocksdb::DecodeEntry&gt; (1,515,151,500 samples, 0.24%)</title><rect x="872.9" y="341" width="2.8" height="15.0" fill="rgb(237,41,19)" rx="2" ry="2" />
<text  x="875.87" y="351.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Data::Process (424,242,420 samples, 0.07%)</title><rect x="724.6" y="405" width="0.7" height="15.0" fill="rgb(239,188,46)" rx="2" ry="2" />
<text  x="727.56" y="415.5" ></text>
</g>
<g >
<title>do_user_addr_fault (404,040,400 samples, 0.06%)</title><rect x="559.4" y="789" width="0.7" height="15.0" fill="rgb(230,211,43)" rx="2" ry="2" />
<text  x="562.39" y="799.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::_Deque_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="703.4" y="421" width="0.2" height="15.0" fill="rgb(229,55,8)" rx="2" ry="2" />
<text  x="706.41" y="431.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::load (373,737,370 samples, 0.06%)</title><rect x="770.5" y="485" width="0.7" height="15.0" fill="rgb(219,180,36)" rx="2" ry="2" />
<text  x="773.47" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;rocksdb::Status  (161,616,160 samples, 0.03%)</title><rect x="1145.9" y="469" width="0.3" height="15.0" fill="rgb(229,135,2)" rx="2" ry="2" />
<text  x="1148.91" y="479.5" ></text>
</g>
<g >
<title>std::chrono::operator==&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt;@plt (101,010,100 samples, 0.02%)</title><rect x="269.9" y="693" width="0.2" height="15.0" fill="rgb(251,143,33)" rx="2" ry="2" />
<text  x="272.92" y="703.5" ></text>
</g>
<g >
<title>__sched_yield (79,181,817,390 samples, 12.39%)</title><rect x="297.1" y="677" width="146.2" height="15.0" fill="rgb(205,210,51)" rx="2" ry="2" />
<text  x="300.06" y="687.5" >__sched_yield</text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::IndexBuilder, std::default_delete&lt;rocksdb::IndexBuilder&gt; &gt;::get (1,010,101,000 samples, 0.16%)</title><rect x="1077.2" y="437" width="1.9" height="15.0" fill="rgb(253,101,20)" rx="2" ry="2" />
<text  x="1080.23" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::_M_ptr (717,171,710 samples, 0.11%)</title><rect x="614.7" y="389" width="1.4" height="15.0" fill="rgb(215,5,4)" rx="2" ry="2" />
<text  x="617.74" y="399.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (171,717,170 samples, 0.03%)</title><rect x="682.1" y="373" width="0.3" height="15.0" fill="rgb(228,149,7)" rx="2" ry="2" />
<text  x="685.05" y="383.5" ></text>
</g>
<g >
<title>rocksdb::CachableEntry&lt;rocksdb::Block&gt;::DeleteValue (80,808,080 samples, 0.01%)</title><rect x="869.0" y="277" width="0.2" height="15.0" fill="rgb(225,211,2)" rx="2" ry="2" />
<text  x="872.01" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::default_delete&lt;char const []&gt;, true&gt;::_M_head (111,111,110 samples, 0.02%)</title><rect x="1136.6" y="341" width="0.2" height="15.0" fill="rgb(236,91,28)" rx="2" ry="2" />
<text  x="1139.62" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_S_key (292,929,290 samples, 0.05%)</title><rect x="486.7" y="757" width="0.5" height="15.0" fill="rgb(229,90,30)" rx="2" ry="2" />
<text  x="489.69" y="767.5" ></text>
</g>
<g >
<title>std::move&lt;rocksdb::Status::Code&amp;&gt; (151,515,150 samples, 0.02%)</title><rect x="749.2" y="453" width="0.3" height="15.0" fill="rgb(240,197,14)" rx="2" ry="2" />
<text  x="752.24" y="463.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::UpdateGrandparentBoundaryInfo (141,414,140 samples, 0.02%)</title><rect x="1100.6" y="469" width="0.3" height="15.0" fill="rgb(208,18,45)" rx="2" ry="2" />
<text  x="1103.64" y="479.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="857.0" y="245" width="0.2" height="15.0" fill="rgb(247,102,51)" rx="2" ry="2" />
<text  x="860.03" y="255.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (606,060,600 samples, 0.09%)</title><rect x="1026.6" y="197" width="1.1" height="15.0" fill="rgb(213,225,11)" rx="2" ry="2" />
<text  x="1029.60" y="207.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt;::_Tuple_impl (191,919,190 samples, 0.03%)</title><rect x="910.8" y="309" width="0.4" height="15.0" fill="rgb(240,112,16)" rx="2" ry="2" />
<text  x="913.81" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_node (151,515,150 samples, 0.02%)</title><rect x="63.0" y="565" width="0.2" height="15.0" fill="rgb(215,154,24)" rx="2" ry="2" />
<text  x="65.95" y="575.5" ></text>
</g>
<g >
<title>rocksdb::Slice::remove_prefix (70,707,070 samples, 0.01%)</title><rect x="147.3" y="677" width="0.1" height="15.0" fill="rgb(227,151,46)" rx="2" ry="2" />
<text  x="150.30" y="687.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Valid (60,606,060 samples, 0.01%)</title><rect x="914.5" y="453" width="0.1" height="15.0" fill="rgb(241,199,27)" rx="2" ry="2" />
<text  x="917.50" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (464,646,460 samples, 0.07%)</title><rect x="1128.0" y="469" width="0.8" height="15.0" fill="rgb(212,221,19)" rx="2" ry="2" />
<text  x="1130.98" y="479.5" ></text>
</g>
<g >
<title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (90,909,090 samples, 0.01%)</title><rect x="716.2" y="421" width="0.2" height="15.0" fill="rgb(243,89,46)" rx="2" ry="2" />
<text  x="719.21" y="431.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (70,707,070 samples, 0.01%)</title><rect x="717.3" y="421" width="0.1" height="15.0" fill="rgb(247,55,9)" rx="2" ry="2" />
<text  x="720.25" y="431.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="885.6" y="389" width="0.2" height="15.0" fill="rgb(213,114,38)" rx="2" ry="2" />
<text  x="888.59" y="399.5" ></text>
</g>
<g >
<title>rocksdb::Status::operator= (60,606,060 samples, 0.01%)</title><rect x="473.1" y="725" width="0.1" height="15.0" fill="rgb(234,195,12)" rx="2" ry="2" />
<text  x="476.13" y="735.5" ></text>
</g>
<g >
<title>rocksdb::OutputValidator::Add (101,010,100 samples, 0.02%)</title><rect x="1161.8" y="485" width="0.2" height="15.0" fill="rgb(238,5,37)" rx="2" ry="2" />
<text  x="1164.80" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;rocksdb::CompactionOutputs::Output*, std::vector&lt;rocksdb::CompactionOutputs::Output, std::allocator&lt;rocksdb::CompactionOutputs::Output&gt; &gt; &gt;::__normal_iterator (171,717,170 samples, 0.03%)</title><rect x="1103.0" y="421" width="0.3" height="15.0" fill="rgb(253,220,22)" rx="2" ry="2" />
<text  x="1105.99" y="431.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyMemTablesImpl::ColumnFamilyMemTablesImpl (121,212,120 samples, 0.02%)</title><rect x="25.7" y="725" width="0.2" height="15.0" fill="rgb(247,227,23)" rx="2" ry="2" />
<text  x="28.67" y="735.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::InvokeFilterIfNeeded (484,848,480 samples, 0.08%)</title><rect x="634.5" y="437" width="0.9" height="15.0" fill="rgb(233,121,48)" rx="2" ry="2" />
<text  x="637.49" y="447.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt; (333,333,330 samples, 0.05%)</title><rect x="1149.2" y="469" width="0.6" height="15.0" fill="rgb(236,181,9)" rx="2" ry="2" />
<text  x="1152.19" y="479.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="845.1" y="293" width="0.2" height="15.0" fill="rgb(207,98,52)" rx="2" ry="2" />
<text  x="848.11" y="303.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (242,424,240 samples, 0.04%)</title><rect x="842.5" y="293" width="0.5" height="15.0" fill="rgb(244,154,11)" rx="2" ry="2" />
<text  x="845.54" y="303.5" ></text>
</g>
<g >
<title>rocksdb::log::Writer::EmitPhysicalRecord (3,080,808,050 samples, 0.48%)</title><rect x="40.2" y="677" width="5.7" height="15.0" fill="rgb(215,81,23)" rx="2" ry="2" />
<text  x="43.16" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::begin (101,010,100 samples, 0.02%)</title><rect x="55.4" y="677" width="0.2" height="15.0" fill="rgb(215,6,52)" rx="2" ry="2" />
<text  x="58.40" y="687.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (191,919,190 samples, 0.03%)</title><rect x="853.3" y="277" width="0.4" height="15.0" fill="rgb(210,71,48)" rx="2" ry="2" />
<text  x="856.34" y="287.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Valid (242,424,240 samples, 0.04%)</title><rect x="964.6" y="373" width="0.4" height="15.0" fill="rgb(248,140,24)" rx="2" ry="2" />
<text  x="967.56" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::~_Rb_tree (60,606,060 samples, 0.01%)</title><rect x="55.8" y="693" width="0.1" height="15.0" fill="rgb(232,210,39)" rx="2" ry="2" />
<text  x="58.79" y="703.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::CurrentSizeEstimate (313,131,310 samples, 0.05%)</title><rect x="1049.1" y="437" width="0.6" height="15.0" fill="rgb(234,124,6)" rx="2" ry="2" />
<text  x="1052.08" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SuperVersion, std::default_delete&lt;rocksdb::SuperVersion&gt; &gt;::unique_ptr&lt;std::default_delete&lt;rocksdb::SuperVersion&gt;, void&gt; (252,525,250 samples, 0.04%)</title><rect x="28.3" y="693" width="0.4" height="15.0" fill="rgb(222,39,10)" rx="2" ry="2" />
<text  x="31.28" y="703.5" ></text>
</g>
<g >
<title>rocksdb::Status::Status (131,313,130 samples, 0.02%)</title><rect x="139.4" y="613" width="0.2" height="15.0" fill="rgb(211,141,0)" rx="2" ry="2" />
<text  x="142.39" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::Tracer, std::default_delete&lt;rocksdb::Tracer&gt; &gt;::operator bool (232,323,230 samples, 0.04%)</title><rect x="459.7" y="725" width="0.4" height="15.0" fill="rgb(240,167,0)" rx="2" ry="2" />
<text  x="462.70" y="735.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, char const*, std::default_delete&lt;char const []&gt; &gt; (90,909,090 samples, 0.01%)</title><rect x="456.6" y="629" width="0.2" height="15.0" fill="rgb(232,176,9)" rx="2" ry="2" />
<text  x="459.62" y="639.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::TableBuilder, std::default_delete&lt;rocksdb::TableBuilder&gt; &gt;::_M_ptr (222,222,220 samples, 0.03%)</title><rect x="1084.1" y="405" width="0.4" height="15.0" fill="rgb(211,0,33)" rx="2" ry="2" />
<text  x="1087.07" y="415.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::CheckOutOfBound (70,707,070 samples, 0.01%)</title><rect x="825.1" y="357" width="0.1" height="15.0" fill="rgb(211,124,34)" rx="2" ry="2" />
<text  x="828.06" y="367.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (181,818,180 samples, 0.03%)</title><rect x="957.6" y="421" width="0.4" height="15.0" fill="rgb(207,166,12)" rx="2" ry="2" />
<text  x="960.63" y="431.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockHashIndexBuilder::Valid (80,808,080 samples, 0.01%)</title><rect x="1052.2" y="389" width="0.1" height="15.0" fill="rgb(222,15,52)" rx="2" ry="2" />
<text  x="1055.16" y="399.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, rocksdb::SstPartitioner*, std::default_delete&lt;rocksdb::SstPartitioner&gt; &gt; (515,151,510 samples, 0.08%)</title><rect x="1098.5" y="389" width="0.9" height="15.0" fill="rgb(220,130,1)" rx="2" ry="2" />
<text  x="1101.45" y="399.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader (141,414,140 samples, 0.02%)</title><rect x="186.7" y="725" width="0.2" height="15.0" fill="rgb(212,172,22)" rx="2" ry="2" />
<text  x="189.66" y="735.5" ></text>
</g>
<g >
<title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Valid (90,909,090 samples, 0.01%)</title><rect x="781.4" y="373" width="0.2" height="15.0" fill="rgb(219,120,26)" rx="2" ry="2" />
<text  x="784.42" y="383.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::ValidityInfo::SetValid (131,313,130 samples, 0.02%)</title><rect x="646.1" y="421" width="0.2" height="15.0" fill="rgb(243,28,51)" rx="2" ry="2" />
<text  x="649.05" y="431.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (90,909,090 samples, 0.01%)</title><rect x="908.3" y="325" width="0.2" height="15.0" fill="rgb(235,185,28)" rx="2" ry="2" />
<text  x="911.29" y="335.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::begin (121,212,120 samples, 0.02%)</title><rect x="803.6" y="405" width="0.2" height="15.0" fill="rgb(210,167,50)" rx="2" ry="2" />
<text  x="806.57" y="415.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid (272,727,270 samples, 0.04%)</title><rect x="765.9" y="517" width="0.5" height="15.0" fill="rgb(253,60,52)" rx="2" ry="2" />
<text  x="768.88" y="527.5" ></text>
</g>
<g >
<title>rocksdb::IndexBlockIter::ParseNextIndexKey (181,818,180 samples, 0.03%)</title><rect x="869.8" y="325" width="0.3" height="15.0" fill="rgb(209,193,51)" rx="2" ry="2" />
<text  x="872.81" y="335.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (1,343,434,330 samples, 0.21%)</title><rect x="36.2" y="501" width="2.5" height="15.0" fill="rgb(226,227,16)" rx="2" ry="2" />
<text  x="39.21" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::emplace_back&lt;unsigned int&gt; (161,616,160 samples, 0.03%)</title><rect x="586.1" y="389" width="0.3" height="15.0" fill="rgb(221,187,16)" rx="2" ry="2" />
<text  x="589.12" y="399.5" ></text>
</g>
<g >
<title>rocksdb::SequenceIterWrapper::Valid (1,464,646,450 samples, 0.23%)</title><rect x="958.0" y="469" width="2.7" height="15.0" fill="rgb(221,62,18)" rx="2" ry="2" />
<text  x="960.96" y="479.5" ></text>
</g>
<g >
<title>rocksdb::ColumnFamilyHandleImpl::GetComparator (111,111,110 samples, 0.02%)</title><rect x="480.1" y="757" width="0.2" height="15.0" fill="rgb(211,159,22)" rx="2" ry="2" />
<text  x="483.12" y="767.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, char const*, false&gt;::_M_head (101,010,100 samples, 0.02%)</title><rect x="840.8" y="245" width="0.2" height="15.0" fill="rgb(212,215,6)" rx="2" ry="2" />
<text  x="843.77" y="255.5" ></text>
</g>
<g >
<title>rocksdb::IndexValue::DecodeFrom (60,606,060 samples, 0.01%)</title><rect x="869.9" y="293" width="0.1" height="15.0" fill="rgb(232,94,10)" rx="2" ry="2" />
<text  x="872.92" y="303.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::Writer::ShouldWriteToMemtable (90,909,090 samples, 0.01%)</title><rect x="457.5" y="725" width="0.2" height="15.0" fill="rgb(220,178,34)" rx="2" ry="2" />
<text  x="460.53" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FSWritableFileTracingWrapper, std::default_delete&lt;rocksdb::FSWritableFileTracingWrapper&gt; &gt;::get (60,606,060 samples, 0.01%)</title><rect x="41.3" y="613" width="0.1" height="15.0" fill="rgb(214,121,7)" rx="2" ry="2" />
<text  x="44.30" y="623.5" ></text>
</g>
<g >
<title>rocksdb::(anonymous namespace)::LevelIterator::IsDeleteRangeSentinelKey (151,515,150 samples, 0.02%)</title><rect x="817.7" y="421" width="0.2" height="15.0" fill="rgb(248,67,22)" rx="2" ry="2" />
<text  x="820.66" y="431.5" ></text>
</g>
<g >
<title>std::operator!=&lt;rocksdb::WriteBatch::ProtectionInfo, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt; (111,111,110 samples, 0.02%)</title><rect x="32.1" y="677" width="0.2" height="15.0" fill="rgb(218,100,20)" rx="2" ry="2" />
<text  x="35.10" y="687.5" ></text>
</g>
<g >
<title>rocksdb::GetVarint32Ptr (5,484,848,430 samples, 0.86%)</title><rect x="671.1" y="373" width="10.2" height="15.0" fill="rgb(230,108,36)" rx="2" ry="2" />
<text  x="674.12" y="383.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (979,797,970 samples, 0.15%)</title><rect x="247.4" y="661" width="1.8" height="15.0" fill="rgb(238,86,30)" rx="2" ry="2" />
<text  x="250.43" y="671.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (161,616,160 samples, 0.03%)</title><rect x="495.2" y="709" width="0.3" height="15.0" fill="rgb(242,201,48)" rx="2" ry="2" />
<text  x="498.21" y="719.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (161,616,160 samples, 0.03%)</title><rect x="899.7" y="341" width="0.3" height="15.0" fill="rgb(205,122,23)" rx="2" ry="2" />
<text  x="902.71" y="351.5" ></text>
</g>
<g >
<title>rocksdb::WritableFileWriter::SyncInternal (151,515,150 samples, 0.02%)</title><rect x="1145.9" y="341" width="0.3" height="15.0" fill="rgb(247,139,35)" rx="2" ry="2" />
<text  x="1148.92" y="351.5" ></text>
</g>
<g >
<title>rocksdb::Compaction::grandparents (131,313,130 samples, 0.02%)</title><rect x="1085.8" y="453" width="0.3" height="15.0" fill="rgb(251,110,38)" rx="2" ry="2" />
<text  x="1088.84" y="463.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (292,929,290 samples, 0.05%)</title><rect x="1035.4" y="437" width="0.5" height="15.0" fill="rgb(243,68,25)" rx="2" ry="2" />
<text  x="1038.41" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::FilterBlockBuilder, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt;::operator bool (121,212,120 samples, 0.02%)</title><rect x="616.2" y="437" width="0.3" height="15.0" fill="rgb(214,87,15)" rx="2" ry="2" />
<text  x="619.25" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator= (80,808,080 samples, 0.01%)</title><rect x="46.1" y="661" width="0.2" height="15.0" fill="rgb(232,59,26)" rx="2" ry="2" />
<text  x="49.13" y="671.5" ></text>
</g>
<g >
<title>std::forward&lt;unsigned long&gt; (60,606,060 samples, 0.01%)</title><rect x="475.1" y="693" width="0.1" height="15.0" fill="rgb(246,157,7)" rx="2" ry="2" />
<text  x="478.06" y="703.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (585,858,580 samples, 0.09%)</title><rect x="739.5" y="341" width="1.1" height="15.0" fill="rgb(234,147,32)" rx="2" ry="2" />
<text  x="742.48" y="351.5" ></text>
</g>
<g >
<title>[libsnappy.so.1.1.8] (333,333,330 samples, 0.05%)</title><rect x="1179.4" y="821" width="0.7" height="15.0" fill="rgb(215,192,10)" rx="2" ry="2" />
<text  x="1182.44" y="831.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (272,727,270 samples, 0.04%)</title><rect x="271.5" y="677" width="0.5" height="15.0" fill="rgb(247,28,44)" rx="2" ry="2" />
<text  x="274.47" y="687.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="908.3" y="309" width="0.2" height="15.0" fill="rgb(229,0,37)" rx="2" ry="2" />
<text  x="911.33" y="319.5" ></text>
</g>
<g >
<title>rocksdb::CompactionOutputs::UpdateFilesToCutForTTLStates@plt (70,707,070 samples, 0.01%)</title><rect x="1100.5" y="469" width="0.1" height="15.0" fill="rgb(233,158,54)" rx="2" ry="2" />
<text  x="1103.50" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (222,222,220 samples, 0.03%)</title><rect x="910.0" y="293" width="0.4" height="15.0" fill="rgb(252,55,14)" rx="2" ry="2" />
<text  x="913.01" y="303.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Valid (202,020,200 samples, 0.03%)</title><rect x="965.7" y="405" width="0.4" height="15.0" fill="rgb(205,83,34)" rx="2" ry="2" />
<text  x="968.70" y="415.5" ></text>
</g>
<g >
<title>rocksdb::CachableEntry&lt;rocksdb::Block_kData&gt;::SetOwnedValue (70,707,070 samples, 0.01%)</title><rect x="866.8" y="309" width="0.1" height="15.0" fill="rgb(209,42,35)" rx="2" ry="2" />
<text  x="869.75" y="319.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::Next (3,454,545,420 samples, 0.54%)</title><rect x="118.5" y="549" width="6.4" height="15.0" fill="rgb(214,54,24)" rx="2" ry="2" />
<text  x="121.48" y="559.5" ></text>
</g>
<g >
<title>iput (80,808,080 samples, 0.01%)</title><rect x="1179.3" y="389" width="0.1" height="15.0" fill="rgb(227,197,29)" rx="2" ry="2" />
<text  x="1182.29" y="399.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process (70,707,070 samples, 0.01%)</title><rect x="204.0" y="693" width="0.1" height="15.0" fill="rgb(250,110,6)" rx="2" ry="2" />
<text  x="206.97" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::get (171,717,170 samples, 0.03%)</title><rect x="904.3" y="341" width="0.3" height="15.0" fill="rgb(216,125,11)" rx="2" ry="2" />
<text  x="907.26" y="351.5" ></text>
</g>
<g >
<title>ROCKSDB_XXH3_64bits (383,838,380 samples, 0.06%)</title><rect x="569.7" y="357" width="0.8" height="15.0" fill="rgb(234,99,23)" rx="2" ry="2" />
<text  x="572.75" y="367.5" ></text>
</g>
<g >
<title>rocksdb::autovector&lt;rocksdb::CompactionMergingIterator::HeapItem*, 8ul&gt;::size (181,818,180 samples, 0.03%)</title><rect x="818.3" y="389" width="0.3" height="15.0" fill="rgb(231,212,1)" rx="2" ry="2" />
<text  x="821.27" y="399.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (141,414,140 samples, 0.02%)</title><rect x="852.8" y="341" width="0.2" height="15.0" fill="rgb(207,58,9)" rx="2" ry="2" />
<text  x="855.78" y="351.5" ></text>
</g>
<g >
<title>rocksdb::crc32c::gf_multiply_sw_1 (90,909,090 samples, 0.01%)</title><rect x="44.9" y="277" width="0.1" height="15.0" fill="rgb(216,160,43)" rx="2" ry="2" />
<text  x="47.88" y="287.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;rocksdb::SpinMutex&gt;::unlock (60,606,060 samples, 0.01%)</title><rect x="69.7" y="533" width="0.1" height="15.0" fill="rgb(226,14,36)" rx="2" ry="2" />
<text  x="72.73" y="543.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (444,444,440 samples, 0.07%)</title><rect x="37.7" y="405" width="0.9" height="15.0" fill="rgb(253,61,25)" rx="2" ry="2" />
<text  x="40.74" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (444,444,440 samples, 0.07%)</title><rect x="968.9" y="453" width="0.8" height="15.0" fill="rgb(241,184,26)" rx="2" ry="2" />
<text  x="971.89" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::SavePoints, std::default_delete&lt;rocksdb::SavePoints&gt; &gt;::operator bool (90,909,090 samples, 0.01%)</title><rect x="46.6" y="677" width="0.2" height="15.0" fill="rgb(240,197,37)" rx="2" ry="2" />
<text  x="49.63" y="687.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (707,070,700 samples, 0.11%)</title><rect x="37.3" y="437" width="1.3" height="15.0" fill="rgb(235,9,5)" rx="2" ry="2" />
<text  x="40.25" y="447.5" ></text>
</g>
<g >
<title>XXH3_64bits_internal (242,424,240 samples, 0.04%)</title><rect x="863.1" y="213" width="0.4" height="15.0" fill="rgb(221,33,54)" rx="2" ry="2" />
<text  x="866.06" y="223.5" ></text>
</g>
<g >
<title>std::atomic&lt;bool&gt;::operator bool (151,515,150 samples, 0.02%)</title><rect x="632.5" y="357" width="0.3" height="15.0" fill="rgb(227,52,53)" rx="2" ry="2" />
<text  x="635.53" y="367.5" ></text>
</g>
<g >
<title>rocksdb::port::AsmVolatilePause (919,191,910 samples, 0.14%)</title><rect x="230.7" y="693" width="1.7" height="15.0" fill="rgb(233,215,26)" rx="2" ry="2" />
<text  x="233.70" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (121,212,120 samples, 0.02%)</title><rect x="457.0" y="693" width="0.2" height="15.0" fill="rgb(221,152,50)" rx="2" ry="2" />
<text  x="459.97" y="703.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator= (101,010,100 samples, 0.02%)</title><rect x="42.2" y="613" width="0.2" height="15.0" fill="rgb(246,225,54)" rx="2" ry="2" />
<text  x="45.23" y="623.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (70,707,070 samples, 0.01%)</title><rect x="1043.1" y="437" width="0.2" height="15.0" fill="rgb(220,170,32)" rx="2" ry="2" />
<text  x="1046.13" y="447.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::KeyIsAfterNode (17,070,706,900 samples, 2.67%)</title><rect x="86.8" y="549" width="31.5" height="15.0" fill="rgb(237,135,16)" rx="2" ry="2" />
<text  x="89.77" y="559.5" >ro..</text>
</g>
<g >
<title>rocksdb::PutVarint32Varint32Varint32 (70,707,070 samples, 0.01%)</title><rect x="586.5" y="421" width="0.1" height="15.0" fill="rgb(231,75,19)" rx="2" ry="2" />
<text  x="589.46" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::CompactionIterator, std::default_delete&lt;rocksdb::CompactionIterator&gt; &gt;::operator (151,515,150 samples, 0.02%)</title><rect x="1169.9" y="501" width="0.3" height="15.0" fill="rgb(212,166,6)" rx="2" ry="2" />
<text  x="1172.95" y="511.5" ></text>
</g>
<g >
<title>std::tuple&lt;rocksdb::WriteBatch::ProtectionInfo*, std::default_delete&lt;rocksdb::WriteBatch::ProtectionInfo&gt; &gt;::tuple&lt;true, true&gt; (181,818,180 samples, 0.03%)</title><rect x="477.6" y="693" width="0.4" height="15.0" fill="rgb(228,57,53)" rx="2" ry="2" />
<text  x="480.64" y="703.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (232,323,230 samples, 0.04%)</title><rect x="908.9" y="325" width="0.4" height="15.0" fill="rgb(234,18,20)" rx="2" ry="2" />
<text  x="911.91" y="335.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (171,717,170 samples, 0.03%)</title><rect x="912.7" y="437" width="0.3" height="15.0" fill="rgb(212,134,8)" rx="2" ry="2" />
<text  x="915.71" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (424,242,420 samples, 0.07%)</title><rect x="1061.5" y="389" width="0.8" height="15.0" fill="rgb(215,4,8)" rx="2" ry="2" />
<text  x="1064.50" y="399.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Invalidate (262,626,260 samples, 0.04%)</title><rect x="831.9" y="293" width="0.5" height="15.0" fill="rgb(249,142,43)" rx="2" ry="2" />
<text  x="834.87" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (60,606,060 samples, 0.01%)</title><rect x="815.1" y="341" width="0.2" height="15.0" fill="rgb(248,100,36)" rx="2" ry="2" />
<text  x="818.14" y="351.5" ></text>
</g>
<g >
<title>non-virtual thunk to rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (626,262,620 samples, 0.10%)</title><rect x="95.7" y="501" width="1.1" height="15.0" fill="rgb(254,217,37)" rx="2" ry="2" />
<text  x="98.65" y="511.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::AddWithLastKey (80,808,080 samples, 0.01%)</title><rect x="622.7" y="453" width="0.1" height="15.0" fill="rgb(213,189,41)" rx="2" ry="2" />
<text  x="625.66" y="463.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_deleter (1,050,505,040 samples, 0.16%)</title><rect x="733.9" y="389" width="2.0" height="15.0" fill="rgb(220,61,31)" rx="2" ry="2" />
<text  x="736.93" y="399.5" ></text>
</g>
<g >
<title>rocksdb::Slice::size (191,919,190 samples, 0.03%)</title><rect x="642.2" y="389" width="0.3" height="15.0" fill="rgb(206,150,42)" rx="2" ry="2" />
<text  x="645.17" y="399.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block_kData&gt; (121,212,120 samples, 0.02%)</title><rect x="866.3" y="293" width="0.2" height="15.0" fill="rgb(245,49,4)" rx="2" ry="2" />
<text  x="869.30" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (70,707,070 samples, 0.01%)</title><rect x="905.6" y="293" width="0.1" height="15.0" fill="rgb(231,4,40)" rx="2" ry="2" />
<text  x="908.59" y="303.5" ></text>
</g>
<g >
<title>rocksdb::IOOptions::~IOOptions (161,616,160 samples, 0.03%)</title><rect x="41.8" y="645" width="0.3" height="15.0" fill="rgb(249,185,44)" rx="2" ry="2" />
<text  x="44.80" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::SuperVersionContext::WriteStallNotification, std::allocator&lt;rocksdb::SuperVersionContext::WriteStallNotification&gt; &gt;::~vector (141,414,140 samples, 0.02%)</title><rect x="30.0" y="677" width="0.2" height="15.0" fill="rgb(246,9,45)" rx="2" ry="2" />
<text  x="32.98" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::__uniq_ptr_impl (272,727,270 samples, 0.04%)</title><rect x="906.2" y="341" width="0.5" height="15.0" fill="rgb(212,197,11)" rx="2" ry="2" />
<text  x="909.22" y="351.5" ></text>
</g>
<g >
<title>__libc_start_call_main (286,919,189,050 samples, 44.90%)</title><rect x="21.7" y="837" width="529.9" height="15.0" fill="rgb(247,178,18)" rx="2" ry="2" />
<text  x="24.73" y="847.5" >__libc_start_call_main</text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::ConcurrentArena::Shard [], std::default_delete&lt;rocksdb::ConcurrentArena::Shard []&gt; &gt;::operator[] (141,414,140 samples, 0.02%)</title><rect x="68.7" y="533" width="0.3" height="15.0" fill="rgb(223,166,51)" rx="2" ry="2" />
<text  x="71.72" y="543.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (171,717,170 samples, 0.03%)</title><rect x="902.8" y="357" width="0.3" height="15.0" fill="rgb(241,120,50)" rx="2" ry="2" />
<text  x="905.82" y="367.5" ></text>
</g>
<g >
<title>rocksdb::CompactionMergingIterator::Valid (303,030,300 samples, 0.05%)</title><rect x="821.9" y="437" width="0.6" height="15.0" fill="rgb(241,72,30)" rx="2" ry="2" />
<text  x="824.91" y="447.5" ></text>
</g>
<g >
<title>rocksdb::GetVarint32Ptr (70,707,070 samples, 0.01%)</title><rect x="129.0" y="565" width="0.2" height="15.0" fill="rgb(225,55,43)" rx="2" ry="2" />
<text  x="132.02" y="575.5" ></text>
</g>
<g >
<title>rocksdb::CompactionIterator::Valid (434,343,430 samples, 0.07%)</title><rect x="698.6" y="437" width="0.8" height="15.0" fill="rgb(232,28,19)" rx="2" ry="2" />
<text  x="701.62" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::~unique_ptr (191,919,190 samples, 0.03%)</title><rect x="902.3" y="341" width="0.3" height="15.0" fill="rgb(208,29,21)" rx="2" ry="2" />
<text  x="905.27" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (80,808,080 samples, 0.01%)</title><rect x="858.6" y="325" width="0.1" height="15.0" fill="rgb(212,213,39)" rx="2" ry="2" />
<text  x="861.56" y="335.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::FilterBlockBuilder*, std::default_delete&lt;rocksdb::FilterBlockBuilder&gt; &gt; (262,626,260 samples, 0.04%)</title><rect x="615.6" y="373" width="0.5" height="15.0" fill="rgb(241,187,26)" rx="2" ry="2" />
<text  x="618.57" y="383.5" ></text>
</g>
<g >
<title>std::this_thread::yield (232,323,230 samples, 0.04%)</title><rect x="454.1" y="709" width="0.4" height="15.0" fill="rgb(226,164,45)" rx="2" ry="2" />
<text  x="457.08" y="719.5" ></text>
</g>
<g >
<title>rocksdb::BlockBuilder::CurrentSizeEstimate (353,535,350 samples, 0.06%)</title><rect x="589.2" y="437" width="0.7" height="15.0" fill="rgb(238,74,5)" rx="2" ry="2" />
<text  x="592.24" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::_M_ptr (131,313,130 samples, 0.02%)</title><rect x="900.9" y="277" width="0.2" height="15.0" fill="rgb(247,96,7)" rx="2" ry="2" />
<text  x="903.88" y="287.5" ></text>
</g>
<g >
<title>rocksdb::SyncPoint::Process&lt;45ul&gt; (353,535,350 samples, 0.06%)</title><rect x="999.8" y="485" width="0.6" height="15.0" fill="rgb(217,223,37)" rx="2" ry="2" />
<text  x="1002.78" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="852.9" y="277" width="0.1" height="15.0" fill="rgb(246,104,47)" rx="2" ry="2" />
<text  x="855.89" y="287.5" ></text>
</g>
<g >
<title>XXH3_hashLong_64b_internal (383,838,380 samples, 0.06%)</title><rect x="569.7" y="309" width="0.8" height="15.0" fill="rgb(206,40,14)" rx="2" ry="2" />
<text  x="572.75" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_write (818,181,810 samples, 0.13%)</title><rect x="572.1" y="261" width="1.5" height="15.0" fill="rgb(228,10,47)" rx="2" ry="2" />
<text  x="575.11" y="271.5" ></text>
</g>
<g >
<title>rocksdb::WriteThread::JoinBatchGroup (145,050,503,600 samples, 22.70%)</title><rect x="186.9" y="725" width="267.9" height="15.0" fill="rgb(229,156,20)" rx="2" ry="2" />
<text  x="189.92" y="735.5" >rocksdb::WriteThread::JoinBatchGroup</text>
</g>
<g >
<title>rocksdb::CompactionIterator::ExtractLargeValueIfNeededImpl (181,818,180 samples, 0.03%)</title><rect x="979.3" y="469" width="0.4" height="15.0" fill="rgb(220,67,53)" rx="2" ry="2" />
<text  x="982.32" y="479.5" ></text>
</g>
<g >
<title>std::operator==&lt;char const [], std::default_delete&lt;char const []&gt; &gt; (212,121,210 samples, 0.03%)</title><rect x="886.8" y="373" width="0.4" height="15.0" fill="rgb(213,206,53)" rx="2" ry="2" />
<text  x="889.84" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (90,909,090 samples, 0.01%)</title><rect x="883.5" y="341" width="0.1" height="15.0" fill="rgb(221,150,51)" rx="2" ry="2" />
<text  x="886.48" y="351.5" ></text>
</g>
<g >
<title>rocksdb::DataBlockHashIndexBuilder::Valid (70,707,070 samples, 0.01%)</title><rect x="595.6" y="373" width="0.1" height="15.0" fill="rgb(240,70,18)" rx="2" ry="2" />
<text  x="598.60" y="383.5" ></text>
</g>
<g >
<title>rocksdb::InstrumentedMutex::LockInternal (60,606,060 samples, 0.01%)</title><rect x="26.8" y="677" width="0.1" height="15.0" fill="rgb(252,179,31)" rx="2" ry="2" />
<text  x="29.81" y="687.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;rocksdb::VersionSet, std::default_delete&lt;rocksdb::VersionSet&gt; &gt;::_M_ptr (80,808,080 samples, 0.01%)</title><rect x="460.2" y="709" width="0.2" height="15.0" fill="rgb(228,217,4)" rx="2" ry="2" />
<text  x="463.24" y="719.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::__uniq_ptr_data (292,929,290 samples, 0.05%)</title><rect x="847.9" y="325" width="0.6" height="15.0" fill="rgb(226,173,32)" rx="2" ry="2" />
<text  x="850.91" y="335.5" ></text>
</g>
<g >
<title>std::__cmpexch_failure_order2 (90,909,090 samples, 0.01%)</title><rect x="76.4" y="549" width="0.2" height="15.0" fill="rgb(249,215,37)" rx="2" ry="2" />
<text  x="79.40" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;rocksdb::CompactionMergingIterator::HeapItem*, std::allocator&lt;rocksdb::CompactionMergingIterator::HeapItem*&gt; &gt;::size (80,808,080 samples, 0.01%)</title><rect x="815.8" y="357" width="0.1" height="15.0" fill="rgb(240,15,30)" rx="2" ry="2" />
<text  x="818.75" y="367.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node::Key (90,909,090 samples, 0.01%)</title><rect x="76.7" y="581" width="0.1" height="15.0" fill="rgb(234,82,47)" rx="2" ry="2" />
<text  x="79.66" y="591.5" ></text>
</g>
<g >
<title>copy_user_generic_unrolled (101,010,100 samples, 0.02%)</title><rect x="1026.7" y="165" width="0.2" height="15.0" fill="rgb(218,82,48)" rx="2" ry="2" />
<text  x="1029.68" y="175.5" ></text>
</g>
<g >
<title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Next (3,353,535,320 samples, 0.52%)</title><rect x="870.6" y="389" width="6.2" height="15.0" fill="rgb(207,137,53)" rx="2" ry="2" />
<text  x="873.59" y="399.5" ></text>
</g>
<g >
<title>rocksdb::lru_cache::LRUCacheShard::InsertItem (353,535,350 samples, 0.06%)</title><rect x="867.6" y="277" width="0.6" height="15.0" fill="rgb(249,62,4)" rx="2" ry="2" />
<text  x="870.55" y="287.5" ></text>
</g>
<g >
<title>rocksdb::Status::OK (585,858,580 samples, 0.09%)</title><rect x="952.2" y="437" width="1.0" height="15.0" fill="rgb(209,126,17)" rx="2" ry="2" />
<text  x="955.16" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;rocksdb::ConcurrentArena::Shard [], std::default_delete&lt;rocksdb::ConcurrentArena::Shard []&gt; &gt;::get (60,606,060 samples, 0.01%)</title><rect x="68.9" y="517" width="0.1" height="15.0" fill="rgb(238,10,38)" rx="2" ry="2" />
<text  x="71.87" y="527.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, rocksdb::ColumnFamilySet*, std::default_delete&lt;rocksdb::ColumnFamilySet&gt; &gt; (90,909,090 samples, 0.01%)</title><rect x="51.8" y="677" width="0.2" height="15.0" fill="rgb(249,157,16)" rx="2" ry="2" />
<text  x="54.84" y="687.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, char const*, std::default_delete&lt;char const []&gt; &gt; (80,808,080 samples, 0.01%)</title><rect x="912.2" y="341" width="0.1" height="15.0" fill="rgb(232,51,33)" rx="2" ry="2" />
<text  x="915.17" y="351.5" ></text>
</g>
<g >
<title>rocksdb::BlockBasedTableIterator::Valid (90,909,090 samples, 0.01%)</title><rect x="838.8" y="357" width="0.1" height="15.0" fill="rgb(244,111,48)" rx="2" ry="2" />
<text  x="841.75" y="367.5" ></text>
</g>
<g >
<title>rocksdb::Slice::difference_offset@plt (60,606,060 samples, 0.01%)</title><rect x="1043.9" y="437" width="0.1" height="15.0" fill="rgb(216,166,20)" rx="2" ry="2" />
<text  x="1046.93" y="447.5" ></text>
</g>
<g >
<title>rocksdb::FullTypedCacheInterface&lt;rocksdb::Block_kData, rocksdb::BlockCreateContext,  (90,909,090 samples, 0.01%)</title><rect x="866.3" y="277" width="0.2" height="15.0" fill="rgb(251,19,43)" rx="2" ry="2" />
<text  x="869.34" y="287.5" ></text>
</g>
<g >
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Iterator::key (151,515,150 samples, 0.02%)</title><rect x="681.5" y="389" width="0.3" height="15.0" fill="rgb(205,226,21)" rx="2" ry="2" />
<text  x="684.51" y="399.5" ></text>
</g>
<g >
<title>rocksdb::Slice::data (101,010,100 samples, 0.02%)</title><rect x="104.0" y="501" width="0.2" height="15.0" fill="rgb(231,146,7)" rx="2" ry="2" />
<text  x="107.01" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (131,313,130 samples, 0.02%)</title><rect x="562.0" y="421" width="0.3" height="15.0" fill="rgb(240,195,54)" rx="2" ry="2" />
<text  x="565.04" y="431.5" ></text>
</g>
<g >
<title>rocksdb::DBImpl::DeleteObsoleteFileImpl (242,424,240 samples, 0.04%)</title><rect x="754.3" y="533" width="0.4" height="15.0" fill="rgb(221,86,46)" rx="2" ry="2" />
<text  x="757.26" y="543.5" ></text>
</g>
<g >
<title>rocksdb::Status::ok (353,535,350 samples, 0.06%)</title><rect x="668.8" y="389" width="0.6" height="15.0" fill="rgb(222,133,32)" rx="2" ry="2" />
<text  x="671.77" y="399.5" ></text>
</g>
<g >
<title>rocksdb::Status::~Status (212,121,210 samples, 0.03%)</title><rect x="1163.2" y="485" width="0.4" height="15.0" fill="rgb(237,179,9)" rx="2" ry="2" />
<text  x="1166.16" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::unique_ptr&lt;std::default_delete&lt;char const []&gt;, void&gt; (424,242,420 samples, 0.07%)</title><rect x="847.7" y="341" width="0.8" height="15.0" fill="rgb(241,215,33)" rx="2" ry="2" />
<text  x="850.71" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::release (141,414,140 samples, 0.02%)</title><rect x="847.1" y="293" width="0.2" height="15.0" fill="rgb(207,168,4)" rx="2" ry="2" />
<text  x="850.05" y="303.5" ></text>
</g>
</g>
</svg>
